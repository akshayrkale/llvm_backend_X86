
bzip2:     file format elf64-x86-64


Disassembly of section .text:

00000000004000f0 <BZ2_blockSort>:
  4000f0:	55                   	push   %rbp
  4000f1:	48 89 e5             	mov    %rsp,%rbp
  4000f4:	41 57                	push   %r15
  4000f6:	41 56                	push   %r14
  4000f8:	41 55                	push   %r13
  4000fa:	41 54                	push   %r12
  4000fc:	53                   	push   %rbx
  4000fd:	48 83 ec 58          	sub    $0x58,%rsp
  400101:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  400105:	48 8b 47 38          	mov    0x38(%rdi),%rax
  400109:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40010d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  400111:	48 8b 41 40          	mov    0x40(%rcx),%rax
  400115:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  400119:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  40011d:	48 8b 41 28          	mov    0x28(%rcx),%rax
  400121:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  400125:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  400129:	8b 41 6c             	mov    0x6c(%rcx),%eax
  40012c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  400130:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  400133:	8b 81 90 02 00 00    	mov    0x290(%rcx),%eax
  400139:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40013d:	89 45 b0             	mov    %eax,-0x50(%rbp)
  400140:	8b 41 58             	mov    0x58(%rcx),%eax
  400143:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  400147:	89 45 ac             	mov    %eax,-0x54(%rbp)
  40014a:	48 81 f9 0f 27 00 00 	cmp    $0x270f,%rcx
  400151:	0f 8e 60 01 00 00    	jle    4002b7 <BZ2_blockSort+0x1c7>
  400157:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  40015a:	48 83 c0 22          	add    $0x22,%rax
  40015e:	89 45 94             	mov    %eax,-0x6c(%rbp)
  400161:	0f b6 45 94          	movzbl -0x6c(%rbp),%eax
  400165:	48 a9 01 00 00 00    	test   $0x1,%rax
  40016b:	74 09                	je     400176 <BZ2_blockSort+0x86>
  40016d:	8b 45 94             	mov    -0x6c(%rbp),%eax
  400170:	48 ff c0             	inc    %rax
  400173:	89 45 94             	mov    %eax,-0x6c(%rbp)
  400176:	48 63 45 94          	movslq -0x6c(%rbp),%rax
  40017a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40017e:	48 63 55 ac          	movslq -0x54(%rbp),%rdx
  400182:	48 01 c1             	add    %rax,%rcx
  400185:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  400189:	48 85 d2             	test   %rdx,%rdx
  40018c:	7f 0a                	jg     400198 <BZ2_blockSort+0xa8>
  40018e:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  400195:	89 45 ac             	mov    %eax,-0x54(%rbp)
  400198:	48 63 45 ac          	movslq -0x54(%rbp),%rax
  40019c:	48 83 f8 65          	cmp    $0x65,%rax
  4001a0:	7c 0a                	jl     4001ac <BZ2_blockSort+0xbc>
  4001a2:	48 c7 c0 64 00 00 00 	mov    $0x64,%rax
  4001a9:	89 45 ac             	mov    %eax,-0x54(%rbp)
  4001ac:	8b 45 ac             	mov    -0x54(%rbp),%eax
  4001af:	8b 5d b4             	mov    -0x4c(%rbp),%ebx
  4001b2:	48 ff c8             	dec    %rax
  4001b5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4001bc:	48 d3 e0             	shl    %cl,%rax
  4001bf:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4001c6:	48 d3 f8             	sar    %cl,%rax
  4001c9:	48 b9 56 55 55 55 55 	movabs $0x5555555555555556,%rcx
  4001d0:	55 55 55 
  4001d3:	48 f7 e9             	imul   %rcx
  4001d6:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4001dd:	48 89 d0             	mov    %rdx,%rax
  4001e0:	48 d3 e8             	shr    %cl,%rax
  4001e3:	48 01 d0             	add    %rdx,%rax
  4001e6:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  4001ea:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  4001ee:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  4001f2:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  4001f6:	44 8b 4d b0          	mov    -0x50(%rbp),%r9d
  4001fa:	44 8b 45 b4          	mov    -0x4c(%rbp),%r8d
  4001fe:	48 0f af c3          	imul   %rbx,%rax
  400202:	89 45 98             	mov    %eax,-0x68(%rbp)
  400205:	89 45 9c             	mov    %eax,-0x64(%rbp)
  400208:	48 8d 45 9c          	lea    -0x64(%rbp),%rax
  40020c:	48 89 04 24          	mov    %rax,(%rsp)
  400210:	e8 8b 0b 00 00       	callq  400da0 <mainSort>
  400215:	48 63 45 b0          	movslq -0x50(%rbp),%rax
  400219:	48 83 f8 03          	cmp    $0x3,%rax
  40021d:	7c 6c                	jl     40028b <BZ2_blockSort+0x19b>
  40021f:	8b 5d 98             	mov    -0x68(%rbp),%ebx
  400222:	8b 45 9c             	mov    -0x64(%rbp),%eax
  400225:	4c 8b 35 a4 87 02 00 	mov    0x287a4(%rip),%r14        # 4289d0 <stderr>
  40022c:	44 8b 7d b4          	mov    -0x4c(%rbp),%r15d
  400230:	48 29 c3             	sub    %rax,%rbx
  400233:	49 bd ff ff ff ff 00 	movabs $0xffffffff,%r13
  40023a:	00 00 00 
  40023d:	48 89 df             	mov    %rbx,%rdi
  400240:	4c 21 ef             	and    %r13,%rdi
  400243:	e8 c8 db 01 00       	callq  41de10 <int32_to_float64>
  400248:	49 89 c4             	mov    %rax,%r12
  40024b:	4d 85 ff             	test   %r15,%r15
  40024e:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  400255:	74 03                	je     40025a <BZ2_blockSort+0x16a>
  400257:	8b 7d b4             	mov    -0x4c(%rbp),%edi
  40025a:	4c 21 ef             	and    %r13,%rdi
  40025d:	e8 ae db 01 00       	callq  41de10 <int32_to_float64>
  400262:	4c 89 e7             	mov    %r12,%rdi
  400265:	48 89 c6             	mov    %rax,%rsi
  400268:	e8 13 3b 02 00       	callq  423d80 <float64_div>
  40026d:	49 89 c0             	mov    %rax,%r8
  400270:	48 be 60 5a 42 00 00 	movabs $0x425a60,%rsi
  400277:	00 00 00 
  40027a:	48 31 c0             	xor    %rax,%rax
  40027d:	4c 89 f7             	mov    %r14,%rdi
  400280:	48 89 da             	mov    %rbx,%rdx
  400283:	4c 89 f9             	mov    %r15,%rcx
  400286:	e8 6d 9a 01 00       	callq  419cf8 <fprintf>
  40028b:	48 63 45 9c          	movslq -0x64(%rbp),%rax
  40028f:	48 85 c0             	test   %rax,%rax
  400292:	79 3f                	jns    4002d3 <BZ2_blockSort+0x1e3>
  400294:	48 63 45 b0          	movslq -0x50(%rbp),%rax
  400298:	48 83 f8 02          	cmp    $0x2,%rax
  40029c:	7c 19                	jl     4002b7 <BZ2_blockSort+0x1c7>
  40029e:	48 8b 3d 2b 87 02 00 	mov    0x2872b(%rip),%rdi        # 4289d0 <stderr>
  4002a5:	48 be 86 5a 42 00 00 	movabs $0x425a86,%rsi
  4002ac:	00 00 00 
  4002af:	48 31 c0             	xor    %rax,%rax
  4002b2:	e8 41 9a 01 00       	callq  419cf8 <fprintf>
  4002b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4002bb:	48 8b 78 18          	mov    0x18(%rax),%rdi
  4002bf:	48 8b 70 20          	mov    0x20(%rax),%rsi
  4002c3:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  4002c7:	44 8b 45 b0          	mov    -0x50(%rbp),%r8d
  4002cb:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  4002ce:	e8 7d 00 00 00       	callq  400350 <fallbackSort>
  4002d3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4002d7:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  4002de:	00 00 00 
  4002e1:	89 41 30             	mov    %eax,0x30(%rcx)
  4002e4:	48 31 c9             	xor    %rcx,%rcx
  4002e7:	eb 0d                	jmp    4002f6 <BZ2_blockSort+0x206>
  4002e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4002f0:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  4002f3:	48 ff c1             	inc    %rcx
  4002f6:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  4002f9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4002fd:	48 63 55 94          	movslq -0x6c(%rbp),%rdx
  400301:	48 63 49 6c          	movslq 0x6c(%rcx),%rcx
  400305:	48 39 ca             	cmp    %rcx,%rdx
  400308:	7d 1a                	jge    400324 <BZ2_blockSort+0x234>
  40030a:	48 63 4d 94          	movslq -0x6c(%rbp),%rcx
  40030e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  400312:	8b 0c 8a             	mov    (%rdx,%rcx,4),%ecx
  400315:	48 85 c9             	test   %rcx,%rcx
  400318:	75 d6                	jne    4002f0 <BZ2_blockSort+0x200>
  40031a:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  40031d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  400321:	89 4a 30             	mov    %ecx,0x30(%rdx)
  400324:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  400328:	8b 49 30             	mov    0x30(%rcx),%ecx
  40032b:	48 39 c1             	cmp    %rax,%rcx
  40032e:	75 0c                	jne    40033c <BZ2_blockSort+0x24c>
  400330:	48 c7 c7 eb 03 00 00 	mov    $0x3eb,%rdi
  400337:	e8 44 77 00 00       	callq  407a80 <BZ2_bz__AssertH__fail>
  40033c:	48 83 c4 58          	add    $0x58,%rsp
  400340:	5b                   	pop    %rbx
  400341:	41 5c                	pop    %r12
  400343:	41 5d                	pop    %r13
  400345:	41 5e                	pop    %r14
  400347:	41 5f                	pop    %r15
  400349:	5d                   	pop    %rbp
  40034a:	c3                   	retq   
  40034b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400350 <fallbackSort>:
  400350:	55                   	push   %rbp
  400351:	48 89 e5             	mov    %rsp,%rbp
  400354:	41 57                	push   %r15
  400356:	41 56                	push   %r14
  400358:	41 55                	push   %r13
  40035a:	41 54                	push   %r12
  40035c:	53                   	push   %rbx
  40035d:	48 81 ec 58 08 00 00 	sub    $0x858,%rsp
  400364:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  400368:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  40036c:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
  400370:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  400374:	48 63 75 b8          	movslq -0x48(%rbp),%rsi
  400378:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  40037c:	89 4d bc             	mov    %ecx,-0x44(%rbp)
  40037f:	48 89 85 80 f7 ff ff 	mov    %rax,-0x880(%rbp)
  400386:	48 83 fe 04          	cmp    $0x4,%rsi
  40038a:	7c 19                	jl     4003a5 <fallbackSort+0x55>
  40038c:	48 8b 3d 3d 86 02 00 	mov    0x2863d(%rip),%rdi        # 4289d0 <stderr>
  400393:	48 be de 5a 42 00 00 	movabs $0x425ade,%rsi
  40039a:	00 00 00 
  40039d:	48 31 c0             	xor    %rax,%rax
  4003a0:	e8 53 99 01 00       	callq  419cf8 <fprintf>
  4003a5:	48 31 c0             	xor    %rax,%rax
  4003a8:	89 85 a8 f7 ff ff    	mov    %eax,-0x858(%rbp)
  4003ae:	eb 1d                	jmp    4003cd <fallbackSort+0x7d>
  4003b0:	8b 8d a8 f7 ff ff    	mov    -0x858(%rbp),%ecx
  4003b6:	48 63 95 a8 f7 ff ff 	movslq -0x858(%rbp),%rdx
  4003bd:	89 84 95 b0 fb ff ff 	mov    %eax,-0x450(%rbp,%rdx,4)
  4003c4:	48 ff c1             	inc    %rcx
  4003c7:	89 8d a8 f7 ff ff    	mov    %ecx,-0x858(%rbp)
  4003cd:	48 63 8d a8 f7 ff ff 	movslq -0x858(%rbp),%rcx
  4003d4:	48 81 f9 00 01 00 00 	cmp    $0x100,%rcx
  4003db:	7e d3                	jle    4003b0 <fallbackSort+0x60>
  4003dd:	48 31 c0             	xor    %rax,%rax
  4003e0:	89 85 a8 f7 ff ff    	mov    %eax,-0x858(%rbp)
  4003e6:	eb 3a                	jmp    400422 <fallbackSort+0xd2>
  4003e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4003ef:	00 
  4003f0:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  4003f7:	48 8b 8d 80 f7 ff ff 	mov    -0x880(%rbp),%rcx
  4003fe:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
  400402:	8b 8c 85 b0 fb ff ff 	mov    -0x450(%rbp,%rax,4),%ecx
  400409:	8b 95 a8 f7 ff ff    	mov    -0x858(%rbp),%edx
  40040f:	48 ff c1             	inc    %rcx
  400412:	89 8c 85 b0 fb ff ff 	mov    %ecx,-0x450(%rbp,%rax,4)
  400419:	48 ff c2             	inc    %rdx
  40041c:	89 95 a8 f7 ff ff    	mov    %edx,-0x858(%rbp)
  400422:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  400429:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  40042d:	48 39 c8             	cmp    %rcx,%rax
  400430:	7c be                	jl     4003f0 <fallbackSort+0xa0>
  400432:	48 31 c0             	xor    %rax,%rax
  400435:	89 85 a8 f7 ff ff    	mov    %eax,-0x858(%rbp)
  40043b:	eb 27                	jmp    400464 <fallbackSort+0x114>
  40043d:	0f 1f 00             	nopl   (%rax)
  400440:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  400447:	8b 8d a8 f7 ff ff    	mov    -0x858(%rbp),%ecx
  40044d:	8b 94 85 b0 fb ff ff 	mov    -0x450(%rbp,%rax,4),%edx
  400454:	89 94 85 b0 f7 ff ff 	mov    %edx,-0x850(%rbp,%rax,4)
  40045b:	48 ff c1             	inc    %rcx
  40045e:	89 8d a8 f7 ff ff    	mov    %ecx,-0x858(%rbp)
  400464:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  40046b:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  400471:	7e cd                	jle    400440 <fallbackSort+0xf0>
  400473:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40047a:	89 85 a8 f7 ff ff    	mov    %eax,-0x858(%rbp)
  400480:	eb 54                	jmp    4004d6 <fallbackSort+0x186>
  400482:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  400489:	1f 84 00 00 00 00 00 
  400490:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  400497:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  40049b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4004a2:	48 d3 e2             	shl    %cl,%rdx
  4004a5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4004ac:	48 d3 fa             	sar    %cl,%rdx
  4004af:	8b 8c 95 b0 fb ff ff 	mov    -0x450(%rbp,%rdx,4),%ecx
  4004b6:	8b 94 85 b0 fb ff ff 	mov    -0x450(%rbp,%rax,4),%edx
  4004bd:	8b b5 a8 f7 ff ff    	mov    -0x858(%rbp),%esi
  4004c3:	48 01 ca             	add    %rcx,%rdx
  4004c6:	89 94 85 b0 fb ff ff 	mov    %edx,-0x450(%rbp,%rax,4)
  4004cd:	48 ff c6             	inc    %rsi
  4004d0:	89 b5 a8 f7 ff ff    	mov    %esi,-0x858(%rbp)
  4004d6:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  4004dd:	48 3d 00 01 00 00    	cmp    $0x100,%rax
  4004e3:	7e ab                	jle    400490 <fallbackSort+0x140>
  4004e5:	48 31 c0             	xor    %rax,%rax
  4004e8:	eb 60                	jmp    40054a <fallbackSort+0x1fa>
  4004ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4004f0:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  4004f7:	48 8b 8d 80 f7 ff ff 	mov    -0x880(%rbp),%rcx
  4004fe:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
  400502:	89 85 a4 f7 ff ff    	mov    %eax,-0x85c(%rbp)
  400508:	48 63 85 a4 f7 ff ff 	movslq -0x85c(%rbp),%rax
  40050f:	8b 84 85 b0 fb ff ff 	mov    -0x450(%rbp,%rax,4),%eax
  400516:	48 ff c8             	dec    %rax
  400519:	89 85 a0 f7 ff ff    	mov    %eax,-0x860(%rbp)
  40051f:	48 63 8d a4 f7 ff ff 	movslq -0x85c(%rbp),%rcx
  400526:	8b 95 a8 f7 ff ff    	mov    -0x858(%rbp),%edx
  40052c:	48 63 b5 a0 f7 ff ff 	movslq -0x860(%rbp),%rsi
  400533:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  400537:	89 84 8d b0 fb ff ff 	mov    %eax,-0x450(%rbp,%rcx,4)
  40053e:	89 14 b7             	mov    %edx,(%rdi,%rsi,4)
  400541:	8b 85 a8 f7 ff ff    	mov    -0x858(%rbp),%eax
  400547:	48 ff c0             	inc    %rax
  40054a:	89 85 a8 f7 ff ff    	mov    %eax,-0x858(%rbp)
  400550:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  400557:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  40055b:	48 39 c8             	cmp    %rcx,%rax
  40055e:	7c 90                	jl     4004f0 <fallbackSort+0x1a0>
  400560:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  400564:	48 c7 c1 3a 00 00 00 	mov    $0x3a,%rcx
  40056b:	48 89 c2             	mov    %rax,%rdx
  40056e:	48 d3 ea             	shr    %cl,%rdx
  400571:	48 83 e2 1f          	and    $0x1f,%rdx
  400575:	48 01 c2             	add    %rax,%rdx
  400578:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40057f:	48 d3 e2             	shl    %cl,%rdx
  400582:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400589:	48 d3 fa             	sar    %cl,%rdx
  40058c:	48 c7 c1 05 00 00 00 	mov    $0x5,%rcx
  400593:	48 d3 ea             	shr    %cl,%rdx
  400596:	48 83 c2 02          	add    $0x2,%rdx
  40059a:	89 95 88 f7 ff ff    	mov    %edx,-0x878(%rbp)
  4005a0:	48 31 c0             	xor    %rax,%rax
  4005a3:	89 85 a8 f7 ff ff    	mov    %eax,-0x858(%rbp)
  4005a9:	eb 22                	jmp    4005cd <fallbackSort+0x27d>
  4005ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4005b0:	48 63 8d a8 f7 ff ff 	movslq -0x858(%rbp),%rcx
  4005b7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4005bb:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4005be:	8b 8d a8 f7 ff ff    	mov    -0x858(%rbp),%ecx
  4005c4:	48 ff c1             	inc    %rcx
  4005c7:	89 8d a8 f7 ff ff    	mov    %ecx,-0x858(%rbp)
  4005cd:	48 63 8d a8 f7 ff ff 	movslq -0x858(%rbp),%rcx
  4005d4:	48 63 95 88 f7 ff ff 	movslq -0x878(%rbp),%rdx
  4005db:	48 39 d1             	cmp    %rdx,%rcx
  4005de:	7c d0                	jl     4005b0 <fallbackSort+0x260>
  4005e0:	48 31 c0             	xor    %rax,%rax
  4005e3:	eb 57                	jmp    40063c <fallbackSort+0x2ec>
  4005e5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  4005ec:	00 00 00 00 
  4005f0:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  4005f7:	8b 84 85 b0 fb ff ff 	mov    -0x450(%rbp,%rax,4),%eax
  4005fe:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400605:	48 89 c2             	mov    %rax,%rdx
  400608:	48 d3 e2             	shl    %cl,%rdx
  40060b:	48 83 e0 1f          	and    $0x1f,%rax
  40060f:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  400616:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  40061a:	48 89 c1             	mov    %rax,%rcx
  40061d:	48 d3 e6             	shl    %cl,%rsi
  400620:	48 c7 c1 25 00 00 00 	mov    $0x25,%rcx
  400627:	48 d3 fa             	sar    %cl,%rdx
  40062a:	8b 04 97             	mov    (%rdi,%rdx,4),%eax
  40062d:	48 09 f0             	or     %rsi,%rax
  400630:	89 04 97             	mov    %eax,(%rdi,%rdx,4)
  400633:	8b 85 a8 f7 ff ff    	mov    -0x858(%rbp),%eax
  400639:	48 ff c0             	inc    %rax
  40063c:	89 85 a8 f7 ff ff    	mov    %eax,-0x858(%rbp)
  400642:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  400649:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  40064f:	7e 9f                	jle    4005f0 <fallbackSort+0x2a0>
  400651:	48 31 c0             	xor    %rax,%rax
  400654:	e9 98 00 00 00       	jmpq   4006f1 <fallbackSort+0x3a1>
  400659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400660:	8b 45 bc             	mov    -0x44(%rbp),%eax
  400663:	8b 8d a8 f7 ff ff    	mov    -0x858(%rbp),%ecx
  400669:	48 8d 04 48          	lea    (%rax,%rcx,2),%rax
  40066d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400674:	48 89 c2             	mov    %rax,%rdx
  400677:	48 d3 e2             	shl    %cl,%rdx
  40067a:	48 83 e0 1f          	and    $0x1f,%rax
  40067e:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  400685:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  400689:	48 89 c1             	mov    %rax,%rcx
  40068c:	48 d3 e6             	shl    %cl,%rsi
  40068f:	48 c7 c1 25 00 00 00 	mov    $0x25,%rcx
  400696:	48 d3 fa             	sar    %cl,%rdx
  400699:	8b 04 97             	mov    (%rdi,%rdx,4),%eax
  40069c:	48 09 f0             	or     %rsi,%rax
  40069f:	89 04 97             	mov    %eax,(%rdi,%rdx,4)
  4006a2:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4006a5:	8b 8d a8 f7 ff ff    	mov    -0x858(%rbp),%ecx
  4006ab:	48 8d 44 48 01       	lea    0x1(%rax,%rcx,2),%rax
  4006b0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4006b7:	48 89 c2             	mov    %rax,%rdx
  4006ba:	48 d3 e2             	shl    %cl,%rdx
  4006bd:	48 83 e0 1f          	and    $0x1f,%rax
  4006c1:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  4006c8:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  4006cc:	48 89 c1             	mov    %rax,%rcx
  4006cf:	48 d3 e6             	shl    %cl,%rsi
  4006d2:	48 c7 c1 25 00 00 00 	mov    $0x25,%rcx
  4006d9:	48 d3 fa             	sar    %cl,%rdx
  4006dc:	8b 04 97             	mov    (%rdi,%rdx,4),%eax
  4006df:	48 f7 d6             	not    %rsi
  4006e2:	48 21 f0             	and    %rsi,%rax
  4006e5:	89 04 97             	mov    %eax,(%rdi,%rdx,4)
  4006e8:	8b 85 a8 f7 ff ff    	mov    -0x858(%rbp),%eax
  4006ee:	48 ff c0             	inc    %rax
  4006f1:	89 85 a8 f7 ff ff    	mov    %eax,-0x858(%rbp)
  4006f7:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  4006fe:	48 83 f8 1f          	cmp    $0x1f,%rax
  400702:	0f 8e 58 ff ff ff    	jle    400660 <fallbackSort+0x310>
  400708:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40070f:	89 85 ac f7 ff ff    	mov    %eax,-0x854(%rbp)
  400715:	4d 31 e4             	xor    %r12,%r12
  400718:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  40071f:	00 00 00 
  400722:	49 bd 00 00 00 00 00 	movabs $0x0,%r13
  400729:	00 00 00 
  40072c:	49 be 01 00 00 00 00 	movabs $0x1,%r14
  400733:	00 00 00 
  400736:	49 bf 6d 5b 42 00 00 	movabs $0x425b6d,%r15
  40073d:	00 00 00 
  400740:	48 63 45 b8          	movslq -0x48(%rbp),%rax
  400744:	48 83 f8 04          	cmp    $0x4,%rax
  400748:	7c 1f                	jl     400769 <fallbackSort+0x419>
  40074a:	48 8b 3d 7f 82 02 00 	mov    0x2827f(%rip),%rdi        # 4289d0 <stderr>
  400751:	8b 95 ac f7 ff ff    	mov    -0x854(%rbp),%edx
  400757:	48 31 c0             	xor    %rax,%rax
  40075a:	48 be 56 5b 42 00 00 	movabs $0x425b56,%rsi
  400761:	00 00 00 
  400764:	e8 8f 95 01 00       	callq  419cf8 <fprintf>
  400769:	44 89 a5 a4 f7 ff ff 	mov    %r12d,-0x85c(%rbp)
  400770:	44 89 a5 a8 f7 ff ff 	mov    %r12d,-0x858(%rbp)
  400777:	eb 2a                	jmp    4007a3 <fallbackSort+0x453>
  400779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400780:	8b 85 a4 f7 ff ff    	mov    -0x85c(%rbp),%eax
  400786:	48 63 8d a0 f7 ff ff 	movslq -0x860(%rbp),%rcx
  40078d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  400791:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  400794:	8b 85 a8 f7 ff ff    	mov    -0x858(%rbp),%eax
  40079a:	48 ff c0             	inc    %rax
  40079d:	89 85 a8 f7 ff ff    	mov    %eax,-0x858(%rbp)
  4007a3:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  4007aa:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  4007ae:	48 39 c8             	cmp    %rcx,%rax
  4007b1:	0f 8d a9 00 00 00    	jge    400860 <fallbackSort+0x510>
  4007b7:	8b 85 a8 f7 ff ff    	mov    -0x858(%rbp),%eax
  4007bd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4007c4:	48 89 c2             	mov    %rax,%rdx
  4007c7:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  4007cb:	48 d3 e2             	shl    %cl,%rdx
  4007ce:	48 c7 c1 25 00 00 00 	mov    $0x25,%rcx
  4007d5:	48 d3 fa             	sar    %cl,%rdx
  4007d8:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
  4007db:	48 83 e0 1f          	and    $0x1f,%rax
  4007df:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  4007e6:	48 89 c1             	mov    %rax,%rcx
  4007e9:	48 d3 e6             	shl    %cl,%rsi
  4007ec:	48 21 d6             	and    %rdx,%rsi
  4007ef:	48 85 de             	test   %rbx,%rsi
  4007f2:	74 0c                	je     400800 <fallbackSort+0x4b0>
  4007f4:	8b 85 a8 f7 ff ff    	mov    -0x858(%rbp),%eax
  4007fa:	89 85 a4 f7 ff ff    	mov    %eax,-0x85c(%rbp)
  400800:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  400807:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40080b:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  40080e:	8b 8d ac f7 ff ff    	mov    -0x854(%rbp),%ecx
  400814:	48 29 c8             	sub    %rcx,%rax
  400817:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40081e:	48 89 c2             	mov    %rax,%rdx
  400821:	48 d3 e2             	shl    %cl,%rdx
  400824:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40082b:	48 d3 fa             	sar    %cl,%rdx
  40082e:	48 85 d2             	test   %rdx,%rdx
  400831:	89 85 a0 f7 ff ff    	mov    %eax,-0x860(%rbp)
  400837:	0f 89 43 ff ff ff    	jns    400780 <fallbackSort+0x430>
  40083d:	8b 45 bc             	mov    -0x44(%rbp),%eax
  400840:	8b 8d a0 f7 ff ff    	mov    -0x860(%rbp),%ecx
  400846:	48 01 c1             	add    %rax,%rcx
  400849:	89 8d a0 f7 ff ff    	mov    %ecx,-0x860(%rbp)
  40084f:	e9 2c ff ff ff       	jmpq   400780 <fallbackSort+0x430>
  400854:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40085b:	00 00 00 00 00 
  400860:	44 89 a5 8c f7 ff ff 	mov    %r12d,-0x874(%rbp)
  400867:	89 9d 98 f7 ff ff    	mov    %ebx,-0x868(%rbp)
  40086d:	e9 0e 01 00 00       	jmpq   400980 <fallbackSort+0x630>
  400872:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  400879:	1f 84 00 00 00 00 00 
  400880:	48 63 85 98 f7 ff ff 	movslq -0x868(%rbp),%rax
  400887:	48 63 8d 9c f7 ff ff 	movslq -0x864(%rbp),%rcx
  40088e:	48 39 c8             	cmp    %rcx,%rax
  400891:	0f 8e e9 00 00 00    	jle    400980 <fallbackSort+0x630>
  400897:	8b 85 98 f7 ff ff    	mov    -0x868(%rbp),%eax
  40089d:	44 8b 85 9c f7 ff ff 	mov    -0x864(%rbp),%r8d
  4008a4:	44 8b 8d 8c f7 ff ff 	mov    -0x874(%rbp),%r9d
  4008ab:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4008af:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  4008b3:	8b 8d 98 f7 ff ff    	mov    -0x868(%rbp),%ecx
  4008b9:	8b 95 9c f7 ff ff    	mov    -0x864(%rbp),%edx
  4008bf:	4c 29 c0             	sub    %r8,%rax
  4008c2:	4a 8d 44 08 01       	lea    0x1(%rax,%r9,1),%rax
  4008c7:	89 85 8c f7 ff ff    	mov    %eax,-0x874(%rbp)
  4008cd:	e8 0e 2d 00 00       	callq  4035e0 <fallbackQSort3>
  4008d2:	8b 85 9c f7 ff ff    	mov    -0x864(%rbp),%eax
  4008d8:	89 9d 94 f7 ff ff    	mov    %ebx,-0x86c(%rbp)
  4008de:	eb 09                	jmp    4008e9 <fallbackSort+0x599>
  4008e0:	8b 85 a8 f7 ff ff    	mov    -0x858(%rbp),%eax
  4008e6:	48 ff c0             	inc    %rax
  4008e9:	89 85 a8 f7 ff ff    	mov    %eax,-0x858(%rbp)
  4008ef:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  4008f6:	48 63 8d 98 f7 ff ff 	movslq -0x868(%rbp),%rcx
  4008fd:	48 39 c8             	cmp    %rcx,%rax
  400900:	7f 7e                	jg     400980 <fallbackSort+0x630>
  400902:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  400909:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40090d:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  400910:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  400914:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  400917:	8b 8d 94 f7 ff ff    	mov    -0x86c(%rbp),%ecx
  40091d:	89 85 90 f7 ff ff    	mov    %eax,-0x870(%rbp)
  400923:	48 39 c1             	cmp    %rax,%rcx
  400926:	74 b8                	je     4008e0 <fallbackSort+0x590>
  400928:	8b 85 a8 f7 ff ff    	mov    -0x858(%rbp),%eax
  40092e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400935:	48 89 c2             	mov    %rax,%rdx
  400938:	48 d3 e2             	shl    %cl,%rdx
  40093b:	48 83 e0 1f          	and    $0x1f,%rax
  40093f:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  400946:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  40094a:	48 89 c1             	mov    %rax,%rcx
  40094d:	48 d3 e6             	shl    %cl,%rsi
  400950:	48 c7 c1 25 00 00 00 	mov    $0x25,%rcx
  400957:	48 d3 fa             	sar    %cl,%rdx
  40095a:	8b 04 97             	mov    (%rdi,%rdx,4),%eax
  40095d:	48 09 f0             	or     %rsi,%rax
  400960:	89 04 97             	mov    %eax,(%rdi,%rdx,4)
  400963:	8b 85 90 f7 ff ff    	mov    -0x870(%rbp),%eax
  400969:	89 85 94 f7 ff ff    	mov    %eax,-0x86c(%rbp)
  40096f:	e9 6c ff ff ff       	jmpq   4008e0 <fallbackSort+0x590>
  400974:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40097b:	00 00 00 00 00 
  400980:	8b 85 98 f7 ff ff    	mov    -0x868(%rbp),%eax
  400986:	eb 0e                	jmp    400996 <fallbackSort+0x646>
  400988:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40098f:	00 
  400990:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  400996:	48 ff c0             	inc    %rax
  400999:	89 85 a0 f7 ff ff    	mov    %eax,-0x860(%rbp)
  40099f:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  4009a5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4009ac:	48 89 c2             	mov    %rax,%rdx
  4009af:	48 d3 e2             	shl    %cl,%rdx
  4009b2:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  4009b6:	48 c7 c1 25 00 00 00 	mov    $0x25,%rcx
  4009bd:	48 d3 fa             	sar    %cl,%rdx
  4009c0:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
  4009c3:	48 83 e0 1f          	and    $0x1f,%rax
  4009c7:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  4009ce:	48 89 c1             	mov    %rax,%rcx
  4009d1:	48 d3 e6             	shl    %cl,%rsi
  4009d4:	48 21 d6             	and    %rdx,%rsi
  4009d7:	48 31 c0             	xor    %rax,%rax
  4009da:	48 85 de             	test   %rbx,%rsi
  4009dd:	74 15                	je     4009f4 <fallbackSort+0x6a4>
  4009df:	0f b6 85 a0 f7 ff ff 	movzbl -0x860(%rbp),%eax
  4009e6:	48 a9 1f 00 00 00    	test   $0x1f,%rax
  4009ec:	4c 89 e8             	mov    %r13,%rax
  4009ef:	74 03                	je     4009f4 <fallbackSort+0x6a4>
  4009f1:	4c 89 f0             	mov    %r14,%rax
  4009f4:	48 85 c0             	test   %rax,%rax
  4009f7:	75 97                	jne    400990 <fallbackSort+0x640>
  4009f9:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  4009ff:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400a06:	48 89 c2             	mov    %rax,%rdx
  400a09:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  400a0d:	48 d3 e2             	shl    %cl,%rdx
  400a10:	48 c7 c1 25 00 00 00 	mov    $0x25,%rcx
  400a17:	48 d3 fa             	sar    %cl,%rdx
  400a1a:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
  400a1d:	48 83 e0 1f          	and    $0x1f,%rax
  400a21:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  400a28:	48 89 c1             	mov    %rax,%rcx
  400a2b:	48 d3 e6             	shl    %cl,%rsi
  400a2e:	48 21 d6             	and    %rdx,%rsi
  400a31:	48 85 de             	test   %rbx,%rsi
  400a34:	0f 84 82 00 00 00    	je     400abc <fallbackSort+0x76c>
  400a3a:	eb 14                	jmp    400a50 <fallbackSort+0x700>
  400a3c:	0f 1f 40 00          	nopl   0x0(%rax)
  400a40:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  400a46:	48 83 c0 20          	add    $0x20,%rax
  400a4a:	89 85 a0 f7 ff ff    	mov    %eax,-0x860(%rbp)
  400a50:	48 63 85 a0 f7 ff ff 	movslq -0x860(%rbp),%rax
  400a57:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  400a5b:	48 c7 c1 05 00 00 00 	mov    $0x5,%rcx
  400a62:	48 d3 f8             	sar    %cl,%rax
  400a65:	8b 04 82             	mov    (%rdx,%rax,4),%eax
  400a68:	48 39 d8             	cmp    %rbx,%rax
  400a6b:	74 d3                	je     400a40 <fallbackSort+0x6f0>
  400a6d:	eb 10                	jmp    400a7f <fallbackSort+0x72f>
  400a6f:	90                   	nop
  400a70:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  400a76:	48 ff c0             	inc    %rax
  400a79:	89 85 a0 f7 ff ff    	mov    %eax,-0x860(%rbp)
  400a7f:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  400a85:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400a8c:	48 89 c2             	mov    %rax,%rdx
  400a8f:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  400a93:	48 d3 e2             	shl    %cl,%rdx
  400a96:	48 c7 c1 25 00 00 00 	mov    $0x25,%rcx
  400a9d:	48 d3 fa             	sar    %cl,%rdx
  400aa0:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
  400aa3:	48 83 e0 1f          	and    $0x1f,%rax
  400aa7:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  400aae:	48 89 c1             	mov    %rax,%rcx
  400ab1:	48 d3 e6             	shl    %cl,%rsi
  400ab4:	48 21 d6             	and    %rdx,%rsi
  400ab7:	48 85 de             	test   %rbx,%rsi
  400aba:	75 b4                	jne    400a70 <fallbackSort+0x720>
  400abc:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  400ac2:	48 ff c8             	dec    %rax
  400ac5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400acc:	48 89 c2             	mov    %rax,%rdx
  400acf:	48 d3 e2             	shl    %cl,%rdx
  400ad2:	48 63 75 bc          	movslq -0x44(%rbp),%rsi
  400ad6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400add:	48 d3 fa             	sar    %cl,%rdx
  400ae0:	89 85 9c f7 ff ff    	mov    %eax,-0x864(%rbp)
  400ae6:	48 39 f2             	cmp    %rsi,%rdx
  400ae9:	7c 14                	jl     400aff <fallbackSort+0x7af>
  400aeb:	e9 5f 01 00 00       	jmpq   400c4f <fallbackSort+0x8ff>
  400af0:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  400af6:	48 ff c0             	inc    %rax
  400af9:	89 85 a0 f7 ff ff    	mov    %eax,-0x860(%rbp)
  400aff:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  400b05:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400b0c:	48 89 c2             	mov    %rax,%rdx
  400b0f:	48 d3 e2             	shl    %cl,%rdx
  400b12:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  400b16:	48 c7 c1 25 00 00 00 	mov    $0x25,%rcx
  400b1d:	48 d3 fa             	sar    %cl,%rdx
  400b20:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
  400b23:	48 83 e0 1f          	and    $0x1f,%rax
  400b27:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  400b2e:	48 89 c1             	mov    %rax,%rcx
  400b31:	48 d3 e6             	shl    %cl,%rsi
  400b34:	48 21 d6             	and    %rdx,%rsi
  400b37:	48 31 c0             	xor    %rax,%rax
  400b3a:	48 85 de             	test   %rbx,%rsi
  400b3d:	75 15                	jne    400b54 <fallbackSort+0x804>
  400b3f:	0f b6 85 a0 f7 ff ff 	movzbl -0x860(%rbp),%eax
  400b46:	48 a9 1f 00 00 00    	test   $0x1f,%rax
  400b4c:	4c 89 e8             	mov    %r13,%rax
  400b4f:	74 03                	je     400b54 <fallbackSort+0x804>
  400b51:	4c 89 f0             	mov    %r14,%rax
  400b54:	48 85 c0             	test   %rax,%rax
  400b57:	75 97                	jne    400af0 <fallbackSort+0x7a0>
  400b59:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  400b5f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400b66:	48 89 c2             	mov    %rax,%rdx
  400b69:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  400b6d:	48 d3 e2             	shl    %cl,%rdx
  400b70:	48 c7 c1 25 00 00 00 	mov    $0x25,%rcx
  400b77:	48 d3 fa             	sar    %cl,%rdx
  400b7a:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
  400b7d:	48 83 e0 1f          	and    $0x1f,%rax
  400b81:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  400b88:	48 89 c1             	mov    %rax,%rcx
  400b8b:	48 d3 e6             	shl    %cl,%rsi
  400b8e:	48 21 d6             	and    %rdx,%rsi
  400b91:	48 85 de             	test   %rbx,%rsi
  400b94:	0f 85 82 00 00 00    	jne    400c1c <fallbackSort+0x8cc>
  400b9a:	eb 14                	jmp    400bb0 <fallbackSort+0x860>
  400b9c:	0f 1f 40 00          	nopl   0x0(%rax)
  400ba0:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  400ba6:	48 83 c0 20          	add    $0x20,%rax
  400baa:	89 85 a0 f7 ff ff    	mov    %eax,-0x860(%rbp)
  400bb0:	48 63 85 a0 f7 ff ff 	movslq -0x860(%rbp),%rax
  400bb7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  400bbb:	48 c7 c1 05 00 00 00 	mov    $0x5,%rcx
  400bc2:	48 d3 f8             	sar    %cl,%rax
  400bc5:	8b 04 82             	mov    (%rdx,%rax,4),%eax
  400bc8:	48 85 c0             	test   %rax,%rax
  400bcb:	74 d3                	je     400ba0 <fallbackSort+0x850>
  400bcd:	eb 10                	jmp    400bdf <fallbackSort+0x88f>
  400bcf:	90                   	nop
  400bd0:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  400bd6:	48 ff c0             	inc    %rax
  400bd9:	89 85 a0 f7 ff ff    	mov    %eax,-0x860(%rbp)
  400bdf:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  400be5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400bec:	48 89 c2             	mov    %rax,%rdx
  400bef:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  400bf3:	48 d3 e2             	shl    %cl,%rdx
  400bf6:	48 c7 c1 25 00 00 00 	mov    $0x25,%rcx
  400bfd:	48 d3 fa             	sar    %cl,%rdx
  400c00:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
  400c03:	48 83 e0 1f          	and    $0x1f,%rax
  400c07:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  400c0e:	48 89 c1             	mov    %rax,%rcx
  400c11:	48 d3 e6             	shl    %cl,%rsi
  400c14:	48 21 d6             	and    %rdx,%rsi
  400c17:	48 85 de             	test   %rbx,%rsi
  400c1a:	74 b4                	je     400bd0 <fallbackSort+0x880>
  400c1c:	8b 85 a0 f7 ff ff    	mov    -0x860(%rbp),%eax
  400c22:	48 ff c8             	dec    %rax
  400c25:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400c2c:	48 89 c2             	mov    %rax,%rdx
  400c2f:	48 d3 e2             	shl    %cl,%rdx
  400c32:	48 63 75 bc          	movslq -0x44(%rbp),%rsi
  400c36:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400c3d:	48 d3 fa             	sar    %cl,%rdx
  400c40:	89 85 98 f7 ff ff    	mov    %eax,-0x868(%rbp)
  400c46:	48 39 f2             	cmp    %rsi,%rdx
  400c49:	0f 8c 31 fc ff ff    	jl     400880 <fallbackSort+0x530>
  400c4f:	48 63 45 b8          	movslq -0x48(%rbp),%rax
  400c53:	48 83 f8 04          	cmp    $0x4,%rax
  400c57:	7c 18                	jl     400c71 <fallbackSort+0x921>
  400c59:	48 8b 3d 70 7d 02 00 	mov    0x27d70(%rip),%rdi        # 4289d0 <stderr>
  400c60:	8b 95 8c f7 ff ff    	mov    -0x874(%rbp),%edx
  400c66:	48 31 c0             	xor    %rax,%rax
  400c69:	4c 89 fe             	mov    %r15,%rsi
  400c6c:	e8 87 90 01 00       	callq  419cf8 <fprintf>
  400c71:	8b 85 ac f7 ff ff    	mov    -0x854(%rbp),%eax
  400c77:	48 c7 c1 21 00 00 00 	mov    $0x21,%rcx
  400c7e:	48 89 c2             	mov    %rax,%rdx
  400c81:	48 d3 e2             	shl    %cl,%rdx
  400c84:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400c8b:	48 63 75 bc          	movslq -0x44(%rbp),%rsi
  400c8f:	48 d3 fa             	sar    %cl,%rdx
  400c92:	48 01 c0             	add    %rax,%rax
  400c95:	89 85 ac f7 ff ff    	mov    %eax,-0x854(%rbp)
  400c9b:	48 39 f2             	cmp    %rsi,%rdx
  400c9e:	7f 0f                	jg     400caf <fallbackSort+0x95f>
  400ca0:	8b 85 8c f7 ff ff    	mov    -0x874(%rbp),%eax
  400ca6:	48 85 c0             	test   %rax,%rax
  400ca9:	0f 85 91 fa ff ff    	jne    400740 <fallbackSort+0x3f0>
  400caf:	48 63 45 b8          	movslq -0x48(%rbp),%rax
  400cb3:	48 83 f8 04          	cmp    $0x4,%rax
  400cb7:	7c 19                	jl     400cd2 <fallbackSort+0x982>
  400cb9:	48 8b 3d 10 7d 02 00 	mov    0x27d10(%rip),%rdi        # 4289d0 <stderr>
  400cc0:	48 be 85 5b 42 00 00 	movabs $0x425b85,%rsi
  400cc7:	00 00 00 
  400cca:	48 31 c0             	xor    %rax,%rax
  400ccd:	e8 26 90 01 00       	callq  419cf8 <fprintf>
  400cd2:	48 31 c0             	xor    %rax,%rax
  400cd5:	89 85 a4 f7 ff ff    	mov    %eax,-0x85c(%rbp)
  400cdb:	eb 43                	jmp    400d20 <fallbackSort+0x9d0>
  400cdd:	0f 1f 00             	nopl   (%rax)
  400ce0:	48 63 85 a4 f7 ff ff 	movslq -0x85c(%rbp),%rax
  400ce7:	8b 8c 85 b0 f7 ff ff 	mov    -0x850(%rbp,%rax,4),%ecx
  400cee:	48 ff c9             	dec    %rcx
  400cf1:	48 63 95 a8 f7 ff ff 	movslq -0x858(%rbp),%rdx
  400cf8:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  400cfc:	89 8c 85 b0 f7 ff ff 	mov    %ecx,-0x850(%rbp,%rax,4)
  400d03:	0f b6 85 a4 f7 ff ff 	movzbl -0x85c(%rbp),%eax
  400d0a:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
  400d0d:	48 8b 95 80 f7 ff ff 	mov    -0x880(%rbp),%rdx
  400d14:	88 04 0a             	mov    %al,(%rdx,%rcx,1)
  400d17:	8b 85 a8 f7 ff ff    	mov    -0x858(%rbp),%eax
  400d1d:	48 ff c0             	inc    %rax
  400d20:	89 85 a8 f7 ff ff    	mov    %eax,-0x858(%rbp)
  400d26:	48 63 85 a8 f7 ff ff 	movslq -0x858(%rbp),%rax
  400d2d:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  400d31:	48 39 c8             	cmp    %rcx,%rax
  400d34:	7c 19                	jl     400d4f <fallbackSort+0x9ff>
  400d36:	eb 2f                	jmp    400d67 <fallbackSort+0xa17>
  400d38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400d3f:	00 
  400d40:	8b 85 a4 f7 ff ff    	mov    -0x85c(%rbp),%eax
  400d46:	48 ff c0             	inc    %rax
  400d49:	89 85 a4 f7 ff ff    	mov    %eax,-0x85c(%rbp)
  400d4f:	48 63 85 a4 f7 ff ff 	movslq -0x85c(%rbp),%rax
  400d56:	8b 84 85 b0 f7 ff ff 	mov    -0x850(%rbp,%rax,4),%eax
  400d5d:	48 85 c0             	test   %rax,%rax
  400d60:	74 de                	je     400d40 <fallbackSort+0x9f0>
  400d62:	e9 79 ff ff ff       	jmpq   400ce0 <fallbackSort+0x990>
  400d67:	48 63 85 a4 f7 ff ff 	movslq -0x85c(%rbp),%rax
  400d6e:	48 3d 00 01 00 00    	cmp    $0x100,%rax
  400d74:	7c 0c                	jl     400d82 <fallbackSort+0xa32>
  400d76:	48 c7 c7 ed 03 00 00 	mov    $0x3ed,%rdi
  400d7d:	e8 fe 6c 00 00       	callq  407a80 <BZ2_bz__AssertH__fail>
  400d82:	48 81 c4 58 08 00 00 	add    $0x858,%rsp
  400d89:	5b                   	pop    %rbx
  400d8a:	41 5c                	pop    %r12
  400d8c:	41 5d                	pop    %r13
  400d8e:	41 5e                	pop    %r14
  400d90:	41 5f                	pop    %r15
  400d92:	5d                   	pop    %rbp
  400d93:	c3                   	retq   
  400d94:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  400d9b:	00 00 00 00 00 

0000000000400da0 <mainSort>:
  400da0:	55                   	push   %rbp
  400da1:	48 89 e5             	mov    %rsp,%rbp
  400da4:	41 57                	push   %r15
  400da6:	41 56                	push   %r14
  400da8:	41 55                	push   %r13
  400daa:	41 54                	push   %r12
  400dac:	53                   	push   %rbx
  400dad:	48 81 ec 88 0d 00 00 	sub    $0xd88,%rsp
  400db4:	48 8b 45 10          	mov    0x10(%rbp),%rax
  400db8:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  400dbc:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  400dc0:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
  400dc4:	44 89 4d b0          	mov    %r9d,-0x50(%rbp)
  400dc8:	48 63 55 b0          	movslq -0x50(%rbp),%rdx
  400dcc:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  400dd0:	44 89 45 b4          	mov    %r8d,-0x4c(%rbp)
  400dd4:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  400dd8:	48 83 fa 04          	cmp    $0x4,%rdx
  400ddc:	7c 19                	jl     400df7 <mainSort+0x57>
  400dde:	48 8b 3d eb 7b 02 00 	mov    0x27beb(%rip),%rdi        # 4289d0 <stderr>
  400de5:	48 be bc 5a 42 00 00 	movabs $0x425abc,%rsi
  400dec:	00 00 00 
  400def:	48 31 c0             	xor    %rax,%rax
  400df2:	e8 01 8f 01 00       	callq  419cf8 <fprintf>
  400df7:	48 c7 c0 00 00 01 00 	mov    $0x10000,%rax
  400dfe:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  400e01:	48 31 c0             	xor    %rax,%rax
  400e04:	eb 1e                	jmp    400e24 <mainSort+0x84>
  400e06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400e0d:	00 00 00 
  400e10:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  400e14:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  400e18:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  400e1b:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  400e1e:	48 ff c9             	dec    %rcx
  400e21:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
  400e24:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  400e28:	48 85 c9             	test   %rcx,%rcx
  400e2b:	79 e3                	jns    400e10 <mainSort+0x70>
  400e2d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  400e31:	0f b6 00             	movzbl (%rax),%eax
  400e34:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  400e3b:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  400e3e:	48 d3 e0             	shl    %cl,%rax
  400e41:	89 45 a0             	mov    %eax,-0x60(%rbp)
  400e44:	48 ff ca             	dec    %rdx
  400e47:	89 55 a4             	mov    %edx,-0x5c(%rbp)
  400e4a:	48 31 c0             	xor    %rax,%rax
  400e4d:	e9 7b 01 00 00       	jmpq   400fcd <mainSort+0x22d>
  400e52:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  400e59:	1f 84 00 00 00 00 00 
  400e60:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  400e64:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  400e68:	66 89 04 4a          	mov    %ax,(%rdx,%rcx,2)
  400e6c:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  400e70:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  400e74:	48 63 75 a0          	movslq -0x60(%rbp),%rsi
  400e78:	0f b6 14 0a          	movzbl (%rdx,%rcx,1),%edx
  400e7c:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  400e83:	48 d3 ee             	shr    %cl,%rsi
  400e86:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  400e8d:	48 d3 e2             	shl    %cl,%rdx
  400e90:	48 09 f2             	or     %rsi,%rdx
  400e93:	89 55 a0             	mov    %edx,-0x60(%rbp)
  400e96:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  400e9a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  400e9e:	8b 34 8a             	mov    (%rdx,%rcx,4),%esi
  400ea1:	48 ff c6             	inc    %rsi
  400ea4:	89 34 8a             	mov    %esi,(%rdx,%rcx,4)
  400ea7:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  400eaa:	48 ff ca             	dec    %rdx
  400ead:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400eb4:	48 d3 e2             	shl    %cl,%rdx
  400eb7:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  400ebb:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400ec2:	48 d3 fa             	sar    %cl,%rdx
  400ec5:	66 89 04 56          	mov    %ax,(%rsi,%rdx,2)
  400ec9:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  400ecd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  400ed1:	48 63 75 a0          	movslq -0x60(%rbp),%rsi
  400ed5:	0f b6 54 11 ff       	movzbl -0x1(%rcx,%rdx,1),%edx
  400eda:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  400ee1:	48 d3 ee             	shr    %cl,%rsi
  400ee4:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  400eeb:	48 d3 e2             	shl    %cl,%rdx
  400eee:	48 09 f2             	or     %rsi,%rdx
  400ef1:	89 55 a0             	mov    %edx,-0x60(%rbp)
  400ef4:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  400ef8:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  400efc:	8b 34 8a             	mov    (%rdx,%rcx,4),%esi
  400eff:	48 ff c6             	inc    %rsi
  400f02:	89 34 8a             	mov    %esi,(%rdx,%rcx,4)
  400f05:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  400f08:	48 83 c2 fe          	add    $0xfffffffffffffffe,%rdx
  400f0c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400f13:	48 d3 e2             	shl    %cl,%rdx
  400f16:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  400f1a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400f21:	48 d3 fa             	sar    %cl,%rdx
  400f24:	66 89 04 56          	mov    %ax,(%rsi,%rdx,2)
  400f28:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  400f2c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  400f30:	48 63 75 a0          	movslq -0x60(%rbp),%rsi
  400f34:	0f b6 54 11 fe       	movzbl -0x2(%rcx,%rdx,1),%edx
  400f39:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  400f40:	48 d3 ee             	shr    %cl,%rsi
  400f43:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  400f4a:	48 d3 e2             	shl    %cl,%rdx
  400f4d:	48 09 f2             	or     %rsi,%rdx
  400f50:	89 55 a0             	mov    %edx,-0x60(%rbp)
  400f53:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  400f57:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  400f5b:	8b 34 8a             	mov    (%rdx,%rcx,4),%esi
  400f5e:	48 ff c6             	inc    %rsi
  400f61:	89 34 8a             	mov    %esi,(%rdx,%rcx,4)
  400f64:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  400f67:	48 83 c2 fd          	add    $0xfffffffffffffffd,%rdx
  400f6b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400f72:	48 d3 e2             	shl    %cl,%rdx
  400f75:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  400f79:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  400f80:	48 d3 fa             	sar    %cl,%rdx
  400f83:	66 89 04 56          	mov    %ax,(%rsi,%rdx,2)
  400f87:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  400f8b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  400f8f:	48 63 75 a0          	movslq -0x60(%rbp),%rsi
  400f93:	0f b6 54 11 fd       	movzbl -0x3(%rcx,%rdx,1),%edx
  400f98:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  400f9f:	48 d3 ee             	shr    %cl,%rsi
  400fa2:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  400fa9:	48 d3 e2             	shl    %cl,%rdx
  400fac:	48 09 f2             	or     %rsi,%rdx
  400faf:	89 55 a0             	mov    %edx,-0x60(%rbp)
  400fb2:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  400fb6:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  400fba:	8b 34 8a             	mov    (%rdx,%rcx,4),%esi
  400fbd:	48 ff c6             	inc    %rsi
  400fc0:	89 34 8a             	mov    %esi,(%rdx,%rcx,4)
  400fc3:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  400fc6:	48 83 c1 fc          	add    $0xfffffffffffffffc,%rcx
  400fca:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
  400fcd:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  400fd1:	48 83 f9 03          	cmp    $0x3,%rcx
  400fd5:	0f 8d 85 fe ff ff    	jge    400e60 <mainSort+0xc0>
  400fdb:	48 31 c0             	xor    %rax,%rax
  400fde:	eb 50                	jmp    401030 <mainSort+0x290>
  400fe0:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  400fe4:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  400fe8:	66 89 04 4a          	mov    %ax,(%rdx,%rcx,2)
  400fec:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  400ff0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  400ff4:	48 63 75 a0          	movslq -0x60(%rbp),%rsi
  400ff8:	0f b6 14 0a          	movzbl (%rdx,%rcx,1),%edx
  400ffc:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  401003:	48 d3 ee             	shr    %cl,%rsi
  401006:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  40100d:	48 d3 e2             	shl    %cl,%rdx
  401010:	48 09 f2             	or     %rsi,%rdx
  401013:	89 55 a0             	mov    %edx,-0x60(%rbp)
  401016:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  40101a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40101e:	8b 34 8a             	mov    (%rdx,%rcx,4),%esi
  401021:	48 ff c6             	inc    %rsi
  401024:	89 34 8a             	mov    %esi,(%rdx,%rcx,4)
  401027:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  40102a:	48 ff c9             	dec    %rcx
  40102d:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
  401030:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  401034:	48 85 c9             	test   %rcx,%rcx
  401037:	79 a7                	jns    400fe0 <mainSort+0x240>
  401039:	48 31 c0             	xor    %rax,%rax
  40103c:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  40103f:	eb 67                	jmp    4010a8 <mainSort+0x308>
  401041:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  401048:	0f 1f 84 00 00 00 00 
  40104f:	00 
  401050:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  401054:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  401058:	8b 75 b4             	mov    -0x4c(%rbp),%esi
  40105b:	0f b6 3c 0a          	movzbl (%rdx,%rcx,1),%edi
  40105f:	48 01 ce             	add    %rcx,%rsi
  401062:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401069:	48 d3 e6             	shl    %cl,%rsi
  40106c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401073:	48 d3 fe             	sar    %cl,%rsi
  401076:	40 88 3c 32          	mov    %dil,(%rdx,%rsi,1)
  40107a:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  40107d:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  401080:	48 01 ca             	add    %rcx,%rdx
  401083:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40108a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  40108e:	48 d3 e2             	shl    %cl,%rdx
  401091:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401098:	48 d3 fa             	sar    %cl,%rdx
  40109b:	66 89 04 56          	mov    %ax,(%rsi,%rdx,2)
  40109f:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  4010a2:	48 ff c1             	inc    %rcx
  4010a5:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
  4010a8:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  4010ac:	48 83 f9 21          	cmp    $0x21,%rcx
  4010b0:	7e 9e                	jle    401050 <mainSort+0x2b0>
  4010b2:	48 63 45 b0          	movslq -0x50(%rbp),%rax
  4010b6:	48 83 f8 04          	cmp    $0x4,%rax
  4010ba:	7c 19                	jl     4010d5 <mainSort+0x335>
  4010bc:	48 8b 3d 0d 79 02 00 	mov    0x2790d(%rip),%rdi        # 4289d0 <stderr>
  4010c3:	48 be de 5a 42 00 00 	movabs $0x425ade,%rsi
  4010ca:	00 00 00 
  4010cd:	48 31 c0             	xor    %rax,%rax
  4010d0:	e8 23 8c 01 00       	callq  419cf8 <fprintf>
  4010d5:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4010dc:	eb 34                	jmp    401112 <mainSort+0x372>
  4010de:	66 90                	xchg   %ax,%ax
  4010e0:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  4010e4:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  4010e8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4010ef:	48 d3 e2             	shl    %cl,%rdx
  4010f2:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  4010f6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4010fd:	48 d3 fa             	sar    %cl,%rdx
  401100:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
  401103:	8b 14 86             	mov    (%rsi,%rax,4),%edx
  401106:	48 01 ca             	add    %rcx,%rdx
  401109:	89 14 86             	mov    %edx,(%rsi,%rax,4)
  40110c:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  40110f:	48 ff c0             	inc    %rax
  401112:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  401115:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  401119:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
  40111f:	7e bf                	jle    4010e0 <mainSort+0x340>
  401121:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  401125:	0f b6 00             	movzbl (%rax),%eax
  401128:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  40112b:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  401132:	48 d3 e0             	shl    %cl,%rax
  401135:	66 89 85 86 f2 ff ff 	mov    %ax,-0xd7a(%rbp)
  40113c:	48 ff ca             	dec    %rdx
  40113f:	89 55 a4             	mov    %edx,-0x5c(%rbp)
  401142:	e9 a5 01 00 00       	jmpq   4012ec <mainSort+0x54c>
  401147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40114e:	00 00 
  401150:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  401154:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  401158:	0f b6 95 86 f2 ff ff 	movzbl -0xd7a(%rbp),%edx
  40115f:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
  401163:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  40116a:	48 d3 ea             	shr    %cl,%rdx
  40116d:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  401174:	48 d3 e0             	shl    %cl,%rax
  401177:	48 09 d0             	or     %rdx,%rax
  40117a:	66 89 85 86 f2 ff ff 	mov    %ax,-0xd7a(%rbp)
  401181:	0f b6 85 86 f2 ff ff 	movzbl -0xd7a(%rbp),%eax
  401188:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  40118c:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  40118f:	0f b6 8d 86 f2 ff ff 	movzbl -0xd7a(%rbp),%ecx
  401196:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40119a:	48 ff c8             	dec    %rax
  40119d:	89 45 a0             	mov    %eax,-0x60(%rbp)
  4011a0:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4011a3:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  4011a6:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  4011aa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4011ae:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4011b1:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  4011b5:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4011b9:	0f b6 95 86 f2 ff ff 	movzbl -0xd7a(%rbp),%edx
  4011c0:	0f b6 44 08 ff       	movzbl -0x1(%rax,%rcx,1),%eax
  4011c5:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4011cc:	48 d3 ea             	shr    %cl,%rdx
  4011cf:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4011d6:	48 d3 e0             	shl    %cl,%rax
  4011d9:	48 09 d0             	or     %rdx,%rax
  4011dc:	66 89 85 86 f2 ff ff 	mov    %ax,-0xd7a(%rbp)
  4011e3:	0f b6 85 86 f2 ff ff 	movzbl -0xd7a(%rbp),%eax
  4011ea:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  4011ee:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  4011f1:	0f b6 8d 86 f2 ff ff 	movzbl -0xd7a(%rbp),%ecx
  4011f8:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  4011fc:	48 ff c8             	dec    %rax
  4011ff:	89 45 a0             	mov    %eax,-0x60(%rbp)
  401202:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  401205:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  401208:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  40120c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  401210:	48 ff c8             	dec    %rax
  401213:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  401216:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  40121a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40121e:	0f b6 95 86 f2 ff ff 	movzbl -0xd7a(%rbp),%edx
  401225:	0f b6 44 08 fe       	movzbl -0x2(%rax,%rcx,1),%eax
  40122a:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  401231:	48 d3 ea             	shr    %cl,%rdx
  401234:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  40123b:	48 d3 e0             	shl    %cl,%rax
  40123e:	48 09 d0             	or     %rdx,%rax
  401241:	66 89 85 86 f2 ff ff 	mov    %ax,-0xd7a(%rbp)
  401248:	0f b6 85 86 f2 ff ff 	movzbl -0xd7a(%rbp),%eax
  40124f:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  401253:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  401256:	0f b6 8d 86 f2 ff ff 	movzbl -0xd7a(%rbp),%ecx
  40125d:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  401261:	48 ff c8             	dec    %rax
  401264:	89 45 a0             	mov    %eax,-0x60(%rbp)
  401267:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  40126a:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  40126d:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401271:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  401275:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
  401279:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  40127c:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  401280:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  401284:	0f b6 95 86 f2 ff ff 	movzbl -0xd7a(%rbp),%edx
  40128b:	0f b6 44 08 fd       	movzbl -0x3(%rax,%rcx,1),%eax
  401290:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  401297:	48 d3 ea             	shr    %cl,%rdx
  40129a:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4012a1:	48 d3 e0             	shl    %cl,%rax
  4012a4:	48 09 d0             	or     %rdx,%rax
  4012a7:	66 89 85 86 f2 ff ff 	mov    %ax,-0xd7a(%rbp)
  4012ae:	0f b6 85 86 f2 ff ff 	movzbl -0xd7a(%rbp),%eax
  4012b5:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  4012b9:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  4012bc:	0f b6 8d 86 f2 ff ff 	movzbl -0xd7a(%rbp),%ecx
  4012c3:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  4012c7:	48 ff c8             	dec    %rax
  4012ca:	89 45 a0             	mov    %eax,-0x60(%rbp)
  4012cd:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4012d0:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  4012d3:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  4012d7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4012db:	48 83 c0 fd          	add    $0xfffffffffffffffd,%rax
  4012df:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4012e2:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  4012e5:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
  4012e9:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  4012ec:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  4012f0:	48 83 f8 03          	cmp    $0x3,%rax
  4012f4:	0f 8d 56 fe ff ff    	jge    401150 <mainSort+0x3b0>
  4012fa:	eb 6e                	jmp    40136a <mainSort+0x5ca>
  4012fc:	0f 1f 40 00          	nopl   0x0(%rax)
  401300:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  401304:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  401308:	0f b6 95 86 f2 ff ff 	movzbl -0xd7a(%rbp),%edx
  40130f:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
  401313:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  40131a:	48 d3 ea             	shr    %cl,%rdx
  40131d:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  401324:	48 d3 e0             	shl    %cl,%rax
  401327:	48 09 d0             	or     %rdx,%rax
  40132a:	66 89 85 86 f2 ff ff 	mov    %ax,-0xd7a(%rbp)
  401331:	0f b6 85 86 f2 ff ff 	movzbl -0xd7a(%rbp),%eax
  401338:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  40133c:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  40133f:	0f b6 8d 86 f2 ff ff 	movzbl -0xd7a(%rbp),%ecx
  401346:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40134a:	48 ff c8             	dec    %rax
  40134d:	89 45 a0             	mov    %eax,-0x60(%rbp)
  401350:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  401353:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  401356:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  40135a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40135e:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  401361:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  401364:	48 ff c8             	dec    %rax
  401367:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  40136a:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  40136e:	48 85 c0             	test   %rax,%rax
  401371:	79 8d                	jns    401300 <mainSort+0x560>
  401373:	48 31 c0             	xor    %rax,%rax
  401376:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  401379:	eb 24                	jmp    40139f <mainSort+0x5ff>
  40137b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401380:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  401384:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  401387:	48 63 75 a4          	movslq -0x5c(%rbp),%rsi
  40138b:	88 84 0d 90 fa ff ff 	mov    %al,-0x570(%rbp,%rcx,1)
  401392:	89 b4 b5 90 fb ff ff 	mov    %esi,-0x470(%rbp,%rsi,4)
  401399:	48 ff c2             	inc    %rdx
  40139c:	89 55 a4             	mov    %edx,-0x5c(%rbp)
  40139f:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  4013a3:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
  4013aa:	7e d4                	jle    401380 <mainSort+0x5e0>
  4013ac:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4013b3:	89 85 7c f2 ff ff    	mov    %eax,-0xd84(%rbp)
  4013b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4013c0:	8b 85 7c f2 ff ff    	mov    -0xd84(%rbp),%eax
  4013c6:	48 8d 44 40 01       	lea    0x1(%rax,%rax,2),%rax
  4013cb:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4013d2:	48 89 c2             	mov    %rax,%rdx
  4013d5:	48 d3 e2             	shl    %cl,%rdx
  4013d8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4013df:	48 d3 fa             	sar    %cl,%rdx
  4013e2:	48 81 fa 01 01 00 00 	cmp    $0x101,%rdx
  4013e9:	89 85 7c f2 ff ff    	mov    %eax,-0xd84(%rbp)
  4013ef:	7c cf                	jl     4013c0 <mainSort+0x620>
  4013f1:	49 b8 56 55 55 55 55 	movabs $0x5555555555555556,%r8
  4013f8:	55 55 55 
  4013fb:	49 bd ff ff ff ff 00 	movabs $0xffffffff,%r13
  401402:	00 00 00 
  401405:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40140c:	00 00 00 00 
  401410:	48 63 85 7c f2 ff ff 	movslq -0xd84(%rbp),%rax
  401417:	49 f7 e8             	imul   %r8
  40141a:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  401421:	48 89 d0             	mov    %rdx,%rax
  401424:	48 d3 e8             	shr    %cl,%rax
  401427:	48 01 d0             	add    %rdx,%rax
  40142a:	89 85 7c f2 ff ff    	mov    %eax,-0xd84(%rbp)
  401430:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  401433:	eb 25                	jmp    40145a <mainSort+0x6ba>
  401435:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40143c:	00 00 00 00 
  401440:	8b 85 80 f2 ff ff    	mov    -0xd80(%rbp),%eax
  401446:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  401449:	48 63 55 a0          	movslq -0x60(%rbp),%rdx
  40144d:	89 84 95 90 fb ff ff 	mov    %eax,-0x470(%rbp,%rdx,4)
  401454:	48 ff c1             	inc    %rcx
  401457:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
  40145a:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  40145e:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  401464:	0f 8f 56 01 00 00    	jg     4015c0 <mainSort+0x820>
  40146a:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  40146e:	8b 84 85 90 fb ff ff 	mov    -0x470(%rbp,%rax,4),%eax
  401475:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  401478:	89 85 80 f2 ff ff    	mov    %eax,-0xd80(%rbp)
  40147e:	89 4d a0             	mov    %ecx,-0x60(%rbp)
  401481:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  401488:	0f 1f 84 00 00 00 00 
  40148f:	00 
  401490:	8b 45 a0             	mov    -0x60(%rbp),%eax
  401493:	8b 8d 7c f2 ff ff    	mov    -0xd84(%rbp),%ecx
  401499:	48 29 c8             	sub    %rcx,%rax
  40149c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4014a3:	48 d3 e0             	shl    %cl,%rax
  4014a6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4014ad:	48 d3 f8             	sar    %cl,%rax
  4014b0:	8b 84 85 90 fb ff ff 	mov    -0x470(%rbp,%rax,4),%eax
  4014b7:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4014bb:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  4014c2:	48 d3 e2             	shl    %cl,%rdx
  4014c5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4014cc:	48 d3 fa             	sar    %cl,%rdx
  4014cf:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  4014d3:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  4014da:	48 d3 e0             	shl    %cl,%rax
  4014dd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4014e4:	8b b5 80 f2 ff ff    	mov    -0xd80(%rbp),%esi
  4014ea:	48 d3 f8             	sar    %cl,%rax
  4014ed:	48 8d 5e 01          	lea    0x1(%rsi),%rbx
  4014f1:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  4014f8:	48 d3 e3             	shl    %cl,%rbx
  4014fb:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401502:	48 d3 fb             	sar    %cl,%rbx
  401505:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  40150c:	48 d3 e6             	shl    %cl,%rsi
  40150f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401516:	48 d3 fe             	sar    %cl,%rsi
  401519:	8b 0c 97             	mov    (%rdi,%rdx,4),%ecx
  40151c:	8b 04 87             	mov    (%rdi,%rax,4),%eax
  40151f:	8b 14 9f             	mov    (%rdi,%rbx,4),%edx
  401522:	8b 34 b7             	mov    (%rdi,%rsi,4),%esi
  401525:	48 29 c1             	sub    %rax,%rcx
  401528:	4c 21 e9             	and    %r13,%rcx
  40152b:	48 29 f2             	sub    %rsi,%rdx
  40152e:	4c 21 ea             	and    %r13,%rdx
  401531:	48 39 d1             	cmp    %rdx,%rcx
  401534:	0f 86 06 ff ff ff    	jbe    401440 <mainSort+0x6a0>
  40153a:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  40153e:	8b 8d 7c f2 ff ff    	mov    -0xd84(%rbp),%ecx
  401544:	48 89 c2             	mov    %rax,%rdx
  401547:	48 29 ca             	sub    %rcx,%rdx
  40154a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401551:	48 d3 e2             	shl    %cl,%rdx
  401554:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40155b:	48 d3 fa             	sar    %cl,%rdx
  40155e:	8b 75 a0             	mov    -0x60(%rbp),%esi
  401561:	8b 8d 7c f2 ff ff    	mov    -0xd84(%rbp),%ecx
  401567:	8b 94 95 90 fb ff ff 	mov    -0x470(%rbp,%rdx,4),%edx
  40156e:	89 94 85 90 fb ff ff 	mov    %edx,-0x470(%rbp,%rax,4)
  401575:	48 29 ce             	sub    %rcx,%rsi
  401578:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40157f:	48 89 f0             	mov    %rsi,%rax
  401582:	48 d3 e0             	shl    %cl,%rax
  401585:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40158c:	48 d3 f8             	sar    %cl,%rax
  40158f:	8b 95 7c f2 ff ff    	mov    -0xd84(%rbp),%edx
  401595:	89 75 a0             	mov    %esi,-0x60(%rbp)
  401598:	48 ff ca             	dec    %rdx
  40159b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4015a2:	48 d3 e2             	shl    %cl,%rdx
  4015a5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4015ac:	48 d3 fa             	sar    %cl,%rdx
  4015af:	48 39 d0             	cmp    %rdx,%rax
  4015b2:	0f 8f d8 fe ff ff    	jg     401490 <mainSort+0x6f0>
  4015b8:	e9 83 fe ff ff       	jmpq   401440 <mainSort+0x6a0>
  4015bd:	0f 1f 00             	nopl   (%rax)
  4015c0:	8b 85 7c f2 ff ff    	mov    -0xd84(%rbp),%eax
  4015c6:	48 83 f8 01          	cmp    $0x1,%rax
  4015ca:	0f 85 40 fe ff ff    	jne    401410 <mainSort+0x670>
  4015d0:	4d 31 ff             	xor    %r15,%r15
  4015d3:	44 89 bd 88 f2 ff ff 	mov    %r15d,-0xd78(%rbp)
  4015da:	44 89 7d a4          	mov    %r15d,-0x5c(%rbp)
  4015de:	49 bc ff ff df ff 00 	movabs $0xffdfffff,%r12
  4015e5:	00 00 00 
  4015e8:	49 be fa 5a 42 00 00 	movabs $0x425afa,%r14
  4015ef:	00 00 00 
  4015f2:	48 c7 c3 01 00 00 00 	mov    $0x1,%rbx
  4015f9:	eb 0e                	jmp    401609 <mainSort+0x869>
  4015fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401600:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  401603:	48 ff c0             	inc    %rax
  401606:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  401609:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  40160d:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  401613:	0f 8f 6e 06 00 00    	jg     401c87 <mainSort+0xee7>
  401619:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  40161d:	8b 84 85 90 fb ff ff 	mov    -0x470(%rbp,%rax,4),%eax
  401624:	89 45 98             	mov    %eax,-0x68(%rbp)
  401627:	44 89 7d a0          	mov    %r15d,-0x60(%rbp)
  40162b:	eb 0c                	jmp    401639 <mainSort+0x899>
  40162d:	0f 1f 00             	nopl   (%rax)
  401630:	8b 45 a0             	mov    -0x60(%rbp),%eax
  401633:	48 ff c0             	inc    %rax
  401636:	89 45 a0             	mov    %eax,-0x60(%rbp)
  401639:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  40163d:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  401643:	0f 8f 67 01 00 00    	jg     4017b0 <mainSort+0xa10>
  401649:	8b 45 a0             	mov    -0x60(%rbp),%eax
  40164c:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  40164f:	48 39 c8             	cmp    %rcx,%rax
  401652:	74 dc                	je     401630 <mainSort+0x890>
  401654:	8b 45 98             	mov    -0x68(%rbp),%eax
  401657:	8b 55 a0             	mov    -0x60(%rbp),%edx
  40165a:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  401661:	48 d3 e0             	shl    %cl,%rax
  401664:	48 01 c2             	add    %rax,%rdx
  401667:	89 55 94             	mov    %edx,-0x6c(%rbp)
  40166a:	48 63 45 94          	movslq -0x6c(%rbp),%rax
  40166e:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  401672:	0f b6 44 81 02       	movzbl 0x2(%rcx,%rax,4),%eax
  401677:	48 a9 20 00 00 00    	test   $0x20,%rax
  40167d:	0f 85 0a 01 00 00    	jne    40178d <mainSort+0x9ed>
  401683:	48 63 45 94          	movslq -0x6c(%rbp),%rax
  401687:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  40168b:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  40168e:	4c 21 e0             	and    %r12,%rax
  401691:	89 85 78 f2 ff ff    	mov    %eax,-0xd88(%rbp)
  401697:	8b 45 94             	mov    -0x6c(%rbp),%eax
  40169a:	48 ff c0             	inc    %rax
  40169d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4016a4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  4016a8:	48 d3 e0             	shl    %cl,%rax
  4016ab:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4016b2:	48 d3 f8             	sar    %cl,%rax
  4016b5:	8b 04 82             	mov    (%rdx,%rax,4),%eax
  4016b8:	48 25 ff ff df ff    	and    $0xffffffffffdfffff,%rax
  4016be:	48 ff c8             	dec    %rax
  4016c1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4016c8:	48 89 c2             	mov    %rax,%rdx
  4016cb:	48 d3 e2             	shl    %cl,%rdx
  4016ce:	48 63 b5 78 f2 ff ff 	movslq -0xd88(%rbp),%rsi
  4016d5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4016dc:	48 d3 fa             	sar    %cl,%rdx
  4016df:	89 85 74 f2 ff ff    	mov    %eax,-0xd8c(%rbp)
  4016e5:	48 39 f2             	cmp    %rsi,%rdx
  4016e8:	0f 8e 9f 00 00 00    	jle    40178d <mainSort+0x9ed>
  4016ee:	48 63 45 b0          	movslq -0x50(%rbp),%rax
  4016f2:	48 83 f8 04          	cmp    $0x4,%rax
  4016f6:	7c 32                	jl     40172a <mainSort+0x98a>
  4016f8:	48 8b 3d d1 72 02 00 	mov    0x272d1(%rip),%rdi        # 4289d0 <stderr>
  4016ff:	44 8b 8d 74 f2 ff ff 	mov    -0xd8c(%rbp),%r9d
  401706:	8b 85 78 f2 ff ff    	mov    -0xd88(%rbp),%eax
  40170c:	44 8b 85 88 f2 ff ff 	mov    -0xd78(%rbp),%r8d
  401713:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  401716:	8b 55 98             	mov    -0x68(%rbp),%edx
  401719:	49 29 c1             	sub    %rax,%r9
  40171c:	49 ff c1             	inc    %r9
  40171f:	48 31 c0             	xor    %rax,%rax
  401722:	4c 89 f6             	mov    %r14,%rsi
  401725:	e8 ce 85 01 00       	callq  419cf8 <fprintf>
  40172a:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  40172e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  401732:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  401736:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40173a:	44 8b 8d 74 f2 ff ff 	mov    -0xd8c(%rbp),%r9d
  401741:	44 8b 85 78 f2 ff ff 	mov    -0xd88(%rbp),%r8d
  401748:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  40174b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401750:	48 c7 04 24 02 00 00 	movq   $0x2,(%rsp)
  401757:	00 
  401758:	e8 73 05 00 00       	callq  401cd0 <mainQSort3>
  40175d:	8b 85 74 f2 ff ff    	mov    -0xd8c(%rbp),%eax
  401763:	8b 8d 78 f2 ff ff    	mov    -0xd88(%rbp),%ecx
  401769:	8b 95 88 f2 ff ff    	mov    -0xd78(%rbp),%edx
  40176f:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
  401773:	48 29 c8             	sub    %rcx,%rax
  401776:	48 8d 44 10 01       	lea    0x1(%rax,%rdx,1),%rax
  40177b:	89 85 88 f2 ff ff    	mov    %eax,-0xd78(%rbp)
  401781:	48 63 06             	movslq (%rsi),%rax
  401784:	48 85 c0             	test   %rax,%rax
  401787:	0f 88 2c 05 00 00    	js     401cb9 <mainSort+0xf19>
  40178d:	48 63 45 94          	movslq -0x6c(%rbp),%rax
  401791:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  401795:	8b 14 81             	mov    (%rcx,%rax,4),%edx
  401798:	48 81 ca 00 00 20 00 	or     $0x200000,%rdx
  40179f:	89 14 81             	mov    %edx,(%rcx,%rax,4)
  4017a2:	e9 89 fe ff ff       	jmpq   401630 <mainSort+0x890>
  4017a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4017ae:	00 00 
  4017b0:	48 63 45 98          	movslq -0x68(%rbp),%rax
  4017b4:	0f b6 84 05 90 fa ff 	movzbl -0x570(%rbp,%rax,1),%eax
  4017bb:	ff 
  4017bc:	48 85 c0             	test   %rax,%rax
  4017bf:	74 0c                	je     4017cd <mainSort+0xa2d>
  4017c1:	48 c7 c7 ee 03 00 00 	mov    $0x3ee,%rdi
  4017c8:	e8 b3 62 00 00       	callq  407a80 <BZ2_bz__AssertH__fail>
  4017cd:	44 89 7d a0          	mov    %r15d,-0x60(%rbp)
  4017d1:	e9 90 00 00 00       	jmpq   401866 <mainSort+0xac6>
  4017d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4017dd:	00 00 00 
  4017e0:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  4017e4:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4017eb:	48 89 c2             	mov    %rax,%rdx
  4017ee:	48 d3 e2             	shl    %cl,%rdx
  4017f1:	8b 75 98             	mov    -0x68(%rbp),%esi
  4017f4:	48 01 d6             	add    %rdx,%rsi
  4017f7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4017fe:	48 d3 e6             	shl    %cl,%rsi
  401801:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401808:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40180c:	48 d3 fe             	sar    %cl,%rsi
  40180f:	8b 0c b2             	mov    (%rdx,%rsi,4),%ecx
  401812:	4c 21 e1             	and    %r12,%rcx
  401815:	89 8c 85 90 f6 ff ff 	mov    %ecx,-0x970(%rbp,%rax,4)
  40181c:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  401820:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  401827:	48 89 c2             	mov    %rax,%rdx
  40182a:	48 d3 e2             	shl    %cl,%rdx
  40182d:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  401830:	48 8d 54 0a 01       	lea    0x1(%rdx,%rcx,1),%rdx
  401835:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40183c:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  401840:	48 d3 e2             	shl    %cl,%rdx
  401843:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40184a:	48 d3 fa             	sar    %cl,%rdx
  40184d:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
  401850:	8b 55 a0             	mov    -0x60(%rbp),%edx
  401853:	4c 21 e1             	and    %r12,%rcx
  401856:	48 ff c9             	dec    %rcx
  401859:	89 8c 85 90 f2 ff ff 	mov    %ecx,-0xd70(%rbp,%rax,4)
  401860:	48 ff c2             	inc    %rdx
  401863:	89 55 a0             	mov    %edx,-0x60(%rbp)
  401866:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  40186a:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  401870:	0f 8e 6a ff ff ff    	jle    4017e0 <mainSort+0xa40>
  401876:	8b 45 98             	mov    -0x68(%rbp),%eax
  401879:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  401880:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  401884:	48 d3 e0             	shl    %cl,%rax
  401887:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40188e:	48 d3 f8             	sar    %cl,%rax
  401891:	8b 04 82             	mov    (%rdx,%rax,4),%eax
  401894:	4c 21 e0             	and    %r12,%rax
  401897:	eb 0d                	jmp    4018a6 <mainSort+0xb06>
  401899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4018a0:	8b 45 a0             	mov    -0x60(%rbp),%eax
  4018a3:	48 ff c0             	inc    %rax
  4018a6:	89 45 a0             	mov    %eax,-0x60(%rbp)
  4018a9:	48 63 45 98          	movslq -0x68(%rbp),%rax
  4018ad:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  4018b1:	48 63 84 85 90 f6 ff 	movslq -0x970(%rbp,%rax,4),%rax
  4018b8:	ff 
  4018b9:	48 39 c1             	cmp    %rax,%rcx
  4018bc:	0f 8d 8e 00 00 00    	jge    401950 <mainSort+0xbb0>
  4018c2:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  4018c6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4018ca:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  4018cd:	48 ff c8             	dec    %rax
  4018d0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4018d7:	48 89 c2             	mov    %rax,%rdx
  4018da:	48 d3 e2             	shl    %cl,%rdx
  4018dd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4018e4:	48 d3 fa             	sar    %cl,%rdx
  4018e7:	48 85 d2             	test   %rdx,%rdx
  4018ea:	89 45 9c             	mov    %eax,-0x64(%rbp)
  4018ed:	79 0c                	jns    4018fb <mainSort+0xb5b>
  4018ef:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  4018f2:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  4018f5:	48 01 c1             	add    %rax,%rcx
  4018f8:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  4018fb:	48 63 45 9c          	movslq -0x64(%rbp),%rax
  4018ff:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  401903:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
  401907:	88 85 8f f2 ff ff    	mov    %al,-0xd71(%rbp)
  40190d:	0f b6 85 8f f2 ff ff 	movzbl -0xd71(%rbp),%eax
  401914:	0f b6 84 05 90 fa ff 	movzbl -0x570(%rbp,%rax,1),%eax
  40191b:	ff 
  40191c:	48 85 c0             	test   %rax,%rax
  40191f:	0f 85 7b ff ff ff    	jne    4018a0 <mainSort+0xb00>
  401925:	0f b6 85 8f f2 ff ff 	movzbl -0xd71(%rbp),%eax
  40192c:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  40192f:	48 63 94 85 90 f6 ff 	movslq -0x970(%rbp,%rax,4),%rdx
  401936:	ff 
  401937:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40193b:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
  40193f:	89 bc 85 90 f6 ff ff 	mov    %edi,-0x970(%rbp,%rax,4)
  401946:	89 0c 96             	mov    %ecx,(%rsi,%rdx,4)
  401949:	e9 52 ff ff ff       	jmpq   4018a0 <mainSort+0xb00>
  40194e:	66 90                	xchg   %ax,%ax
  401950:	8b 45 98             	mov    -0x68(%rbp),%eax
  401953:	48 ff c0             	inc    %rax
  401956:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  40195d:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  401961:	48 d3 e0             	shl    %cl,%rax
  401964:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40196b:	48 d3 f8             	sar    %cl,%rax
  40196e:	8b 04 82             	mov    (%rdx,%rax,4),%eax
  401971:	4c 21 e0             	and    %r12,%rax
  401974:	eb 0d                	jmp    401983 <mainSort+0xbe3>
  401976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40197d:	00 00 00 
  401980:	8b 45 a0             	mov    -0x60(%rbp),%eax
  401983:	48 ff c8             	dec    %rax
  401986:	89 45 a0             	mov    %eax,-0x60(%rbp)
  401989:	48 63 45 98          	movslq -0x68(%rbp),%rax
  40198d:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401991:	48 63 84 85 90 f2 ff 	movslq -0xd70(%rbp,%rax,4),%rax
  401998:	ff 
  401999:	48 39 c1             	cmp    %rax,%rcx
  40199c:	0f 8e 8e 00 00 00    	jle    401a30 <mainSort+0xc90>
  4019a2:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  4019a6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4019aa:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  4019ad:	48 ff c8             	dec    %rax
  4019b0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4019b7:	48 89 c2             	mov    %rax,%rdx
  4019ba:	48 d3 e2             	shl    %cl,%rdx
  4019bd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4019c4:	48 d3 fa             	sar    %cl,%rdx
  4019c7:	48 85 d2             	test   %rdx,%rdx
  4019ca:	89 45 9c             	mov    %eax,-0x64(%rbp)
  4019cd:	79 0c                	jns    4019db <mainSort+0xc3b>
  4019cf:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  4019d2:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  4019d5:	48 01 c1             	add    %rax,%rcx
  4019d8:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
  4019db:	48 63 45 9c          	movslq -0x64(%rbp),%rax
  4019df:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4019e3:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
  4019e7:	88 85 8f f2 ff ff    	mov    %al,-0xd71(%rbp)
  4019ed:	0f b6 85 8f f2 ff ff 	movzbl -0xd71(%rbp),%eax
  4019f4:	0f b6 84 05 90 fa ff 	movzbl -0x570(%rbp,%rax,1),%eax
  4019fb:	ff 
  4019fc:	48 85 c0             	test   %rax,%rax
  4019ff:	0f 85 7b ff ff ff    	jne    401980 <mainSort+0xbe0>
  401a05:	0f b6 85 8f f2 ff ff 	movzbl -0xd71(%rbp),%eax
  401a0c:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  401a0f:	48 63 94 85 90 f2 ff 	movslq -0xd70(%rbp,%rax,4),%rdx
  401a16:	ff 
  401a17:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  401a1b:	48 8d 7a ff          	lea    -0x1(%rdx),%rdi
  401a1f:	89 bc 85 90 f2 ff ff 	mov    %edi,-0xd70(%rbp,%rax,4)
  401a26:	89 0c 96             	mov    %ecx,(%rsi,%rdx,4)
  401a29:	e9 52 ff ff ff       	jmpq   401980 <mainSort+0xbe0>
  401a2e:	66 90                	xchg   %ax,%ax
  401a30:	48 63 45 98          	movslq -0x68(%rbp),%rax
  401a34:	8b 8c 85 90 f6 ff ff 	mov    -0x970(%rbp,%rax,4),%ecx
  401a3b:	8b 84 85 90 f2 ff ff 	mov    -0xd70(%rbp,%rax,4),%eax
  401a42:	48 ff c9             	dec    %rcx
  401a45:	4c 21 e9             	and    %r13,%rcx
  401a48:	48 39 c1             	cmp    %rax,%rcx
  401a4b:	74 35                	je     401a82 <mainSort+0xce2>
  401a4d:	48 63 45 98          	movslq -0x68(%rbp),%rax
  401a51:	8b 84 85 90 f6 ff ff 	mov    -0x970(%rbp,%rax,4),%eax
  401a58:	48 85 c0             	test   %rax,%rax
  401a5b:	75 19                	jne    401a76 <mainSort+0xcd6>
  401a5d:	48 63 45 98          	movslq -0x68(%rbp),%rax
  401a61:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  401a64:	8b 84 85 90 f2 ff ff 	mov    -0xd70(%rbp,%rax,4),%eax
  401a6b:	48 ff c9             	dec    %rcx
  401a6e:	4c 21 e9             	and    %r13,%rcx
  401a71:	48 39 c8             	cmp    %rcx,%rax
  401a74:	74 0c                	je     401a82 <mainSort+0xce2>
  401a76:	48 c7 c7 ef 03 00 00 	mov    $0x3ef,%rdi
  401a7d:	e8 fe 5f 00 00       	callq  407a80 <BZ2_bz__AssertH__fail>
  401a82:	44 89 7d a0          	mov    %r15d,-0x60(%rbp)
  401a86:	eb 49                	jmp    401ad1 <mainSort+0xd31>
  401a88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401a8f:	00 
  401a90:	8b 45 a0             	mov    -0x60(%rbp),%eax
  401a93:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  401a9a:	48 d3 e0             	shl    %cl,%rax
  401a9d:	8b 55 98             	mov    -0x68(%rbp),%edx
  401aa0:	48 01 c2             	add    %rax,%rdx
  401aa3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401aaa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  401aae:	48 d3 e2             	shl    %cl,%rdx
  401ab1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401ab8:	48 d3 fa             	sar    %cl,%rdx
  401abb:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
  401abe:	48 81 c9 00 00 20 00 	or     $0x200000,%rcx
  401ac5:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  401ac8:	8b 45 a0             	mov    -0x60(%rbp),%eax
  401acb:	48 ff c0             	inc    %rax
  401ace:	89 45 a0             	mov    %eax,-0x60(%rbp)
  401ad1:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  401ad5:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  401adb:	7e b3                	jle    401a90 <mainSort+0xcf0>
  401add:	48 63 45 98          	movslq -0x68(%rbp),%rax
  401ae1:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  401ae5:	88 9c 05 90 fa ff ff 	mov    %bl,-0x570(%rbp,%rax,1)
  401aec:	48 81 f9 fe 00 00 00 	cmp    $0xfe,%rcx
  401af3:	0f 8f 07 fb ff ff    	jg     401600 <mainSort+0x860>
  401af9:	8b 45 98             	mov    -0x68(%rbp),%eax
  401afc:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  401b03:	48 d3 e0             	shl    %cl,%rax
  401b06:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401b0d:	48 d3 f8             	sar    %cl,%rax
  401b10:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  401b14:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  401b17:	8b 55 98             	mov    -0x68(%rbp),%edx
  401b1a:	48 ff c2             	inc    %rdx
  401b1d:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  401b24:	48 d3 e2             	shl    %cl,%rdx
  401b27:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401b2e:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  401b32:	48 d3 fa             	sar    %cl,%rdx
  401b35:	48 25 ff ff df ff    	and    $0xffffffffffdfffff,%rax
  401b3b:	89 85 70 f2 ff ff    	mov    %eax,-0xd90(%rbp)
  401b41:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
  401b44:	4c 21 e1             	and    %r12,%rcx
  401b47:	48 29 c1             	sub    %rax,%rcx
  401b4a:	89 8d 6c f2 ff ff    	mov    %ecx,-0xd94(%rbp)
  401b50:	44 89 bd 68 f2 ff ff 	mov    %r15d,-0xd98(%rbp)
  401b57:	eb 16                	jmp    401b6f <mainSort+0xdcf>
  401b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401b60:	8b 85 68 f2 ff ff    	mov    -0xd98(%rbp),%eax
  401b66:	48 ff c0             	inc    %rax
  401b69:	89 85 68 f2 ff ff    	mov    %eax,-0xd98(%rbp)
  401b6f:	48 63 85 6c f2 ff ff 	movslq -0xd94(%rbp),%rax
  401b76:	8b 8d 68 f2 ff ff    	mov    -0xd98(%rbp),%ecx
  401b7c:	48 d3 f8             	sar    %cl,%rax
  401b7f:	48 3d ff ff 00 00    	cmp    $0xffff,%rax
  401b85:	7d d9                	jge    401b60 <mainSort+0xdc0>
  401b87:	8b 85 6c f2 ff ff    	mov    -0xd94(%rbp),%eax
  401b8d:	eb 04                	jmp    401b93 <mainSort+0xdf3>
  401b8f:	90                   	nop
  401b90:	8b 45 a0             	mov    -0x60(%rbp),%eax
  401b93:	48 ff c8             	dec    %rax
  401b96:	89 45 a0             	mov    %eax,-0x60(%rbp)
  401b99:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  401b9d:	48 85 c0             	test   %rax,%rax
  401ba0:	0f 88 9a 00 00 00    	js     401c40 <mainSort+0xea0>
  401ba6:	8b 85 70 f2 ff ff    	mov    -0xd90(%rbp),%eax
  401bac:	8b 55 a0             	mov    -0x60(%rbp),%edx
  401baf:	48 01 c2             	add    %rax,%rdx
  401bb2:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401bb9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  401bbd:	48 d3 e2             	shl    %cl,%rdx
  401bc0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401bc7:	48 d3 fa             	sar    %cl,%rdx
  401bca:	8b 04 90             	mov    (%rax,%rdx,4),%eax
  401bcd:	89 85 64 f2 ff ff    	mov    %eax,-0xd9c(%rbp)
  401bd3:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  401bd7:	8b 8d 68 f2 ff ff    	mov    -0xd98(%rbp),%ecx
  401bdd:	48 63 95 64 f2 ff ff 	movslq -0xd9c(%rbp),%rdx
  401be4:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  401be8:	48 d3 f8             	sar    %cl,%rax
  401beb:	66 89 85 62 f2 ff ff 	mov    %ax,-0xd9e(%rbp)
  401bf2:	66 89 04 56          	mov    %ax,(%rsi,%rdx,2)
  401bf6:	48 63 85 64 f2 ff ff 	movslq -0xd9c(%rbp),%rax
  401bfd:	48 83 f8 21          	cmp    $0x21,%rax
  401c01:	7f 8d                	jg     401b90 <mainSort+0xdf0>
  401c03:	0f b6 85 62 f2 ff ff 	movzbl -0xd9e(%rbp),%eax
  401c0a:	8b 8d 64 f2 ff ff    	mov    -0xd9c(%rbp),%ecx
  401c10:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  401c13:	48 01 ca             	add    %rcx,%rdx
  401c16:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401c1d:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  401c21:	48 d3 e2             	shl    %cl,%rdx
  401c24:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401c2b:	48 d3 fa             	sar    %cl,%rdx
  401c2e:	66 89 04 56          	mov    %ax,(%rsi,%rdx,2)
  401c32:	e9 59 ff ff ff       	jmpq   401b90 <mainSort+0xdf0>
  401c37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401c3e:	00 00 
  401c40:	8b 95 6c f2 ff ff    	mov    -0xd94(%rbp),%edx
  401c46:	48 ff ca             	dec    %rdx
  401c49:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401c50:	8b 85 68 f2 ff ff    	mov    -0xd98(%rbp),%eax
  401c56:	48 d3 e2             	shl    %cl,%rdx
  401c59:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401c60:	48 d3 fa             	sar    %cl,%rdx
  401c63:	48 89 c1             	mov    %rax,%rcx
  401c66:	48 d3 fa             	sar    %cl,%rdx
  401c69:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
  401c70:	0f 8c 8a f9 ff ff    	jl     401600 <mainSort+0x860>
  401c76:	48 c7 c7 ea 03 00 00 	mov    $0x3ea,%rdi
  401c7d:	e8 fe 5d 00 00       	callq  407a80 <BZ2_bz__AssertH__fail>
  401c82:	e9 79 f9 ff ff       	jmpq   401600 <mainSort+0x860>
  401c87:	48 63 45 b0          	movslq -0x50(%rbp),%rax
  401c8b:	48 83 f8 04          	cmp    $0x4,%rax
  401c8f:	7c 28                	jl     401cb9 <mainSort+0xf19>
  401c91:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  401c94:	8b 8d 88 f2 ff ff    	mov    -0xd78(%rbp),%ecx
  401c9a:	48 8b 3d 2f 6d 02 00 	mov    0x26d2f(%rip),%rdi        # 4289d0 <stderr>
  401ca1:	49 89 d0             	mov    %rdx,%r8
  401ca4:	49 29 c8             	sub    %rcx,%r8
  401ca7:	48 be 2a 5b 42 00 00 	movabs $0x425b2a,%rsi
  401cae:	00 00 00 
  401cb1:	48 31 c0             	xor    %rax,%rax
  401cb4:	e8 3f 80 01 00       	callq  419cf8 <fprintf>
  401cb9:	48 81 c4 88 0d 00 00 	add    $0xd88,%rsp
  401cc0:	5b                   	pop    %rbx
  401cc1:	41 5c                	pop    %r12
  401cc3:	41 5d                	pop    %r13
  401cc5:	41 5e                	pop    %r14
  401cc7:	41 5f                	pop    %r15
  401cc9:	5d                   	pop    %rbp
  401cca:	c3                   	retq   
  401ccb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401cd0 <mainQSort3>:
  401cd0:	55                   	push   %rbp
  401cd1:	48 89 e5             	mov    %rsp,%rbp
  401cd4:	41 56                	push   %r14
  401cd6:	53                   	push   %rbx
  401cd7:	48 81 ec 80 05 00 00 	sub    $0x580,%rsp
  401cde:	48 8b 45 18          	mov    0x18(%rbp),%rax
  401ce2:	48 8b 5d 10          	mov    0x10(%rbp),%rbx
  401ce6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401cea:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  401cee:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  401cf2:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  401cf5:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
  401cf9:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)
  401cfd:	89 5d c8             	mov    %ebx,-0x38(%rbp)
  401d00:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  401d04:	48 31 c0             	xor    %rax,%rax
  401d07:	89 45 a0             	mov    %eax,-0x60(%rbp)
  401d0a:	8b 45 d0             	mov    -0x30(%rbp),%eax
  401d0d:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401d11:	89 84 8d 00 fe ff ff 	mov    %eax,-0x200(%rbp,%rcx,4)
  401d18:	8b 45 cc             	mov    -0x34(%rbp),%eax
  401d1b:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401d1f:	89 84 8d 70 fc ff ff 	mov    %eax,-0x390(%rbp,%rcx,4)
  401d26:	8b 45 c8             	mov    -0x38(%rbp),%eax
  401d29:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401d2d:	8b 55 a0             	mov    -0x60(%rbp),%edx
  401d30:	89 84 8d e0 fa ff ff 	mov    %eax,-0x520(%rbp,%rcx,4)
  401d37:	48 ff c2             	inc    %rdx
  401d3a:	89 55 a0             	mov    %edx,-0x60(%rbp)
  401d3d:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  401d44:	00 00 00 
  401d47:	49 be fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%r14
  401d4e:	ff ff 7f 
  401d51:	e9 ba 00 00 00       	jmpq   401e10 <mainQSort3+0x140>
  401d56:	8b 85 d4 fa ff ff    	mov    -0x52c(%rbp),%eax
  401d5c:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401d60:	89 84 8d 00 fe ff ff 	mov    %eax,-0x200(%rbp,%rcx,4)
  401d67:	8b 85 c8 fa ff ff    	mov    -0x538(%rbp),%eax
  401d6d:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401d71:	89 84 8d 70 fc ff ff 	mov    %eax,-0x390(%rbp,%rcx,4)
  401d78:	8b 85 bc fa ff ff    	mov    -0x544(%rbp),%eax
  401d7e:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401d82:	89 84 8d e0 fa ff ff 	mov    %eax,-0x520(%rbp,%rcx,4)
  401d89:	8b 45 a0             	mov    -0x60(%rbp),%eax
  401d8c:	48 ff c0             	inc    %rax
  401d8f:	89 45 a0             	mov    %eax,-0x60(%rbp)
  401d92:	8b 85 d8 fa ff ff    	mov    -0x528(%rbp),%eax
  401d98:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401d9c:	89 84 8d 00 fe ff ff 	mov    %eax,-0x200(%rbp,%rcx,4)
  401da3:	8b 85 cc fa ff ff    	mov    -0x534(%rbp),%eax
  401da9:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401dad:	89 84 8d 70 fc ff ff 	mov    %eax,-0x390(%rbp,%rcx,4)
  401db4:	8b 85 c0 fa ff ff    	mov    -0x540(%rbp),%eax
  401dba:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401dbe:	89 84 8d e0 fa ff ff 	mov    %eax,-0x520(%rbp,%rcx,4)
  401dc5:	8b 45 a0             	mov    -0x60(%rbp),%eax
  401dc8:	48 ff c0             	inc    %rax
  401dcb:	89 45 a0             	mov    %eax,-0x60(%rbp)
  401dce:	8b 85 dc fa ff ff    	mov    -0x524(%rbp),%eax
  401dd4:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401dd8:	89 84 8d 00 fe ff ff 	mov    %eax,-0x200(%rbp,%rcx,4)
  401ddf:	8b 85 d0 fa ff ff    	mov    -0x530(%rbp),%eax
  401de5:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401de9:	8b 95 c4 fa ff ff    	mov    -0x53c(%rbp),%edx
  401def:	8b 75 a0             	mov    -0x60(%rbp),%esi
  401df2:	48 63 7d a0          	movslq -0x60(%rbp),%rdi
  401df6:	89 84 8d 70 fc ff ff 	mov    %eax,-0x390(%rbp,%rcx,4)
  401dfd:	89 94 bd e0 fa ff ff 	mov    %edx,-0x520(%rbp,%rdi,4)
  401e04:	48 ff c6             	inc    %rsi
  401e07:	89 75 a0             	mov    %esi,-0x60(%rbp)
  401e0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401e10:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  401e14:	48 85 c0             	test   %rax,%rax
  401e17:	0f 8e c0 07 00 00    	jle    4025dd <mainQSort3+0x90d>
  401e1d:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  401e21:	48 83 f8 64          	cmp    $0x64,%rax
  401e25:	7c 0c                	jl     401e33 <mainQSort3+0x163>
  401e27:	48 c7 c7 e9 03 00 00 	mov    $0x3e9,%rdi
  401e2e:	e8 4d 5c 00 00       	callq  407a80 <BZ2_bz__AssertH__fail>
  401e33:	8b 45 a0             	mov    -0x60(%rbp),%eax
  401e36:	48 ff c8             	dec    %rax
  401e39:	89 45 a0             	mov    %eax,-0x60(%rbp)
  401e3c:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  401e40:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  401e44:	8b 84 85 00 fe ff ff 	mov    -0x200(%rbp,%rax,4),%eax
  401e4b:	89 45 9c             	mov    %eax,-0x64(%rbp)
  401e4e:	8b 84 8d 70 fc ff ff 	mov    -0x390(%rbp,%rcx,4),%eax
  401e55:	89 45 98             	mov    %eax,-0x68(%rbp)
  401e58:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  401e5c:	8b 84 85 e0 fa ff ff 	mov    -0x520(%rbp,%rax,4),%eax
  401e63:	8b 55 98             	mov    -0x68(%rbp),%edx
  401e66:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  401e69:	89 45 94             	mov    %eax,-0x6c(%rbp)
  401e6c:	48 29 ca             	sub    %rcx,%rdx
  401e6f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401e76:	48 d3 e2             	shl    %cl,%rdx
  401e79:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401e80:	48 d3 fa             	sar    %cl,%rdx
  401e83:	48 83 fa 14          	cmp    $0x14,%rdx
  401e87:	7c 0a                	jl     401e93 <mainQSort3+0x1c3>
  401e89:	48 63 45 94          	movslq -0x6c(%rbp),%rax
  401e8d:	48 83 f8 0f          	cmp    $0xf,%rax
  401e91:	7c 4d                	jl     401ee0 <mainQSort3+0x210>
  401e93:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  401e97:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  401e9b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  401e9f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  401ea3:	44 8b 4d 98          	mov    -0x68(%rbp),%r9d
  401ea7:	44 8b 45 9c          	mov    -0x64(%rbp),%r8d
  401eab:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  401eae:	44 8b 55 94          	mov    -0x6c(%rbp),%r10d
  401eb2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401eb7:	4c 89 14 24          	mov    %r10,(%rsp)
  401ebb:	e8 30 07 00 00       	callq  4025f0 <mainSimpleSort>
  401ec0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  401ec4:	48 63 00             	movslq (%rax),%rax
  401ec7:	48 85 c0             	test   %rax,%rax
  401eca:	0f 89 40 ff ff ff    	jns    401e10 <mainQSort3+0x140>
  401ed0:	e9 08 07 00 00       	jmpq   4025dd <mainQSort3+0x90d>
  401ed5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  401edc:	00 00 00 00 
  401ee0:	48 63 45 9c          	movslq -0x64(%rbp),%rax
  401ee4:	4c 8b 4d e8          	mov    -0x18(%rbp),%r9
  401ee8:	41 8b 3c 81          	mov    (%r9,%rax,4),%edi
  401eec:	44 8b 45 94          	mov    -0x6c(%rbp),%r8d
  401ef0:	4c 01 c7             	add    %r8,%rdi
  401ef3:	48 21 df             	and    %rbx,%rdi
  401ef6:	48 63 4d 98          	movslq -0x68(%rbp),%rcx
  401efa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  401efe:	41 8b 34 89          	mov    (%r9,%rcx,4),%esi
  401f02:	4c 01 c6             	add    %r8,%rsi
  401f05:	48 01 c8             	add    %rcx,%rax
  401f08:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401f0f:	48 d3 e0             	shl    %cl,%rax
  401f12:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  401f19:	48 d3 f8             	sar    %cl,%rax
  401f1c:	4c 21 f0             	and    %r14,%rax
  401f1f:	41 8b 04 41          	mov    (%r9,%rax,2),%eax
  401f23:	48 21 de             	and    %rbx,%rsi
  401f26:	4c 01 c0             	add    %r8,%rax
  401f29:	48 21 d8             	and    %rbx,%rax
  401f2c:	0f b6 34 32          	movzbl (%rdx,%rsi,1),%esi
  401f30:	0f b6 3c 3a          	movzbl (%rdx,%rdi,1),%edi
  401f34:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
  401f38:	e8 b3 0a 00 00       	callq  4029f0 <mmed3>
  401f3d:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  401f40:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  401f43:	8b 45 98             	mov    -0x68(%rbp),%eax
  401f46:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
  401f49:	89 4d bc             	mov    %ecx,-0x44(%rbp)
  401f4c:	89 45 b0             	mov    %eax,-0x50(%rbp)
  401f4f:	89 45 b8             	mov    %eax,-0x48(%rbp)
  401f52:	eb 52                	jmp    401fa6 <mainQSort3+0x2d6>
  401f54:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  401f5b:	00 00 00 00 00 
  401f60:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  401f64:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  401f68:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  401f6b:	48 63 4d b8          	movslq -0x48(%rbp),%rcx
  401f6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  401f73:	89 85 b0 fa ff ff    	mov    %eax,-0x550(%rbp)
  401f79:	8b 04 8a             	mov    (%rdx,%rcx,4),%eax
  401f7c:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  401f80:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  401f83:	8b 85 b0 fa ff ff    	mov    -0x550(%rbp),%eax
  401f89:	48 63 4d b8          	movslq -0x48(%rbp),%rcx
  401f8d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  401f91:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  401f94:	8b 45 bc             	mov    -0x44(%rbp),%eax
  401f97:	8b 4d b8             	mov    -0x48(%rbp),%ecx
  401f9a:	48 ff c0             	inc    %rax
  401f9d:	89 45 bc             	mov    %eax,-0x44(%rbp)
  401fa0:	48 ff c9             	dec    %rcx
  401fa3:	89 4d b8             	mov    %ecx,-0x48(%rbp)
  401fa6:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  401faa:	48 63 4d b8          	movslq -0x48(%rbp),%rcx
  401fae:	48 39 c8             	cmp    %rcx,%rax
  401fb1:	0f 8f df 00 00 00    	jg     402096 <mainQSort3+0x3c6>
  401fb7:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  401fbb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  401fbf:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  401fc2:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  401fc5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  401fc9:	48 01 c1             	add    %rax,%rcx
  401fcc:	48 21 d9             	and    %rbx,%rcx
  401fcf:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  401fd3:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  401fd6:	48 29 c8             	sub    %rcx,%rax
  401fd9:	48 85 d8             	test   %rbx,%rax
  401fdc:	89 45 ac             	mov    %eax,-0x54(%rbp)
  401fdf:	75 4f                	jne    402030 <mainQSort3+0x360>
  401fe1:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  401fe5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  401fe9:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  401fec:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  401ff0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  401ff4:	89 85 b8 fa ff ff    	mov    %eax,-0x548(%rbp)
  401ffa:	8b 04 8a             	mov    (%rdx,%rcx,4),%eax
  401ffd:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  402001:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  402004:	8b 85 b8 fa ff ff    	mov    -0x548(%rbp),%eax
  40200a:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  40200e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402012:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  402015:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  402018:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  40201b:	48 ff c0             	inc    %rax
  40201e:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  402021:	48 ff c1             	inc    %rcx
  402024:	89 4d bc             	mov    %ecx,-0x44(%rbp)
  402027:	e9 7a ff ff ff       	jmpq   401fa6 <mainQSort3+0x2d6>
  40202c:	0f 1f 40 00          	nopl   0x0(%rax)
  402030:	48 63 45 ac          	movslq -0x54(%rbp),%rax
  402034:	48 85 c0             	test   %rax,%rax
  402037:	7f 5d                	jg     402096 <mainQSort3+0x3c6>
  402039:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40203c:	48 ff c0             	inc    %rax
  40203f:	89 45 bc             	mov    %eax,-0x44(%rbp)
  402042:	e9 5f ff ff ff       	jmpq   401fa6 <mainQSort3+0x2d6>
  402047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40204e:	00 00 
  402050:	48 63 45 b8          	movslq -0x48(%rbp),%rax
  402054:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  402058:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  40205b:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40205f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402063:	89 85 b4 fa ff ff    	mov    %eax,-0x54c(%rbp)
  402069:	8b 04 8a             	mov    (%rdx,%rcx,4),%eax
  40206c:	48 63 4d b8          	movslq -0x48(%rbp),%rcx
  402070:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  402073:	8b 85 b4 fa ff ff    	mov    -0x54c(%rbp),%eax
  402079:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40207d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402081:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  402084:	8b 45 b0             	mov    -0x50(%rbp),%eax
  402087:	8b 4d b8             	mov    -0x48(%rbp),%ecx
  40208a:	48 ff c8             	dec    %rax
  40208d:	89 45 b0             	mov    %eax,-0x50(%rbp)
  402090:	48 ff c9             	dec    %rcx
  402093:	89 4d b8             	mov    %ecx,-0x48(%rbp)
  402096:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  40209a:	48 63 4d b8          	movslq -0x48(%rbp),%rcx
  40209e:	48 39 c8             	cmp    %rcx,%rax
  4020a1:	7f 4d                	jg     4020f0 <mainQSort3+0x420>
  4020a3:	48 63 45 b8          	movslq -0x48(%rbp),%rax
  4020a7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4020ab:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  4020ae:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  4020b1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4020b5:	48 01 c1             	add    %rax,%rcx
  4020b8:	48 21 d9             	and    %rbx,%rcx
  4020bb:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  4020bf:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  4020c2:	48 29 c8             	sub    %rcx,%rax
  4020c5:	48 85 d8             	test   %rbx,%rax
  4020c8:	89 45 ac             	mov    %eax,-0x54(%rbp)
  4020cb:	74 83                	je     402050 <mainQSort3+0x380>
  4020cd:	48 63 45 ac          	movslq -0x54(%rbp),%rax
  4020d1:	48 85 c0             	test   %rax,%rax
  4020d4:	78 1a                	js     4020f0 <mainQSort3+0x420>
  4020d6:	8b 45 b8             	mov    -0x48(%rbp),%eax
  4020d9:	48 ff c8             	dec    %rax
  4020dc:	89 45 b8             	mov    %eax,-0x48(%rbp)
  4020df:	eb b5                	jmp    402096 <mainQSort3+0x3c6>
  4020e1:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4020e8:	0f 1f 84 00 00 00 00 
  4020ef:	00 
  4020f0:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  4020f4:	48 63 4d b8          	movslq -0x48(%rbp),%rcx
  4020f8:	48 39 c8             	cmp    %rcx,%rax
  4020fb:	0f 8e 5f fe ff ff    	jle    401f60 <mainQSort3+0x290>
  402101:	48 63 45 b0          	movslq -0x50(%rbp),%rax
  402105:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  402109:	48 39 c8             	cmp    %rcx,%rax
  40210c:	7d 3b                	jge    402149 <mainQSort3+0x479>
  40210e:	8b 45 9c             	mov    -0x64(%rbp),%eax
  402111:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  402115:	89 84 8d 00 fe ff ff 	mov    %eax,-0x200(%rbp,%rcx,4)
  40211c:	8b 45 98             	mov    -0x68(%rbp),%eax
  40211f:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  402123:	89 84 8d 70 fc ff ff 	mov    %eax,-0x390(%rbp,%rcx,4)
  40212a:	8b 45 94             	mov    -0x6c(%rbp),%eax
  40212d:	8b 4d a0             	mov    -0x60(%rbp),%ecx
  402130:	48 63 55 a0          	movslq -0x60(%rbp),%rdx
  402134:	48 ff c0             	inc    %rax
  402137:	89 84 95 e0 fa ff ff 	mov    %eax,-0x520(%rbp,%rdx,4)
  40213e:	48 ff c1             	inc    %rcx
  402141:	89 4d a0             	mov    %ecx,-0x60(%rbp)
  402144:	e9 c7 fc ff ff       	jmpq   401e10 <mainQSort3+0x140>
  402149:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  40214c:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  40214f:	48 89 c2             	mov    %rax,%rdx
  402152:	48 29 ca             	sub    %rcx,%rdx
  402155:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40215c:	48 d3 e2             	shl    %cl,%rdx
  40215f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402166:	8b 75 bc             	mov    -0x44(%rbp),%esi
  402169:	48 d3 fa             	sar    %cl,%rdx
  40216c:	48 29 c6             	sub    %rax,%rsi
  40216f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402176:	48 d3 e6             	shl    %cl,%rsi
  402179:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402180:	48 d3 fe             	sar    %cl,%rsi
  402183:	48 39 f2             	cmp    %rsi,%rdx
  402186:	7d 08                	jge    402190 <mainQSort3+0x4c0>
  402188:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  40218b:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  40218e:	eb 06                	jmp    402196 <mainQSort3+0x4c6>
  402190:	8b 45 bc             	mov    -0x44(%rbp),%eax
  402193:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  402196:	48 29 c8             	sub    %rcx,%rax
  402199:	89 45 ac             	mov    %eax,-0x54(%rbp)
  40219c:	8b 45 9c             	mov    -0x64(%rbp),%eax
  40219f:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  4021a2:	8b 55 ac             	mov    -0x54(%rbp),%edx
  4021a5:	8b 75 ac             	mov    -0x54(%rbp),%esi
  4021a8:	89 85 ac fa ff ff    	mov    %eax,-0x554(%rbp)
  4021ae:	48 29 d1             	sub    %rdx,%rcx
  4021b1:	89 8d a8 fa ff ff    	mov    %ecx,-0x558(%rbp)
  4021b7:	89 b5 a4 fa ff ff    	mov    %esi,-0x55c(%rbp)
  4021bd:	eb 6e                	jmp    40222d <mainQSort3+0x55d>
  4021bf:	90                   	nop
  4021c0:	48 63 85 ac fa ff ff 	movslq -0x554(%rbp),%rax
  4021c7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4021cb:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  4021ce:	48 63 8d a8 fa ff ff 	movslq -0x558(%rbp),%rcx
  4021d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4021d9:	89 85 a0 fa ff ff    	mov    %eax,-0x560(%rbp)
  4021df:	8b 04 8a             	mov    (%rdx,%rcx,4),%eax
  4021e2:	48 63 8d ac fa ff ff 	movslq -0x554(%rbp),%rcx
  4021e9:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4021ec:	8b 85 a0 fa ff ff    	mov    -0x560(%rbp),%eax
  4021f2:	48 63 8d a8 fa ff ff 	movslq -0x558(%rbp),%rcx
  4021f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4021fd:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  402200:	8b 85 ac fa ff ff    	mov    -0x554(%rbp),%eax
  402206:	48 ff c0             	inc    %rax
  402209:	8b 8d a8 fa ff ff    	mov    -0x558(%rbp),%ecx
  40220f:	8b 95 a4 fa ff ff    	mov    -0x55c(%rbp),%edx
  402215:	89 85 ac fa ff ff    	mov    %eax,-0x554(%rbp)
  40221b:	48 ff c1             	inc    %rcx
  40221e:	89 8d a8 fa ff ff    	mov    %ecx,-0x558(%rbp)
  402224:	48 ff ca             	dec    %rdx
  402227:	89 95 a4 fa ff ff    	mov    %edx,-0x55c(%rbp)
  40222d:	48 63 85 a4 fa ff ff 	movslq -0x55c(%rbp),%rax
  402234:	48 85 c0             	test   %rax,%rax
  402237:	7f 87                	jg     4021c0 <mainQSort3+0x4f0>
  402239:	8b 45 98             	mov    -0x68(%rbp),%eax
  40223c:	8b 55 b0             	mov    -0x50(%rbp),%edx
  40223f:	48 29 d0             	sub    %rdx,%rax
  402242:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402249:	48 d3 e0             	shl    %cl,%rax
  40224c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402253:	8b 75 b8             	mov    -0x48(%rbp),%esi
  402256:	48 d3 f8             	sar    %cl,%rax
  402259:	48 29 f2             	sub    %rsi,%rdx
  40225c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402263:	48 d3 e2             	shl    %cl,%rdx
  402266:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40226d:	48 d3 fa             	sar    %cl,%rdx
  402270:	48 39 d0             	cmp    %rdx,%rax
  402273:	7d 08                	jge    40227d <mainQSort3+0x5ad>
  402275:	8b 45 98             	mov    -0x68(%rbp),%eax
  402278:	8b 4d b0             	mov    -0x50(%rbp),%ecx
  40227b:	eb 06                	jmp    402283 <mainQSort3+0x5b3>
  40227d:	8b 45 b0             	mov    -0x50(%rbp),%eax
  402280:	8b 4d b8             	mov    -0x48(%rbp),%ecx
  402283:	48 29 c8             	sub    %rcx,%rax
  402286:	89 45 a8             	mov    %eax,-0x58(%rbp)
  402289:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40228c:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  40228f:	8b 55 a8             	mov    -0x58(%rbp),%edx
  402292:	89 85 9c fa ff ff    	mov    %eax,-0x564(%rbp)
  402298:	8b 45 a8             	mov    -0x58(%rbp),%eax
  40229b:	48 29 d1             	sub    %rdx,%rcx
  40229e:	48 ff c1             	inc    %rcx
  4022a1:	89 8d 98 fa ff ff    	mov    %ecx,-0x568(%rbp)
  4022a7:	89 85 94 fa ff ff    	mov    %eax,-0x56c(%rbp)
  4022ad:	eb 6e                	jmp    40231d <mainQSort3+0x64d>
  4022af:	90                   	nop
  4022b0:	48 63 85 9c fa ff ff 	movslq -0x564(%rbp),%rax
  4022b7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4022bb:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  4022be:	48 63 8d 98 fa ff ff 	movslq -0x568(%rbp),%rcx
  4022c5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4022c9:	89 85 90 fa ff ff    	mov    %eax,-0x570(%rbp)
  4022cf:	8b 04 8a             	mov    (%rdx,%rcx,4),%eax
  4022d2:	48 63 8d 9c fa ff ff 	movslq -0x564(%rbp),%rcx
  4022d9:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4022dc:	8b 85 90 fa ff ff    	mov    -0x570(%rbp),%eax
  4022e2:	48 63 8d 98 fa ff ff 	movslq -0x568(%rbp),%rcx
  4022e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4022ed:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4022f0:	8b 85 9c fa ff ff    	mov    -0x564(%rbp),%eax
  4022f6:	48 ff c0             	inc    %rax
  4022f9:	8b 8d 98 fa ff ff    	mov    -0x568(%rbp),%ecx
  4022ff:	8b 95 94 fa ff ff    	mov    -0x56c(%rbp),%edx
  402305:	89 85 9c fa ff ff    	mov    %eax,-0x564(%rbp)
  40230b:	48 ff c1             	inc    %rcx
  40230e:	89 8d 98 fa ff ff    	mov    %ecx,-0x568(%rbp)
  402314:	48 ff ca             	dec    %rdx
  402317:	89 95 94 fa ff ff    	mov    %edx,-0x56c(%rbp)
  40231d:	48 63 85 94 fa ff ff 	movslq -0x56c(%rbp),%rax
  402324:	48 85 c0             	test   %rax,%rax
  402327:	7f 87                	jg     4022b0 <mainQSort3+0x5e0>
  402329:	8b 45 9c             	mov    -0x64(%rbp),%eax
  40232c:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  40232f:	48 01 c1             	add    %rax,%rcx
  402332:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  402335:	48 29 c1             	sub    %rax,%rcx
  402338:	48 ff c9             	dec    %rcx
  40233b:	89 4d ac             	mov    %ecx,-0x54(%rbp)
  40233e:	8b 45 98             	mov    -0x68(%rbp),%eax
  402341:	8b 4d b0             	mov    -0x50(%rbp),%ecx
  402344:	8b 55 b8             	mov    -0x48(%rbp),%edx
  402347:	48 29 d1             	sub    %rdx,%rcx
  40234a:	48 f7 d9             	neg    %rcx
  40234d:	48 8d 44 08 01       	lea    0x1(%rax,%rcx,1),%rax
  402352:	89 45 a8             	mov    %eax,-0x58(%rbp)
  402355:	8b 45 9c             	mov    -0x64(%rbp),%eax
  402358:	89 85 d4 fa ff ff    	mov    %eax,-0x52c(%rbp)
  40235e:	8b 45 ac             	mov    -0x54(%rbp),%eax
  402361:	89 85 c8 fa ff ff    	mov    %eax,-0x538(%rbp)
  402367:	8b 45 94             	mov    -0x6c(%rbp),%eax
  40236a:	89 85 bc fa ff ff    	mov    %eax,-0x544(%rbp)
  402370:	8b 45 a8             	mov    -0x58(%rbp),%eax
  402373:	89 85 d8 fa ff ff    	mov    %eax,-0x528(%rbp)
  402379:	8b 45 98             	mov    -0x68(%rbp),%eax
  40237c:	89 85 cc fa ff ff    	mov    %eax,-0x534(%rbp)
  402382:	8b 45 94             	mov    -0x6c(%rbp),%eax
  402385:	89 85 c0 fa ff ff    	mov    %eax,-0x540(%rbp)
  40238b:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40238e:	48 ff c0             	inc    %rax
  402391:	89 85 dc fa ff ff    	mov    %eax,-0x524(%rbp)
  402397:	8b 45 a8             	mov    -0x58(%rbp),%eax
  40239a:	48 ff c8             	dec    %rax
  40239d:	89 85 d0 fa ff ff    	mov    %eax,-0x530(%rbp)
  4023a3:	8b 45 94             	mov    -0x6c(%rbp),%eax
  4023a6:	48 ff c0             	inc    %rax
  4023a9:	89 85 c4 fa ff ff    	mov    %eax,-0x53c(%rbp)
  4023af:	8b 85 c8 fa ff ff    	mov    -0x538(%rbp),%eax
  4023b5:	8b 8d d4 fa ff ff    	mov    -0x52c(%rbp),%ecx
  4023bb:	48 29 c8             	sub    %rcx,%rax
  4023be:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4023c5:	48 d3 e0             	shl    %cl,%rax
  4023c8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4023cf:	8b 95 cc fa ff ff    	mov    -0x534(%rbp),%edx
  4023d5:	8b b5 d8 fa ff ff    	mov    -0x528(%rbp),%esi
  4023db:	48 d3 f8             	sar    %cl,%rax
  4023de:	48 29 f2             	sub    %rsi,%rdx
  4023e1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4023e8:	48 d3 e2             	shl    %cl,%rdx
  4023eb:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4023f2:	48 d3 fa             	sar    %cl,%rdx
  4023f5:	48 39 d0             	cmp    %rdx,%rax
  4023f8:	7d 6c                	jge    402466 <mainQSort3+0x796>
  4023fa:	8b 85 d4 fa ff ff    	mov    -0x52c(%rbp),%eax
  402400:	89 85 8c fa ff ff    	mov    %eax,-0x574(%rbp)
  402406:	8b 85 d8 fa ff ff    	mov    -0x528(%rbp),%eax
  40240c:	89 85 d4 fa ff ff    	mov    %eax,-0x52c(%rbp)
  402412:	8b 85 8c fa ff ff    	mov    -0x574(%rbp),%eax
  402418:	89 85 d8 fa ff ff    	mov    %eax,-0x528(%rbp)
  40241e:	8b 85 c8 fa ff ff    	mov    -0x538(%rbp),%eax
  402424:	89 85 8c fa ff ff    	mov    %eax,-0x574(%rbp)
  40242a:	8b 85 bc fa ff ff    	mov    -0x544(%rbp),%eax
  402430:	8b 8d cc fa ff ff    	mov    -0x534(%rbp),%ecx
  402436:	8b 95 8c fa ff ff    	mov    -0x574(%rbp),%edx
  40243c:	89 85 8c fa ff ff    	mov    %eax,-0x574(%rbp)
  402442:	8b 85 c0 fa ff ff    	mov    -0x540(%rbp),%eax
  402448:	8b b5 8c fa ff ff    	mov    -0x574(%rbp),%esi
  40244e:	89 8d c8 fa ff ff    	mov    %ecx,-0x538(%rbp)
  402454:	89 95 cc fa ff ff    	mov    %edx,-0x534(%rbp)
  40245a:	89 85 bc fa ff ff    	mov    %eax,-0x544(%rbp)
  402460:	89 b5 c0 fa ff ff    	mov    %esi,-0x540(%rbp)
  402466:	8b 85 cc fa ff ff    	mov    -0x534(%rbp),%eax
  40246c:	8b 8d d8 fa ff ff    	mov    -0x528(%rbp),%ecx
  402472:	48 29 c8             	sub    %rcx,%rax
  402475:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40247c:	48 d3 e0             	shl    %cl,%rax
  40247f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402486:	8b 95 d0 fa ff ff    	mov    -0x530(%rbp),%edx
  40248c:	8b b5 dc fa ff ff    	mov    -0x524(%rbp),%esi
  402492:	48 d3 f8             	sar    %cl,%rax
  402495:	48 29 f2             	sub    %rsi,%rdx
  402498:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40249f:	48 d3 e2             	shl    %cl,%rdx
  4024a2:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4024a9:	48 d3 fa             	sar    %cl,%rdx
  4024ac:	48 39 d0             	cmp    %rdx,%rax
  4024af:	7d 6c                	jge    40251d <mainQSort3+0x84d>
  4024b1:	8b 85 d8 fa ff ff    	mov    -0x528(%rbp),%eax
  4024b7:	89 85 88 fa ff ff    	mov    %eax,-0x578(%rbp)
  4024bd:	8b 85 dc fa ff ff    	mov    -0x524(%rbp),%eax
  4024c3:	89 85 d8 fa ff ff    	mov    %eax,-0x528(%rbp)
  4024c9:	8b 85 88 fa ff ff    	mov    -0x578(%rbp),%eax
  4024cf:	89 85 dc fa ff ff    	mov    %eax,-0x524(%rbp)
  4024d5:	8b 85 cc fa ff ff    	mov    -0x534(%rbp),%eax
  4024db:	89 85 88 fa ff ff    	mov    %eax,-0x578(%rbp)
  4024e1:	8b 85 c0 fa ff ff    	mov    -0x540(%rbp),%eax
  4024e7:	8b 8d d0 fa ff ff    	mov    -0x530(%rbp),%ecx
  4024ed:	8b 95 88 fa ff ff    	mov    -0x578(%rbp),%edx
  4024f3:	89 85 88 fa ff ff    	mov    %eax,-0x578(%rbp)
  4024f9:	8b 85 c4 fa ff ff    	mov    -0x53c(%rbp),%eax
  4024ff:	8b b5 88 fa ff ff    	mov    -0x578(%rbp),%esi
  402505:	89 8d cc fa ff ff    	mov    %ecx,-0x534(%rbp)
  40250b:	89 95 d0 fa ff ff    	mov    %edx,-0x530(%rbp)
  402511:	89 85 c0 fa ff ff    	mov    %eax,-0x540(%rbp)
  402517:	89 b5 c4 fa ff ff    	mov    %esi,-0x53c(%rbp)
  40251d:	8b 85 c8 fa ff ff    	mov    -0x538(%rbp),%eax
  402523:	8b 8d d4 fa ff ff    	mov    -0x52c(%rbp),%ecx
  402529:	48 29 c8             	sub    %rcx,%rax
  40252c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402533:	48 d3 e0             	shl    %cl,%rax
  402536:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40253d:	8b 95 cc fa ff ff    	mov    -0x534(%rbp),%edx
  402543:	8b b5 d8 fa ff ff    	mov    -0x528(%rbp),%esi
  402549:	48 d3 f8             	sar    %cl,%rax
  40254c:	48 29 f2             	sub    %rsi,%rdx
  40254f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402556:	48 d3 e2             	shl    %cl,%rdx
  402559:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402560:	48 d3 fa             	sar    %cl,%rdx
  402563:	48 39 d0             	cmp    %rdx,%rax
  402566:	0f 8d ea f7 ff ff    	jge    401d56 <mainQSort3+0x86>
  40256c:	8b 85 d4 fa ff ff    	mov    -0x52c(%rbp),%eax
  402572:	89 85 84 fa ff ff    	mov    %eax,-0x57c(%rbp)
  402578:	8b 85 d8 fa ff ff    	mov    -0x528(%rbp),%eax
  40257e:	89 85 d4 fa ff ff    	mov    %eax,-0x52c(%rbp)
  402584:	8b 85 84 fa ff ff    	mov    -0x57c(%rbp),%eax
  40258a:	89 85 d8 fa ff ff    	mov    %eax,-0x528(%rbp)
  402590:	8b 85 c8 fa ff ff    	mov    -0x538(%rbp),%eax
  402596:	89 85 84 fa ff ff    	mov    %eax,-0x57c(%rbp)
  40259c:	8b 85 bc fa ff ff    	mov    -0x544(%rbp),%eax
  4025a2:	8b 8d cc fa ff ff    	mov    -0x534(%rbp),%ecx
  4025a8:	8b 95 84 fa ff ff    	mov    -0x57c(%rbp),%edx
  4025ae:	89 85 84 fa ff ff    	mov    %eax,-0x57c(%rbp)
  4025b4:	8b 85 c0 fa ff ff    	mov    -0x540(%rbp),%eax
  4025ba:	8b b5 84 fa ff ff    	mov    -0x57c(%rbp),%esi
  4025c0:	89 8d c8 fa ff ff    	mov    %ecx,-0x538(%rbp)
  4025c6:	89 95 cc fa ff ff    	mov    %edx,-0x534(%rbp)
  4025cc:	89 85 bc fa ff ff    	mov    %eax,-0x544(%rbp)
  4025d2:	89 b5 c0 fa ff ff    	mov    %esi,-0x540(%rbp)
  4025d8:	e9 79 f7 ff ff       	jmpq   401d56 <mainQSort3+0x86>
  4025dd:	48 81 c4 80 05 00 00 	add    $0x580,%rsp
  4025e4:	5b                   	pop    %rbx
  4025e5:	41 5e                	pop    %r14
  4025e7:	5d                   	pop    %rbp
  4025e8:	c3                   	retq   
  4025e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004025f0 <mainSimpleSort>:
  4025f0:	55                   	push   %rbp
  4025f1:	48 89 e5             	mov    %rsp,%rbp
  4025f4:	48 83 ec 50          	sub    $0x50,%rsp
  4025f8:	4c 8b 55 18          	mov    0x18(%rbp),%r10
  4025fc:	48 8b 45 10          	mov    0x10(%rbp),%rax
  402600:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  402604:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  402608:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40260c:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  40260f:	44 89 45 e0          	mov    %r8d,-0x20(%rbp)
  402613:	44 89 4d dc          	mov    %r9d,-0x24(%rbp)
  402617:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40261a:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  40261d:	89 45 d8             	mov    %eax,-0x28(%rbp)
  402620:	4c 89 55 d0          	mov    %r10,-0x30(%rbp)
  402624:	48 29 ca             	sub    %rcx,%rdx
  402627:	48 ff c2             	inc    %rdx
  40262a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402631:	48 89 d0             	mov    %rdx,%rax
  402634:	48 d3 e0             	shl    %cl,%rax
  402637:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40263e:	48 d3 f8             	sar    %cl,%rax
  402641:	48 83 f8 02          	cmp    $0x2,%rax
  402645:	89 55 c0             	mov    %edx,-0x40(%rbp)
  402648:	0f 8c 99 03 00 00    	jl     4029e7 <mainSimpleSort+0x3f7>
  40264e:	48 31 c0             	xor    %rax,%rax
  402651:	eb 13                	jmp    402666 <mainSimpleSort+0x76>
  402653:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40265a:	84 00 00 00 00 00 
  402660:	8b 45 bc             	mov    -0x44(%rbp),%eax
  402663:	48 ff c0             	inc    %rax
  402666:	89 45 bc             	mov    %eax,-0x44(%rbp)
  402669:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  40266d:	48 63 04 85 d0 a7 62 	movslq 0x62a7d0(,%rax,4),%rax
  402674:	00 
  402675:	48 63 4d c0          	movslq -0x40(%rbp),%rcx
  402679:	48 39 c8             	cmp    %rcx,%rax
  40267c:	7c e2                	jl     402660 <mainSimpleSort+0x70>
  40267e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  402681:	48 ff c8             	dec    %rax
  402684:	89 45 bc             	mov    %eax,-0x44(%rbp)
  402687:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  40268b:	48 85 c0             	test   %rax,%rax
  40268e:	0f 88 53 03 00 00    	js     4029e7 <mainSimpleSort+0x3f7>
  402694:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  402698:	8b 04 85 d0 a7 62 00 	mov    0x62a7d0(,%rax,4),%eax
  40269f:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  4026a2:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  4026a5:	48 01 c1             	add    %rax,%rcx
  4026a8:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  4026ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4026b0:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  4026b4:	48 63 4d dc          	movslq -0x24(%rbp),%rcx
  4026b8:	48 39 c8             	cmp    %rcx,%rax
  4026bb:	7f c1                	jg     40267e <mainSimpleSort+0x8e>
  4026bd:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  4026c1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4026c5:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  4026c8:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  4026cb:	89 45 b8             	mov    %eax,-0x48(%rbp)
  4026ce:	89 4d c8             	mov    %ecx,-0x38(%rbp)
  4026d1:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4026d8:	0f 1f 84 00 00 00 00 
  4026df:	00 
  4026e0:	8b 45 c8             	mov    -0x38(%rbp),%eax
  4026e3:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  4026e6:	48 29 c8             	sub    %rcx,%rax
  4026e9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4026f0:	48 d3 e0             	shl    %cl,%rax
  4026f3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4026fa:	48 d3 f8             	sar    %cl,%rax
  4026fd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  402701:	8b 3c 81             	mov    (%rcx,%rax,4),%edi
  402704:	8b 45 d8             	mov    -0x28(%rbp),%eax
  402707:	8b 75 b8             	mov    -0x48(%rbp),%esi
  40270a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40270e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  402712:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
  402716:	44 8b 45 e4          	mov    -0x1c(%rbp),%r8d
  40271a:	48 01 c7             	add    %rax,%rdi
  40271d:	48 01 c6             	add    %rax,%rsi
  402720:	e8 2b 03 00 00       	callq  402a50 <mainGtU>
  402725:	48 85 c0             	test   %rax,%rax
  402728:	74 76                	je     4027a0 <mainSimpleSort+0x1b0>
  40272a:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40272e:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  402731:	48 89 c2             	mov    %rax,%rdx
  402734:	48 29 ca             	sub    %rcx,%rdx
  402737:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40273e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  402742:	48 d3 e2             	shl    %cl,%rdx
  402745:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40274c:	48 d3 fa             	sar    %cl,%rdx
  40274f:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
  402752:	89 0c 86             	mov    %ecx,(%rsi,%rax,4)
  402755:	8b 45 c8             	mov    -0x38(%rbp),%eax
  402758:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  40275b:	48 29 c8             	sub    %rcx,%rax
  40275e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402765:	48 89 c2             	mov    %rax,%rdx
  402768:	48 d3 e2             	shl    %cl,%rdx
  40276b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402772:	48 d3 fa             	sar    %cl,%rdx
  402775:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  402778:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  40277b:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40277e:	48 8d 44 31 ff       	lea    -0x1(%rcx,%rsi,1),%rax
  402783:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40278a:	48 d3 e0             	shl    %cl,%rax
  40278d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402794:	48 d3 f8             	sar    %cl,%rax
  402797:	48 39 c2             	cmp    %rax,%rdx
  40279a:	0f 8f 40 ff ff ff    	jg     4026e0 <mainSimpleSort+0xf0>
  4027a0:	8b 45 b8             	mov    -0x48(%rbp),%eax
  4027a3:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  4027a7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4027ab:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4027ae:	8b 45 cc             	mov    -0x34(%rbp),%eax
  4027b1:	48 ff c0             	inc    %rax
  4027b4:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4027bb:	48 89 c2             	mov    %rax,%rdx
  4027be:	48 d3 e2             	shl    %cl,%rdx
  4027c1:	48 63 75 dc          	movslq -0x24(%rbp),%rsi
  4027c5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4027cc:	48 d3 fa             	sar    %cl,%rdx
  4027cf:	89 45 cc             	mov    %eax,-0x34(%rbp)
  4027d2:	48 39 f2             	cmp    %rsi,%rdx
  4027d5:	0f 8f a3 fe ff ff    	jg     40267e <mainSimpleSort+0x8e>
  4027db:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  4027df:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4027e3:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  4027e6:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  4027e9:	89 45 b8             	mov    %eax,-0x48(%rbp)
  4027ec:	89 4d c8             	mov    %ecx,-0x38(%rbp)
  4027ef:	90                   	nop
  4027f0:	8b 45 c8             	mov    -0x38(%rbp),%eax
  4027f3:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  4027f6:	48 29 c8             	sub    %rcx,%rax
  4027f9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402800:	48 d3 e0             	shl    %cl,%rax
  402803:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40280a:	48 d3 f8             	sar    %cl,%rax
  40280d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  402811:	8b 3c 81             	mov    (%rcx,%rax,4),%edi
  402814:	8b 45 d8             	mov    -0x28(%rbp),%eax
  402817:	8b 75 b8             	mov    -0x48(%rbp),%esi
  40281a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40281e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  402822:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
  402826:	44 8b 45 e4          	mov    -0x1c(%rbp),%r8d
  40282a:	48 01 c7             	add    %rax,%rdi
  40282d:	48 01 c6             	add    %rax,%rsi
  402830:	e8 1b 02 00 00       	callq  402a50 <mainGtU>
  402835:	48 85 c0             	test   %rax,%rax
  402838:	74 76                	je     4028b0 <mainSimpleSort+0x2c0>
  40283a:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40283e:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  402841:	48 89 c2             	mov    %rax,%rdx
  402844:	48 29 ca             	sub    %rcx,%rdx
  402847:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40284e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  402852:	48 d3 e2             	shl    %cl,%rdx
  402855:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40285c:	48 d3 fa             	sar    %cl,%rdx
  40285f:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
  402862:	89 0c 86             	mov    %ecx,(%rsi,%rax,4)
  402865:	8b 45 c8             	mov    -0x38(%rbp),%eax
  402868:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  40286b:	48 29 c8             	sub    %rcx,%rax
  40286e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402875:	48 89 c2             	mov    %rax,%rdx
  402878:	48 d3 e2             	shl    %cl,%rdx
  40287b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402882:	48 d3 fa             	sar    %cl,%rdx
  402885:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  402888:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  40288b:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40288e:	48 8d 44 31 ff       	lea    -0x1(%rcx,%rsi,1),%rax
  402893:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40289a:	48 d3 e0             	shl    %cl,%rax
  40289d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4028a4:	48 d3 f8             	sar    %cl,%rax
  4028a7:	48 39 c2             	cmp    %rax,%rdx
  4028aa:	0f 8f 40 ff ff ff    	jg     4027f0 <mainSimpleSort+0x200>
  4028b0:	8b 45 b8             	mov    -0x48(%rbp),%eax
  4028b3:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  4028b7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4028bb:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4028be:	8b 45 cc             	mov    -0x34(%rbp),%eax
  4028c1:	48 ff c0             	inc    %rax
  4028c4:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4028cb:	48 89 c2             	mov    %rax,%rdx
  4028ce:	48 d3 e2             	shl    %cl,%rdx
  4028d1:	48 63 75 dc          	movslq -0x24(%rbp),%rsi
  4028d5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4028dc:	48 d3 fa             	sar    %cl,%rdx
  4028df:	89 45 cc             	mov    %eax,-0x34(%rbp)
  4028e2:	48 39 f2             	cmp    %rsi,%rdx
  4028e5:	0f 8f 93 fd ff ff    	jg     40267e <mainSimpleSort+0x8e>
  4028eb:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  4028ef:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4028f3:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  4028f6:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  4028f9:	89 45 b8             	mov    %eax,-0x48(%rbp)
  4028fc:	89 4d c8             	mov    %ecx,-0x38(%rbp)
  4028ff:	90                   	nop
  402900:	8b 45 c8             	mov    -0x38(%rbp),%eax
  402903:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  402906:	48 29 c8             	sub    %rcx,%rax
  402909:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402910:	48 d3 e0             	shl    %cl,%rax
  402913:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40291a:	48 d3 f8             	sar    %cl,%rax
  40291d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  402921:	8b 3c 81             	mov    (%rcx,%rax,4),%edi
  402924:	8b 45 d8             	mov    -0x28(%rbp),%eax
  402927:	8b 75 b8             	mov    -0x48(%rbp),%esi
  40292a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40292e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  402932:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
  402936:	44 8b 45 e4          	mov    -0x1c(%rbp),%r8d
  40293a:	48 01 c7             	add    %rax,%rdi
  40293d:	48 01 c6             	add    %rax,%rsi
  402940:	e8 0b 01 00 00       	callq  402a50 <mainGtU>
  402945:	48 85 c0             	test   %rax,%rax
  402948:	74 76                	je     4029c0 <mainSimpleSort+0x3d0>
  40294a:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40294e:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  402951:	48 89 c2             	mov    %rax,%rdx
  402954:	48 29 ca             	sub    %rcx,%rdx
  402957:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40295e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  402962:	48 d3 e2             	shl    %cl,%rdx
  402965:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40296c:	48 d3 fa             	sar    %cl,%rdx
  40296f:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
  402972:	89 0c 86             	mov    %ecx,(%rsi,%rax,4)
  402975:	8b 45 c8             	mov    -0x38(%rbp),%eax
  402978:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  40297b:	48 29 c8             	sub    %rcx,%rax
  40297e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402985:	48 89 c2             	mov    %rax,%rdx
  402988:	48 d3 e2             	shl    %cl,%rdx
  40298b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  402992:	48 d3 fa             	sar    %cl,%rdx
  402995:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  402998:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  40299b:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40299e:	48 8d 44 31 ff       	lea    -0x1(%rcx,%rsi,1),%rax
  4029a3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4029aa:	48 d3 e0             	shl    %cl,%rax
  4029ad:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4029b4:	48 d3 f8             	sar    %cl,%rax
  4029b7:	48 39 c2             	cmp    %rax,%rdx
  4029ba:	0f 8f 40 ff ff ff    	jg     402900 <mainSimpleSort+0x310>
  4029c0:	8b 45 b8             	mov    -0x48(%rbp),%eax
  4029c3:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  4029c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4029cb:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4029ce:	8b 45 cc             	mov    -0x34(%rbp),%eax
  4029d1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4029d5:	48 ff c0             	inc    %rax
  4029d8:	89 45 cc             	mov    %eax,-0x34(%rbp)
  4029db:	48 63 01             	movslq (%rcx),%rax
  4029de:	48 85 c0             	test   %rax,%rax
  4029e1:	0f 89 c9 fc ff ff    	jns    4026b0 <mainSimpleSort+0xc0>
  4029e7:	48 83 c4 50          	add    $0x50,%rsp
  4029eb:	5d                   	pop    %rbp
  4029ec:	c3                   	retq   
  4029ed:	0f 1f 00             	nopl   (%rax)

00000000004029f0 <mmed3>:
  4029f0:	55                   	push   %rbp
  4029f1:	48 89 e5             	mov    %rsp,%rbp
  4029f4:	40 88 7d ff          	mov    %dil,-0x1(%rbp)
  4029f8:	40 88 75 fe          	mov    %sil,-0x2(%rbp)
  4029fc:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  402a00:	0f b6 4d fe          	movzbl -0x2(%rbp),%ecx
  402a04:	88 55 fd             	mov    %dl,-0x3(%rbp)
  402a07:	48 39 c8             	cmp    %rcx,%rax
  402a0a:	7e 15                	jle    402a21 <mmed3+0x31>
  402a0c:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  402a10:	88 45 fc             	mov    %al,-0x4(%rbp)
  402a13:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
  402a17:	0f b6 4d fc          	movzbl -0x4(%rbp),%ecx
  402a1b:	88 45 ff             	mov    %al,-0x1(%rbp)
  402a1e:	88 4d fe             	mov    %cl,-0x2(%rbp)
  402a21:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
  402a25:	0f b6 4d fd          	movzbl -0x3(%rbp),%ecx
  402a29:	48 39 c8             	cmp    %rcx,%rax
  402a2c:	7e 1b                	jle    402a49 <mmed3+0x59>
  402a2e:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
  402a32:	88 45 fe             	mov    %al,-0x2(%rbp)
  402a35:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  402a39:	0f b6 4d fe          	movzbl -0x2(%rbp),%ecx
  402a3d:	48 39 c8             	cmp    %rcx,%rax
  402a40:	7e 07                	jle    402a49 <mmed3+0x59>
  402a42:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  402a46:	88 45 fe             	mov    %al,-0x2(%rbp)
  402a49:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
  402a4d:	5d                   	pop    %rbp
  402a4e:	c3                   	retq   
  402a4f:	90                   	nop

0000000000402a50 <mainGtU>:
  402a50:	55                   	push   %rbp
  402a51:	48 89 e5             	mov    %rsp,%rbp
  402a54:	89 7d f8             	mov    %edi,-0x8(%rbp)
  402a57:	89 75 f4             	mov    %esi,-0xc(%rbp)
  402a5a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  402a5e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  402a62:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402a65:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  402a69:	44 89 45 dc          	mov    %r8d,-0x24(%rbp)
  402a6d:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
  402a71:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
  402a75:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402a78:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402a7c:	88 45 cb             	mov    %al,-0x35(%rbp)
  402a7f:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402a83:	88 45 ca             	mov    %al,-0x36(%rbp)
  402a86:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402a8a:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402a8e:	48 39 c8             	cmp    %rcx,%rax
  402a91:	74 1c                	je     402aaf <mainGtU+0x5f>
  402a93:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402a97:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402a9b:	48 39 c8             	cmp    %rcx,%rax
  402a9e:	7e 66                	jle    402b06 <mainGtU+0xb6>
  402aa0:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  402aa7:	00 00 00 
  402aaa:	e9 26 0b 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402aaf:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402ab2:	48 ff c0             	inc    %rax
  402ab5:	89 45 f8             	mov    %eax,-0x8(%rbp)
  402ab8:	8b 45 f4             	mov    -0xc(%rbp),%eax
  402abb:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402abe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402ac2:	48 ff c0             	inc    %rax
  402ac5:	89 45 f4             	mov    %eax,-0xc(%rbp)
  402ac8:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402acc:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402acf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402ad3:	88 45 cb             	mov    %al,-0x35(%rbp)
  402ad6:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402ada:	88 45 ca             	mov    %al,-0x36(%rbp)
  402add:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402ae1:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402ae5:	48 39 c8             	cmp    %rcx,%rax
  402ae8:	74 2b                	je     402b15 <mainGtU+0xc5>
  402aea:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402aee:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402af2:	48 39 c8             	cmp    %rcx,%rax
  402af5:	7e 75                	jle    402b6c <mainGtU+0x11c>
  402af7:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  402afe:	00 00 00 
  402b01:	e9 cf 0a 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402b06:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  402b0d:	00 00 00 
  402b10:	e9 c0 0a 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402b15:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402b18:	48 ff c0             	inc    %rax
  402b1b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  402b1e:	8b 45 f4             	mov    -0xc(%rbp),%eax
  402b21:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402b24:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402b28:	48 ff c0             	inc    %rax
  402b2b:	89 45 f4             	mov    %eax,-0xc(%rbp)
  402b2e:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402b32:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402b35:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402b39:	88 45 cb             	mov    %al,-0x35(%rbp)
  402b3c:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402b40:	88 45 ca             	mov    %al,-0x36(%rbp)
  402b43:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402b47:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402b4b:	48 39 c8             	cmp    %rcx,%rax
  402b4e:	74 2b                	je     402b7b <mainGtU+0x12b>
  402b50:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402b54:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402b58:	48 39 c8             	cmp    %rcx,%rax
  402b5b:	7e 75                	jle    402bd2 <mainGtU+0x182>
  402b5d:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  402b64:	00 00 00 
  402b67:	e9 69 0a 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402b6c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  402b73:	00 00 00 
  402b76:	e9 5a 0a 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402b7b:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402b7e:	48 ff c0             	inc    %rax
  402b81:	89 45 f8             	mov    %eax,-0x8(%rbp)
  402b84:	8b 45 f4             	mov    -0xc(%rbp),%eax
  402b87:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402b8a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402b8e:	48 ff c0             	inc    %rax
  402b91:	89 45 f4             	mov    %eax,-0xc(%rbp)
  402b94:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402b98:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402b9b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402b9f:	88 45 cb             	mov    %al,-0x35(%rbp)
  402ba2:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402ba6:	88 45 ca             	mov    %al,-0x36(%rbp)
  402ba9:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402bad:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402bb1:	48 39 c8             	cmp    %rcx,%rax
  402bb4:	74 2b                	je     402be1 <mainGtU+0x191>
  402bb6:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402bba:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402bbe:	48 39 c8             	cmp    %rcx,%rax
  402bc1:	7e 75                	jle    402c38 <mainGtU+0x1e8>
  402bc3:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  402bca:	00 00 00 
  402bcd:	e9 03 0a 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402bd2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  402bd9:	00 00 00 
  402bdc:	e9 f4 09 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402be1:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402be4:	48 ff c0             	inc    %rax
  402be7:	89 45 f8             	mov    %eax,-0x8(%rbp)
  402bea:	8b 45 f4             	mov    -0xc(%rbp),%eax
  402bed:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402bf0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402bf4:	48 ff c0             	inc    %rax
  402bf7:	89 45 f4             	mov    %eax,-0xc(%rbp)
  402bfa:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402bfe:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402c01:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402c05:	88 45 cb             	mov    %al,-0x35(%rbp)
  402c08:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402c0c:	88 45 ca             	mov    %al,-0x36(%rbp)
  402c0f:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402c13:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402c17:	48 39 c8             	cmp    %rcx,%rax
  402c1a:	74 2b                	je     402c47 <mainGtU+0x1f7>
  402c1c:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402c20:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402c24:	48 39 c8             	cmp    %rcx,%rax
  402c27:	7e 75                	jle    402c9e <mainGtU+0x24e>
  402c29:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  402c30:	00 00 00 
  402c33:	e9 9d 09 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402c38:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  402c3f:	00 00 00 
  402c42:	e9 8e 09 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402c47:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402c4a:	48 ff c0             	inc    %rax
  402c4d:	89 45 f8             	mov    %eax,-0x8(%rbp)
  402c50:	8b 45 f4             	mov    -0xc(%rbp),%eax
  402c53:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402c56:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402c5a:	48 ff c0             	inc    %rax
  402c5d:	89 45 f4             	mov    %eax,-0xc(%rbp)
  402c60:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402c64:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402c67:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402c6b:	88 45 cb             	mov    %al,-0x35(%rbp)
  402c6e:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402c72:	88 45 ca             	mov    %al,-0x36(%rbp)
  402c75:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402c79:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402c7d:	48 39 c8             	cmp    %rcx,%rax
  402c80:	74 2b                	je     402cad <mainGtU+0x25d>
  402c82:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402c86:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402c8a:	48 39 c8             	cmp    %rcx,%rax
  402c8d:	7e 75                	jle    402d04 <mainGtU+0x2b4>
  402c8f:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  402c96:	00 00 00 
  402c99:	e9 37 09 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402c9e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  402ca5:	00 00 00 
  402ca8:	e9 28 09 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402cad:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402cb0:	48 ff c0             	inc    %rax
  402cb3:	89 45 f8             	mov    %eax,-0x8(%rbp)
  402cb6:	8b 45 f4             	mov    -0xc(%rbp),%eax
  402cb9:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402cbc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402cc0:	48 ff c0             	inc    %rax
  402cc3:	89 45 f4             	mov    %eax,-0xc(%rbp)
  402cc6:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402cca:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402ccd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402cd1:	88 45 cb             	mov    %al,-0x35(%rbp)
  402cd4:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402cd8:	88 45 ca             	mov    %al,-0x36(%rbp)
  402cdb:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402cdf:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402ce3:	48 39 c8             	cmp    %rcx,%rax
  402ce6:	74 2b                	je     402d13 <mainGtU+0x2c3>
  402ce8:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402cec:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402cf0:	48 39 c8             	cmp    %rcx,%rax
  402cf3:	7e 75                	jle    402d6a <mainGtU+0x31a>
  402cf5:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  402cfc:	00 00 00 
  402cff:	e9 d1 08 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402d04:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  402d0b:	00 00 00 
  402d0e:	e9 c2 08 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402d13:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402d16:	48 ff c0             	inc    %rax
  402d19:	89 45 f8             	mov    %eax,-0x8(%rbp)
  402d1c:	8b 45 f4             	mov    -0xc(%rbp),%eax
  402d1f:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402d22:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402d26:	48 ff c0             	inc    %rax
  402d29:	89 45 f4             	mov    %eax,-0xc(%rbp)
  402d2c:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402d30:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402d33:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402d37:	88 45 cb             	mov    %al,-0x35(%rbp)
  402d3a:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402d3e:	88 45 ca             	mov    %al,-0x36(%rbp)
  402d41:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402d45:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402d49:	48 39 c8             	cmp    %rcx,%rax
  402d4c:	74 2b                	je     402d79 <mainGtU+0x329>
  402d4e:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402d52:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402d56:	48 39 c8             	cmp    %rcx,%rax
  402d59:	7e 75                	jle    402dd0 <mainGtU+0x380>
  402d5b:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  402d62:	00 00 00 
  402d65:	e9 6b 08 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402d6a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  402d71:	00 00 00 
  402d74:	e9 5c 08 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402d79:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402d7c:	48 ff c0             	inc    %rax
  402d7f:	89 45 f8             	mov    %eax,-0x8(%rbp)
  402d82:	8b 45 f4             	mov    -0xc(%rbp),%eax
  402d85:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402d88:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402d8c:	48 ff c0             	inc    %rax
  402d8f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  402d92:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402d96:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402d99:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402d9d:	88 45 cb             	mov    %al,-0x35(%rbp)
  402da0:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402da4:	88 45 ca             	mov    %al,-0x36(%rbp)
  402da7:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402dab:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402daf:	48 39 c8             	cmp    %rcx,%rax
  402db2:	74 2b                	je     402ddf <mainGtU+0x38f>
  402db4:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402db8:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402dbc:	48 39 c8             	cmp    %rcx,%rax
  402dbf:	7e 75                	jle    402e36 <mainGtU+0x3e6>
  402dc1:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  402dc8:	00 00 00 
  402dcb:	e9 05 08 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402dd0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  402dd7:	00 00 00 
  402dda:	e9 f6 07 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402ddf:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402de2:	48 ff c0             	inc    %rax
  402de5:	89 45 f8             	mov    %eax,-0x8(%rbp)
  402de8:	8b 45 f4             	mov    -0xc(%rbp),%eax
  402deb:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402dee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402df2:	48 ff c0             	inc    %rax
  402df5:	89 45 f4             	mov    %eax,-0xc(%rbp)
  402df8:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402dfc:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402dff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402e03:	88 45 cb             	mov    %al,-0x35(%rbp)
  402e06:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402e0a:	88 45 ca             	mov    %al,-0x36(%rbp)
  402e0d:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402e11:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402e15:	48 39 c8             	cmp    %rcx,%rax
  402e18:	74 2b                	je     402e45 <mainGtU+0x3f5>
  402e1a:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402e1e:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402e22:	48 39 c8             	cmp    %rcx,%rax
  402e25:	7e 75                	jle    402e9c <mainGtU+0x44c>
  402e27:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  402e2e:	00 00 00 
  402e31:	e9 9f 07 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402e36:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  402e3d:	00 00 00 
  402e40:	e9 90 07 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402e45:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402e48:	48 ff c0             	inc    %rax
  402e4b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  402e4e:	8b 45 f4             	mov    -0xc(%rbp),%eax
  402e51:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402e54:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402e58:	48 ff c0             	inc    %rax
  402e5b:	89 45 f4             	mov    %eax,-0xc(%rbp)
  402e5e:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402e62:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402e65:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402e69:	88 45 cb             	mov    %al,-0x35(%rbp)
  402e6c:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402e70:	88 45 ca             	mov    %al,-0x36(%rbp)
  402e73:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402e77:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402e7b:	48 39 c8             	cmp    %rcx,%rax
  402e7e:	74 2b                	je     402eab <mainGtU+0x45b>
  402e80:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402e84:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402e88:	48 39 c8             	cmp    %rcx,%rax
  402e8b:	7e 79                	jle    402f06 <mainGtU+0x4b6>
  402e8d:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  402e94:	00 00 00 
  402e97:	e9 39 07 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402e9c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  402ea3:	00 00 00 
  402ea6:	e9 2a 07 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402eab:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402eae:	48 ff c0             	inc    %rax
  402eb1:	89 45 f8             	mov    %eax,-0x8(%rbp)
  402eb4:	8b 45 f4             	mov    -0xc(%rbp),%eax
  402eb7:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402eba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402ebe:	48 ff c0             	inc    %rax
  402ec1:	89 45 f4             	mov    %eax,-0xc(%rbp)
  402ec4:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402ec8:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402ecb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402ecf:	88 45 cb             	mov    %al,-0x35(%rbp)
  402ed2:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402ed6:	88 45 ca             	mov    %al,-0x36(%rbp)
  402ed9:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402edd:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402ee1:	48 39 c8             	cmp    %rcx,%rax
  402ee4:	74 2f                	je     402f15 <mainGtU+0x4c5>
  402ee6:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402eea:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402eee:	48 39 c8             	cmp    %rcx,%rax
  402ef1:	0f 8e 02 04 00 00    	jle    4032f9 <mainGtU+0x8a9>
  402ef7:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  402efe:	00 00 00 
  402f01:	e9 cf 06 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402f06:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  402f0d:	00 00 00 
  402f10:	e9 c0 06 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  402f15:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402f18:	48 ff c0             	inc    %rax
  402f1b:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402f1e:	8b 55 dc             	mov    -0x24(%rbp),%edx
  402f21:	89 45 f8             	mov    %eax,-0x8(%rbp)
  402f24:	48 ff c1             	inc    %rcx
  402f27:	89 4d f4             	mov    %ecx,-0xc(%rbp)
  402f2a:	48 83 c2 08          	add    $0x8,%rdx
  402f2e:	89 55 cc             	mov    %edx,-0x34(%rbp)
  402f31:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402f34:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  402f38:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
  402f3c:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402f3f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402f43:	88 45 cb             	mov    %al,-0x35(%rbp)
  402f46:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402f4a:	88 45 ca             	mov    %al,-0x36(%rbp)
  402f4d:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402f51:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402f55:	48 39 c8             	cmp    %rcx,%rax
  402f58:	0f 85 aa 03 00 00    	jne    403308 <mainGtU+0x8b8>
  402f5e:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402f61:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  402f65:	0f b6 04 41          	movzbl (%rcx,%rax,2),%eax
  402f69:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402f6c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  402f70:	66 89 45 c8          	mov    %ax,-0x38(%rbp)
  402f74:	0f b6 04 4a          	movzbl (%rdx,%rcx,2),%eax
  402f78:	66 89 45 c6          	mov    %ax,-0x3a(%rbp)
  402f7c:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  402f80:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  402f84:	48 39 c8             	cmp    %rcx,%rax
  402f87:	0f 85 9b 03 00 00    	jne    403328 <mainGtU+0x8d8>
  402f8d:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402f90:	48 ff c0             	inc    %rax
  402f93:	89 45 f8             	mov    %eax,-0x8(%rbp)
  402f96:	8b 45 f4             	mov    -0xc(%rbp),%eax
  402f99:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  402f9c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402fa0:	48 ff c0             	inc    %rax
  402fa3:	89 45 f4             	mov    %eax,-0xc(%rbp)
  402fa6:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402faa:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402fad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  402fb1:	88 45 cb             	mov    %al,-0x35(%rbp)
  402fb4:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  402fb8:	88 45 ca             	mov    %al,-0x36(%rbp)
  402fbb:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  402fbf:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  402fc3:	48 39 c8             	cmp    %rcx,%rax
  402fc6:	0f 85 7c 03 00 00    	jne    403348 <mainGtU+0x8f8>
  402fcc:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402fcf:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  402fd3:	0f b6 04 41          	movzbl (%rcx,%rax,2),%eax
  402fd7:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  402fda:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  402fde:	66 89 45 c8          	mov    %ax,-0x38(%rbp)
  402fe2:	0f b6 04 4a          	movzbl (%rdx,%rcx,2),%eax
  402fe6:	66 89 45 c6          	mov    %ax,-0x3a(%rbp)
  402fea:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  402fee:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  402ff2:	48 39 c8             	cmp    %rcx,%rax
  402ff5:	0f 85 6d 03 00 00    	jne    403368 <mainGtU+0x918>
  402ffb:	8b 45 f8             	mov    -0x8(%rbp),%eax
  402ffe:	48 ff c0             	inc    %rax
  403001:	89 45 f8             	mov    %eax,-0x8(%rbp)
  403004:	8b 45 f4             	mov    -0xc(%rbp),%eax
  403007:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  40300a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40300e:	48 ff c0             	inc    %rax
  403011:	89 45 f4             	mov    %eax,-0xc(%rbp)
  403014:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  403018:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  40301b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40301f:	88 45 cb             	mov    %al,-0x35(%rbp)
  403022:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  403026:	88 45 ca             	mov    %al,-0x36(%rbp)
  403029:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  40302d:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  403031:	48 39 c8             	cmp    %rcx,%rax
  403034:	0f 85 4e 03 00 00    	jne    403388 <mainGtU+0x938>
  40303a:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40303d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  403041:	0f b6 04 41          	movzbl (%rcx,%rax,2),%eax
  403045:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  403048:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40304c:	66 89 45 c8          	mov    %ax,-0x38(%rbp)
  403050:	0f b6 04 4a          	movzbl (%rdx,%rcx,2),%eax
  403054:	66 89 45 c6          	mov    %ax,-0x3a(%rbp)
  403058:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  40305c:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  403060:	48 39 c8             	cmp    %rcx,%rax
  403063:	0f 85 3f 03 00 00    	jne    4033a8 <mainGtU+0x958>
  403069:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40306c:	48 ff c0             	inc    %rax
  40306f:	89 45 f8             	mov    %eax,-0x8(%rbp)
  403072:	8b 45 f4             	mov    -0xc(%rbp),%eax
  403075:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  403078:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40307c:	48 ff c0             	inc    %rax
  40307f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  403082:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  403086:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  403089:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40308d:	88 45 cb             	mov    %al,-0x35(%rbp)
  403090:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  403094:	88 45 ca             	mov    %al,-0x36(%rbp)
  403097:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  40309b:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  40309f:	48 39 c8             	cmp    %rcx,%rax
  4030a2:	0f 85 20 03 00 00    	jne    4033c8 <mainGtU+0x978>
  4030a8:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4030ab:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4030af:	0f b6 04 41          	movzbl (%rcx,%rax,2),%eax
  4030b3:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  4030b6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4030ba:	66 89 45 c8          	mov    %ax,-0x38(%rbp)
  4030be:	0f b6 04 4a          	movzbl (%rdx,%rcx,2),%eax
  4030c2:	66 89 45 c6          	mov    %ax,-0x3a(%rbp)
  4030c6:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  4030ca:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  4030ce:	48 39 c8             	cmp    %rcx,%rax
  4030d1:	0f 85 11 03 00 00    	jne    4033e8 <mainGtU+0x998>
  4030d7:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4030da:	48 ff c0             	inc    %rax
  4030dd:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4030e0:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4030e3:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  4030e6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4030ea:	48 ff c0             	inc    %rax
  4030ed:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4030f0:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  4030f4:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  4030f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4030fb:	88 45 cb             	mov    %al,-0x35(%rbp)
  4030fe:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  403102:	88 45 ca             	mov    %al,-0x36(%rbp)
  403105:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  403109:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  40310d:	48 39 c8             	cmp    %rcx,%rax
  403110:	0f 85 f2 02 00 00    	jne    403408 <mainGtU+0x9b8>
  403116:	8b 45 f8             	mov    -0x8(%rbp),%eax
  403119:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40311d:	0f b6 04 41          	movzbl (%rcx,%rax,2),%eax
  403121:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  403124:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403128:	66 89 45 c8          	mov    %ax,-0x38(%rbp)
  40312c:	0f b6 04 4a          	movzbl (%rdx,%rcx,2),%eax
  403130:	66 89 45 c6          	mov    %ax,-0x3a(%rbp)
  403134:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  403138:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  40313c:	48 39 c8             	cmp    %rcx,%rax
  40313f:	0f 85 e3 02 00 00    	jne    403428 <mainGtU+0x9d8>
  403145:	8b 45 f8             	mov    -0x8(%rbp),%eax
  403148:	48 ff c0             	inc    %rax
  40314b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40314e:	8b 45 f4             	mov    -0xc(%rbp),%eax
  403151:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  403154:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  403158:	48 ff c0             	inc    %rax
  40315b:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40315e:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  403162:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  403165:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  403169:	88 45 cb             	mov    %al,-0x35(%rbp)
  40316c:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  403170:	88 45 ca             	mov    %al,-0x36(%rbp)
  403173:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  403177:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  40317b:	48 39 c8             	cmp    %rcx,%rax
  40317e:	0f 85 c4 02 00 00    	jne    403448 <mainGtU+0x9f8>
  403184:	8b 45 f8             	mov    -0x8(%rbp),%eax
  403187:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40318b:	0f b6 04 41          	movzbl (%rcx,%rax,2),%eax
  40318f:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  403192:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403196:	66 89 45 c8          	mov    %ax,-0x38(%rbp)
  40319a:	0f b6 04 4a          	movzbl (%rdx,%rcx,2),%eax
  40319e:	66 89 45 c6          	mov    %ax,-0x3a(%rbp)
  4031a2:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  4031a6:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  4031aa:	48 39 c8             	cmp    %rcx,%rax
  4031ad:	0f 85 b5 02 00 00    	jne    403468 <mainGtU+0xa18>
  4031b3:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4031b6:	48 ff c0             	inc    %rax
  4031b9:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4031bc:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4031bf:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  4031c2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4031c6:	48 ff c0             	inc    %rax
  4031c9:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4031cc:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  4031d0:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  4031d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4031d7:	88 45 cb             	mov    %al,-0x35(%rbp)
  4031da:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  4031de:	88 45 ca             	mov    %al,-0x36(%rbp)
  4031e1:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  4031e5:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  4031e9:	48 39 c8             	cmp    %rcx,%rax
  4031ec:	0f 85 96 02 00 00    	jne    403488 <mainGtU+0xa38>
  4031f2:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4031f5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4031f9:	0f b6 04 41          	movzbl (%rcx,%rax,2),%eax
  4031fd:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  403200:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403204:	66 89 45 c8          	mov    %ax,-0x38(%rbp)
  403208:	0f b6 04 4a          	movzbl (%rdx,%rcx,2),%eax
  40320c:	66 89 45 c6          	mov    %ax,-0x3a(%rbp)
  403210:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  403214:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  403218:	48 39 c8             	cmp    %rcx,%rax
  40321b:	0f 85 87 02 00 00    	jne    4034a8 <mainGtU+0xa58>
  403221:	8b 45 f8             	mov    -0x8(%rbp),%eax
  403224:	48 ff c0             	inc    %rax
  403227:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40322a:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40322d:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  403230:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  403234:	48 ff c0             	inc    %rax
  403237:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40323a:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  40323e:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  403241:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  403245:	88 45 cb             	mov    %al,-0x35(%rbp)
  403248:	0f b6 04 0a          	movzbl (%rdx,%rcx,1),%eax
  40324c:	88 45 ca             	mov    %al,-0x36(%rbp)
  40324f:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  403253:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  403257:	48 39 c8             	cmp    %rcx,%rax
  40325a:	0f 85 68 02 00 00    	jne    4034c8 <mainGtU+0xa78>
  403260:	8b 45 f8             	mov    -0x8(%rbp),%eax
  403263:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  403267:	0f b6 04 41          	movzbl (%rcx,%rax,2),%eax
  40326b:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  40326e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403272:	66 89 45 c8          	mov    %ax,-0x38(%rbp)
  403276:	0f b6 04 4a          	movzbl (%rdx,%rcx,2),%eax
  40327a:	66 89 45 c6          	mov    %ax,-0x3a(%rbp)
  40327e:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  403282:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  403286:	48 39 c8             	cmp    %rcx,%rax
  403289:	0f 85 59 02 00 00    	jne    4034e8 <mainGtU+0xa98>
  40328f:	8b 45 f8             	mov    -0x8(%rbp),%eax
  403292:	48 ff c0             	inc    %rax
  403295:	89 45 f8             	mov    %eax,-0x8(%rbp)
  403298:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40329b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  40329e:	8b 55 dc             	mov    -0x24(%rbp),%edx
  4032a1:	48 ff c0             	inc    %rax
  4032a4:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4032a7:	48 39 d1             	cmp    %rdx,%rcx
  4032aa:	72 0c                	jb     4032b8 <mainGtU+0x868>
  4032ac:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4032af:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  4032b2:	48 29 c1             	sub    %rax,%rcx
  4032b5:	89 4d f8             	mov    %ecx,-0x8(%rbp)
  4032b8:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4032bb:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  4032be:	48 39 c8             	cmp    %rcx,%rax
  4032c1:	72 0c                	jb     4032cf <mainGtU+0x87f>
  4032c3:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4032c6:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  4032c9:	48 29 c1             	sub    %rax,%rcx
  4032cc:	89 4d f4             	mov    %ecx,-0xc(%rbp)
  4032cf:	8b 45 cc             	mov    -0x34(%rbp),%eax
  4032d2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4032d6:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  4032da:	89 45 cc             	mov    %eax,-0x34(%rbp)
  4032dd:	8b 01                	mov    (%rcx),%eax
  4032df:	48 ff c8             	dec    %rax
  4032e2:	89 01                	mov    %eax,(%rcx)
  4032e4:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  4032e8:	48 85 c0             	test   %rax,%rax
  4032eb:	0f 89 40 fc ff ff    	jns    402f31 <mainGtU+0x4e1>
  4032f1:	48 31 c0             	xor    %rax,%rax
  4032f4:	e9 dc 02 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  4032f9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  403300:	00 00 00 
  403303:	e9 cd 02 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403308:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  40330c:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  403310:	48 39 c8             	cmp    %rcx,%rax
  403313:	0f 8e ef 01 00 00    	jle    403508 <mainGtU+0xab8>
  403319:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  403320:	00 00 00 
  403323:	e9 ad 02 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403328:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  40332c:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  403330:	48 39 c8             	cmp    %rcx,%rax
  403333:	0f 8e de 01 00 00    	jle    403517 <mainGtU+0xac7>
  403339:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  403340:	00 00 00 
  403343:	e9 8d 02 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403348:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  40334c:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  403350:	48 39 c8             	cmp    %rcx,%rax
  403353:	0f 8e cd 01 00 00    	jle    403526 <mainGtU+0xad6>
  403359:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  403360:	00 00 00 
  403363:	e9 6d 02 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403368:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  40336c:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  403370:	48 39 c8             	cmp    %rcx,%rax
  403373:	0f 8e bc 01 00 00    	jle    403535 <mainGtU+0xae5>
  403379:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  403380:	00 00 00 
  403383:	e9 4d 02 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403388:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  40338c:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  403390:	48 39 c8             	cmp    %rcx,%rax
  403393:	0f 8e ab 01 00 00    	jle    403544 <mainGtU+0xaf4>
  403399:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  4033a0:	00 00 00 
  4033a3:	e9 2d 02 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  4033a8:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  4033ac:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  4033b0:	48 39 c8             	cmp    %rcx,%rax
  4033b3:	0f 8e 9a 01 00 00    	jle    403553 <mainGtU+0xb03>
  4033b9:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  4033c0:	00 00 00 
  4033c3:	e9 0d 02 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  4033c8:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  4033cc:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  4033d0:	48 39 c8             	cmp    %rcx,%rax
  4033d3:	0f 8e 86 01 00 00    	jle    40355f <mainGtU+0xb0f>
  4033d9:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  4033e0:	00 00 00 
  4033e3:	e9 ed 01 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  4033e8:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  4033ec:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  4033f0:	48 39 c8             	cmp    %rcx,%rax
  4033f3:	0f 8e 72 01 00 00    	jle    40356b <mainGtU+0xb1b>
  4033f9:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  403400:	00 00 00 
  403403:	e9 cd 01 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403408:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  40340c:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  403410:	48 39 c8             	cmp    %rcx,%rax
  403413:	0f 8e 5e 01 00 00    	jle    403577 <mainGtU+0xb27>
  403419:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  403420:	00 00 00 
  403423:	e9 ad 01 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403428:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  40342c:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  403430:	48 39 c8             	cmp    %rcx,%rax
  403433:	0f 8e 4a 01 00 00    	jle    403583 <mainGtU+0xb33>
  403439:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  403440:	00 00 00 
  403443:	e9 8d 01 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403448:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  40344c:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  403450:	48 39 c8             	cmp    %rcx,%rax
  403453:	0f 8e 36 01 00 00    	jle    40358f <mainGtU+0xb3f>
  403459:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  403460:	00 00 00 
  403463:	e9 6d 01 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403468:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  40346c:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  403470:	48 39 c8             	cmp    %rcx,%rax
  403473:	0f 8e 22 01 00 00    	jle    40359b <mainGtU+0xb4b>
  403479:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  403480:	00 00 00 
  403483:	e9 4d 01 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403488:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  40348c:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  403490:	48 39 c8             	cmp    %rcx,%rax
  403493:	0f 8e 0e 01 00 00    	jle    4035a7 <mainGtU+0xb57>
  403499:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  4034a0:	00 00 00 
  4034a3:	e9 2d 01 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  4034a8:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  4034ac:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  4034b0:	48 39 c8             	cmp    %rcx,%rax
  4034b3:	0f 8e fa 00 00 00    	jle    4035b3 <mainGtU+0xb63>
  4034b9:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  4034c0:	00 00 00 
  4034c3:	e9 0d 01 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  4034c8:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
  4034cc:	0f b6 4d ca          	movzbl -0x36(%rbp),%ecx
  4034d0:	48 39 c8             	cmp    %rcx,%rax
  4034d3:	0f 8e e6 00 00 00    	jle    4035bf <mainGtU+0xb6f>
  4034d9:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  4034e0:	00 00 00 
  4034e3:	e9 ed 00 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  4034e8:	0f b6 45 c8          	movzbl -0x38(%rbp),%eax
  4034ec:	0f b6 4d c6          	movzbl -0x3a(%rbp),%ecx
  4034f0:	48 39 c8             	cmp    %rcx,%rax
  4034f3:	0f 8e d2 00 00 00    	jle    4035cb <mainGtU+0xb7b>
  4034f9:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  403500:	00 00 00 
  403503:	e9 cd 00 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403508:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40350f:	00 00 00 
  403512:	e9 be 00 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403517:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40351e:	00 00 00 
  403521:	e9 af 00 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403526:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40352d:	00 00 00 
  403530:	e9 a0 00 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403535:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40353c:	00 00 00 
  40353f:	e9 91 00 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403544:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40354b:	00 00 00 
  40354e:	e9 82 00 00 00       	jmpq   4035d5 <mainGtU+0xb85>
  403553:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40355a:	00 00 00 
  40355d:	eb 76                	jmp    4035d5 <mainGtU+0xb85>
  40355f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  403566:	00 00 00 
  403569:	eb 6a                	jmp    4035d5 <mainGtU+0xb85>
  40356b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  403572:	00 00 00 
  403575:	eb 5e                	jmp    4035d5 <mainGtU+0xb85>
  403577:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40357e:	00 00 00 
  403581:	eb 52                	jmp    4035d5 <mainGtU+0xb85>
  403583:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40358a:	00 00 00 
  40358d:	eb 46                	jmp    4035d5 <mainGtU+0xb85>
  40358f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  403596:	00 00 00 
  403599:	eb 3a                	jmp    4035d5 <mainGtU+0xb85>
  40359b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4035a2:	00 00 00 
  4035a5:	eb 2e                	jmp    4035d5 <mainGtU+0xb85>
  4035a7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4035ae:	00 00 00 
  4035b1:	eb 22                	jmp    4035d5 <mainGtU+0xb85>
  4035b3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4035ba:	00 00 00 
  4035bd:	eb 16                	jmp    4035d5 <mainGtU+0xb85>
  4035bf:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4035c6:	00 00 00 
  4035c9:	eb 0a                	jmp    4035d5 <mainGtU+0xb85>
  4035cb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4035d2:	00 00 00 
  4035d5:	88 45 ff             	mov    %al,-0x1(%rbp)
  4035d8:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  4035dc:	5d                   	pop    %rbp
  4035dd:	c3                   	retq   
  4035de:	66 90                	xchg   %ax,%ax

00000000004035e0 <fallbackQSort3>:
  4035e0:	55                   	push   %rbp
  4035e1:	48 89 e5             	mov    %rsp,%rbp
  4035e4:	41 57                	push   %r15
  4035e6:	41 56                	push   %r14
  4035e8:	53                   	push   %rbx
  4035e9:	48 81 ec 98 03 00 00 	sub    $0x398,%rsp
  4035f0:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  4035f4:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
  4035f8:	89 55 d4             	mov    %edx,-0x2c(%rbp)
  4035fb:	89 4d d0             	mov    %ecx,-0x30(%rbp)
  4035fe:	48 31 c0             	xor    %rax,%rax
  403601:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  403604:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  403607:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40360a:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  40360e:	89 84 8d 10 fe ff ff 	mov    %eax,-0x1f0(%rbp,%rcx,4)
  403615:	8b 45 d0             	mov    -0x30(%rbp),%eax
  403618:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  40361c:	89 84 8d 80 fc ff ff 	mov    %eax,-0x380(%rbp,%rcx,4)
  403623:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  403626:	48 ff c0             	inc    %rax
  403629:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  40362c:	49 be ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%r14
  403633:	aa aa aa 
  403636:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  40363d:	00 00 00 
  403640:	49 bf fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%r15
  403647:	ff ff 7f 
  40364a:	eb 17                	jmp    403663 <fallbackQSort3+0x83>
  40364c:	0f 1f 40 00          	nopl   0x0(%rax)
  403650:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  403654:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  403658:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  40365b:	8b 55 b0             	mov    -0x50(%rbp),%edx
  40365e:	e8 7d 05 00 00       	callq  403be0 <fallbackSimpleSort>
  403663:	48 63 45 b4          	movslq -0x4c(%rbp),%rax
  403667:	48 85 c0             	test   %rax,%rax
  40366a:	0f 8e 61 05 00 00    	jle    403bd1 <fallbackQSort3+0x5f1>
  403670:	48 63 45 b4          	movslq -0x4c(%rbp),%rax
  403674:	48 83 f8 64          	cmp    $0x64,%rax
  403678:	7c 0c                	jl     403686 <fallbackQSort3+0xa6>
  40367a:	48 c7 c7 ec 03 00 00 	mov    $0x3ec,%rdi
  403681:	e8 fa 43 00 00       	callq  407a80 <BZ2_bz__AssertH__fail>
  403686:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  403689:	48 ff c8             	dec    %rax
  40368c:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  40368f:	48 63 45 b4          	movslq -0x4c(%rbp),%rax
  403693:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  403697:	8b 84 85 10 fe ff ff 	mov    -0x1f0(%rbp,%rax,4),%eax
  40369e:	8b 94 8d 80 fc ff ff 	mov    -0x380(%rbp,%rcx,4),%edx
  4036a5:	89 45 b0             	mov    %eax,-0x50(%rbp)
  4036a8:	8b 45 b0             	mov    -0x50(%rbp),%eax
  4036ab:	89 55 ac             	mov    %edx,-0x54(%rbp)
  4036ae:	48 29 c2             	sub    %rax,%rdx
  4036b1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4036b8:	48 d3 e2             	shl    %cl,%rdx
  4036bb:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4036c2:	48 d3 fa             	sar    %cl,%rdx
  4036c5:	48 83 fa 09          	cmp    $0x9,%rdx
  4036c9:	7e 85                	jle    403650 <fallbackQSort3+0x70>
  4036cb:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  4036ce:	48 69 f0 c5 1d 00 00 	imul   $0x1dc5,%rax,%rsi
  4036d5:	48 ff c6             	inc    %rsi
  4036d8:	48 81 e6 ff 7f 00 00 	and    $0x7fff,%rsi
  4036df:	89 75 a4             	mov    %esi,-0x5c(%rbp)
  4036e2:	48 89 f0             	mov    %rsi,%rax
  4036e5:	49 f7 e6             	mul    %r14
  4036e8:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  4036ef:	48 d3 ea             	shr    %cl,%rdx
  4036f2:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
  4036f6:	48 29 c6             	sub    %rax,%rsi
  4036f9:	48 85 de             	test   %rbx,%rsi
  4036fc:	89 75 a0             	mov    %esi,-0x60(%rbp)
  4036ff:	75 0f                	jne    403710 <fallbackQSort3+0x130>
  403701:	48 63 45 b0          	movslq -0x50(%rbp),%rax
  403705:	eb 3f                	jmp    403746 <fallbackQSort3+0x166>
  403707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40370e:	00 00 
  403710:	8b 45 a0             	mov    -0x60(%rbp),%eax
  403713:	48 83 f8 01          	cmp    $0x1,%rax
  403717:	75 29                	jne    403742 <fallbackQSort3+0x162>
  403719:	8b 45 b0             	mov    -0x50(%rbp),%eax
  40371c:	8b 55 ac             	mov    -0x54(%rbp),%edx
  40371f:	48 01 c2             	add    %rax,%rdx
  403722:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403729:	48 d3 e2             	shl    %cl,%rdx
  40372c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403733:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403737:	48 d3 fa             	sar    %cl,%rdx
  40373a:	4c 21 fa             	and    %r15,%rdx
  40373d:	8b 04 50             	mov    (%rax,%rdx,2),%eax
  403740:	eb 0b                	jmp    40374d <fallbackQSort3+0x16d>
  403742:	48 63 45 ac          	movslq -0x54(%rbp),%rax
  403746:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40374a:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  40374d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  403751:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  403754:	89 45 a8             	mov    %eax,-0x58(%rbp)
  403757:	8b 45 b0             	mov    -0x50(%rbp),%eax
  40375a:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  40375d:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  403760:	89 45 cc             	mov    %eax,-0x34(%rbp)
  403763:	89 4d c0             	mov    %ecx,-0x40(%rbp)
  403766:	eb 4b                	jmp    4037b3 <fallbackQSort3+0x1d3>
  403768:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40376f:	00 
  403770:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  403774:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  403778:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  40377b:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  40377f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403783:	89 85 74 fc ff ff    	mov    %eax,-0x38c(%rbp)
  403789:	8b 04 8a             	mov    (%rdx,%rcx,4),%eax
  40378c:	48 63 4d cc          	movslq -0x34(%rbp),%rcx
  403790:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  403793:	8b 85 74 fc ff ff    	mov    -0x38c(%rbp),%eax
  403799:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  40379d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4037a1:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4037a4:	8b 45 cc             	mov    -0x34(%rbp),%eax
  4037a7:	8b 4d c8             	mov    -0x38(%rbp),%ecx
  4037aa:	48 ff c0             	inc    %rax
  4037ad:	89 45 cc             	mov    %eax,-0x34(%rbp)
  4037b0:	48 ff c9             	dec    %rcx
  4037b3:	89 4d c8             	mov    %ecx,-0x38(%rbp)
  4037b6:	eb 4e                	jmp    403806 <fallbackQSort3+0x226>
  4037b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4037bf:	00 
  4037c0:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  4037c4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4037c8:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  4037cb:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  4037cf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4037d3:	89 85 7c fc ff ff    	mov    %eax,-0x384(%rbp)
  4037d9:	8b 04 8a             	mov    (%rdx,%rcx,4),%eax
  4037dc:	48 63 4d cc          	movslq -0x34(%rbp),%rcx
  4037e0:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4037e3:	8b 85 7c fc ff ff    	mov    -0x384(%rbp),%eax
  4037e9:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  4037ed:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4037f1:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4037f4:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  4037f7:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  4037fa:	48 ff c0             	inc    %rax
  4037fd:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  403800:	48 ff c1             	inc    %rcx
  403803:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  403806:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40380a:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  40380e:	48 39 c8             	cmp    %rcx,%rax
  403811:	0f 8f 7f 00 00 00    	jg     403896 <fallbackQSort3+0x2b6>
  403817:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40381b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40381f:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  403822:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  403826:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  403829:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  40382c:	48 29 c8             	sub    %rcx,%rax
  40382f:	48 85 d8             	test   %rbx,%rax
  403832:	89 45 bc             	mov    %eax,-0x44(%rbp)
  403835:	74 89                	je     4037c0 <fallbackQSort3+0x1e0>
  403837:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  40383b:	48 85 c0             	test   %rax,%rax
  40383e:	7f 56                	jg     403896 <fallbackQSort3+0x2b6>
  403840:	8b 45 cc             	mov    -0x34(%rbp),%eax
  403843:	48 ff c0             	inc    %rax
  403846:	89 45 cc             	mov    %eax,-0x34(%rbp)
  403849:	eb bb                	jmp    403806 <fallbackQSort3+0x226>
  40384b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  403850:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  403854:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  403858:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  40385b:	48 63 4d c0          	movslq -0x40(%rbp),%rcx
  40385f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403863:	89 85 78 fc ff ff    	mov    %eax,-0x388(%rbp)
  403869:	8b 04 8a             	mov    (%rdx,%rcx,4),%eax
  40386c:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  403870:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  403873:	8b 85 78 fc ff ff    	mov    -0x388(%rbp),%eax
  403879:	48 63 4d c0          	movslq -0x40(%rbp),%rcx
  40387d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403881:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  403884:	8b 45 c0             	mov    -0x40(%rbp),%eax
  403887:	8b 4d c8             	mov    -0x38(%rbp),%ecx
  40388a:	48 ff c8             	dec    %rax
  40388d:	89 45 c0             	mov    %eax,-0x40(%rbp)
  403890:	48 ff c9             	dec    %rcx
  403893:	89 4d c8             	mov    %ecx,-0x38(%rbp)
  403896:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40389a:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  40389e:	48 39 c8             	cmp    %rcx,%rax
  4038a1:	7f 3d                	jg     4038e0 <fallbackQSort3+0x300>
  4038a3:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  4038a7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4038ab:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  4038ae:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4038b2:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  4038b5:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  4038b8:	48 29 c8             	sub    %rcx,%rax
  4038bb:	48 85 d8             	test   %rbx,%rax
  4038be:	89 45 bc             	mov    %eax,-0x44(%rbp)
  4038c1:	74 8d                	je     403850 <fallbackQSort3+0x270>
  4038c3:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  4038c7:	48 85 c0             	test   %rax,%rax
  4038ca:	78 14                	js     4038e0 <fallbackQSort3+0x300>
  4038cc:	8b 45 c8             	mov    -0x38(%rbp),%eax
  4038cf:	48 ff c8             	dec    %rax
  4038d2:	89 45 c8             	mov    %eax,-0x38(%rbp)
  4038d5:	eb bf                	jmp    403896 <fallbackQSort3+0x2b6>
  4038d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4038de:	00 00 
  4038e0:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  4038e4:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  4038e8:	48 39 c8             	cmp    %rcx,%rax
  4038eb:	0f 8e 7f fe ff ff    	jle    403770 <fallbackQSort3+0x190>
  4038f1:	48 63 45 c0          	movslq -0x40(%rbp),%rax
  4038f5:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  4038f9:	48 39 c8             	cmp    %rcx,%rax
  4038fc:	0f 8c 61 fd ff ff    	jl     403663 <fallbackQSort3+0x83>
  403902:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  403905:	8b 4d b0             	mov    -0x50(%rbp),%ecx
  403908:	48 89 c2             	mov    %rax,%rdx
  40390b:	48 29 ca             	sub    %rcx,%rdx
  40390e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403915:	48 d3 e2             	shl    %cl,%rdx
  403918:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40391f:	8b 75 cc             	mov    -0x34(%rbp),%esi
  403922:	48 d3 fa             	sar    %cl,%rdx
  403925:	48 29 c6             	sub    %rax,%rsi
  403928:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40392f:	48 d3 e6             	shl    %cl,%rsi
  403932:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403939:	48 d3 fe             	sar    %cl,%rsi
  40393c:	48 39 f2             	cmp    %rsi,%rdx
  40393f:	7d 08                	jge    403949 <fallbackQSort3+0x369>
  403941:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  403944:	8b 4d b0             	mov    -0x50(%rbp),%ecx
  403947:	eb 06                	jmp    40394f <fallbackQSort3+0x36f>
  403949:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40394c:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  40394f:	48 29 c8             	sub    %rcx,%rax
  403952:	89 45 bc             	mov    %eax,-0x44(%rbp)
  403955:	8b 45 b0             	mov    -0x50(%rbp),%eax
  403958:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  40395b:	8b 55 bc             	mov    -0x44(%rbp),%edx
  40395e:	8b 75 bc             	mov    -0x44(%rbp),%esi
  403961:	89 85 70 fc ff ff    	mov    %eax,-0x390(%rbp)
  403967:	48 29 d1             	sub    %rdx,%rcx
  40396a:	89 8d 6c fc ff ff    	mov    %ecx,-0x394(%rbp)
  403970:	89 b5 68 fc ff ff    	mov    %esi,-0x398(%rbp)
  403976:	eb 75                	jmp    4039ed <fallbackQSort3+0x40d>
  403978:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40397f:	00 
  403980:	48 63 85 70 fc ff ff 	movslq -0x390(%rbp),%rax
  403987:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40398b:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  40398e:	48 63 8d 6c fc ff ff 	movslq -0x394(%rbp),%rcx
  403995:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403999:	89 85 64 fc ff ff    	mov    %eax,-0x39c(%rbp)
  40399f:	8b 04 8a             	mov    (%rdx,%rcx,4),%eax
  4039a2:	48 63 8d 70 fc ff ff 	movslq -0x390(%rbp),%rcx
  4039a9:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4039ac:	8b 85 64 fc ff ff    	mov    -0x39c(%rbp),%eax
  4039b2:	48 63 8d 6c fc ff ff 	movslq -0x394(%rbp),%rcx
  4039b9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4039bd:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  4039c0:	8b 85 70 fc ff ff    	mov    -0x390(%rbp),%eax
  4039c6:	48 ff c0             	inc    %rax
  4039c9:	8b 8d 6c fc ff ff    	mov    -0x394(%rbp),%ecx
  4039cf:	8b 95 68 fc ff ff    	mov    -0x398(%rbp),%edx
  4039d5:	89 85 70 fc ff ff    	mov    %eax,-0x390(%rbp)
  4039db:	48 ff c1             	inc    %rcx
  4039de:	89 8d 6c fc ff ff    	mov    %ecx,-0x394(%rbp)
  4039e4:	48 ff ca             	dec    %rdx
  4039e7:	89 95 68 fc ff ff    	mov    %edx,-0x398(%rbp)
  4039ed:	48 63 85 68 fc ff ff 	movslq -0x398(%rbp),%rax
  4039f4:	48 85 c0             	test   %rax,%rax
  4039f7:	7f 87                	jg     403980 <fallbackQSort3+0x3a0>
  4039f9:	8b 45 ac             	mov    -0x54(%rbp),%eax
  4039fc:	8b 55 c0             	mov    -0x40(%rbp),%edx
  4039ff:	48 29 d0             	sub    %rdx,%rax
  403a02:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403a09:	48 d3 e0             	shl    %cl,%rax
  403a0c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403a13:	8b 75 c8             	mov    -0x38(%rbp),%esi
  403a16:	48 d3 f8             	sar    %cl,%rax
  403a19:	48 29 f2             	sub    %rsi,%rdx
  403a1c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403a23:	48 d3 e2             	shl    %cl,%rdx
  403a26:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403a2d:	48 d3 fa             	sar    %cl,%rdx
  403a30:	48 39 d0             	cmp    %rdx,%rax
  403a33:	7d 08                	jge    403a3d <fallbackQSort3+0x45d>
  403a35:	8b 45 ac             	mov    -0x54(%rbp),%eax
  403a38:	8b 4d c0             	mov    -0x40(%rbp),%ecx
  403a3b:	eb 06                	jmp    403a43 <fallbackQSort3+0x463>
  403a3d:	8b 45 c0             	mov    -0x40(%rbp),%eax
  403a40:	8b 4d c8             	mov    -0x38(%rbp),%ecx
  403a43:	48 29 c8             	sub    %rcx,%rax
  403a46:	89 45 b8             	mov    %eax,-0x48(%rbp)
  403a49:	8b 45 cc             	mov    -0x34(%rbp),%eax
  403a4c:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  403a4f:	8b 55 b8             	mov    -0x48(%rbp),%edx
  403a52:	89 85 60 fc ff ff    	mov    %eax,-0x3a0(%rbp)
  403a58:	8b 45 b8             	mov    -0x48(%rbp),%eax
  403a5b:	48 29 d1             	sub    %rdx,%rcx
  403a5e:	48 ff c1             	inc    %rcx
  403a61:	89 8d 5c fc ff ff    	mov    %ecx,-0x3a4(%rbp)
  403a67:	89 85 58 fc ff ff    	mov    %eax,-0x3a8(%rbp)
  403a6d:	eb 6e                	jmp    403add <fallbackQSort3+0x4fd>
  403a6f:	90                   	nop
  403a70:	48 63 85 60 fc ff ff 	movslq -0x3a0(%rbp),%rax
  403a77:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  403a7b:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  403a7e:	48 63 8d 5c fc ff ff 	movslq -0x3a4(%rbp),%rcx
  403a85:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403a89:	89 85 54 fc ff ff    	mov    %eax,-0x3ac(%rbp)
  403a8f:	8b 04 8a             	mov    (%rdx,%rcx,4),%eax
  403a92:	48 63 8d 60 fc ff ff 	movslq -0x3a0(%rbp),%rcx
  403a99:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  403a9c:	8b 85 54 fc ff ff    	mov    -0x3ac(%rbp),%eax
  403aa2:	48 63 8d 5c fc ff ff 	movslq -0x3a4(%rbp),%rcx
  403aa9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  403aad:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  403ab0:	8b 85 60 fc ff ff    	mov    -0x3a0(%rbp),%eax
  403ab6:	48 ff c0             	inc    %rax
  403ab9:	8b 8d 5c fc ff ff    	mov    -0x3a4(%rbp),%ecx
  403abf:	8b 95 58 fc ff ff    	mov    -0x3a8(%rbp),%edx
  403ac5:	89 85 60 fc ff ff    	mov    %eax,-0x3a0(%rbp)
  403acb:	48 ff c1             	inc    %rcx
  403ace:	89 8d 5c fc ff ff    	mov    %ecx,-0x3a4(%rbp)
  403ad4:	48 ff ca             	dec    %rdx
  403ad7:	89 95 58 fc ff ff    	mov    %edx,-0x3a8(%rbp)
  403add:	48 63 85 58 fc ff ff 	movslq -0x3a8(%rbp),%rax
  403ae4:	48 85 c0             	test   %rax,%rax
  403ae7:	7f 87                	jg     403a70 <fallbackQSort3+0x490>
  403ae9:	8b 45 b0             	mov    -0x50(%rbp),%eax
  403aec:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  403aef:	48 01 c1             	add    %rax,%rcx
  403af2:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  403af5:	48 29 c1             	sub    %rax,%rcx
  403af8:	48 ff c9             	dec    %rcx
  403afb:	89 4d bc             	mov    %ecx,-0x44(%rbp)
  403afe:	8b 45 ac             	mov    -0x54(%rbp),%eax
  403b01:	8b 4d c0             	mov    -0x40(%rbp),%ecx
  403b04:	8b 55 c8             	mov    -0x38(%rbp),%edx
  403b07:	48 29 d1             	sub    %rdx,%rcx
  403b0a:	48 f7 d9             	neg    %rcx
  403b0d:	8b 55 bc             	mov    -0x44(%rbp),%edx
  403b10:	8b 75 b0             	mov    -0x50(%rbp),%esi
  403b13:	48 8d 44 08 01       	lea    0x1(%rax,%rcx,1),%rax
  403b18:	48 29 f2             	sub    %rsi,%rdx
  403b1b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403b22:	48 d3 e2             	shl    %cl,%rdx
  403b25:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403b2c:	48 d3 fa             	sar    %cl,%rdx
  403b2f:	8b 75 ac             	mov    -0x54(%rbp),%esi
  403b32:	89 45 b8             	mov    %eax,-0x48(%rbp)
  403b35:	48 29 c6             	sub    %rax,%rsi
  403b38:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403b3f:	48 d3 e6             	shl    %cl,%rsi
  403b42:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403b49:	48 d3 fe             	sar    %cl,%rsi
  403b4c:	48 39 f2             	cmp    %rsi,%rdx
  403b4f:	7e 31                	jle    403b82 <fallbackQSort3+0x5a2>
  403b51:	8b 45 b0             	mov    -0x50(%rbp),%eax
  403b54:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  403b58:	89 84 8d 10 fe ff ff 	mov    %eax,-0x1f0(%rbp,%rcx,4)
  403b5f:	8b 45 bc             	mov    -0x44(%rbp),%eax
  403b62:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  403b66:	89 84 8d 80 fc ff ff 	mov    %eax,-0x380(%rbp,%rcx,4)
  403b6d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  403b70:	48 ff c0             	inc    %rax
  403b73:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  403b76:	8b 45 b8             	mov    -0x48(%rbp),%eax
  403b79:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  403b7d:	8b 55 ac             	mov    -0x54(%rbp),%edx
  403b80:	eb 2f                	jmp    403bb1 <fallbackQSort3+0x5d1>
  403b82:	8b 45 b8             	mov    -0x48(%rbp),%eax
  403b85:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  403b89:	89 84 8d 10 fe ff ff 	mov    %eax,-0x1f0(%rbp,%rcx,4)
  403b90:	8b 45 ac             	mov    -0x54(%rbp),%eax
  403b93:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  403b97:	89 84 8d 80 fc ff ff 	mov    %eax,-0x380(%rbp,%rcx,4)
  403b9e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  403ba1:	48 ff c0             	inc    %rax
  403ba4:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  403ba7:	8b 45 b0             	mov    -0x50(%rbp),%eax
  403baa:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  403bae:	8b 55 bc             	mov    -0x44(%rbp),%edx
  403bb1:	8b 75 b4             	mov    -0x4c(%rbp),%esi
  403bb4:	48 63 7d b4          	movslq -0x4c(%rbp),%rdi
  403bb8:	89 84 8d 10 fe ff ff 	mov    %eax,-0x1f0(%rbp,%rcx,4)
  403bbf:	89 94 bd 80 fc ff ff 	mov    %edx,-0x380(%rbp,%rdi,4)
  403bc6:	48 ff c6             	inc    %rsi
  403bc9:	89 75 b4             	mov    %esi,-0x4c(%rbp)
  403bcc:	e9 92 fa ff ff       	jmpq   403663 <fallbackQSort3+0x83>
  403bd1:	48 81 c4 98 03 00 00 	add    $0x398,%rsp
  403bd8:	5b                   	pop    %rbx
  403bd9:	41 5e                	pop    %r14
  403bdb:	41 5f                	pop    %r15
  403bdd:	5d                   	pop    %rbp
  403bde:	c3                   	retq   
  403bdf:	90                   	nop

0000000000403be0 <fallbackSimpleSort>:
  403be0:	55                   	push   %rbp
  403be1:	48 89 e5             	mov    %rsp,%rbp
  403be4:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  403beb:	00 00 00 
  403bee:	48 21 c8             	and    %rcx,%rax
  403bf1:	89 55 ec             	mov    %edx,-0x14(%rbp)
  403bf4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  403bf7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  403bfb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  403bff:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  403c02:	48 39 c2             	cmp    %rax,%rdx
  403c05:	0f 84 ec 01 00 00    	je     403df7 <fallbackSimpleSort+0x217>
  403c0b:	8b 45 e8             	mov    -0x18(%rbp),%eax
  403c0e:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  403c11:	48 29 c8             	sub    %rcx,%rax
  403c14:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403c1b:	48 d3 e0             	shl    %cl,%rax
  403c1e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403c25:	48 d3 f8             	sar    %cl,%rax
  403c28:	48 83 f8 04          	cmp    $0x4,%rax
  403c2c:	0f 8c e7 00 00 00    	jl     403d19 <fallbackSimpleSort+0x139>
  403c32:	8b 45 e8             	mov    -0x18(%rbp),%eax
  403c35:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
  403c39:	eb 30                	jmp    403c6b <fallbackSimpleSort+0x8b>
  403c3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  403c40:	8b 45 dc             	mov    -0x24(%rbp),%eax
  403c43:	8b 55 e0             	mov    -0x20(%rbp),%edx
  403c46:	48 83 c2 fc          	add    $0xfffffffffffffffc,%rdx
  403c4a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403c51:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  403c55:	48 d3 e2             	shl    %cl,%rdx
  403c58:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403c5f:	48 d3 fa             	sar    %cl,%rdx
  403c62:	89 04 96             	mov    %eax,(%rsi,%rdx,4)
  403c65:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  403c68:	48 ff c8             	dec    %rax
  403c6b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  403c6e:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  403c72:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  403c76:	48 39 c8             	cmp    %rcx,%rax
  403c79:	0f 8c 9a 00 00 00    	jl     403d19 <fallbackSimpleSort+0x139>
  403c7f:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  403c83:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  403c87:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  403c8a:	89 45 dc             	mov    %eax,-0x24(%rbp)
  403c8d:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  403c91:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  403c95:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  403c98:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  403c9b:	89 45 d8             	mov    %eax,-0x28(%rbp)
  403c9e:	48 83 c2 04          	add    $0x4,%rdx
  403ca2:	89 55 e0             	mov    %edx,-0x20(%rbp)
  403ca5:	eb 39                	jmp    403ce0 <fallbackSimpleSort+0x100>
  403ca7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  403cae:	00 00 
  403cb0:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  403cb4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  403cb8:	8b 34 82             	mov    (%rdx,%rax,4),%esi
  403cbb:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
  403cbf:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403cc6:	48 d3 e0             	shl    %cl,%rax
  403cc9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403cd0:	48 d3 f8             	sar    %cl,%rax
  403cd3:	89 34 82             	mov    %esi,(%rdx,%rax,4)
  403cd6:	8b 45 e0             	mov    -0x20(%rbp),%eax
  403cd9:	48 83 c0 04          	add    $0x4,%rax
  403cdd:	89 45 e0             	mov    %eax,-0x20(%rbp)
  403ce0:	48 63 4d e0          	movslq -0x20(%rbp),%rcx
  403ce4:	48 63 55 e8          	movslq -0x18(%rbp),%rdx
  403ce8:	48 31 c0             	xor    %rax,%rax
  403ceb:	48 39 d1             	cmp    %rdx,%rcx
  403cee:	7f 1f                	jg     403d0f <fallbackSimpleSort+0x12f>
  403cf0:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  403cf4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  403cf8:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  403cfb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  403cff:	8b 55 d8             	mov    -0x28(%rbp),%edx
  403d02:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  403d05:	48 39 d0             	cmp    %rdx,%rax
  403d08:	48 19 c0             	sbb    %rax,%rax
  403d0b:	48 83 e0 01          	and    $0x1,%rax
  403d0f:	48 85 c0             	test   %rax,%rax
  403d12:	75 9c                	jne    403cb0 <fallbackSimpleSort+0xd0>
  403d14:	e9 27 ff ff ff       	jmpq   403c40 <fallbackSimpleSort+0x60>
  403d19:	8b 45 e8             	mov    -0x18(%rbp),%eax
  403d1c:	eb 29                	jmp    403d47 <fallbackSimpleSort+0x167>
  403d1e:	66 90                	xchg   %ax,%ax
  403d20:	8b 45 dc             	mov    -0x24(%rbp),%eax
  403d23:	8b 55 e0             	mov    -0x20(%rbp),%edx
  403d26:	48 ff ca             	dec    %rdx
  403d29:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403d30:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  403d34:	48 d3 e2             	shl    %cl,%rdx
  403d37:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403d3e:	48 d3 fa             	sar    %cl,%rdx
  403d41:	89 04 96             	mov    %eax,(%rsi,%rdx,4)
  403d44:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  403d47:	48 ff c8             	dec    %rax
  403d4a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  403d4d:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  403d51:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  403d55:	48 39 c8             	cmp    %rcx,%rax
  403d58:	0f 8c 99 00 00 00    	jl     403df7 <fallbackSimpleSort+0x217>
  403d5e:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  403d62:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  403d66:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  403d69:	89 45 dc             	mov    %eax,-0x24(%rbp)
  403d6c:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  403d70:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  403d74:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  403d77:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  403d7a:	89 45 d8             	mov    %eax,-0x28(%rbp)
  403d7d:	48 ff c2             	inc    %rdx
  403d80:	89 55 e0             	mov    %edx,-0x20(%rbp)
  403d83:	eb 39                	jmp    403dbe <fallbackSimpleSort+0x1de>
  403d85:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  403d8c:	00 00 00 00 
  403d90:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  403d94:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  403d98:	8b 34 82             	mov    (%rdx,%rax,4),%esi
  403d9b:	48 ff c8             	dec    %rax
  403d9e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403da5:	48 d3 e0             	shl    %cl,%rax
  403da8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  403daf:	48 d3 f8             	sar    %cl,%rax
  403db2:	89 34 82             	mov    %esi,(%rdx,%rax,4)
  403db5:	8b 45 e0             	mov    -0x20(%rbp),%eax
  403db8:	48 ff c0             	inc    %rax
  403dbb:	89 45 e0             	mov    %eax,-0x20(%rbp)
  403dbe:	48 63 4d e0          	movslq -0x20(%rbp),%rcx
  403dc2:	48 63 55 e8          	movslq -0x18(%rbp),%rdx
  403dc6:	48 31 c0             	xor    %rax,%rax
  403dc9:	48 39 d1             	cmp    %rdx,%rcx
  403dcc:	7f 1f                	jg     403ded <fallbackSimpleSort+0x20d>
  403dce:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  403dd2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  403dd6:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  403dd9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  403ddd:	8b 55 d8             	mov    -0x28(%rbp),%edx
  403de0:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  403de3:	48 39 d0             	cmp    %rdx,%rax
  403de6:	48 19 c0             	sbb    %rax,%rax
  403de9:	48 83 e0 01          	and    $0x1,%rax
  403ded:	48 85 c0             	test   %rax,%rax
  403df0:	75 9e                	jne    403d90 <fallbackSimpleSort+0x1b0>
  403df2:	e9 29 ff ff ff       	jmpq   403d20 <fallbackSimpleSort+0x140>
  403df7:	5d                   	pop    %rbp
  403df8:	c3                   	retq   
  403df9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000403e00 <fopen_output_safely>:
  403e00:	55                   	push   %rbp
  403e01:	48 89 e5             	mov    %rsp,%rbp
  403e04:	48 83 ec 30          	sub    $0x30,%rsp
  403e08:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  403e0c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  403e10:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  403e14:	48 c7 c6 c1 00 00 00 	mov    $0xc1,%rsi
  403e1b:	48 c7 c2 80 01 00 00 	mov    $0x180,%rdx
  403e22:	48 31 c0             	xor    %rax,%rax
  403e25:	e8 7e 42 01 00       	callq  4180a8 <open>
  403e2a:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  403e31:	00 00 00 
  403e34:	48 89 c2             	mov    %rax,%rdx
  403e37:	48 21 ca             	and    %rcx,%rdx
  403e3a:	48 39 ca             	cmp    %rcx,%rdx
  403e3d:	89 45 dc             	mov    %eax,-0x24(%rbp)
  403e40:	74 27                	je     403e69 <fopen_output_safely+0x69>
  403e42:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  403e46:	8b 7d dc             	mov    -0x24(%rbp),%edi
  403e49:	e8 2e 57 01 00       	callq  41957c <__fdopen>
  403e4e:	48 85 c0             	test   %rax,%rax
  403e51:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403e55:	75 08                	jne    403e5f <fopen_output_safely+0x5f>
  403e57:	8b 7d dc             	mov    -0x24(%rbp),%edi
  403e5a:	e8 51 85 01 00       	callq  41c3b0 <close>
  403e5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403e63:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403e67:	eb 08                	jmp    403e71 <fopen_output_safely+0x71>
  403e69:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  403e70:	00 
  403e71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403e75:	48 83 c4 30          	add    $0x30,%rsp
  403e79:	5d                   	pop    %rbp
  403e7a:	c3                   	retq   
  403e7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000403e80 <main>:
  403e80:	55                   	push   %rbp
  403e81:	48 89 e5             	mov    %rsp,%rbp
  403e84:	41 57                	push   %r15
  403e86:	41 56                	push   %r14
  403e88:	41 55                	push   %r13
  403e8a:	41 54                	push   %r12
  403e8c:	53                   	push   %rbx
  403e8d:	48 83 ec 48          	sub    $0x48,%rsp
  403e91:	48 31 c0             	xor    %rax,%rax
  403e94:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  403e97:	89 7d d0             	mov    %edi,-0x30(%rbp)
  403e9a:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  403e9e:	48 c7 05 9f 90 22 00 	movq   $0x0,0x22909f(%rip)        # 62cf48 <outputHandleJustInCase>
  403ea5:	00 00 00 00 
  403ea9:	88 05 c9 94 22 00    	mov    %al,0x2294c9(%rip)        # 62d378 <smallMode>
  403eaf:	88 05 d5 98 22 00    	mov    %al,0x2298d5(%rip)        # 62d78a <keepInputFiles>
  403eb5:	88 05 50 8c 22 00    	mov    %al,0x228c50(%rip)        # 62cb0b <forceOverwrite>
  403ebb:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  403ec2:	88 0d a8 94 22 00    	mov    %cl,0x2294a8(%rip)        # 62d370 <noisy>
  403ec8:	89 05 62 90 22 00    	mov    %eax,0x229062(%rip)        # 62cf30 <verbosity>
  403ece:	48 c7 c1 09 00 00 00 	mov    $0x9,%rcx
  403ed5:	89 0d 75 90 22 00    	mov    %ecx,0x229075(%rip)        # 62cf50 <blockSize100k>
  403edb:	88 05 2f 8c 22 00    	mov    %al,0x228c2f(%rip)        # 62cb10 <testFailsExist>
  403ee1:	88 05 a4 98 22 00    	mov    %al,0x2298a4(%rip)        # 62d78b <unzFailsExist>
  403ee7:	89 05 7f 94 22 00    	mov    %eax,0x22947f(%rip)        # 62d36c <numFileNames>
  403eed:	89 05 4d 90 22 00    	mov    %eax,0x22904d(%rip)        # 62cf40 <numFilesProcessed>
  403ef3:	48 c7 c1 1e 00 00 00 	mov    $0x1e,%rcx
  403efa:	89 0d 2c 90 22 00    	mov    %ecx,0x22902c(%rip)        # 62cf2c <workFactor>
  403f00:	88 05 04 8c 22 00    	mov    %al,0x228c04(%rip)        # 62cb0a <deleteOutputOnInterrupt>
  403f06:	89 05 80 98 22 00    	mov    %eax,0x229880(%rip)        # 62d78c <exitValue>
  403f0c:	89 45 c0             	mov    %eax,-0x40(%rbp)
  403f0f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  403f12:	48 bb 60 4c 40 00 00 	movabs $0x404c60,%rbx
  403f19:	00 00 00 
  403f1c:	48 c7 c7 0b 00 00 00 	mov    $0xb,%rdi
  403f23:	48 89 de             	mov    %rbx,%rsi
  403f26:	e8 b1 55 01 00       	callq  4194dc <signal>
  403f2b:	48 c7 c7 07 00 00 00 	mov    $0x7,%rdi
  403f32:	48 89 de             	mov    %rbx,%rsi
  403f35:	e8 a2 55 01 00       	callq  4194dc <signal>
  403f3a:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  403f41:	00 00 00 
  403f44:	48 bb 39 5d 42 00 00 	movabs $0x425d39,%rbx
  403f4b:	00 00 00 
  403f4e:	48 89 de             	mov    %rbx,%rsi
  403f51:	e8 8a 0d 00 00       	callq  404ce0 <copyFileName>
  403f56:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  403f5d:	00 00 00 
  403f60:	48 89 de             	mov    %rbx,%rsi
  403f63:	e8 78 0d 00 00       	callq  404ce0 <copyFileName>
  403f68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403f6c:	48 8b 30             	mov    (%rax),%rsi
  403f6f:	48 bf 00 c7 62 00 00 	movabs $0x62c700,%rdi
  403f76:	00 00 00 
  403f79:	e8 62 0d 00 00       	callq  404ce0 <copyFileName>
  403f7e:	48 c7 05 af 8f 22 00 	movq   $0x62c700,0x228faf(%rip)        # 62cf38 <progName>
  403f85:	00 c7 62 00 
  403f89:	48 c7 45 b8 00 c7 62 	movq   $0x62c700,-0x48(%rbp)
  403f90:	00 
  403f91:	49 bd ff ff ff ff 00 	movabs $0xffffffff,%r13
  403f98:	00 00 00 
  403f9b:	eb 07                	jmp    403fa4 <main+0x124>
  403f9d:	0f 1f 00             	nopl   (%rax)
  403fa0:	48 ff 45 b8          	incq   -0x48(%rbp)
  403fa4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403fa8:	48 0f be 00          	movsbq (%rax),%rax
  403fac:	4c 85 e8             	test   %r13,%rax
  403faf:	74 21                	je     403fd2 <main+0x152>
  403fb1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403fb5:	48 0f be 00          	movsbq (%rax),%rax
  403fb9:	4c 21 e8             	and    %r13,%rax
  403fbc:	48 83 f8 2f          	cmp    $0x2f,%rax
  403fc0:	75 de                	jne    403fa0 <main+0x120>
  403fc2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  403fc6:	48 ff c0             	inc    %rax
  403fc9:	48 89 05 68 8f 22 00 	mov    %rax,0x228f68(%rip)        # 62cf38 <progName>
  403fd0:	eb ce                	jmp    403fa0 <main+0x120>
  403fd2:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
  403fd9:	00 
  403fda:	48 be 40 5d 42 00 00 	movabs $0x425d40,%rsi
  403fe1:	00 00 00 
  403fe4:	48 8d 5d b0          	lea    -0x50(%rbp),%rbx
  403fe8:	48 89 df             	mov    %rbx,%rdi
  403feb:	e8 80 0d 00 00       	callq  404d70 <addFlagsFromEnvVar>
  403ff0:	48 be 46 5d 42 00 00 	movabs $0x425d46,%rsi
  403ff7:	00 00 00 
  403ffa:	48 89 df             	mov    %rbx,%rdi
  403ffd:	e8 6e 0d 00 00       	callq  404d70 <addFlagsFromEnvVar>
  404002:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404009:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  40400c:	eb 24                	jmp    404032 <main+0x1b2>
  40400e:	66 90                	xchg   %ax,%ax
  404010:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  404014:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  404018:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
  40401c:	48 8b 34 c1          	mov    (%rcx,%rax,8),%rsi
  404020:	e8 db 0e 00 00       	callq  404f00 <snocString>
  404025:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  404028:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  40402c:	48 ff c1             	inc    %rcx
  40402f:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  404032:	8b 45 d0             	mov    -0x30(%rbp),%eax
  404035:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  404039:	48 ff c8             	dec    %rax
  40403c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  404043:	48 d3 e0             	shl    %cl,%rax
  404046:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40404d:	48 d3 f8             	sar    %cl,%rax
  404050:	48 39 c2             	cmp    %rax,%rdx
  404053:	7e bb                	jle    404010 <main+0x190>
  404055:	48 c7 c0 07 00 00 00 	mov    $0x7,%rax
  40405c:	89 05 12 93 22 00    	mov    %eax,0x229312(%rip)        # 62d374 <longestFileName>
  404062:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404069:	88 45 a7             	mov    %al,-0x59(%rbp)
  40406c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404070:	4d 31 f6             	xor    %r14,%r14
  404073:	44 89 35 f2 92 22 00 	mov    %r14d,0x2292f2(%rip)        # 62d36c <numFileNames>
  40407a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  40407e:	49 bf 4b 5d 42 00 00 	movabs $0x425d4b,%r15
  404085:	00 00 00 
  404088:	eb 12                	jmp    40409c <main+0x21c>
  40408a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  404090:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404094:	48 8b 40 08          	mov    0x8(%rax),%rax
  404098:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  40409c:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  4040a1:	0f 84 9c 00 00 00    	je     404143 <main+0x2c3>
  4040a7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4040ab:	48 8b 38             	mov    (%rax),%rdi
  4040ae:	4c 89 fe             	mov    %r15,%rsi
  4040b1:	e8 6a 7b 01 00       	callq  41bc20 <strcmp>
  4040b6:	4c 85 e8             	test   %r13,%rax
  4040b9:	75 15                	jne    4040d0 <main+0x250>
  4040bb:	44 88 75 a7          	mov    %r14b,-0x59(%rbp)
  4040bf:	eb cf                	jmp    404090 <main+0x210>
  4040c1:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4040c8:	0f 1f 84 00 00 00 00 
  4040cf:	00 
  4040d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4040d4:	48 8b 00             	mov    (%rax),%rax
  4040d7:	48 0f be 00          	movsbq (%rax),%rax
  4040db:	4c 21 e8             	and    %r13,%rax
  4040de:	48 83 f8 2d          	cmp    $0x2d,%rax
  4040e2:	75 09                	jne    4040ed <main+0x26d>
  4040e4:	0f b6 45 a7          	movzbl -0x59(%rbp),%eax
  4040e8:	48 85 c0             	test   %rax,%rax
  4040eb:	75 a3                	jne    404090 <main+0x210>
  4040ed:	8b 05 79 92 22 00    	mov    0x229279(%rip),%eax        # 62d36c <numFileNames>
  4040f3:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  4040f7:	48 ff c0             	inc    %rax
  4040fa:	89 05 6c 92 22 00    	mov    %eax,0x22926c(%rip)        # 62d36c <numFileNames>
  404100:	48 63 1d 6d 92 22 00 	movslq 0x22926d(%rip),%rbx        # 62d374 <longestFileName>
  404107:	48 8b 39             	mov    (%rcx),%rdi
  40410a:	e8 51 7b 01 00       	callq  41bc60 <strlen>
  40410f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  404116:	48 d3 e0             	shl    %cl,%rax
  404119:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  404120:	48 d3 f8             	sar    %cl,%rax
  404123:	48 39 c3             	cmp    %rax,%rbx
  404126:	0f 8d 64 ff ff ff    	jge    404090 <main+0x210>
  40412c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404130:	48 8b 38             	mov    (%rax),%rdi
  404133:	e8 28 7b 01 00       	callq  41bc60 <strlen>
  404138:	89 05 36 92 22 00    	mov    %eax,0x229236(%rip)        # 62d374 <longestFileName>
  40413e:	e9 4d ff ff ff       	jmpq   404090 <main+0x210>
  404143:	8b 05 23 92 22 00    	mov    0x229223(%rip),%eax        # 62d36c <numFileNames>
  404149:	48 85 c0             	test   %rax,%rax
  40414c:	74 09                	je     404157 <main+0x2d7>
  40414e:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax
  404155:	eb 07                	jmp    40415e <main+0x2de>
  404157:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40415e:	89 05 8c 85 22 00    	mov    %eax,0x22858c(%rip)        # 62c6f0 <srcMode>
  404164:	48 8b 3d cd 8d 22 00 	mov    0x228dcd(%rip),%rdi        # 62cf38 <progName>
  40416b:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404172:	89 05 94 89 22 00    	mov    %eax,0x228994(%rip)        # 62cb0c <opMode>
  404178:	48 be 4e 5d 42 00 00 	movabs $0x425d4e,%rsi
  40417f:	00 00 00 
  404182:	e8 69 7f 01 00       	callq  41c0f0 <strstr>
  404187:	48 85 c0             	test   %rax,%rax
  40418a:	75 1b                	jne    4041a7 <main+0x327>
  40418c:	48 8b 3d a5 8d 22 00 	mov    0x228da5(%rip),%rdi        # 62cf38 <progName>
  404193:	48 be 54 5d 42 00 00 	movabs $0x425d54,%rsi
  40419a:	00 00 00 
  40419d:	e8 4e 7f 01 00       	callq  41c0f0 <strstr>
  4041a2:	48 85 c0             	test   %rax,%rax
  4041a5:	74 0d                	je     4041b4 <main+0x334>
  4041a7:	48 c7 c0 02 00 00 00 	mov    $0x2,%rax
  4041ae:	89 05 58 89 22 00    	mov    %eax,0x228958(%rip)        # 62cb0c <opMode>
  4041b4:	48 8b 3d 7d 8d 22 00 	mov    0x228d7d(%rip),%rdi        # 62cf38 <progName>
  4041bb:	48 be 5a 5d 42 00 00 	movabs $0x425d5a,%rsi
  4041c2:	00 00 00 
  4041c5:	e8 26 7f 01 00       	callq  41c0f0 <strstr>
  4041ca:	48 85 c0             	test   %rax,%rax
  4041cd:	75 51                	jne    404220 <main+0x3a0>
  4041cf:	48 8b 3d 62 8d 22 00 	mov    0x228d62(%rip),%rdi        # 62cf38 <progName>
  4041d6:	48 be 60 5d 42 00 00 	movabs $0x425d60,%rsi
  4041dd:	00 00 00 
  4041e0:	e8 0b 7f 01 00       	callq  41c0f0 <strstr>
  4041e5:	48 85 c0             	test   %rax,%rax
  4041e8:	75 36                	jne    404220 <main+0x3a0>
  4041ea:	48 8b 3d 47 8d 22 00 	mov    0x228d47(%rip),%rdi        # 62cf38 <progName>
  4041f1:	48 be 66 5d 42 00 00 	movabs $0x425d66,%rsi
  4041f8:	00 00 00 
  4041fb:	e8 f0 7e 01 00       	callq  41c0f0 <strstr>
  404200:	48 85 c0             	test   %rax,%rax
  404203:	75 1b                	jne    404220 <main+0x3a0>
  404205:	48 8b 3d 2c 8d 22 00 	mov    0x228d2c(%rip),%rdi        # 62cf38 <progName>
  40420c:	48 be 6b 5d 42 00 00 	movabs $0x425d6b,%rsi
  404213:	00 00 00 
  404216:	e8 d5 7e 01 00       	callq  41c0f0 <strstr>
  40421b:	48 85 c0             	test   %rax,%rax
  40421e:	74 2c                	je     40424c <main+0x3cc>
  404220:	8b 05 46 91 22 00    	mov    0x229146(%rip),%eax        # 62d36c <numFileNames>
  404226:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  40422d:	89 0d d9 88 22 00    	mov    %ecx,0x2288d9(%rip)        # 62cb0c <opMode>
  404233:	48 85 c0             	test   %rax,%rax
  404236:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40423d:	74 07                	je     404246 <main+0x3c6>
  40423f:	48 c7 c0 02 00 00 00 	mov    $0x2,%rax
  404246:	89 05 a4 84 22 00    	mov    %eax,0x2284a4(%rip)        # 62c6f0 <srcMode>
  40424c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404250:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  404254:	48 bb 4b 5d 42 00 00 	movabs $0x425d4b,%rbx
  40425b:	00 00 00 
  40425e:	49 c7 c6 01 00 00 00 	mov    $0x1,%r14
  404265:	49 c7 c7 02 00 00 00 	mov    $0x2,%r15
  40426c:	49 c7 c4 03 00 00 00 	mov    $0x3,%r12
  404273:	eb 17                	jmp    40428c <main+0x40c>
  404275:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40427c:	00 00 00 00 
  404280:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404284:	48 8b 40 08          	mov    0x8(%rax),%rax
  404288:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  40428c:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  404291:	0f 84 37 02 00 00    	je     4044ce <main+0x64e>
  404297:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40429b:	48 8b 38             	mov    (%rax),%rdi
  40429e:	48 89 de             	mov    %rbx,%rsi
  4042a1:	e8 7a 79 01 00       	callq  41bc20 <strcmp>
  4042a6:	4c 85 e8             	test   %r13,%rax
  4042a9:	0f 84 1f 02 00 00    	je     4044ce <main+0x64e>
  4042af:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4042b3:	48 8b 00             	mov    (%rax),%rax
  4042b6:	48 0f be 00          	movsbq (%rax),%rax
  4042ba:	4c 21 e8             	and    %r13,%rax
  4042bd:	48 83 f8 2d          	cmp    $0x2d,%rax
  4042c1:	75 bd                	jne    404280 <main+0x400>
  4042c3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4042c7:	48 8b 00             	mov    (%rax),%rax
  4042ca:	48 0f be 40 01       	movsbq 0x1(%rax),%rax
  4042cf:	4c 21 e8             	and    %r13,%rax
  4042d2:	48 83 f8 2d          	cmp    $0x2d,%rax
  4042d6:	74 a8                	je     404280 <main+0x400>
  4042d8:	44 89 75 c0          	mov    %r14d,-0x40(%rbp)
  4042dc:	eb 0b                	jmp    4042e9 <main+0x469>
  4042de:	66 90                	xchg   %ax,%ax
  4042e0:	8b 45 c0             	mov    -0x40(%rbp),%eax
  4042e3:	48 ff c0             	inc    %rax
  4042e6:	89 45 c0             	mov    %eax,-0x40(%rbp)
  4042e9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4042ed:	48 63 4d c0          	movslq -0x40(%rbp),%rcx
  4042f1:	48 8b 00             	mov    (%rax),%rax
  4042f4:	48 0f be 04 08       	movsbq (%rax,%rcx,1),%rax
  4042f9:	4c 85 e8             	test   %r13,%rax
  4042fc:	74 82                	je     404280 <main+0x400>
  4042fe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404302:	48 63 4d c0          	movslq -0x40(%rbp),%rcx
  404306:	48 8b 00             	mov    (%rax),%rax
  404309:	48 0f be 04 08       	movsbq (%rax,%rcx,1),%rax
  40430e:	48 83 f8 4b          	cmp    $0x4b,%rax
  404312:	7f 2c                	jg     404340 <main+0x4c0>
  404314:	48 83 c0 cf          	add    $0xffffffffffffffcf,%rax
  404318:	4c 21 e8             	and    %r13,%rax
  40431b:	48 83 f8 08          	cmp    $0x8,%rax
  40431f:	0f 87 6a 01 00 00    	ja     40448f <main+0x60f>
  404325:	ff 24 c5 68 5c 42 00 	jmpq   *0x425c68(,%rax,8)
  40432c:	44 89 35 1d 8c 22 00 	mov    %r14d,0x228c1d(%rip)        # 62cf50 <blockSize100k>
  404333:	eb ab                	jmp    4042e0 <main+0x460>
  404335:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40433c:	00 00 00 00 
  404340:	48 83 f8 55          	cmp    $0x55,%rax
  404344:	7f 1a                	jg     404360 <main+0x4e0>
  404346:	4c 21 e8             	and    %r13,%rax
  404349:	48 83 f8 4c          	cmp    $0x4c,%rax
  40434d:	74 24                	je     404373 <main+0x4f3>
  40434f:	e9 3b 01 00 00       	jmpq   40448f <main+0x60f>
  404354:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40435b:	00 00 00 00 00 
  404360:	48 83 f8 62          	cmp    $0x62,%rax
  404364:	7f 17                	jg     40437d <main+0x4fd>
  404366:	4c 21 e8             	and    %r13,%rax
  404369:	48 83 f8 56          	cmp    $0x56,%rax
  40436d:	0f 85 1c 01 00 00    	jne    40448f <main+0x60f>
  404373:	e8 28 0c 00 00       	callq  404fa0 <license>
  404378:	e9 63 ff ff ff       	jmpq   4042e0 <main+0x460>
  40437d:	48 83 c0 9d          	add    $0xffffffffffffff9d,%rax
  404381:	4c 21 e8             	and    %r13,%rax
  404384:	48 83 f8 17          	cmp    $0x17,%rax
  404388:	0f 87 01 01 00 00    	ja     40448f <main+0x60f>
  40438e:	ff 24 c5 a8 5b 42 00 	jmpq   *0x425ba8(,%rax,8)
  404395:	44 89 3d 54 83 22 00 	mov    %r15d,0x228354(%rip)        # 62c6f0 <srcMode>
  40439c:	e9 3f ff ff ff       	jmpq   4042e0 <main+0x460>
  4043a1:	44 89 3d a8 8b 22 00 	mov    %r15d,0x228ba8(%rip)        # 62cf50 <blockSize100k>
  4043a8:	e9 33 ff ff ff       	jmpq   4042e0 <main+0x460>
  4043ad:	44 89 25 9c 8b 22 00 	mov    %r12d,0x228b9c(%rip)        # 62cf50 <blockSize100k>
  4043b4:	e9 27 ff ff ff       	jmpq   4042e0 <main+0x460>
  4043b9:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
  4043c0:	89 05 8a 8b 22 00    	mov    %eax,0x228b8a(%rip)        # 62cf50 <blockSize100k>
  4043c6:	e9 15 ff ff ff       	jmpq   4042e0 <main+0x460>
  4043cb:	48 c7 c0 05 00 00 00 	mov    $0x5,%rax
  4043d2:	89 05 78 8b 22 00    	mov    %eax,0x228b78(%rip)        # 62cf50 <blockSize100k>
  4043d8:	e9 03 ff ff ff       	jmpq   4042e0 <main+0x460>
  4043dd:	48 c7 c0 06 00 00 00 	mov    $0x6,%rax
  4043e4:	89 05 66 8b 22 00    	mov    %eax,0x228b66(%rip)        # 62cf50 <blockSize100k>
  4043ea:	e9 f1 fe ff ff       	jmpq   4042e0 <main+0x460>
  4043ef:	48 c7 c0 07 00 00 00 	mov    $0x7,%rax
  4043f6:	89 05 54 8b 22 00    	mov    %eax,0x228b54(%rip)        # 62cf50 <blockSize100k>
  4043fc:	e9 df fe ff ff       	jmpq   4042e0 <main+0x460>
  404401:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax
  404408:	89 05 42 8b 22 00    	mov    %eax,0x228b42(%rip)        # 62cf50 <blockSize100k>
  40440e:	e9 cd fe ff ff       	jmpq   4042e0 <main+0x460>
  404413:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax
  40441a:	89 05 30 8b 22 00    	mov    %eax,0x228b30(%rip)        # 62cf50 <blockSize100k>
  404420:	e9 bb fe ff ff       	jmpq   4042e0 <main+0x460>
  404425:	44 89 3d e0 86 22 00 	mov    %r15d,0x2286e0(%rip)        # 62cb0c <opMode>
  40442c:	e9 af fe ff ff       	jmpq   4042e0 <main+0x460>
  404431:	44 88 35 d3 86 22 00 	mov    %r14b,0x2286d3(%rip)        # 62cb0b <forceOverwrite>
  404438:	e9 a3 fe ff ff       	jmpq   4042e0 <main+0x460>
  40443d:	44 88 35 46 93 22 00 	mov    %r14b,0x229346(%rip)        # 62d78a <keepInputFiles>
  404444:	e9 97 fe ff ff       	jmpq   4042e0 <main+0x460>
  404449:	48 31 c0             	xor    %rax,%rax
  40444c:	88 05 1e 8f 22 00    	mov    %al,0x228f1e(%rip)        # 62d370 <noisy>
  404452:	e9 89 fe ff ff       	jmpq   4042e0 <main+0x460>
  404457:	44 88 35 1a 8f 22 00 	mov    %r14b,0x228f1a(%rip)        # 62d378 <smallMode>
  40445e:	e9 7d fe ff ff       	jmpq   4042e0 <main+0x460>
  404463:	44 89 25 a2 86 22 00 	mov    %r12d,0x2286a2(%rip)        # 62cb0c <opMode>
  40446a:	e9 71 fe ff ff       	jmpq   4042e0 <main+0x460>
  40446f:	8b 05 bb 8a 22 00    	mov    0x228abb(%rip),%eax        # 62cf30 <verbosity>
  404475:	48 ff c0             	inc    %rax
  404478:	89 05 b2 8a 22 00    	mov    %eax,0x228ab2(%rip)        # 62cf30 <verbosity>
  40447e:	e9 5d fe ff ff       	jmpq   4042e0 <main+0x460>
  404483:	44 89 35 82 86 22 00 	mov    %r14d,0x228682(%rip)        # 62cb0c <opMode>
  40448a:	e9 51 fe ff ff       	jmpq   4042e0 <main+0x460>
  40448f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404493:	48 8b 3d 36 45 02 00 	mov    0x24536(%rip),%rdi        # 4289d0 <stderr>
  40449a:	48 8b 15 97 8a 22 00 	mov    0x228a97(%rip),%rdx        # 62cf38 <progName>
  4044a1:	48 8b 08             	mov    (%rax),%rcx
  4044a4:	48 be 70 5d 42 00 00 	movabs $0x425d70,%rsi
  4044ab:	00 00 00 
  4044ae:	48 31 c0             	xor    %rax,%rax
  4044b1:	e8 42 58 01 00       	callq  419cf8 <fprintf>
  4044b6:	48 8b 3d 7b 8a 22 00 	mov    0x228a7b(%rip),%rdi        # 62cf38 <progName>
  4044bd:	e8 1e 0b 00 00       	callq  404fe0 <usage>
  4044c2:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  4044c9:	e8 83 3b 01 00       	callq  418051 <exit>
  4044ce:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4044d2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  4044d6:	48 bb 4b 5d 42 00 00 	movabs $0x425d4b,%rbx
  4044dd:	00 00 00 
  4044e0:	49 be 83 5d 42 00 00 	movabs $0x425d83,%r14
  4044e7:	00 00 00 
  4044ea:	49 c7 c4 02 00 00 00 	mov    $0x2,%r12
  4044f1:	49 bf 8c 5d 42 00 00 	movabs $0x425d8c,%r15
  4044f8:	00 00 00 
  4044fb:	eb 0f                	jmp    40450c <main+0x68c>
  4044fd:	0f 1f 00             	nopl   (%rax)
  404500:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404504:	48 8b 40 08          	mov    0x8(%rax),%rax
  404508:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  40450c:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  404511:	0f 84 27 03 00 00    	je     40483e <main+0x9be>
  404517:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40451b:	48 8b 38             	mov    (%rax),%rdi
  40451e:	48 89 de             	mov    %rbx,%rsi
  404521:	e8 fa 76 01 00       	callq  41bc20 <strcmp>
  404526:	4c 85 e8             	test   %r13,%rax
  404529:	0f 84 0f 03 00 00    	je     40483e <main+0x9be>
  40452f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404533:	48 8b 38             	mov    (%rax),%rdi
  404536:	4c 89 f6             	mov    %r14,%rsi
  404539:	e8 e2 76 01 00       	callq  41bc20 <strcmp>
  40453e:	4c 85 e8             	test   %r13,%rax
  404541:	75 0d                	jne    404550 <main+0x6d0>
  404543:	44 89 25 a6 81 22 00 	mov    %r12d,0x2281a6(%rip)        # 62c6f0 <srcMode>
  40454a:	eb b4                	jmp    404500 <main+0x680>
  40454c:	0f 1f 40 00          	nopl   0x0(%rax)
  404550:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404554:	48 8b 38             	mov    (%rax),%rdi
  404557:	4c 89 fe             	mov    %r15,%rsi
  40455a:	e8 c1 76 01 00       	callq  41bc20 <strcmp>
  40455f:	4c 85 e8             	test   %r13,%rax
  404562:	75 0c                	jne    404570 <main+0x6f0>
  404564:	44 89 25 a1 85 22 00 	mov    %r12d,0x2285a1(%rip)        # 62cb0c <opMode>
  40456b:	eb 93                	jmp    404500 <main+0x680>
  40456d:	0f 1f 00             	nopl   (%rax)
  404570:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404574:	48 8b 38             	mov    (%rax),%rdi
  404577:	48 be 99 5d 42 00 00 	movabs $0x425d99,%rsi
  40457e:	00 00 00 
  404581:	e8 9a 76 01 00       	callq  41bc20 <strcmp>
  404586:	4c 85 e8             	test   %r13,%rax
  404589:	75 12                	jne    40459d <main+0x71d>
  40458b:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404592:	89 05 74 85 22 00    	mov    %eax,0x228574(%rip)        # 62cb0c <opMode>
  404598:	e9 63 ff ff ff       	jmpq   404500 <main+0x680>
  40459d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4045a1:	48 8b 38             	mov    (%rax),%rdi
  4045a4:	48 be a4 5d 42 00 00 	movabs $0x425da4,%rsi
  4045ab:	00 00 00 
  4045ae:	e8 6d 76 01 00       	callq  41bc20 <strcmp>
  4045b3:	4c 85 e8             	test   %r13,%rax
  4045b6:	75 12                	jne    4045ca <main+0x74a>
  4045b8:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4045bf:	88 05 46 85 22 00    	mov    %al,0x228546(%rip)        # 62cb0b <forceOverwrite>
  4045c5:	e9 36 ff ff ff       	jmpq   404500 <main+0x680>
  4045ca:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4045ce:	48 8b 38             	mov    (%rax),%rdi
  4045d1:	48 be ac 5d 42 00 00 	movabs $0x425dac,%rsi
  4045d8:	00 00 00 
  4045db:	e8 40 76 01 00       	callq  41bc20 <strcmp>
  4045e0:	4c 85 e8             	test   %r13,%rax
  4045e3:	75 12                	jne    4045f7 <main+0x777>
  4045e5:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax
  4045ec:	89 05 1a 85 22 00    	mov    %eax,0x22851a(%rip)        # 62cb0c <opMode>
  4045f2:	e9 09 ff ff ff       	jmpq   404500 <main+0x680>
  4045f7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4045fb:	48 8b 38             	mov    (%rax),%rdi
  4045fe:	48 be b3 5d 42 00 00 	movabs $0x425db3,%rsi
  404605:	00 00 00 
  404608:	e8 13 76 01 00       	callq  41bc20 <strcmp>
  40460d:	4c 85 e8             	test   %r13,%rax
  404610:	75 12                	jne    404624 <main+0x7a4>
  404612:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404619:	88 05 6b 91 22 00    	mov    %al,0x22916b(%rip)        # 62d78a <keepInputFiles>
  40461f:	e9 dc fe ff ff       	jmpq   404500 <main+0x680>
  404624:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404628:	48 8b 38             	mov    (%rax),%rdi
  40462b:	48 be ba 5d 42 00 00 	movabs $0x425dba,%rsi
  404632:	00 00 00 
  404635:	e8 e6 75 01 00       	callq  41bc20 <strcmp>
  40463a:	4c 85 e8             	test   %r13,%rax
  40463d:	75 12                	jne    404651 <main+0x7d1>
  40463f:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404646:	88 05 2c 8d 22 00    	mov    %al,0x228d2c(%rip)        # 62d378 <smallMode>
  40464c:	e9 af fe ff ff       	jmpq   404500 <main+0x680>
  404651:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404655:	48 8b 38             	mov    (%rax),%rdi
  404658:	48 be c2 5d 42 00 00 	movabs $0x425dc2,%rsi
  40465f:	00 00 00 
  404662:	e8 b9 75 01 00       	callq  41bc20 <strcmp>
  404667:	4c 85 e8             	test   %r13,%rax
  40466a:	75 0e                	jne    40467a <main+0x7fa>
  40466c:	48 31 c0             	xor    %rax,%rax
  40466f:	88 05 fb 8c 22 00    	mov    %al,0x228cfb(%rip)        # 62d370 <noisy>
  404675:	e9 86 fe ff ff       	jmpq   404500 <main+0x680>
  40467a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40467e:	48 8b 38             	mov    (%rax),%rdi
  404681:	48 be ca 5d 42 00 00 	movabs $0x425dca,%rsi
  404688:	00 00 00 
  40468b:	e8 90 75 01 00       	callq  41bc20 <strcmp>
  404690:	4c 85 e8             	test   %r13,%rax
  404693:	75 0a                	jne    40469f <main+0x81f>
  404695:	e8 06 09 00 00       	callq  404fa0 <license>
  40469a:	e9 61 fe ff ff       	jmpq   404500 <main+0x680>
  40469f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4046a3:	48 8b 38             	mov    (%rax),%rdi
  4046a6:	48 be d4 5d 42 00 00 	movabs $0x425dd4,%rsi
  4046ad:	00 00 00 
  4046b0:	e8 6b 75 01 00       	callq  41bc20 <strcmp>
  4046b5:	4c 85 e8             	test   %r13,%rax
  4046b8:	75 0a                	jne    4046c4 <main+0x844>
  4046ba:	e8 e1 08 00 00       	callq  404fa0 <license>
  4046bf:	e9 3c fe ff ff       	jmpq   404500 <main+0x680>
  4046c4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4046c8:	48 8b 38             	mov    (%rax),%rdi
  4046cb:	48 be de 5d 42 00 00 	movabs $0x425dde,%rsi
  4046d2:	00 00 00 
  4046d5:	e8 46 75 01 00       	callq  41bc20 <strcmp>
  4046da:	4c 85 e8             	test   %r13,%rax
  4046dd:	75 12                	jne    4046f1 <main+0x871>
  4046df:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4046e6:	89 05 40 88 22 00    	mov    %eax,0x228840(%rip)        # 62cf2c <workFactor>
  4046ec:	e9 0f fe ff ff       	jmpq   404500 <main+0x680>
  4046f1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4046f5:	48 8b 38             	mov    (%rax),%rdi
  4046f8:	48 be ec 5d 42 00 00 	movabs $0x425dec,%rsi
  4046ff:	00 00 00 
  404702:	e8 19 75 01 00       	callq  41bc20 <strcmp>
  404707:	4c 85 e8             	test   %r13,%rax
  40470a:	74 1b                	je     404727 <main+0x8a7>
  40470c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404710:	48 8b 38             	mov    (%rax),%rdi
  404713:	48 be fe 5d 42 00 00 	movabs $0x425dfe,%rsi
  40471a:	00 00 00 
  40471d:	e8 fe 74 01 00       	callq  41bc20 <strcmp>
  404722:	4c 85 e8             	test   %r13,%rax
  404725:	75 11                	jne    404738 <main+0x8b8>
  404727:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40472b:	48 8b 38             	mov    (%rax),%rdi
  40472e:	e8 ed 08 00 00       	callq  405020 <redundant>
  404733:	e9 c8 fd ff ff       	jmpq   404500 <main+0x680>
  404738:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40473c:	48 8b 38             	mov    (%rax),%rdi
  40473f:	48 be 10 5e 42 00 00 	movabs $0x425e10,%rsi
  404746:	00 00 00 
  404749:	e8 d2 74 01 00       	callq  41bc20 <strcmp>
  40474e:	4c 85 e8             	test   %r13,%rax
  404751:	75 12                	jne    404765 <main+0x8e5>
  404753:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40475a:	89 05 f0 87 22 00    	mov    %eax,0x2287f0(%rip)        # 62cf50 <blockSize100k>
  404760:	e9 9b fd ff ff       	jmpq   404500 <main+0x680>
  404765:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404769:	48 8b 38             	mov    (%rax),%rdi
  40476c:	48 be 17 5e 42 00 00 	movabs $0x425e17,%rsi
  404773:	00 00 00 
  404776:	e8 a5 74 01 00       	callq  41bc20 <strcmp>
  40477b:	4c 85 e8             	test   %r13,%rax
  40477e:	75 12                	jne    404792 <main+0x912>
  404780:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax
  404787:	89 05 c3 87 22 00    	mov    %eax,0x2287c3(%rip)        # 62cf50 <blockSize100k>
  40478d:	e9 6e fd ff ff       	jmpq   404500 <main+0x680>
  404792:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404796:	48 8b 38             	mov    (%rax),%rdi
  404799:	48 be 1e 5e 42 00 00 	movabs $0x425e1e,%rsi
  4047a0:	00 00 00 
  4047a3:	e8 78 74 01 00       	callq  41bc20 <strcmp>
  4047a8:	4c 85 e8             	test   %r13,%rax
  4047ab:	75 14                	jne    4047c1 <main+0x941>
  4047ad:	8b 05 7d 87 22 00    	mov    0x22877d(%rip),%eax        # 62cf30 <verbosity>
  4047b3:	48 ff c0             	inc    %rax
  4047b6:	89 05 74 87 22 00    	mov    %eax,0x228774(%rip)        # 62cf30 <verbosity>
  4047bc:	e9 3f fd ff ff       	jmpq   404500 <main+0x680>
  4047c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4047c5:	48 8b 38             	mov    (%rax),%rdi
  4047c8:	48 be 28 5e 42 00 00 	movabs $0x425e28,%rsi
  4047cf:	00 00 00 
  4047d2:	e8 49 74 01 00       	callq  41bc20 <strcmp>
  4047d7:	4c 85 e8             	test   %r13,%rax
  4047da:	0f 84 01 04 00 00    	je     404be1 <main+0xd61>
  4047e0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4047e4:	48 8b 00             	mov    (%rax),%rax
  4047e7:	48 c7 c2 02 00 00 00 	mov    $0x2,%rdx
  4047ee:	48 89 c7             	mov    %rax,%rdi
  4047f1:	48 89 de             	mov    %rbx,%rsi
  4047f4:	e8 e7 74 01 00       	callq  41bce0 <strncmp>
  4047f9:	4c 85 e8             	test   %r13,%rax
  4047fc:	0f 85 fe fc ff ff    	jne    404500 <main+0x680>
  404802:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404806:	48 8b 0d c3 41 02 00 	mov    0x241c3(%rip),%rcx        # 4289d0 <stderr>
  40480d:	48 8b 15 24 87 22 00 	mov    0x228724(%rip),%rdx        # 62cf38 <progName>
  404814:	48 8b 18             	mov    (%rax),%rbx
  404817:	48 be 70 5d 42 00 00 	movabs $0x425d70,%rsi
  40481e:	00 00 00 
  404821:	48 31 c0             	xor    %rax,%rax
  404824:	48 89 cf             	mov    %rcx,%rdi
  404827:	48 89 d9             	mov    %rbx,%rcx
  40482a:	e8 c9 54 01 00       	callq  419cf8 <fprintf>
  40482f:	48 8b 05 02 87 22 00 	mov    0x228702(%rip),%rax        # 62cf38 <progName>
  404836:	48 89 c7             	mov    %rax,%rdi
  404839:	e9 7f fc ff ff       	jmpq   4044bd <main+0x63d>
  40483e:	48 63 05 eb 86 22 00 	movslq 0x2286eb(%rip),%rax        # 62cf30 <verbosity>
  404845:	48 83 f8 05          	cmp    $0x5,%rax
  404849:	7c 0d                	jl     404858 <main+0x9d8>
  40484b:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
  404852:	89 05 d8 86 22 00    	mov    %eax,0x2286d8(%rip)        # 62cf30 <verbosity>
  404858:	8b 05 ae 82 22 00    	mov    0x2282ae(%rip),%eax        # 62cb0c <opMode>
  40485e:	48 83 f8 01          	cmp    $0x1,%rax
  404862:	75 26                	jne    40488a <main+0xa0a>
  404864:	0f b6 05 0d 8b 22 00 	movzbl 0x228b0d(%rip),%eax        # 62d378 <smallMode>
  40486b:	48 85 c0             	test   %rax,%rax
  40486e:	74 1a                	je     40488a <main+0xa0a>
  404870:	48 63 05 d9 86 22 00 	movslq 0x2286d9(%rip),%rax        # 62cf50 <blockSize100k>
  404877:	48 83 f8 03          	cmp    $0x3,%rax
  40487b:	7c 0d                	jl     40488a <main+0xa0a>
  40487d:	48 c7 c0 02 00 00 00 	mov    $0x2,%rax
  404884:	89 05 c6 86 22 00    	mov    %eax,0x2286c6(%rip)        # 62cf50 <blockSize100k>
  40488a:	8b 05 7c 82 22 00    	mov    0x22827c(%rip),%eax        # 62cb0c <opMode>
  404890:	48 83 f8 03          	cmp    $0x3,%rax
  404894:	75 10                	jne    4048a6 <main+0xa26>
  404896:	8b 05 54 7e 22 00    	mov    0x227e54(%rip),%eax        # 62c6f0 <srcMode>
  40489c:	48 83 f8 02          	cmp    $0x2,%rax
  4048a0:	0f 84 52 03 00 00    	je     404bf8 <main+0xd78>
  4048a6:	8b 05 44 7e 22 00    	mov    0x227e44(%rip),%eax        # 62c6f0 <srcMode>
  4048ac:	48 83 f8 02          	cmp    $0x2,%rax
  4048b0:	75 18                	jne    4048ca <main+0xa4a>
  4048b2:	8b 05 b4 8a 22 00    	mov    0x228ab4(%rip),%eax        # 62d36c <numFileNames>
  4048b8:	48 85 c0             	test   %rax,%rax
  4048bb:	75 0d                	jne    4048ca <main+0xa4a>
  4048bd:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4048c4:	89 05 26 7e 22 00    	mov    %eax,0x227e26(%rip)        # 62c6f0 <srcMode>
  4048ca:	8b 05 3c 82 22 00    	mov    0x22823c(%rip),%eax        # 62cb0c <opMode>
  4048d0:	48 83 f8 01          	cmp    $0x1,%rax
  4048d4:	74 09                	je     4048df <main+0xa5f>
  4048d6:	48 31 c0             	xor    %rax,%rax
  4048d9:	89 05 71 86 22 00    	mov    %eax,0x228671(%rip)        # 62cf50 <blockSize100k>
  4048df:	8b 05 0b 7e 22 00    	mov    0x227e0b(%rip),%eax        # 62c6f0 <srcMode>
  4048e5:	48 83 f8 03          	cmp    $0x3,%rax
  4048e9:	75 37                	jne    404922 <main+0xaa2>
  4048eb:	48 bb 60 50 40 00 00 	movabs $0x405060,%rbx
  4048f2:	00 00 00 
  4048f5:	48 c7 c7 02 00 00 00 	mov    $0x2,%rdi
  4048fc:	48 89 de             	mov    %rbx,%rsi
  4048ff:	e8 d8 4b 01 00       	callq  4194dc <signal>
  404904:	48 c7 c7 0f 00 00 00 	mov    $0xf,%rdi
  40490b:	48 89 de             	mov    %rbx,%rsi
  40490e:	e8 c9 4b 01 00       	callq  4194dc <signal>
  404913:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  40491a:	48 89 de             	mov    %rbx,%rsi
  40491d:	e8 ba 4b 01 00       	callq  4194dc <signal>
  404922:	8b 05 e4 81 22 00    	mov    0x2281e4(%rip),%eax        # 62cb0c <opMode>
  404928:	48 83 f8 01          	cmp    $0x1,%rax
  40492c:	75 19                	jne    404947 <main+0xac7>
  40492e:	8b 05 bc 7d 22 00    	mov    0x227dbc(%rip),%eax        # 62c6f0 <srcMode>
  404934:	48 83 f8 01          	cmp    $0x1,%rax
  404938:	75 44                	jne    40497e <main+0xafe>
  40493a:	48 31 ff             	xor    %rdi,%rdi
  40493d:	e8 5e 07 00 00       	callq  4050a0 <compress>
  404942:	e9 3f 02 00 00       	jmpq   404b86 <main+0xd06>
  404947:	8b 05 bf 81 22 00    	mov    0x2281bf(%rip),%eax        # 62cb0c <opMode>
  40494d:	48 83 f8 02          	cmp    $0x2,%rax
  404951:	0f 85 c3 00 00 00    	jne    404a1a <main+0xb9a>
  404957:	8b 05 93 7d 22 00    	mov    0x227d93(%rip),%eax        # 62c6f0 <srcMode>
  40495d:	4d 31 f6             	xor    %r14,%r14
  404960:	44 88 35 24 8e 22 00 	mov    %r14b,0x228e24(%rip)        # 62d78b <unzFailsExist>
  404967:	48 83 f8 01          	cmp    $0x1,%rax
  40496b:	0f 85 d0 00 00 00    	jne    404a41 <main+0xbc1>
  404971:	48 31 ff             	xor    %rdi,%rdi
  404974:	e8 67 0e 00 00       	callq  4057e0 <uncompress>
  404979:	e9 4c 01 00 00       	jmpq   404aca <main+0xc4a>
  40497e:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  404985:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  404989:	88 45 a7             	mov    %al,-0x59(%rbp)
  40498c:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
  404990:	48 bb 4b 5d 42 00 00 	movabs $0x425d4b,%rbx
  404997:	00 00 00 
  40499a:	4d 31 f6             	xor    %r14,%r14
  40499d:	eb 0d                	jmp    4049ac <main+0xb2c>
  40499f:	90                   	nop
  4049a0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4049a4:	48 8b 40 08          	mov    0x8(%rax),%rax
  4049a8:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  4049ac:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  4049b1:	0f 84 cf 01 00 00    	je     404b86 <main+0xd06>
  4049b7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4049bb:	48 8b 38             	mov    (%rax),%rdi
  4049be:	48 89 de             	mov    %rbx,%rsi
  4049c1:	e8 5a 72 01 00       	callq  41bc20 <strcmp>
  4049c6:	4c 85 e8             	test   %r13,%rax
  4049c9:	75 15                	jne    4049e0 <main+0xb60>
  4049cb:	44 88 75 a7          	mov    %r14b,-0x59(%rbp)
  4049cf:	eb cf                	jmp    4049a0 <main+0xb20>
  4049d1:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4049d8:	0f 1f 84 00 00 00 00 
  4049df:	00 
  4049e0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4049e4:	48 8b 00             	mov    (%rax),%rax
  4049e7:	48 0f be 00          	movsbq (%rax),%rax
  4049eb:	4c 21 e8             	and    %r13,%rax
  4049ee:	48 83 f8 2d          	cmp    $0x2d,%rax
  4049f2:	75 09                	jne    4049fd <main+0xb7d>
  4049f4:	0f b6 45 a7          	movzbl -0x59(%rbp),%eax
  4049f8:	48 85 c0             	test   %rax,%rax
  4049fb:	75 a3                	jne    4049a0 <main+0xb20>
  4049fd:	8b 05 3d 85 22 00    	mov    0x22853d(%rip),%eax        # 62cf40 <numFilesProcessed>
  404a03:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  404a07:	48 ff c0             	inc    %rax
  404a0a:	89 05 30 85 22 00    	mov    %eax,0x228530(%rip)        # 62cf40 <numFilesProcessed>
  404a10:	48 8b 39             	mov    (%rcx),%rdi
  404a13:	e8 88 06 00 00       	callq  4050a0 <compress>
  404a18:	eb 86                	jmp    4049a0 <main+0xb20>
  404a1a:	8b 05 d0 7c 22 00    	mov    0x227cd0(%rip),%eax        # 62c6f0 <srcMode>
  404a20:	4d 31 f6             	xor    %r14,%r14
  404a23:	44 88 35 e6 80 22 00 	mov    %r14b,0x2280e6(%rip)        # 62cb10 <testFailsExist>
  404a2a:	48 83 f8 01          	cmp    $0x1,%rax
  404a2e:	0f 85 ab 00 00 00    	jne    404adf <main+0xc5f>
  404a34:	48 31 ff             	xor    %rdi,%rdi
  404a37:	e8 e4 15 00 00       	callq  406020 <testf>
  404a3c:	e9 29 01 00 00       	jmpq   404b6a <main+0xcea>
  404a41:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404a45:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  404a4c:	88 4d a7             	mov    %cl,-0x59(%rbp)
  404a4f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  404a53:	48 bb 4b 5d 42 00 00 	movabs $0x425d4b,%rbx
  404a5a:	00 00 00 
  404a5d:	eb 0d                	jmp    404a6c <main+0xbec>
  404a5f:	90                   	nop
  404a60:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404a64:	48 8b 40 08          	mov    0x8(%rax),%rax
  404a68:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  404a6c:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  404a71:	74 57                	je     404aca <main+0xc4a>
  404a73:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404a77:	48 8b 38             	mov    (%rax),%rdi
  404a7a:	48 89 de             	mov    %rbx,%rsi
  404a7d:	e8 9e 71 01 00       	callq  41bc20 <strcmp>
  404a82:	4c 85 e8             	test   %r13,%rax
  404a85:	75 09                	jne    404a90 <main+0xc10>
  404a87:	44 88 75 a7          	mov    %r14b,-0x59(%rbp)
  404a8b:	eb d3                	jmp    404a60 <main+0xbe0>
  404a8d:	0f 1f 00             	nopl   (%rax)
  404a90:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404a94:	48 8b 00             	mov    (%rax),%rax
  404a97:	48 0f be 00          	movsbq (%rax),%rax
  404a9b:	4c 21 e8             	and    %r13,%rax
  404a9e:	48 83 f8 2d          	cmp    $0x2d,%rax
  404aa2:	75 09                	jne    404aad <main+0xc2d>
  404aa4:	0f b6 45 a7          	movzbl -0x59(%rbp),%eax
  404aa8:	48 85 c0             	test   %rax,%rax
  404aab:	75 b3                	jne    404a60 <main+0xbe0>
  404aad:	8b 05 8d 84 22 00    	mov    0x22848d(%rip),%eax        # 62cf40 <numFilesProcessed>
  404ab3:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  404ab7:	48 ff c0             	inc    %rax
  404aba:	89 05 80 84 22 00    	mov    %eax,0x228480(%rip)        # 62cf40 <numFilesProcessed>
  404ac0:	48 8b 39             	mov    (%rcx),%rdi
  404ac3:	e8 18 0d 00 00       	callq  4057e0 <uncompress>
  404ac8:	eb 96                	jmp    404a60 <main+0xbe0>
  404aca:	0f b6 05 ba 8c 22 00 	movzbl 0x228cba(%rip),%eax        # 62d78b <unzFailsExist>
  404ad1:	48 85 c0             	test   %rax,%rax
  404ad4:	0f 84 ac 00 00 00    	je     404b86 <main+0xd06>
  404ada:	e9 67 01 00 00       	jmpq   404c46 <main+0xdc6>
  404adf:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404ae3:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  404aea:	88 4d a7             	mov    %cl,-0x59(%rbp)
  404aed:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  404af1:	48 bb 4b 5d 42 00 00 	movabs $0x425d4b,%rbx
  404af8:	00 00 00 
  404afb:	eb 0f                	jmp    404b0c <main+0xc8c>
  404afd:	0f 1f 00             	nopl   (%rax)
  404b00:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404b04:	48 8b 40 08          	mov    0x8(%rax),%rax
  404b08:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  404b0c:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  404b11:	74 57                	je     404b6a <main+0xcea>
  404b13:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404b17:	48 8b 38             	mov    (%rax),%rdi
  404b1a:	48 89 de             	mov    %rbx,%rsi
  404b1d:	e8 fe 70 01 00       	callq  41bc20 <strcmp>
  404b22:	4c 85 e8             	test   %r13,%rax
  404b25:	75 09                	jne    404b30 <main+0xcb0>
  404b27:	44 88 75 a7          	mov    %r14b,-0x59(%rbp)
  404b2b:	eb d3                	jmp    404b00 <main+0xc80>
  404b2d:	0f 1f 00             	nopl   (%rax)
  404b30:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404b34:	48 8b 00             	mov    (%rax),%rax
  404b37:	48 0f be 00          	movsbq (%rax),%rax
  404b3b:	4c 21 e8             	and    %r13,%rax
  404b3e:	48 83 f8 2d          	cmp    $0x2d,%rax
  404b42:	75 09                	jne    404b4d <main+0xccd>
  404b44:	0f b6 45 a7          	movzbl -0x59(%rbp),%eax
  404b48:	48 85 c0             	test   %rax,%rax
  404b4b:	75 b3                	jne    404b00 <main+0xc80>
  404b4d:	8b 05 ed 83 22 00    	mov    0x2283ed(%rip),%eax        # 62cf40 <numFilesProcessed>
  404b53:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  404b57:	48 ff c0             	inc    %rax
  404b5a:	89 05 e0 83 22 00    	mov    %eax,0x2283e0(%rip)        # 62cf40 <numFilesProcessed>
  404b60:	48 8b 39             	mov    (%rcx),%rdi
  404b63:	e8 b8 14 00 00       	callq  406020 <testf>
  404b68:	eb 96                	jmp    404b00 <main+0xc80>
  404b6a:	0f b6 05 9f 7f 22 00 	movzbl 0x227f9f(%rip),%eax        # 62cb10 <testFailsExist>
  404b71:	48 85 c0             	test   %rax,%rax
  404b74:	74 10                	je     404b86 <main+0xd06>
  404b76:	0f b6 05 f3 87 22 00 	movzbl 0x2287f3(%rip),%eax        # 62d370 <noisy>
  404b7d:	48 85 c0             	test   %rax,%rax
  404b80:	0f 85 a1 00 00 00    	jne    404c27 <main+0xda7>
  404b86:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404b8a:	eb 11                	jmp    404b9d <main+0xd1d>
  404b8c:	0f 1f 40 00          	nopl   0x0(%rax)
  404b90:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
  404b94:	e8 17 3c 01 00       	callq  4187b0 <free>
  404b99:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  404b9d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  404ba1:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  404ba6:	74 24                	je     404bcc <main+0xd4c>
  404ba8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404bac:	48 8b 40 08          	mov    0x8(%rax),%rax
  404bb0:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  404bb4:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  404bb8:	48 83 39 00          	cmpq   $0x0,(%rcx)
  404bbc:	74 d2                	je     404b90 <main+0xd10>
  404bbe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404bc2:	48 8b 38             	mov    (%rax),%rdi
  404bc5:	e8 e6 3b 01 00       	callq  4187b0 <free>
  404bca:	eb c4                	jmp    404b90 <main+0xd10>
  404bcc:	8b 05 ba 8b 22 00    	mov    0x228bba(%rip),%eax        # 62d78c <exitValue>
  404bd2:	48 83 c4 48          	add    $0x48,%rsp
  404bd6:	5b                   	pop    %rbx
  404bd7:	41 5c                	pop    %r12
  404bd9:	41 5d                	pop    %r13
  404bdb:	41 5e                	pop    %r14
  404bdd:	41 5f                	pop    %r15
  404bdf:	5d                   	pop    %rbp
  404be0:	c3                   	retq   
  404be1:	48 8b 05 50 83 22 00 	mov    0x228350(%rip),%rax        # 62cf38 <progName>
  404be8:	48 89 c7             	mov    %rax,%rdi
  404beb:	e8 f0 03 00 00       	callq  404fe0 <usage>
  404bf0:	48 31 ff             	xor    %rdi,%rdi
  404bf3:	e8 59 34 01 00       	callq  418051 <exit>
  404bf8:	48 8b 0d d1 3d 02 00 	mov    0x23dd1(%rip),%rcx        # 4289d0 <stderr>
  404bff:	48 8b 15 32 83 22 00 	mov    0x228332(%rip),%rdx        # 62cf38 <progName>
  404c06:	48 be 2f 5e 42 00 00 	movabs $0x425e2f,%rsi
  404c0d:	00 00 00 
  404c10:	48 31 c0             	xor    %rax,%rax
  404c13:	48 89 cf             	mov    %rcx,%rdi
  404c16:	e8 dd 50 01 00       	callq  419cf8 <fprintf>
  404c1b:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  404c22:	e8 2a 34 01 00       	callq  418051 <exit>
  404c27:	48 8b 0d a2 3d 02 00 	mov    0x23da2(%rip),%rcx        # 4289d0 <stderr>
  404c2e:	48 ba 2a 66 42 00 00 	movabs $0x42662a,%rdx
  404c35:	00 00 00 
  404c38:	48 31 c0             	xor    %rax,%rax
  404c3b:	48 89 cf             	mov    %rcx,%rdi
  404c3e:	48 89 d6             	mov    %rdx,%rsi
  404c41:	e8 b2 50 01 00       	callq  419cf8 <fprintf>
  404c46:	48 c7 c7 02 00 00 00 	mov    $0x2,%rdi
  404c4d:	e8 8e 13 00 00       	callq  405fe0 <setExit>
  404c52:	8b 05 34 8b 22 00    	mov    0x228b34(%rip),%eax        # 62d78c <exitValue>
  404c58:	48 89 c7             	mov    %rax,%rdi
  404c5b:	e8 f1 33 01 00       	callq  418051 <exit>

0000000000404c60 <mySIGSEGVorSIGBUScatcher>:
  404c60:	55                   	push   %rbp
  404c61:	48 89 e5             	mov    %rsp,%rbp
  404c64:	48 83 ec 10          	sub    $0x10,%rsp
  404c68:	8b 05 9e 7e 22 00    	mov    0x227e9e(%rip),%eax        # 62cb0c <opMode>
  404c6e:	89 7d fc             	mov    %edi,-0x4(%rbp)
  404c71:	48 83 f8 01          	cmp    $0x1,%rax
  404c75:	75 1a                	jne    404c91 <mySIGSEGVorSIGBUScatcher+0x31>
  404c77:	48 8b 3d 52 3d 02 00 	mov    0x23d52(%rip),%rdi        # 4289d0 <stderr>
  404c7e:	48 8b 15 b3 82 22 00 	mov    0x2282b3(%rip),%rdx        # 62cf38 <progName>
  404c85:	48 be 2a 6f 42 00 00 	movabs $0x426f2a,%rsi
  404c8c:	00 00 00 
  404c8f:	eb 18                	jmp    404ca9 <mySIGSEGVorSIGBUScatcher+0x49>
  404c91:	48 8b 3d 38 3d 02 00 	mov    0x23d38(%rip),%rdi        # 4289d0 <stderr>
  404c98:	48 8b 15 99 82 22 00 	mov    0x228299(%rip),%rdx        # 62cf38 <progName>
  404c9f:	48 be 8f 72 42 00 00 	movabs $0x42728f,%rsi
  404ca6:	00 00 00 
  404ca9:	48 31 c0             	xor    %rax,%rax
  404cac:	e8 47 50 01 00       	callq  419cf8 <fprintf>
  404cb1:	e8 9a 1c 00 00       	callq  406950 <showFileNames>
  404cb6:	8b 05 50 7e 22 00    	mov    0x227e50(%rip),%eax        # 62cb0c <opMode>
  404cbc:	48 83 f8 01          	cmp    $0x1,%rax
  404cc0:	75 0c                	jne    404cce <mySIGSEGVorSIGBUScatcher+0x6e>
  404cc2:	48 c7 c7 03 00 00 00 	mov    $0x3,%rdi
  404cc9:	e8 c2 1c 00 00       	callq  406990 <cleanUpAndFail>
  404cce:	e8 7d 25 00 00       	callq  407250 <cadvise>
  404cd3:	48 c7 c7 02 00 00 00 	mov    $0x2,%rdi
  404cda:	e8 b1 1c 00 00       	callq  406990 <cleanUpAndFail>
  404cdf:	90                   	nop

0000000000404ce0 <copyFileName>:
  404ce0:	55                   	push   %rbp
  404ce1:	48 89 e5             	mov    %rsp,%rbp
  404ce4:	48 83 ec 10          	sub    $0x10,%rsp
  404ce8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  404cec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  404cf0:	48 89 f7             	mov    %rsi,%rdi
  404cf3:	e8 68 6f 01 00       	callq  41bc60 <strlen>
  404cf8:	48 3d 01 04 00 00    	cmp    $0x401,%rax
  404cfe:	73 27                	jae    404d27 <copyFileName+0x47>
  404d00:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  404d04:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  404d08:	48 c7 c2 00 04 00 00 	mov    $0x400,%rdx
  404d0f:	e8 2c 70 01 00       	callq  41bd40 <strncpy>
  404d14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404d18:	48 31 c9             	xor    %rcx,%rcx
  404d1b:	88 88 00 04 00 00    	mov    %cl,0x400(%rax)
  404d21:	48 83 c4 10          	add    $0x10,%rsp
  404d25:	5d                   	pop    %rbp
  404d26:	c3                   	retq   
  404d27:	48 8b 15 a2 3c 02 00 	mov    0x23ca2(%rip),%rdx        # 4289d0 <stderr>
  404d2e:	4c 8b 45 f0          	mov    -0x10(%rbp),%r8
  404d32:	48 be b2 6e 42 00 00 	movabs $0x426eb2,%rsi
  404d39:	00 00 00 
  404d3c:	48 c7 c1 00 04 00 00 	mov    $0x400,%rcx
  404d43:	48 31 c0             	xor    %rax,%rax
  404d46:	48 89 d7             	mov    %rdx,%rdi
  404d49:	4c 89 c2             	mov    %r8,%rdx
  404d4c:	e8 a7 4f 01 00       	callq  419cf8 <fprintf>
  404d51:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  404d58:	e8 83 12 00 00       	callq  405fe0 <setExit>
  404d5d:	8b 05 29 8a 22 00    	mov    0x228a29(%rip),%eax        # 62d78c <exitValue>
  404d63:	48 89 c7             	mov    %rax,%rdi
  404d66:	e8 e6 32 01 00       	callq  418051 <exit>
  404d6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000404d70 <addFlagsFromEnvVar>:
  404d70:	55                   	push   %rbp
  404d71:	48 89 e5             	mov    %rsp,%rbp
  404d74:	41 57                	push   %r15
  404d76:	41 56                	push   %r14
  404d78:	41 55                	push   %r13
  404d7a:	41 54                	push   %r12
  404d7c:	53                   	push   %rbx
  404d7d:	48 83 ec 38          	sub    $0x38,%rsp
  404d81:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  404d85:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  404d89:	48 89 f7             	mov    %rsi,%rdi
  404d8c:	e8 e3 31 01 00       	callq  417f74 <getenv>
  404d91:	48 85 c0             	test   %rax,%rax
  404d94:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  404d98:	0f 84 4f 01 00 00    	je     404eed <addFlagsFromEnvVar+0x17d>
  404d9e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404da2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  404da6:	4d 31 ff             	xor    %r15,%r15
  404da9:	44 89 7d c4          	mov    %r15d,-0x3c(%rbp)
  404dad:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  404db4:	00 00 00 
  404db7:	49 bc 00 00 00 00 00 	movabs $0x0,%r12
  404dbe:	00 00 00 
  404dc1:	49 bd 01 00 00 00 00 	movabs $0x1,%r13
  404dc8:	00 00 00 
  404dcb:	49 be 80 d3 62 00 00 	movabs $0x62d380,%r14
  404dd2:	00 00 00 
  404dd5:	eb 2a                	jmp    404e01 <addFlagsFromEnvVar+0x91>
  404dd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  404dde:	00 00 
  404de0:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  404de4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  404de8:	44 88 b8 80 d3 62 00 	mov    %r15b,0x62d380(%rax)
  404def:	48 8b 39             	mov    (%rcx),%rdi
  404df2:	4c 89 f6             	mov    %r14,%rsi
  404df5:	e8 06 01 00 00       	callq  404f00 <snocString>
  404dfa:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  404dfe:	48 89 01             	mov    %rax,(%rcx)
  404e01:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  404e05:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  404e09:	48 0f be 04 01       	movsbq (%rcx,%rax,1),%rax
  404e0e:	48 85 d8             	test   %rbx,%rax
  404e11:	0f 84 d6 00 00 00    	je     404eed <addFlagsFromEnvVar+0x17d>
  404e17:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  404e1b:	48 01 45 a8          	add    %rax,-0x58(%rbp)
  404e1f:	44 89 7d c4          	mov    %r15d,-0x3c(%rbp)
  404e23:	eb 0f                	jmp    404e34 <addFlagsFromEnvVar+0xc4>
  404e25:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  404e2c:	00 00 00 00 
  404e30:	48 ff 45 a8          	incq   -0x58(%rbp)
  404e34:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  404e38:	48 0f be 38          	movsbq (%rax),%rdi
  404e3c:	e8 07 30 01 00       	callq  417e48 <isspace>
  404e41:	48 85 d8             	test   %rbx,%rax
  404e44:	75 ea                	jne    404e30 <addFlagsFromEnvVar+0xc0>
  404e46:	eb 11                	jmp    404e59 <addFlagsFromEnvVar+0xe9>
  404e48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  404e4f:	00 
  404e50:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  404e53:	48 ff c0             	inc    %rax
  404e56:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  404e59:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  404e5d:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  404e61:	48 0f be 0c 01       	movsbq (%rcx,%rax,1),%rcx
  404e66:	48 31 c0             	xor    %rax,%rax
  404e69:	48 85 d9             	test   %rbx,%rcx
  404e6c:	74 1d                	je     404e8b <addFlagsFromEnvVar+0x11b>
  404e6e:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  404e72:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  404e76:	48 0f be 3c 01       	movsbq (%rcx,%rax,1),%rdi
  404e7b:	e8 c8 2f 01 00       	callq  417e48 <isspace>
  404e80:	48 85 d8             	test   %rbx,%rax
  404e83:	4c 89 e0             	mov    %r12,%rax
  404e86:	75 03                	jne    404e8b <addFlagsFromEnvVar+0x11b>
  404e88:	4c 89 e8             	mov    %r13,%rax
  404e8b:	48 85 c0             	test   %rax,%rax
  404e8e:	75 c0                	jne    404e50 <addFlagsFromEnvVar+0xe0>
  404e90:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  404e94:	48 85 c0             	test   %rax,%rax
  404e97:	0f 8e 64 ff ff ff    	jle    404e01 <addFlagsFromEnvVar+0x91>
  404e9d:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  404ea1:	48 3d 01 04 00 00    	cmp    $0x401,%rax
  404ea7:	89 45 bc             	mov    %eax,-0x44(%rbp)
  404eaa:	7c 0a                	jl     404eb6 <addFlagsFromEnvVar+0x146>
  404eac:	48 c7 c0 00 04 00 00 	mov    $0x400,%rax
  404eb3:	89 45 bc             	mov    %eax,-0x44(%rbp)
  404eb6:	44 89 7d c0          	mov    %r15d,-0x40(%rbp)
  404eba:	eb 1f                	jmp    404edb <addFlagsFromEnvVar+0x16b>
  404ebc:	0f 1f 40 00          	nopl   0x0(%rax)
  404ec0:	48 63 45 c0          	movslq -0x40(%rbp),%rax
  404ec4:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  404ec8:	8b 55 c0             	mov    -0x40(%rbp),%edx
  404ecb:	0f b6 0c 01          	movzbl (%rcx,%rax,1),%ecx
  404ecf:	88 88 80 d3 62 00    	mov    %cl,0x62d380(%rax)
  404ed5:	48 ff c2             	inc    %rdx
  404ed8:	89 55 c0             	mov    %edx,-0x40(%rbp)
  404edb:	48 63 45 c0          	movslq -0x40(%rbp),%rax
  404edf:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  404ee3:	48 39 c8             	cmp    %rcx,%rax
  404ee6:	7c d8                	jl     404ec0 <addFlagsFromEnvVar+0x150>
  404ee8:	e9 f3 fe ff ff       	jmpq   404de0 <addFlagsFromEnvVar+0x70>
  404eed:	48 83 c4 38          	add    $0x38,%rsp
  404ef1:	5b                   	pop    %rbx
  404ef2:	41 5c                	pop    %r12
  404ef4:	41 5d                	pop    %r13
  404ef6:	41 5e                	pop    %r14
  404ef8:	41 5f                	pop    %r15
  404efa:	5d                   	pop    %rbp
  404efb:	c3                   	retq   
  404efc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000404f00 <snocString>:
  404f00:	55                   	push   %rbp
  404f01:	48 89 e5             	mov    %rsp,%rbp
  404f04:	48 83 ec 30          	sub    $0x30,%rsp
  404f08:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  404f0c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  404f11:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  404f15:	74 3f                	je     404f56 <snocString+0x56>
  404f17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404f1b:	eb 0b                	jmp    404f28 <snocString+0x28>
  404f1d:	0f 1f 00             	nopl   (%rax)
  404f20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404f24:	48 8b 40 08          	mov    0x8(%rax),%rax
  404f28:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  404f2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404f30:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
  404f35:	75 e9                	jne    404f20 <snocString+0x20>
  404f37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404f3b:	48 8b 78 08          	mov    0x8(%rax),%rdi
  404f3f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  404f43:	e8 b8 ff ff ff       	callq  404f00 <snocString>
  404f48:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  404f4c:	48 89 41 08          	mov    %rax,0x8(%rcx)
  404f50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404f54:	eb 36                	jmp    404f8c <snocString+0x8c>
  404f56:	e8 b5 2a 00 00       	callq  407a10 <mkCell>
  404f5b:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  404f5f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  404f63:	e8 f8 6c 01 00       	callq  41bc60 <strlen>
  404f68:	48 8d 78 05          	lea    0x5(%rax),%rdi
  404f6c:	e8 df 2a 00 00       	callq  407a50 <myMalloc>
  404f71:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  404f75:	48 89 01             	mov    %rax,(%rcx)
  404f78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404f7c:	48 8b 38             	mov    (%rax),%rdi
  404f7f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  404f83:	e8 c8 6c 01 00       	callq  41bc50 <strcpy>
  404f88:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404f8c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  404f90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404f94:	48 83 c4 30          	add    $0x30,%rsp
  404f98:	5d                   	pop    %rbp
  404f99:	c3                   	retq   
  404f9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000404fa0 <license>:
  404fa0:	55                   	push   %rbp
  404fa1:	48 89 e5             	mov    %rsp,%rbp
  404fa4:	53                   	push   %rbx
  404fa5:	50                   	push   %rax
  404fa6:	48 8b 1d 23 3a 02 00 	mov    0x23a23(%rip),%rbx        # 4289d0 <stderr>
  404fad:	e8 3e 2b 00 00       	callq  407af0 <BZ2_bzlibVersion>
  404fb2:	48 89 c1             	mov    %rax,%rcx
  404fb5:	48 be a1 6c 42 00 00 	movabs $0x426ca1,%rsi
  404fbc:	00 00 00 
  404fbf:	48 31 c0             	xor    %rax,%rax
  404fc2:	48 89 df             	mov    %rbx,%rdi
  404fc5:	48 89 ca             	mov    %rcx,%rdx
  404fc8:	e8 2b 4d 01 00       	callq  419cf8 <fprintf>
  404fcd:	48 83 c4 08          	add    $0x8,%rsp
  404fd1:	5b                   	pop    %rbx
  404fd2:	5d                   	pop    %rbp
  404fd3:	c3                   	retq   
  404fd4:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  404fdb:	00 00 00 00 00 

0000000000404fe0 <usage>:
  404fe0:	55                   	push   %rbp
  404fe1:	48 89 e5             	mov    %rsp,%rbp
  404fe4:	53                   	push   %rbx
  404fe5:	50                   	push   %rax
  404fe6:	48 8b 1d e3 39 02 00 	mov    0x239e3(%rip),%rbx        # 4289d0 <stderr>
  404fed:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  404ff1:	e8 fa 2a 00 00       	callq  407af0 <BZ2_bzlibVersion>
  404ff6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  404ffa:	48 89 c2             	mov    %rax,%rdx
  404ffd:	48 be d3 67 42 00 00 	movabs $0x4267d3,%rsi
  405004:	00 00 00 
  405007:	48 31 c0             	xor    %rax,%rax
  40500a:	48 89 df             	mov    %rbx,%rdi
  40500d:	e8 e6 4c 01 00       	callq  419cf8 <fprintf>
  405012:	48 83 c4 08          	add    $0x8,%rsp
  405016:	5b                   	pop    %rbx
  405017:	5d                   	pop    %rbp
  405018:	c3                   	retq   
  405019:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000405020 <redundant>:
  405020:	55                   	push   %rbp
  405021:	48 89 e5             	mov    %rsp,%rbp
  405024:	48 83 ec 10          	sub    $0x10,%rsp
  405028:	4c 8b 05 a1 39 02 00 	mov    0x239a1(%rip),%r8        # 4289d0 <stderr>
  40502f:	48 8b 15 02 7f 22 00 	mov    0x227f02(%rip),%rdx        # 62cf38 <progName>
  405036:	48 89 f9             	mov    %rdi,%rcx
  405039:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  40503d:	48 be a2 67 42 00 00 	movabs $0x4267a2,%rsi
  405044:	00 00 00 
  405047:	48 31 c0             	xor    %rax,%rax
  40504a:	4c 89 c7             	mov    %r8,%rdi
  40504d:	e8 a6 4c 01 00       	callq  419cf8 <fprintf>
  405052:	48 83 c4 10          	add    $0x10,%rsp
  405056:	5d                   	pop    %rbp
  405057:	c3                   	retq   
  405058:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40505f:	00 

0000000000405060 <mySignalCatcher>:
  405060:	55                   	push   %rbp
  405061:	48 89 e5             	mov    %rsp,%rbp
  405064:	48 83 ec 10          	sub    $0x10,%rsp
  405068:	48 8b 0d 61 39 02 00 	mov    0x23961(%rip),%rcx        # 4289d0 <stderr>
  40506f:	48 8b 15 c2 7e 22 00 	mov    0x227ec2(%rip),%rdx        # 62cf38 <progName>
  405076:	89 7d fc             	mov    %edi,-0x4(%rbp)
  405079:	48 be 75 67 42 00 00 	movabs $0x426775,%rsi
  405080:	00 00 00 
  405083:	48 31 c0             	xor    %rax,%rax
  405086:	48 89 cf             	mov    %rcx,%rdi
  405089:	e8 6a 4c 01 00       	callq  419cf8 <fprintf>
  40508e:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  405095:	e8 f6 18 00 00       	callq  406990 <cleanUpAndFail>
  40509a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004050a0 <compress>:
  4050a0:	55                   	push   %rbp
  4050a1:	48 89 e5             	mov    %rsp,%rbp
  4050a4:	41 57                	push   %r15
  4050a6:	41 56                	push   %r14
  4050a8:	53                   	push   %rbx
  4050a9:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
  4050b0:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  4050b4:	48 31 c0             	xor    %rax,%rax
  4050b7:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4050bc:	88 05 48 7a 22 00    	mov    %al,0x227a48(%rip)        # 62cb0a <deleteOutputOnInterrupt>
  4050c2:	75 10                	jne    4050d4 <compress+0x34>
  4050c4:	8b 05 26 76 22 00    	mov    0x227626(%rip),%eax        # 62c6f0 <srcMode>
  4050ca:	48 83 f8 01          	cmp    $0x1,%rax
  4050ce:	0f 85 da 06 00 00    	jne    4057ae <compress+0x70e>
  4050d4:	8b 05 16 76 22 00    	mov    0x227616(%rip),%eax        # 62c6f0 <srcMode>
  4050da:	48 83 f8 03          	cmp    $0x3,%rax
  4050de:	74 16                	je     4050f6 <compress+0x56>
  4050e0:	48 83 f8 02          	cmp    $0x2,%rax
  4050e4:	75 4d                	jne    405133 <compress+0x93>
  4050e6:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4050ea:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  4050f1:	00 00 00 
  4050f4:	eb 57                	jmp    40514d <compress+0xad>
  4050f6:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4050fa:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405101:	00 00 00 
  405104:	e8 d7 fb ff ff       	callq  404ce0 <copyFileName>
  405109:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40510d:	48 bb 20 cb 62 00 00 	movabs $0x62cb20,%rbx
  405114:	00 00 00 
  405117:	48 89 df             	mov    %rbx,%rdi
  40511a:	e8 c1 fb ff ff       	callq  404ce0 <copyFileName>
  40511f:	48 be 20 5d 42 00 00 	movabs $0x425d20,%rsi
  405126:	00 00 00 
  405129:	48 89 df             	mov    %rbx,%rdi
  40512c:	e8 8f 69 01 00       	callq  41bac0 <strcat>
  405131:	eb 38                	jmp    40516b <compress+0xcb>
  405133:	48 83 f8 01          	cmp    $0x1,%rax
  405137:	75 32                	jne    40516b <compress+0xcb>
  405139:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405140:	00 00 00 
  405143:	48 be 69 5e 42 00 00 	movabs $0x425e69,%rsi
  40514a:	00 00 00 
  40514d:	e8 8e fb ff ff       	callq  404ce0 <copyFileName>
  405152:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  405159:	00 00 00 
  40515c:	48 be ab 63 42 00 00 	movabs $0x4263ab,%rsi
  405163:	00 00 00 
  405166:	e8 75 fb ff ff       	callq  404ce0 <copyFileName>
  40516b:	8b 05 7f 75 22 00    	mov    0x22757f(%rip),%eax        # 62c6f0 <srcMode>
  405171:	48 83 f8 01          	cmp    $0x1,%rax
  405175:	74 41                	je     4051b8 <compress+0x118>
  405177:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  40517e:	00 00 00 
  405181:	e8 5a 12 00 00       	callq  4063e0 <containsDubiousChars>
  405186:	48 85 c0             	test   %rax,%rax
  405189:	74 2d                	je     4051b8 <compress+0x118>
  40518b:	0f b6 05 de 81 22 00 	movzbl 0x2281de(%rip),%eax        # 62d370 <noisy>
  405192:	48 85 c0             	test   %rax,%rax
  405195:	0f 84 7a 05 00 00    	je     405715 <compress+0x675>
  40519b:	48 8b 3d 2e 38 02 00 	mov    0x2382e(%rip),%rdi        # 4289d0 <stderr>
  4051a2:	48 8b 15 8f 7d 22 00 	mov    0x227d8f(%rip),%rdx        # 62cf38 <progName>
  4051a9:	48 be 71 5e 42 00 00 	movabs $0x425e71,%rsi
  4051b0:	00 00 00 
  4051b3:	e9 09 01 00 00       	jmpq   4052c1 <compress+0x221>
  4051b8:	8b 05 32 75 22 00    	mov    0x227532(%rip),%eax        # 62c6f0 <srcMode>
  4051be:	48 83 f8 01          	cmp    $0x1,%rax
  4051c2:	74 18                	je     4051dc <compress+0x13c>
  4051c4:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  4051cb:	00 00 00 
  4051ce:	e8 1d 12 00 00       	callq  4063f0 <fileExists>
  4051d3:	48 85 c0             	test   %rax,%rax
  4051d6:	0f 84 f7 04 00 00    	je     4056d3 <compress+0x633>
  4051dc:	48 31 c0             	xor    %rax,%rax
  4051df:	89 45 c8             	mov    %eax,-0x38(%rbp)
  4051e2:	48 bb 60 cf 62 00 00 	movabs $0x62cf60,%rbx
  4051e9:	00 00 00 
  4051ec:	eb 0b                	jmp    4051f9 <compress+0x159>
  4051ee:	66 90                	xchg   %ax,%ax
  4051f0:	8b 45 c8             	mov    -0x38(%rbp),%eax
  4051f3:	48 ff c0             	inc    %rax
  4051f6:	89 45 c8             	mov    %eax,-0x38(%rbp)
  4051f9:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  4051fd:	48 83 f8 03          	cmp    $0x3,%rax
  405201:	7f 64                	jg     405267 <compress+0x1c7>
  405203:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  405207:	48 8b 34 c5 10 a8 62 	mov    0x62a810(,%rax,8),%rsi
  40520e:	00 
  40520f:	48 89 df             	mov    %rbx,%rdi
  405212:	e8 69 20 00 00       	callq  407280 <hasSuffix>
  405217:	48 85 c0             	test   %rax,%rax
  40521a:	74 d4                	je     4051f0 <compress+0x150>
  40521c:	0f b6 05 4d 81 22 00 	movzbl 0x22814d(%rip),%eax        # 62d370 <noisy>
  405223:	48 85 c0             	test   %rax,%rax
  405226:	0f 84 e9 04 00 00    	je     405715 <compress+0x675>
  40522c:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  405230:	48 8b 3d 99 37 02 00 	mov    0x23799(%rip),%rdi        # 4289d0 <stderr>
  405237:	48 8b 15 fa 7c 22 00 	mov    0x227cfa(%rip),%rdx        # 62cf38 <progName>
  40523e:	4c 8b 04 c5 10 a8 62 	mov    0x62a810(,%rax,8),%r8
  405245:	00 
  405246:	48 be ca 66 42 00 00 	movabs $0x4266ca,%rsi
  40524d:	00 00 00 
  405250:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  405257:	00 00 00 
  40525a:	48 31 c0             	xor    %rax,%rax
  40525d:	e8 96 4a 01 00       	callq  419cf8 <fprintf>
  405262:	e9 ae 04 00 00       	jmpq   405715 <compress+0x675>
  405267:	8b 05 83 74 22 00    	mov    0x227483(%rip),%eax        # 62c6f0 <srcMode>
  40526d:	48 83 f8 03          	cmp    $0x3,%rax
  405271:	74 0c                	je     40527f <compress+0x1df>
  405273:	8b 05 77 74 22 00    	mov    0x227477(%rip),%eax        # 62c6f0 <srcMode>
  405279:	48 83 f8 02          	cmp    $0x2,%rax
  40527d:	75 59                	jne    4052d8 <compress+0x238>
  40527f:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405286:	00 00 00 
  405289:	48 8d b5 38 ff ff ff 	lea    -0xc8(%rbp),%rsi
  405290:	e8 cf 42 01 00       	callq  419564 <stat>
  405295:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
  40529b:	48 25 00 f0 00 00    	and    $0xf000,%rax
  4052a1:	48 3d 00 40 00 00    	cmp    $0x4000,%rax
  4052a7:	75 2f                	jne    4052d8 <compress+0x238>
  4052a9:	48 8b 3d 20 37 02 00 	mov    0x23720(%rip),%rdi        # 4289d0 <stderr>
  4052b0:	48 8b 15 81 7c 22 00 	mov    0x227c81(%rip),%rdx        # 62cf38 <progName>
  4052b7:	48 be b6 5e 42 00 00 	movabs $0x425eb6,%rsi
  4052be:	00 00 00 
  4052c1:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  4052c8:	00 00 00 
  4052cb:	48 31 c0             	xor    %rax,%rax
  4052ce:	e8 25 4a 01 00       	callq  419cf8 <fprintf>
  4052d3:	e9 3d 04 00 00       	jmpq   405715 <compress+0x675>
  4052d8:	8b 05 12 74 22 00    	mov    0x227412(%rip),%eax        # 62c6f0 <srcMode>
  4052de:	48 83 f8 03          	cmp    $0x3,%rax
  4052e2:	75 4a                	jne    40532e <compress+0x28e>
  4052e4:	0f b6 05 20 78 22 00 	movzbl 0x227820(%rip),%eax        # 62cb0b <forceOverwrite>
  4052eb:	48 85 c0             	test   %rax,%rax
  4052ee:	75 3e                	jne    40532e <compress+0x28e>
  4052f0:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  4052f7:	00 00 00 
  4052fa:	e8 f1 18 00 00       	callq  406bf0 <notAStandardFile>
  4052ff:	48 85 c0             	test   %rax,%rax
  405302:	74 2a                	je     40532e <compress+0x28e>
  405304:	0f b6 05 65 80 22 00 	movzbl 0x228065(%rip),%eax        # 62d370 <noisy>
  40530b:	48 85 c0             	test   %rax,%rax
  40530e:	0f 84 01 04 00 00    	je     405715 <compress+0x675>
  405314:	48 8b 3d b5 36 02 00 	mov    0x236b5(%rip),%rdi        # 4289d0 <stderr>
  40531b:	48 8b 15 16 7c 22 00 	mov    0x227c16(%rip),%rdx        # 62cf38 <progName>
  405322:	48 be dc 63 42 00 00 	movabs $0x4263dc,%rsi
  405329:	00 00 00 
  40532c:	eb 93                	jmp    4052c1 <compress+0x221>
  40532e:	8b 05 bc 73 22 00    	mov    0x2273bc(%rip),%eax        # 62c6f0 <srcMode>
  405334:	48 83 f8 03          	cmp    $0x3,%rax
  405338:	75 33                	jne    40536d <compress+0x2cd>
  40533a:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  405341:	00 00 00 
  405344:	e8 a7 10 00 00       	callq  4063f0 <fileExists>
  405349:	48 85 c0             	test   %rax,%rax
  40534c:	74 1f                	je     40536d <compress+0x2cd>
  40534e:	0f b6 05 b6 77 22 00 	movzbl 0x2277b6(%rip),%eax        # 62cb0b <forceOverwrite>
  405355:	48 85 c0             	test   %rax,%rax
  405358:	0f 84 6b 02 00 00    	je     4055c9 <compress+0x529>
  40535e:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  405365:	00 00 00 
  405368:	e8 9b 4d 01 00       	callq  41a108 <remove>
  40536d:	8b 05 7d 73 22 00    	mov    0x22737d(%rip),%eax        # 62c6f0 <srcMode>
  405373:	48 83 f8 03          	cmp    $0x3,%rax
  405377:	75 65                	jne    4053de <compress+0x33e>
  405379:	0f b6 05 8b 77 22 00 	movzbl 0x22778b(%rip),%eax        # 62cb0b <forceOverwrite>
  405380:	48 85 c0             	test   %rax,%rax
  405383:	75 59                	jne    4053de <compress+0x33e>
  405385:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  40538c:	00 00 00 
  40538f:	e8 bc 18 00 00       	callq  406c50 <countHardLinks>
  405394:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40539b:	48 89 c2             	mov    %rax,%rdx
  40539e:	48 d3 e2             	shl    %cl,%rdx
  4053a1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4053a8:	48 d3 fa             	sar    %cl,%rdx
  4053ab:	48 85 d2             	test   %rdx,%rdx
  4053ae:	89 45 cc             	mov    %eax,-0x34(%rbp)
  4053b1:	7e 2b                	jle    4053de <compress+0x33e>
  4053b3:	48 8b 3d 16 36 02 00 	mov    0x23616(%rip),%rdi        # 4289d0 <stderr>
  4053ba:	4c 63 45 cc          	movslq -0x34(%rbp),%r8
  4053be:	48 8b 15 73 7b 22 00 	mov    0x227b73(%rip),%rdx        # 62cf38 <progName>
  4053c5:	49 83 f8 01          	cmp    $0x1,%r8
  4053c9:	0f 8e b4 03 00 00    	jle    405783 <compress+0x6e3>
  4053cf:	49 b9 a2 5d 42 00 00 	movabs $0x425da2,%r9
  4053d6:	00 00 00 
  4053d9:	e9 af 03 00 00       	jmpq   40578d <compress+0x6ed>
  4053de:	8b 05 0c 73 22 00    	mov    0x22730c(%rip),%eax        # 62c6f0 <srcMode>
  4053e4:	48 83 f8 03          	cmp    $0x3,%rax
  4053e8:	75 0f                	jne    4053f9 <compress+0x359>
  4053ea:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  4053f1:	00 00 00 
  4053f4:	e8 a7 18 00 00       	callq  406ca0 <saveInputFileMetaInfo>
  4053f9:	8b 05 f1 72 22 00    	mov    0x2272f1(%rip),%eax        # 62c6f0 <srcMode>
  4053ff:	48 83 f8 03          	cmp    $0x3,%rax
  405403:	0f 84 99 00 00 00    	je     4054a2 <compress+0x402>
  405409:	48 83 f8 02          	cmp    $0x2,%rax
  40540d:	0f 85 38 01 00 00    	jne    40554b <compress+0x4ab>
  405413:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  40541a:	00 00 00 
  40541d:	48 be 2e 5f 42 00 00 	movabs $0x425f2e,%rsi
  405424:	00 00 00 
  405427:	e8 44 48 01 00       	callq  419c70 <fopen>
  40542c:	48 8b 3d ad 35 02 00 	mov    0x235ad(%rip),%rdi        # 4289e0 <stdout>
  405433:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  405437:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  40543b:	e8 0c 48 01 00       	callq  419c4c <fileno>
  405440:	48 89 c7             	mov    %rax,%rdi
  405443:	e8 9c 6f 01 00       	callq  41c3e4 <isatty>
  405448:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40544f:	00 00 00 
  405452:	48 85 c8             	test   %rcx,%rax
  405455:	0f 84 95 01 00 00    	je     4055f0 <compress+0x550>
  40545b:	48 8b 1d 6e 35 02 00 	mov    0x2356e(%rip),%rbx        # 4289d0 <stderr>
  405462:	48 8b 15 cf 7a 22 00 	mov    0x227acf(%rip),%rdx        # 62cf38 <progName>
  405469:	48 be f4 66 42 00 00 	movabs $0x4266f4,%rsi
  405470:	00 00 00 
  405473:	48 31 c0             	xor    %rax,%rax
  405476:	48 89 df             	mov    %rbx,%rdi
  405479:	e8 7a 48 01 00       	callq  419cf8 <fprintf>
  40547e:	48 8b 15 b3 7a 22 00 	mov    0x227ab3(%rip),%rdx        # 62cf38 <progName>
  405485:	48 be 0c 5f 42 00 00 	movabs $0x425f0c,%rsi
  40548c:	00 00 00 
  40548f:	48 31 c0             	xor    %rax,%rax
  405492:	48 89 df             	mov    %rbx,%rdi
  405495:	48 89 d1             	mov    %rdx,%rcx
  405498:	e8 5b 48 01 00       	callq  419cf8 <fprintf>
  40549d:	e9 cf 02 00 00       	jmpq   405771 <compress+0x6d1>
  4054a2:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  4054a9:	00 00 00 
  4054ac:	48 be 2e 5f 42 00 00 	movabs $0x425f2e,%rsi
  4054b3:	00 00 00 
  4054b6:	e8 b5 47 01 00       	callq  419c70 <fopen>
  4054bb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4054bf:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  4054c6:	00 00 00 
  4054c9:	48 be 83 64 42 00 00 	movabs $0x426483,%rsi
  4054d0:	00 00 00 
  4054d3:	e8 28 e9 ff ff       	callq  403e00 <fopen_output_safely>
  4054d8:	48 85 c0             	test   %rax,%rax
  4054db:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4054df:	0f 84 4a 02 00 00    	je     40572f <compress+0x68f>
  4054e5:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4054ea:	0f 85 0b 01 00 00    	jne    4055fb <compress+0x55b>
  4054f0:	4c 8b 35 d9 34 02 00 	mov    0x234d9(%rip),%r14        # 4289d0 <stderr>
  4054f7:	4c 8b 3d 3a 7a 22 00 	mov    0x227a3a(%rip),%r15        # 62cf38 <progName>
  4054fe:	e8 fd 2a 01 00       	callq  418000 <__errno_location>
  405503:	8b 38                	mov    (%rax),%edi
  405505:	e8 16 2b 01 00       	callq  418020 <strerror>
  40550a:	48 89 c3             	mov    %rax,%rbx
  40550d:	48 be b9 63 42 00 00 	movabs $0x4263b9,%rsi
  405514:	00 00 00 
  405517:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  40551e:	00 00 00 
  405521:	48 31 c0             	xor    %rax,%rax
  405524:	4c 89 f7             	mov    %r14,%rdi
  405527:	4c 89 fa             	mov    %r15,%rdx
  40552a:	49 89 d8             	mov    %rbx,%r8
  40552d:	e8 c6 47 01 00       	callq  419cf8 <fprintf>
  405532:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  405537:	0f 84 d8 01 00 00    	je     405715 <compress+0x675>
  40553d:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  405541:	e8 8a 44 01 00       	callq  4199d0 <fclose>
  405546:	e9 ca 01 00 00       	jmpq   405715 <compress+0x675>
  40554b:	48 83 f8 01          	cmp    $0x1,%rax
  40554f:	0f 85 6b 02 00 00    	jne    4057c0 <compress+0x720>
  405555:	48 8b 05 7c 34 02 00 	mov    0x2347c(%rip),%rax        # 4289d8 <stdin>
  40555c:	48 8b 3d 7d 34 02 00 	mov    0x2347d(%rip),%rdi        # 4289e0 <stdout>
  405563:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  405567:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  40556b:	e8 dc 46 01 00       	callq  419c4c <fileno>
  405570:	48 89 c7             	mov    %rax,%rdi
  405573:	e8 6c 6e 01 00       	callq  41c3e4 <isatty>
  405578:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40557f:	00 00 00 
  405582:	48 85 c8             	test   %rcx,%rax
  405585:	74 74                	je     4055fb <compress+0x55b>
  405587:	48 8b 1d 42 34 02 00 	mov    0x23442(%rip),%rbx        # 4289d0 <stderr>
  40558e:	48 8b 15 a3 79 22 00 	mov    0x2279a3(%rip),%rdx        # 62cf38 <progName>
  405595:	48 be f4 66 42 00 00 	movabs $0x4266f4,%rsi
  40559c:	00 00 00 
  40559f:	48 31 c0             	xor    %rax,%rax
  4055a2:	48 89 df             	mov    %rbx,%rdi
  4055a5:	e8 4e 47 01 00       	callq  419cf8 <fprintf>
  4055aa:	48 8b 15 87 79 22 00 	mov    0x227987(%rip),%rdx        # 62cf38 <progName>
  4055b1:	48 be 0c 5f 42 00 00 	movabs $0x425f0c,%rsi
  4055b8:	00 00 00 
  4055bb:	48 31 c0             	xor    %rax,%rax
  4055be:	48 89 df             	mov    %rbx,%rdi
  4055c1:	48 89 d1             	mov    %rdx,%rcx
  4055c4:	e9 05 fd ff ff       	jmpq   4052ce <compress+0x22e>
  4055c9:	48 8b 3d 00 34 02 00 	mov    0x23400(%rip),%rdi        # 4289d0 <stderr>
  4055d0:	48 8b 15 61 79 22 00 	mov    0x227961(%rip),%rdx        # 62cf38 <progName>
  4055d7:	48 be 37 64 42 00 00 	movabs $0x426437,%rsi
  4055de:	00 00 00 
  4055e1:	48 b9 20 cb 62 00 00 	movabs $0x62cb20,%rcx
  4055e8:	00 00 00 
  4055eb:	e9 db fc ff ff       	jmpq   4052cb <compress+0x22b>
  4055f0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4055f5:	0f 84 d8 00 00 00    	je     4056d3 <compress+0x633>
  4055fb:	48 63 05 2e 79 22 00 	movslq 0x22792e(%rip),%rax        # 62cf30 <verbosity>
  405602:	48 85 c0             	test   %rax,%rax
  405605:	7e 39                	jle    405640 <compress+0x5a0>
  405607:	4c 8b 35 c2 33 02 00 	mov    0x233c2(%rip),%r14        # 4289d0 <stderr>
  40560e:	48 be 66 5f 42 00 00 	movabs $0x425f66,%rsi
  405615:	00 00 00 
  405618:	48 bb 60 cf 62 00 00 	movabs $0x62cf60,%rbx
  40561f:	00 00 00 
  405622:	48 31 c0             	xor    %rax,%rax
  405625:	4c 89 f7             	mov    %r14,%rdi
  405628:	48 89 da             	mov    %rbx,%rdx
  40562b:	e8 c8 46 01 00       	callq  419cf8 <fprintf>
  405630:	48 89 df             	mov    %rbx,%rdi
  405633:	e8 18 0e 00 00       	callq  406450 <pad>
  405638:	4c 89 f7             	mov    %r14,%rdi
  40563b:	e8 d4 44 01 00       	callq  419b14 <fflush>
  405640:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  405644:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  405648:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40564c:	48 89 05 f5 78 22 00 	mov    %rax,0x2278f5(%rip)        # 62cf48 <outputHandleJustInCase>
  405653:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40565a:	88 05 aa 74 22 00    	mov    %al,0x2274aa(%rip)        # 62cb0a <deleteOutputOnInterrupt>
  405660:	e8 ab 1c 00 00       	callq  407310 <compressStream>
  405665:	8b 05 85 70 22 00    	mov    0x227085(%rip),%eax        # 62c6f0 <srcMode>
  40566b:	48 c7 05 d2 78 22 00 	movq   $0x0,0x2278d2(%rip)        # 62cf48 <outputHandleJustInCase>
  405672:	00 00 00 00 
  405676:	48 83 f8 03          	cmp    $0x3,%rax
  40567a:	75 4c                	jne    4056c8 <compress+0x628>
  40567c:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  405683:	00 00 00 
  405686:	e8 a5 1a 00 00       	callq  407130 <applySavedMetaInfoToOutputFile>
  40568b:	0f b6 05 f8 80 22 00 	movzbl 0x2280f8(%rip),%eax        # 62d78a <keepInputFiles>
  405692:	48 31 c9             	xor    %rcx,%rcx
  405695:	88 0d 6f 74 22 00    	mov    %cl,0x22746f(%rip)        # 62cb0a <deleteOutputOnInterrupt>
  40569b:	48 85 c0             	test   %rax,%rax
  40569e:	75 28                	jne    4056c8 <compress+0x628>
  4056a0:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  4056a7:	00 00 00 
  4056aa:	e8 59 4a 01 00       	callq  41a108 <remove>
  4056af:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4056b6:	00 00 00 
  4056b9:	48 85 c8             	test   %rcx,%rax
  4056bc:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
  4056c2:	0f 85 0a 01 00 00    	jne    4057d2 <compress+0x732>
  4056c8:	48 31 c0             	xor    %rax,%rax
  4056cb:	88 05 39 74 22 00    	mov    %al,0x227439(%rip)        # 62cb0a <deleteOutputOnInterrupt>
  4056d1:	eb 4e                	jmp    405721 <compress+0x681>
  4056d3:	4c 8b 35 f6 32 02 00 	mov    0x232f6(%rip),%r14        # 4289d0 <stderr>
  4056da:	4c 8b 3d 57 78 22 00 	mov    0x227857(%rip),%r15        # 62cf38 <progName>
  4056e1:	e8 1a 29 01 00       	callq  418000 <__errno_location>
  4056e6:	8b 38                	mov    (%rax),%edi
  4056e8:	e8 33 29 01 00       	callq  418020 <strerror>
  4056ed:	48 89 c3             	mov    %rax,%rbx
  4056f0:	48 be b9 63 42 00 00 	movabs $0x4263b9,%rsi
  4056f7:	00 00 00 
  4056fa:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  405701:	00 00 00 
  405704:	48 31 c0             	xor    %rax,%rax
  405707:	4c 89 f7             	mov    %r14,%rdi
  40570a:	4c 89 fa             	mov    %r15,%rdx
  40570d:	49 89 d8             	mov    %rbx,%r8
  405710:	e8 e3 45 01 00       	callq  419cf8 <fprintf>
  405715:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  40571c:	e8 bf 08 00 00       	callq  405fe0 <setExit>
  405721:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
  405728:	5b                   	pop    %rbx
  405729:	41 5e                	pop    %r14
  40572b:	41 5f                	pop    %r15
  40572d:	5d                   	pop    %rbp
  40572e:	c3                   	retq   
  40572f:	4c 8b 35 9a 32 02 00 	mov    0x2329a(%rip),%r14        # 4289d0 <stderr>
  405736:	4c 8b 3d fb 77 22 00 	mov    0x2277fb(%rip),%r15        # 62cf38 <progName>
  40573d:	e8 be 28 01 00       	callq  418000 <__errno_location>
  405742:	8b 38                	mov    (%rax),%edi
  405744:	e8 d7 28 01 00       	callq  418020 <strerror>
  405749:	48 89 c3             	mov    %rax,%rbx
  40574c:	48 be 86 64 42 00 00 	movabs $0x426486,%rsi
  405753:	00 00 00 
  405756:	48 b9 20 cb 62 00 00 	movabs $0x62cb20,%rcx
  40575d:	00 00 00 
  405760:	48 31 c0             	xor    %rax,%rax
  405763:	4c 89 f7             	mov    %r14,%rdi
  405766:	4c 89 fa             	mov    %r15,%rdx
  405769:	49 89 d8             	mov    %rbx,%r8
  40576c:	e8 87 45 01 00       	callq  419cf8 <fprintf>
  405771:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  405776:	74 9d                	je     405715 <compress+0x675>
  405778:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  40577c:	e8 4f 42 01 00       	callq  4199d0 <fclose>
  405781:	eb 92                	jmp    405715 <compress+0x675>
  405783:	49 b9 52 78 42 00 00 	movabs $0x427852,%r9
  40578a:	00 00 00 
  40578d:	48 be 5b 64 42 00 00 	movabs $0x42645b,%rsi
  405794:	00 00 00 
  405797:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  40579e:	00 00 00 
  4057a1:	48 31 c0             	xor    %rax,%rax
  4057a4:	e8 4f 45 01 00       	callq  419cf8 <fprintf>
  4057a9:	e9 67 ff ff ff       	jmpq   405715 <compress+0x675>
  4057ae:	48 b8 96 63 42 00 00 	movabs $0x426396,%rax
  4057b5:	00 00 00 
  4057b8:	48 89 c7             	mov    %rax,%rdi
  4057bb:	e8 d0 0b 00 00       	callq  406390 <panic>
  4057c0:	48 b8 ae 64 42 00 00 	movabs $0x4264ae,%rax
  4057c7:	00 00 00 
  4057ca:	48 89 c7             	mov    %rax,%rdi
  4057cd:	e8 be 0b 00 00       	callq  406390 <panic>
  4057d2:	e8 e9 10 00 00       	callq  4068c0 <ioError>
  4057d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4057de:	00 00 

00000000004057e0 <uncompress>:
  4057e0:	55                   	push   %rbp
  4057e1:	48 89 e5             	mov    %rsp,%rbp
  4057e4:	41 57                	push   %r15
  4057e6:	41 56                	push   %r14
  4057e8:	53                   	push   %rbx
  4057e9:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
  4057f0:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  4057f4:	48 31 c0             	xor    %rax,%rax
  4057f7:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4057fc:	88 05 08 73 22 00    	mov    %al,0x227308(%rip)        # 62cb0a <deleteOutputOnInterrupt>
  405802:	75 10                	jne    405814 <uncompress+0x34>
  405804:	8b 0d e6 6e 22 00    	mov    0x226ee6(%rip),%ecx        # 62c6f0 <srcMode>
  40580a:	48 83 f9 01          	cmp    $0x1,%rcx
  40580e:	0f 85 a0 07 00 00    	jne    405fb4 <uncompress+0x7d4>
  405814:	8b 0d d6 6e 22 00    	mov    0x226ed6(%rip),%ecx        # 62c6f0 <srcMode>
  40581a:	88 45 c6             	mov    %al,-0x3a(%rbp)
  40581d:	48 83 f9 03          	cmp    $0x3,%rcx
  405821:	74 19                	je     40583c <uncompress+0x5c>
  405823:	48 83 f9 02          	cmp    $0x2,%rcx
  405827:	75 7d                	jne    4058a6 <uncompress+0xc6>
  405829:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40582d:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405834:	00 00 00 
  405837:	e9 84 00 00 00       	jmpq   4058c0 <uncompress+0xe0>
  40583c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  405840:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405847:	00 00 00 
  40584a:	e8 91 f4 ff ff       	callq  404ce0 <copyFileName>
  40584f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  405853:	48 bb 20 cb 62 00 00 	movabs $0x62cb20,%rbx
  40585a:	00 00 00 
  40585d:	48 89 df             	mov    %rbx,%rdi
  405860:	e8 7b f4 ff ff       	callq  404ce0 <copyFileName>
  405865:	48 31 c0             	xor    %rax,%rax
  405868:	eb 0c                	jmp    405876 <uncompress+0x96>
  40586a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  405870:	8b 45 c8             	mov    -0x38(%rbp),%eax
  405873:	48 ff c0             	inc    %rax
  405876:	89 45 c8             	mov    %eax,-0x38(%rbp)
  405879:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40587d:	48 83 f8 03          	cmp    $0x3,%rax
  405881:	7f 5d                	jg     4058e0 <uncompress+0x100>
  405883:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  405887:	48 8b 34 c5 10 a8 62 	mov    0x62a810(,%rax,8),%rsi
  40588e:	00 
  40588f:	48 8b 14 c5 30 a8 62 	mov    0x62a830(,%rax,8),%rdx
  405896:	00 
  405897:	48 89 df             	mov    %rbx,%rdi
  40589a:	e8 e1 12 00 00       	callq  406b80 <mapSuffix>
  40589f:	48 85 c0             	test   %rax,%rax
  4058a2:	74 cc                	je     405870 <uncompress+0x90>
  4058a4:	eb 5d                	jmp    405903 <uncompress+0x123>
  4058a6:	48 83 f9 01          	cmp    $0x1,%rcx
  4058aa:	75 57                	jne    405903 <uncompress+0x123>
  4058ac:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  4058b3:	00 00 00 
  4058b6:	48 be 69 5e 42 00 00 	movabs $0x425e69,%rsi
  4058bd:	00 00 00 
  4058c0:	e8 1b f4 ff ff       	callq  404ce0 <copyFileName>
  4058c5:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  4058cc:	00 00 00 
  4058cf:	48 be ab 63 42 00 00 	movabs $0x4263ab,%rsi
  4058d6:	00 00 00 
  4058d9:	e8 02 f4 ff ff       	callq  404ce0 <copyFileName>
  4058de:	eb 23                	jmp    405903 <uncompress+0x123>
  4058e0:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4058e7:	88 45 c6             	mov    %al,-0x3a(%rbp)
  4058ea:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  4058f1:	00 00 00 
  4058f4:	48 be b4 63 42 00 00 	movabs $0x4263b4,%rsi
  4058fb:	00 00 00 
  4058fe:	e8 bd 61 01 00       	callq  41bac0 <strcat>
  405903:	8b 05 e7 6d 22 00    	mov    0x226de7(%rip),%eax        # 62c6f0 <srcMode>
  405909:	48 83 f8 01          	cmp    $0x1,%rax
  40590d:	74 3e                	je     40594d <uncompress+0x16d>
  40590f:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405916:	00 00 00 
  405919:	e8 c2 0a 00 00       	callq  4063e0 <containsDubiousChars>
  40591e:	48 85 c0             	test   %rax,%rax
  405921:	74 2a                	je     40594d <uncompress+0x16d>
  405923:	0f b6 05 46 7a 22 00 	movzbl 0x227a46(%rip),%eax        # 62d370 <noisy>
  40592a:	48 85 c0             	test   %rax,%rax
  40592d:	0f 84 67 06 00 00    	je     405f9a <uncompress+0x7ba>
  405933:	48 8b 3d 96 30 02 00 	mov    0x23096(%rip),%rdi        # 4289d0 <stderr>
  40593a:	48 8b 15 f7 75 22 00 	mov    0x2275f7(%rip),%rdx        # 62cf38 <progName>
  405941:	48 be 71 5e 42 00 00 	movabs $0x425e71,%rsi
  405948:	00 00 00 
  40594b:	eb 7e                	jmp    4059cb <uncompress+0x1eb>
  40594d:	8b 05 9d 6d 22 00    	mov    0x226d9d(%rip),%eax        # 62c6f0 <srcMode>
  405953:	48 83 f8 01          	cmp    $0x1,%rax
  405957:	74 18                	je     405971 <uncompress+0x191>
  405959:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405960:	00 00 00 
  405963:	e8 88 0a 00 00       	callq  4063f0 <fileExists>
  405968:	48 85 c0             	test   %rax,%rax
  40596b:	0f 84 5e 02 00 00    	je     405bcf <uncompress+0x3ef>
  405971:	8b 05 79 6d 22 00    	mov    0x226d79(%rip),%eax        # 62c6f0 <srcMode>
  405977:	48 83 f8 03          	cmp    $0x3,%rax
  40597b:	74 0c                	je     405989 <uncompress+0x1a9>
  40597d:	8b 05 6d 6d 22 00    	mov    0x226d6d(%rip),%eax        # 62c6f0 <srcMode>
  405983:	48 83 f8 02          	cmp    $0x2,%rax
  405987:	75 59                	jne    4059e2 <uncompress+0x202>
  405989:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405990:	00 00 00 
  405993:	48 8d b5 30 ff ff ff 	lea    -0xd0(%rbp),%rsi
  40599a:	e8 c5 3b 01 00       	callq  419564 <stat>
  40599f:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
  4059a5:	48 25 00 f0 00 00    	and    $0xf000,%rax
  4059ab:	48 3d 00 40 00 00    	cmp    $0x4000,%rax
  4059b1:	75 2f                	jne    4059e2 <uncompress+0x202>
  4059b3:	48 8b 3d 16 30 02 00 	mov    0x23016(%rip),%rdi        # 4289d0 <stderr>
  4059ba:	48 8b 15 77 75 22 00 	mov    0x227577(%rip),%rdx        # 62cf38 <progName>
  4059c1:	48 be b6 5e 42 00 00 	movabs $0x425eb6,%rsi
  4059c8:	00 00 00 
  4059cb:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  4059d2:	00 00 00 
  4059d5:	48 31 c0             	xor    %rax,%rax
  4059d8:	e8 1b 43 01 00       	callq  419cf8 <fprintf>
  4059dd:	e9 b8 05 00 00       	jmpq   405f9a <uncompress+0x7ba>
  4059e2:	8b 05 08 6d 22 00    	mov    0x226d08(%rip),%eax        # 62c6f0 <srcMode>
  4059e8:	48 83 f8 03          	cmp    $0x3,%rax
  4059ec:	75 4a                	jne    405a38 <uncompress+0x258>
  4059ee:	0f b6 05 16 71 22 00 	movzbl 0x227116(%rip),%eax        # 62cb0b <forceOverwrite>
  4059f5:	48 85 c0             	test   %rax,%rax
  4059f8:	75 3e                	jne    405a38 <uncompress+0x258>
  4059fa:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405a01:	00 00 00 
  405a04:	e8 e7 11 00 00       	callq  406bf0 <notAStandardFile>
  405a09:	48 85 c0             	test   %rax,%rax
  405a0c:	74 2a                	je     405a38 <uncompress+0x258>
  405a0e:	0f b6 05 5b 79 22 00 	movzbl 0x22795b(%rip),%eax        # 62d370 <noisy>
  405a15:	48 85 c0             	test   %rax,%rax
  405a18:	0f 84 7c 05 00 00    	je     405f9a <uncompress+0x7ba>
  405a1e:	48 8b 3d ab 2f 02 00 	mov    0x22fab(%rip),%rdi        # 4289d0 <stderr>
  405a25:	48 8b 15 0c 75 22 00 	mov    0x22750c(%rip),%rdx        # 62cf38 <progName>
  405a2c:	48 be dc 63 42 00 00 	movabs $0x4263dc,%rsi
  405a33:	00 00 00 
  405a36:	eb 93                	jmp    4059cb <uncompress+0x1eb>
  405a38:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
  405a3c:	48 85 c0             	test   %rax,%rax
  405a3f:	74 40                	je     405a81 <uncompress+0x2a1>
  405a41:	0f b6 05 28 79 22 00 	movzbl 0x227928(%rip),%eax        # 62d370 <noisy>
  405a48:	48 85 c0             	test   %rax,%rax
  405a4b:	74 34                	je     405a81 <uncompress+0x2a1>
  405a4d:	48 8b 3d 7c 2f 02 00 	mov    0x22f7c(%rip),%rdi        # 4289d0 <stderr>
  405a54:	48 8b 15 dd 74 22 00 	mov    0x2274dd(%rip),%rdx        # 62cf38 <progName>
  405a5b:	48 be 05 64 42 00 00 	movabs $0x426405,%rsi
  405a62:	00 00 00 
  405a65:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  405a6c:	00 00 00 
  405a6f:	49 b8 20 cb 62 00 00 	movabs $0x62cb20,%r8
  405a76:	00 00 00 
  405a79:	48 31 c0             	xor    %rax,%rax
  405a7c:	e8 77 42 01 00       	callq  419cf8 <fprintf>
  405a81:	8b 05 69 6c 22 00    	mov    0x226c69(%rip),%eax        # 62c6f0 <srcMode>
  405a87:	48 83 f8 03          	cmp    $0x3,%rax
  405a8b:	75 33                	jne    405ac0 <uncompress+0x2e0>
  405a8d:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  405a94:	00 00 00 
  405a97:	e8 54 09 00 00       	callq  4063f0 <fileExists>
  405a9c:	48 85 c0             	test   %rax,%rax
  405a9f:	74 1f                	je     405ac0 <uncompress+0x2e0>
  405aa1:	0f b6 05 63 70 22 00 	movzbl 0x227063(%rip),%eax        # 62cb0b <forceOverwrite>
  405aa8:	48 85 c0             	test   %rax,%rax
  405aab:	0f 84 1c 04 00 00    	je     405ecd <uncompress+0x6ed>
  405ab1:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  405ab8:	00 00 00 
  405abb:	e8 48 46 01 00       	callq  41a108 <remove>
  405ac0:	8b 05 2a 6c 22 00    	mov    0x226c2a(%rip),%eax        # 62c6f0 <srcMode>
  405ac6:	48 83 f8 03          	cmp    $0x3,%rax
  405aca:	75 65                	jne    405b31 <uncompress+0x351>
  405acc:	0f b6 05 38 70 22 00 	movzbl 0x227038(%rip),%eax        # 62cb0b <forceOverwrite>
  405ad3:	48 85 c0             	test   %rax,%rax
  405ad6:	75 59                	jne    405b31 <uncompress+0x351>
  405ad8:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405adf:	00 00 00 
  405ae2:	e8 69 11 00 00       	callq  406c50 <countHardLinks>
  405ae7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  405aee:	48 89 c2             	mov    %rax,%rdx
  405af1:	48 d3 e2             	shl    %cl,%rdx
  405af4:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  405afb:	48 d3 fa             	sar    %cl,%rdx
  405afe:	48 85 d2             	test   %rdx,%rdx
  405b01:	89 45 cc             	mov    %eax,-0x34(%rbp)
  405b04:	7e 2b                	jle    405b31 <uncompress+0x351>
  405b06:	48 8b 3d c3 2e 02 00 	mov    0x22ec3(%rip),%rdi        # 4289d0 <stderr>
  405b0d:	4c 63 45 cc          	movslq -0x34(%rbp),%r8
  405b11:	48 8b 15 20 74 22 00 	mov    0x227420(%rip),%rdx        # 62cf38 <progName>
  405b18:	49 83 f8 01          	cmp    $0x1,%r8
  405b1c:	0f 8e 52 04 00 00    	jle    405f74 <uncompress+0x794>
  405b22:	49 b9 a2 5d 42 00 00 	movabs $0x425da2,%r9
  405b29:	00 00 00 
  405b2c:	e9 4d 04 00 00       	jmpq   405f7e <uncompress+0x79e>
  405b31:	8b 05 b9 6b 22 00    	mov    0x226bb9(%rip),%eax        # 62c6f0 <srcMode>
  405b37:	48 83 f8 03          	cmp    $0x3,%rax
  405b3b:	75 0f                	jne    405b4c <uncompress+0x36c>
  405b3d:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405b44:	00 00 00 
  405b47:	e8 54 11 00 00       	callq  406ca0 <saveInputFileMetaInfo>
  405b4c:	8b 05 9e 6b 22 00    	mov    0x226b9e(%rip),%eax        # 62c6f0 <srcMode>
  405b52:	48 83 f8 03          	cmp    $0x3,%rax
  405b56:	0f 84 ba 00 00 00    	je     405c16 <uncompress+0x436>
  405b5c:	48 83 f8 02          	cmp    $0x2,%rax
  405b60:	0f 85 59 01 00 00    	jne    405cbf <uncompress+0x4df>
  405b66:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405b6d:	00 00 00 
  405b70:	48 be 2e 5f 42 00 00 	movabs $0x425f2e,%rsi
  405b77:	00 00 00 
  405b7a:	e8 f1 40 01 00       	callq  419c70 <fopen>
  405b7f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  405b83:	48 8b 05 56 2e 02 00 	mov    0x22e56(%rip),%rax        # 4289e0 <stdout>
  405b8a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  405b8f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  405b93:	0f 85 a4 01 00 00    	jne    405d3d <uncompress+0x55d>
  405b99:	4c 8b 35 30 2e 02 00 	mov    0x22e30(%rip),%r14        # 4289d0 <stderr>
  405ba0:	4c 8b 3d 91 73 22 00 	mov    0x227391(%rip),%r15        # 62cf38 <progName>
  405ba7:	e8 54 24 01 00       	callq  418000 <__errno_location>
  405bac:	8b 38                	mov    (%rax),%edi
  405bae:	e8 6d 24 01 00       	callq  418020 <strerror>
  405bb3:	48 89 c3             	mov    %rax,%rbx
  405bb6:	48 be 31 5f 42 00 00 	movabs $0x425f31,%rsi
  405bbd:	00 00 00 
  405bc0:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  405bc7:	00 00 00 
  405bca:	e9 56 03 00 00       	jmpq   405f25 <uncompress+0x745>
  405bcf:	4c 8b 35 fa 2d 02 00 	mov    0x22dfa(%rip),%r14        # 4289d0 <stderr>
  405bd6:	4c 8b 3d 5b 73 22 00 	mov    0x22735b(%rip),%r15        # 62cf38 <progName>
  405bdd:	e8 1e 24 01 00       	callq  418000 <__errno_location>
  405be2:	8b 38                	mov    (%rax),%edi
  405be4:	e8 37 24 01 00       	callq  418020 <strerror>
  405be9:	48 89 c3             	mov    %rax,%rbx
  405bec:	48 be b9 63 42 00 00 	movabs $0x4263b9,%rsi
  405bf3:	00 00 00 
  405bf6:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  405bfd:	00 00 00 
  405c00:	48 31 c0             	xor    %rax,%rax
  405c03:	4c 89 f7             	mov    %r14,%rdi
  405c06:	4c 89 fa             	mov    %r15,%rdx
  405c09:	49 89 d8             	mov    %rbx,%r8
  405c0c:	e8 e7 40 01 00       	callq  419cf8 <fprintf>
  405c11:	e9 84 03 00 00       	jmpq   405f9a <uncompress+0x7ba>
  405c16:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405c1d:	00 00 00 
  405c20:	48 be 2e 5f 42 00 00 	movabs $0x425f2e,%rsi
  405c27:	00 00 00 
  405c2a:	e8 41 40 01 00       	callq  419c70 <fopen>
  405c2f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  405c33:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  405c3a:	00 00 00 
  405c3d:	48 be 83 64 42 00 00 	movabs $0x426483,%rsi
  405c44:	00 00 00 
  405c47:	e8 b4 e1 ff ff       	callq  403e00 <fopen_output_safely>
  405c4c:	48 85 c0             	test   %rax,%rax
  405c4f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  405c53:	0f 84 9b 02 00 00    	je     405ef4 <uncompress+0x714>
  405c59:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  405c5e:	0f 85 d9 00 00 00    	jne    405d3d <uncompress+0x55d>
  405c64:	4c 8b 35 65 2d 02 00 	mov    0x22d65(%rip),%r14        # 4289d0 <stderr>
  405c6b:	4c 8b 3d c6 72 22 00 	mov    0x2272c6(%rip),%r15        # 62cf38 <progName>
  405c72:	e8 89 23 01 00       	callq  418000 <__errno_location>
  405c77:	8b 38                	mov    (%rax),%edi
  405c79:	e8 a2 23 01 00       	callq  418020 <strerror>
  405c7e:	48 89 c3             	mov    %rax,%rbx
  405c81:	48 be b9 63 42 00 00 	movabs $0x4263b9,%rsi
  405c88:	00 00 00 
  405c8b:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  405c92:	00 00 00 
  405c95:	48 31 c0             	xor    %rax,%rax
  405c98:	4c 89 f7             	mov    %r14,%rdi
  405c9b:	4c 89 fa             	mov    %r15,%rdx
  405c9e:	49 89 d8             	mov    %rbx,%r8
  405ca1:	e8 52 40 01 00       	callq  419cf8 <fprintf>
  405ca6:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  405cab:	0f 84 e9 02 00 00    	je     405f9a <uncompress+0x7ba>
  405cb1:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  405cb5:	e8 16 3d 01 00       	callq  4199d0 <fclose>
  405cba:	e9 db 02 00 00       	jmpq   405f9a <uncompress+0x7ba>
  405cbf:	48 83 f8 01          	cmp    $0x1,%rax
  405cc3:	0f 85 fd 02 00 00    	jne    405fc6 <uncompress+0x7e6>
  405cc9:	48 8b 3d 08 2d 02 00 	mov    0x22d08(%rip),%rdi        # 4289d8 <stdin>
  405cd0:	48 8b 05 09 2d 02 00 	mov    0x22d09(%rip),%rax        # 4289e0 <stdout>
  405cd7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  405cdb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  405cdf:	e8 68 3f 01 00       	callq  419c4c <fileno>
  405ce4:	48 89 c7             	mov    %rax,%rdi
  405ce7:	e8 f8 66 01 00       	callq  41c3e4 <isatty>
  405cec:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  405cf3:	00 00 00 
  405cf6:	48 85 c8             	test   %rcx,%rax
  405cf9:	74 42                	je     405d3d <uncompress+0x55d>
  405cfb:	48 8b 1d ce 2c 02 00 	mov    0x22cce(%rip),%rbx        # 4289d0 <stderr>
  405d02:	48 8b 15 2f 72 22 00 	mov    0x22722f(%rip),%rdx        # 62cf38 <progName>
  405d09:	48 be d9 5e 42 00 00 	movabs $0x425ed9,%rsi
  405d10:	00 00 00 
  405d13:	48 31 c0             	xor    %rax,%rax
  405d16:	48 89 df             	mov    %rbx,%rdi
  405d19:	e8 da 3f 01 00       	callq  419cf8 <fprintf>
  405d1e:	48 8b 15 13 72 22 00 	mov    0x227213(%rip),%rdx        # 62cf38 <progName>
  405d25:	48 be 0c 5f 42 00 00 	movabs $0x425f0c,%rsi
  405d2c:	00 00 00 
  405d2f:	48 31 c0             	xor    %rax,%rax
  405d32:	48 89 df             	mov    %rbx,%rdi
  405d35:	48 89 d1             	mov    %rdx,%rcx
  405d38:	e9 9b fc ff ff       	jmpq   4059d8 <uncompress+0x1f8>
  405d3d:	48 63 05 ec 71 22 00 	movslq 0x2271ec(%rip),%rax        # 62cf30 <verbosity>
  405d44:	48 85 c0             	test   %rax,%rax
  405d47:	7e 39                	jle    405d82 <uncompress+0x5a2>
  405d49:	4c 8b 35 80 2c 02 00 	mov    0x22c80(%rip),%r14        # 4289d0 <stderr>
  405d50:	48 be 66 5f 42 00 00 	movabs $0x425f66,%rsi
  405d57:	00 00 00 
  405d5a:	48 bb 60 cf 62 00 00 	movabs $0x62cf60,%rbx
  405d61:	00 00 00 
  405d64:	48 31 c0             	xor    %rax,%rax
  405d67:	4c 89 f7             	mov    %r14,%rdi
  405d6a:	48 89 da             	mov    %rbx,%rdx
  405d6d:	e8 86 3f 01 00       	callq  419cf8 <fprintf>
  405d72:	48 89 df             	mov    %rbx,%rdi
  405d75:	e8 d6 06 00 00       	callq  406450 <pad>
  405d7a:	4c 89 f7             	mov    %r14,%rdi
  405d7d:	e8 92 3d 01 00       	callq  419b14 <fflush>
  405d82:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  405d86:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  405d8a:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  405d8e:	48 89 05 b3 71 22 00 	mov    %rax,0x2271b3(%rip)        # 62cf48 <outputHandleJustInCase>
  405d95:	48 c7 c3 01 00 00 00 	mov    $0x1,%rbx
  405d9c:	88 1d 68 6d 22 00    	mov    %bl,0x226d68(%rip)        # 62cb0a <deleteOutputOnInterrupt>
  405da2:	e8 39 0f 00 00       	callq  406ce0 <uncompressStream>
  405da7:	88 45 c7             	mov    %al,-0x39(%rbp)
  405daa:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
  405dae:	48 c7 05 8f 71 22 00 	movq   $0x0,0x22718f(%rip)        # 62cf48 <outputHandleJustInCase>
  405db5:	00 00 00 00 
  405db9:	48 85 c0             	test   %rax,%rax
  405dbc:	74 5d                	je     405e1b <uncompress+0x63b>
  405dbe:	8b 05 2c 69 22 00    	mov    0x22692c(%rip),%eax        # 62c6f0 <srcMode>
  405dc4:	48 83 f8 03          	cmp    $0x3,%rax
  405dc8:	0f 85 90 00 00 00    	jne    405e5e <uncompress+0x67e>
  405dce:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  405dd5:	00 00 00 
  405dd8:	e8 53 13 00 00       	callq  407130 <applySavedMetaInfoToOutputFile>
  405ddd:	0f b6 05 a6 79 22 00 	movzbl 0x2279a6(%rip),%eax        # 62d78a <keepInputFiles>
  405de4:	48 31 c9             	xor    %rcx,%rcx
  405de7:	88 0d 1d 6d 22 00    	mov    %cl,0x226d1d(%rip)        # 62cb0a <deleteOutputOnInterrupt>
  405ded:	48 85 c0             	test   %rax,%rax
  405df0:	75 6c                	jne    405e5e <uncompress+0x67e>
  405df2:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  405df9:	00 00 00 
  405dfc:	e8 07 43 01 00       	callq  41a108 <remove>
  405e01:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  405e08:	00 00 00 
  405e0b:	48 85 c8             	test   %rcx,%rax
  405e0e:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
  405e14:	74 48                	je     405e5e <uncompress+0x67e>
  405e16:	e8 a5 0a 00 00       	callq  4068c0 <ioError>
  405e1b:	8b 05 cf 68 22 00    	mov    0x2268cf(%rip),%eax        # 62c6f0 <srcMode>
  405e21:	88 1d 64 79 22 00    	mov    %bl,0x227964(%rip)        # 62d78b <unzFailsExist>
  405e27:	48 31 c9             	xor    %rcx,%rcx
  405e2a:	88 0d da 6c 22 00    	mov    %cl,0x226cda(%rip)        # 62cb0a <deleteOutputOnInterrupt>
  405e30:	48 83 f8 03          	cmp    $0x3,%rax
  405e34:	75 28                	jne    405e5e <uncompress+0x67e>
  405e36:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  405e3d:	00 00 00 
  405e40:	e8 c3 42 01 00       	callq  41a108 <remove>
  405e45:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  405e4c:	00 00 00 
  405e4f:	48 85 c8             	test   %rcx,%rax
  405e52:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
  405e58:	0f 85 7a 01 00 00    	jne    405fd8 <uncompress+0x7f8>
  405e5e:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
  405e62:	48 31 c9             	xor    %rcx,%rcx
  405e65:	88 0d 9f 6c 22 00    	mov    %cl,0x226c9f(%rip)        # 62cb0a <deleteOutputOnInterrupt>
  405e6b:	48 85 c0             	test   %rax,%rax
  405e6e:	74 23                	je     405e93 <uncompress+0x6b3>
  405e70:	48 63 05 b9 70 22 00 	movslq 0x2270b9(%rip),%rax        # 62cf30 <verbosity>
  405e77:	48 85 c0             	test   %rax,%rax
  405e7a:	0f 8e 26 01 00 00    	jle    405fa6 <uncompress+0x7c6>
  405e80:	48 8b 3d 49 2b 02 00 	mov    0x22b49(%rip),%rdi        # 4289d0 <stderr>
  405e87:	48 be c4 64 42 00 00 	movabs $0x4264c4,%rsi
  405e8e:	00 00 00 
  405e91:	eb 2d                	jmp    405ec0 <uncompress+0x6e0>
  405e93:	48 c7 c7 02 00 00 00 	mov    $0x2,%rdi
  405e9a:	e8 41 01 00 00       	callq  405fe0 <setExit>
  405e9f:	48 63 05 8a 70 22 00 	movslq 0x22708a(%rip),%rax        # 62cf30 <verbosity>
  405ea6:	48 85 c0             	test   %rax,%rax
  405ea9:	0f 8e 99 00 00 00    	jle    405f48 <uncompress+0x768>
  405eaf:	48 8b 3d 1a 2b 02 00 	mov    0x22b1a(%rip),%rdi        # 4289d0 <stderr>
  405eb6:	48 be d4 64 42 00 00 	movabs $0x4264d4,%rsi
  405ebd:	00 00 00 
  405ec0:	48 31 c0             	xor    %rax,%rax
  405ec3:	e8 30 3e 01 00       	callq  419cf8 <fprintf>
  405ec8:	e9 d9 00 00 00       	jmpq   405fa6 <uncompress+0x7c6>
  405ecd:	48 8b 3d fc 2a 02 00 	mov    0x22afc(%rip),%rdi        # 4289d0 <stderr>
  405ed4:	48 8b 15 5d 70 22 00 	mov    0x22705d(%rip),%rdx        # 62cf38 <progName>
  405edb:	48 be 37 64 42 00 00 	movabs $0x426437,%rsi
  405ee2:	00 00 00 
  405ee5:	48 b9 20 cb 62 00 00 	movabs $0x62cb20,%rcx
  405eec:	00 00 00 
  405eef:	e9 e1 fa ff ff       	jmpq   4059d5 <uncompress+0x1f5>
  405ef4:	4c 8b 35 d5 2a 02 00 	mov    0x22ad5(%rip),%r14        # 4289d0 <stderr>
  405efb:	4c 8b 3d 36 70 22 00 	mov    0x227036(%rip),%r15        # 62cf38 <progName>
  405f02:	e8 f9 20 01 00       	callq  418000 <__errno_location>
  405f07:	8b 38                	mov    (%rax),%edi
  405f09:	e8 12 21 01 00       	callq  418020 <strerror>
  405f0e:	48 89 c3             	mov    %rax,%rbx
  405f11:	48 be 86 64 42 00 00 	movabs $0x426486,%rsi
  405f18:	00 00 00 
  405f1b:	48 b9 20 cb 62 00 00 	movabs $0x62cb20,%rcx
  405f22:	00 00 00 
  405f25:	48 31 c0             	xor    %rax,%rax
  405f28:	4c 89 f7             	mov    %r14,%rdi
  405f2b:	4c 89 fa             	mov    %r15,%rdx
  405f2e:	49 89 d8             	mov    %rbx,%r8
  405f31:	e8 c2 3d 01 00       	callq  419cf8 <fprintf>
  405f36:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  405f3b:	74 5d                	je     405f9a <uncompress+0x7ba>
  405f3d:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  405f41:	e8 8a 3a 01 00       	callq  4199d0 <fclose>
  405f46:	eb 52                	jmp    405f9a <uncompress+0x7ba>
  405f48:	48 8b 3d 81 2a 02 00 	mov    0x22a81(%rip),%rdi        # 4289d0 <stderr>
  405f4f:	48 8b 15 e2 6f 22 00 	mov    0x226fe2(%rip),%rdx        # 62cf38 <progName>
  405f56:	48 be ca 64 42 00 00 	movabs $0x4264ca,%rsi
  405f5d:	00 00 00 
  405f60:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  405f67:	00 00 00 
  405f6a:	48 31 c0             	xor    %rax,%rax
  405f6d:	e8 86 3d 01 00       	callq  419cf8 <fprintf>
  405f72:	eb 32                	jmp    405fa6 <uncompress+0x7c6>
  405f74:	49 b9 52 78 42 00 00 	movabs $0x427852,%r9
  405f7b:	00 00 00 
  405f7e:	48 be 5b 64 42 00 00 	movabs $0x42645b,%rsi
  405f85:	00 00 00 
  405f88:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  405f8f:	00 00 00 
  405f92:	48 31 c0             	xor    %rax,%rax
  405f95:	e8 5e 3d 01 00       	callq  419cf8 <fprintf>
  405f9a:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  405fa1:	e8 3a 00 00 00       	callq  405fe0 <setExit>
  405fa6:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
  405fad:	5b                   	pop    %rbx
  405fae:	41 5e                	pop    %r14
  405fb0:	41 5f                	pop    %r15
  405fb2:	5d                   	pop    %rbp
  405fb3:	c3                   	retq   
  405fb4:	48 b8 94 63 42 00 00 	movabs $0x426394,%rax
  405fbb:	00 00 00 
  405fbe:	48 89 c7             	mov    %rax,%rdi
  405fc1:	e8 ca 03 00 00       	callq  406390 <panic>
  405fc6:	48 b8 ac 64 42 00 00 	movabs $0x4264ac,%rax
  405fcd:	00 00 00 
  405fd0:	48 89 c7             	mov    %rax,%rdi
  405fd3:	e8 b8 03 00 00       	callq  406390 <panic>
  405fd8:	e8 e3 08 00 00       	callq  4068c0 <ioError>
  405fdd:	0f 1f 00             	nopl   (%rax)

0000000000405fe0 <setExit>:
  405fe0:	55                   	push   %rbp
  405fe1:	48 89 e5             	mov    %rsp,%rbp
  405fe4:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  405feb:	48 89 f8             	mov    %rdi,%rax
  405fee:	48 d3 e0             	shl    %cl,%rax
  405ff1:	48 63 15 94 77 22 00 	movslq 0x227794(%rip),%rdx        # 62d78c <exitValue>
  405ff8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  405fff:	48 d3 f8             	sar    %cl,%rax
  406002:	89 7d fc             	mov    %edi,-0x4(%rbp)
  406005:	48 39 d0             	cmp    %rdx,%rax
  406008:	7e 09                	jle    406013 <setExit+0x33>
  40600a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40600d:	89 05 79 77 22 00    	mov    %eax,0x227779(%rip)        # 62d78c <exitValue>
  406013:	5d                   	pop    %rbp
  406014:	c3                   	retq   
  406015:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40601c:	00 00 00 00 

0000000000406020 <testf>:
  406020:	55                   	push   %rbp
  406021:	48 89 e5             	mov    %rsp,%rbp
  406024:	41 57                	push   %r15
  406026:	41 56                	push   %r14
  406028:	53                   	push   %rbx
  406029:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  406030:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  406034:	48 31 c0             	xor    %rax,%rax
  406037:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40603c:	88 05 c8 6a 22 00    	mov    %al,0x226ac8(%rip)        # 62cb0a <deleteOutputOnInterrupt>
  406042:	75 10                	jne    406054 <testf+0x34>
  406044:	8b 05 a6 66 22 00    	mov    0x2266a6(%rip),%eax        # 62c6f0 <srcMode>
  40604a:	48 83 f8 01          	cmp    $0x1,%rax
  40604e:	0f 85 11 03 00 00    	jne    406365 <testf+0x345>
  406054:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  40605b:	00 00 00 
  40605e:	48 be 39 5d 42 00 00 	movabs $0x425d39,%rsi
  406065:	00 00 00 
  406068:	e8 73 ec ff ff       	callq  404ce0 <copyFileName>
  40606d:	8b 05 7d 66 22 00    	mov    0x22667d(%rip),%eax        # 62c6f0 <srcMode>
  406073:	48 83 f8 03          	cmp    $0x3,%rax
  406077:	74 06                	je     40607f <testf+0x5f>
  406079:	48 83 f8 02          	cmp    $0x2,%rax
  40607d:	75 10                	jne    40608f <testf+0x6f>
  40607f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  406083:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  40608a:	00 00 00 
  40608d:	eb 1a                	jmp    4060a9 <testf+0x89>
  40608f:	48 83 f8 01          	cmp    $0x1,%rax
  406093:	75 19                	jne    4060ae <testf+0x8e>
  406095:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  40609c:	00 00 00 
  40609f:	48 be 69 5e 42 00 00 	movabs $0x425e69,%rsi
  4060a6:	00 00 00 
  4060a9:	e8 32 ec ff ff       	callq  404ce0 <copyFileName>
  4060ae:	8b 05 3c 66 22 00    	mov    0x22663c(%rip),%eax        # 62c6f0 <srcMode>
  4060b4:	48 83 f8 01          	cmp    $0x1,%rax
  4060b8:	74 3e                	je     4060f8 <testf+0xd8>
  4060ba:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  4060c1:	00 00 00 
  4060c4:	e8 17 03 00 00       	callq  4063e0 <containsDubiousChars>
  4060c9:	48 85 c0             	test   %rax,%rax
  4060cc:	74 2a                	je     4060f8 <testf+0xd8>
  4060ce:	0f b6 05 9b 72 22 00 	movzbl 0x22729b(%rip),%eax        # 62d370 <noisy>
  4060d5:	48 85 c0             	test   %rax,%rax
  4060d8:	0f 84 c0 01 00 00    	je     40629e <testf+0x27e>
  4060de:	48 8b 3d eb 28 02 00 	mov    0x228eb(%rip),%rdi        # 4289d0 <stderr>
  4060e5:	48 8b 15 4c 6e 22 00 	mov    0x226e4c(%rip),%rdx        # 62cf38 <progName>
  4060ec:	48 be 71 5e 42 00 00 	movabs $0x425e71,%rsi
  4060f3:	00 00 00 
  4060f6:	eb 72                	jmp    40616a <testf+0x14a>
  4060f8:	8b 05 f2 65 22 00    	mov    0x2265f2(%rip),%eax        # 62c6f0 <srcMode>
  4060fe:	48 83 f8 01          	cmp    $0x1,%rax
  406102:	74 18                	je     40611c <testf+0xfc>
  406104:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  40610b:	00 00 00 
  40610e:	e8 dd 02 00 00       	callq  4063f0 <fileExists>
  406113:	48 85 c0             	test   %rax,%rax
  406116:	0f 84 40 01 00 00    	je     40625c <testf+0x23c>
  40611c:	8b 05 ce 65 22 00    	mov    0x2265ce(%rip),%eax        # 62c6f0 <srcMode>
  406122:	48 83 f8 01          	cmp    $0x1,%rax
  406126:	74 54                	je     40617c <testf+0x15c>
  406128:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  40612f:	00 00 00 
  406132:	48 8d b5 40 ff ff ff 	lea    -0xc0(%rbp),%rsi
  406139:	e8 26 34 01 00       	callq  419564 <stat>
  40613e:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
  406144:	48 25 00 f0 00 00    	and    $0xf000,%rax
  40614a:	48 3d 00 40 00 00    	cmp    $0x4000,%rax
  406150:	75 2a                	jne    40617c <testf+0x15c>
  406152:	48 8b 3d 77 28 02 00 	mov    0x22877(%rip),%rdi        # 4289d0 <stderr>
  406159:	48 8b 15 d8 6d 22 00 	mov    0x226dd8(%rip),%rdx        # 62cf38 <progName>
  406160:	48 be b6 5e 42 00 00 	movabs $0x425eb6,%rsi
  406167:	00 00 00 
  40616a:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  406171:	00 00 00 
  406174:	48 31 c0             	xor    %rax,%rax
  406177:	e9 d9 00 00 00       	jmpq   406255 <testf+0x235>
  40617c:	8b 05 6e 65 22 00    	mov    0x22656e(%rip),%eax        # 62c6f0 <srcMode>
  406182:	48 8d 48 fe          	lea    -0x2(%rax),%rcx
  406186:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  40618d:	00 00 00 
  406190:	48 21 d9             	and    %rbx,%rcx
  406193:	48 83 f9 02          	cmp    $0x2,%rcx
  406197:	73 52                	jae    4061eb <testf+0x1cb>
  406199:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  4061a0:	00 00 00 
  4061a3:	48 be 2e 5f 42 00 00 	movabs $0x425f2e,%rsi
  4061aa:	00 00 00 
  4061ad:	e8 be 3a 01 00       	callq  419c70 <fopen>
  4061b2:	48 85 c0             	test   %rax,%rax
  4061b5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4061b9:	0f 85 fd 00 00 00    	jne    4062bc <testf+0x29c>
  4061bf:	4c 8b 35 0a 28 02 00 	mov    0x2280a(%rip),%r14        # 4289d0 <stderr>
  4061c6:	4c 8b 3d 6b 6d 22 00 	mov    0x226d6b(%rip),%r15        # 62cf38 <progName>
  4061cd:	e8 2e 1e 01 00       	callq  418000 <__errno_location>
  4061d2:	8b 38                	mov    (%rax),%edi
  4061d4:	e8 47 1e 01 00       	callq  418020 <strerror>
  4061d9:	48 89 c3             	mov    %rax,%rbx
  4061dc:	48 be 31 5f 42 00 00 	movabs $0x425f31,%rsi
  4061e3:	00 00 00 
  4061e6:	e9 98 00 00 00       	jmpq   406283 <testf+0x263>
  4061eb:	48 21 d8             	and    %rbx,%rax
  4061ee:	48 83 f8 01          	cmp    $0x1,%rax
  4061f2:	0f 85 7f 01 00 00    	jne    406377 <testf+0x357>
  4061f8:	4c 8b 35 d9 27 02 00 	mov    0x227d9(%rip),%r14        # 4289d8 <stdin>
  4061ff:	4c 89 f7             	mov    %r14,%rdi
  406202:	e8 45 3a 01 00       	callq  419c4c <fileno>
  406207:	48 89 c7             	mov    %rax,%rdi
  40620a:	e8 d5 61 01 00       	callq  41c3e4 <isatty>
  40620f:	48 85 d8             	test   %rbx,%rax
  406212:	0f 84 a0 00 00 00    	je     4062b8 <testf+0x298>
  406218:	48 8b 1d b1 27 02 00 	mov    0x227b1(%rip),%rbx        # 4289d0 <stderr>
  40621f:	48 8b 15 12 6d 22 00 	mov    0x226d12(%rip),%rdx        # 62cf38 <progName>
  406226:	48 be d9 5e 42 00 00 	movabs $0x425ed9,%rsi
  40622d:	00 00 00 
  406230:	48 31 c0             	xor    %rax,%rax
  406233:	48 89 df             	mov    %rbx,%rdi
  406236:	e8 bd 3a 01 00       	callq  419cf8 <fprintf>
  40623b:	48 8b 15 f6 6c 22 00 	mov    0x226cf6(%rip),%rdx        # 62cf38 <progName>
  406242:	48 be 0c 5f 42 00 00 	movabs $0x425f0c,%rsi
  406249:	00 00 00 
  40624c:	48 31 c0             	xor    %rax,%rax
  40624f:	48 89 df             	mov    %rbx,%rdi
  406252:	48 89 d1             	mov    %rdx,%rcx
  406255:	e8 9e 3a 01 00       	callq  419cf8 <fprintf>
  40625a:	eb 42                	jmp    40629e <testf+0x27e>
  40625c:	4c 8b 35 6d 27 02 00 	mov    0x2276d(%rip),%r14        # 4289d0 <stderr>
  406263:	4c 8b 3d ce 6c 22 00 	mov    0x226cce(%rip),%r15        # 62cf38 <progName>
  40626a:	e8 91 1d 01 00       	callq  418000 <__errno_location>
  40626f:	8b 38                	mov    (%rax),%edi
  406271:	e8 aa 1d 01 00       	callq  418020 <strerror>
  406276:	48 89 c3             	mov    %rax,%rbx
  406279:	48 be 98 5e 42 00 00 	movabs $0x425e98,%rsi
  406280:	00 00 00 
  406283:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  40628a:	00 00 00 
  40628d:	48 31 c0             	xor    %rax,%rax
  406290:	4c 89 f7             	mov    %r14,%rdi
  406293:	4c 89 fa             	mov    %r15,%rdx
  406296:	49 89 d8             	mov    %rbx,%r8
  406299:	e8 5a 3a 01 00       	callq  419cf8 <fprintf>
  40629e:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  4062a5:	e8 36 fd ff ff       	callq  405fe0 <setExit>
  4062aa:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
  4062b1:	5b                   	pop    %rbx
  4062b2:	41 5e                	pop    %r14
  4062b4:	41 5f                	pop    %r15
  4062b6:	5d                   	pop    %rbp
  4062b7:	c3                   	retq   
  4062b8:	4c 89 75 d8          	mov    %r14,-0x28(%rbp)
  4062bc:	48 63 05 6d 6c 22 00 	movslq 0x226c6d(%rip),%rax        # 62cf30 <verbosity>
  4062c3:	48 85 c0             	test   %rax,%rax
  4062c6:	7e 39                	jle    406301 <testf+0x2e1>
  4062c8:	4c 8b 35 01 27 02 00 	mov    0x22701(%rip),%r14        # 4289d0 <stderr>
  4062cf:	48 be 66 5f 42 00 00 	movabs $0x425f66,%rsi
  4062d6:	00 00 00 
  4062d9:	48 bb 60 cf 62 00 00 	movabs $0x62cf60,%rbx
  4062e0:	00 00 00 
  4062e3:	48 31 c0             	xor    %rax,%rax
  4062e6:	4c 89 f7             	mov    %r14,%rdi
  4062e9:	48 89 da             	mov    %rbx,%rdx
  4062ec:	e8 07 3a 01 00       	callq  419cf8 <fprintf>
  4062f1:	48 89 df             	mov    %rbx,%rdi
  4062f4:	e8 57 01 00 00       	callq  406450 <pad>
  4062f9:	4c 89 f7             	mov    %r14,%rdi
  4062fc:	e8 13 38 01 00       	callq  419b14 <fflush>
  406301:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  406305:	48 c7 05 38 6c 22 00 	movq   $0x0,0x226c38(%rip)        # 62cf48 <outputHandleJustInCase>
  40630c:	00 00 00 00 
  406310:	e8 eb 01 00 00       	callq  406500 <testStream>
  406315:	88 45 d7             	mov    %al,-0x29(%rbp)
  406318:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  40631c:	48 85 c0             	test   %rax,%rax
  40631f:	74 25                	je     406346 <testf+0x326>
  406321:	48 63 05 08 6c 22 00 	movslq 0x226c08(%rip),%rax        # 62cf30 <verbosity>
  406328:	48 85 c0             	test   %rax,%rax
  40632b:	7e 19                	jle    406346 <testf+0x326>
  40632d:	48 8b 3d 9c 26 02 00 	mov    0x2269c(%rip),%rdi        # 4289d0 <stderr>
  406334:	48 be 6d 5f 42 00 00 	movabs $0x425f6d,%rsi
  40633b:	00 00 00 
  40633e:	48 31 c0             	xor    %rax,%rax
  406341:	e8 b2 39 01 00       	callq  419cf8 <fprintf>
  406346:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  40634a:	48 85 c0             	test   %rax,%rax
  40634d:	0f 85 57 ff ff ff    	jne    4062aa <testf+0x28a>
  406353:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40635a:	88 05 b0 67 22 00    	mov    %al,0x2267b0(%rip)        # 62cb10 <testFailsExist>
  406360:	e9 45 ff ff ff       	jmpq   4062aa <testf+0x28a>
  406365:	48 b8 57 5e 42 00 00 	movabs $0x425e57,%rax
  40636c:	00 00 00 
  40636f:	48 89 c7             	mov    %rax,%rdi
  406372:	e8 19 00 00 00       	callq  406390 <panic>
  406377:	48 b8 53 5f 42 00 00 	movabs $0x425f53,%rax
  40637e:	00 00 00 
  406381:	48 89 c7             	mov    %rax,%rdi
  406384:	e8 07 00 00 00       	callq  406390 <panic>
  406389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000406390 <panic>:
  406390:	55                   	push   %rbp
  406391:	48 89 e5             	mov    %rsp,%rbp
  406394:	48 83 ec 10          	sub    $0x10,%rsp
  406398:	4c 8b 05 31 26 02 00 	mov    0x22631(%rip),%r8        # 4289d0 <stderr>
  40639f:	48 8b 15 92 6b 22 00 	mov    0x226b92(%rip),%rdx        # 62cf38 <progName>
  4063a6:	48 89 f9             	mov    %rdi,%rcx
  4063a9:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  4063ad:	48 be 27 63 42 00 00 	movabs $0x426327,%rsi
  4063b4:	00 00 00 
  4063b7:	48 31 c0             	xor    %rax,%rax
  4063ba:	4c 89 c7             	mov    %r8,%rdi
  4063bd:	e8 36 39 01 00       	callq  419cf8 <fprintf>
  4063c2:	e8 89 05 00 00       	callq  406950 <showFileNames>
  4063c7:	48 c7 c7 03 00 00 00 	mov    $0x3,%rdi
  4063ce:	e8 bd 05 00 00       	callq  406990 <cleanUpAndFail>
  4063d3:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4063da:	84 00 00 00 00 00 

00000000004063e0 <containsDubiousChars>:
  4063e0:	55                   	push   %rbp
  4063e1:	48 89 e5             	mov    %rsp,%rbp
  4063e4:	48 31 c0             	xor    %rax,%rax
  4063e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4063eb:	5d                   	pop    %rbp
  4063ec:	c3                   	retq   
  4063ed:	0f 1f 00             	nopl   (%rax)

00000000004063f0 <fileExists>:
  4063f0:	55                   	push   %rbp
  4063f1:	48 89 e5             	mov    %rsp,%rbp
  4063f4:	48 83 ec 20          	sub    $0x20,%rsp
  4063f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4063fc:	48 be 2e 5f 42 00 00 	movabs $0x425f2e,%rsi
  406403:	00 00 00 
  406406:	e8 65 38 01 00       	callq  419c70 <fopen>
  40640b:	48 85 c0             	test   %rax,%rax
  40640e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  406412:	74 0c                	je     406420 <fileExists+0x30>
  406414:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  40641b:	00 00 00 
  40641e:	eb 0a                	jmp    40642a <fileExists+0x3a>
  406420:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  406427:	00 00 00 
  40642a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40642f:	88 45 ef             	mov    %al,-0x11(%rbp)
  406432:	74 09                	je     40643d <fileExists+0x4d>
  406434:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  406438:	e8 93 35 01 00       	callq  4199d0 <fclose>
  40643d:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
  406441:	48 83 c4 20          	add    $0x20,%rsp
  406445:	5d                   	pop    %rbp
  406446:	c3                   	retq   
  406447:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40644e:	00 00 

0000000000406450 <pad>:
  406450:	55                   	push   %rbp
  406451:	48 89 e5             	mov    %rsp,%rbp
  406454:	41 57                	push   %r15
  406456:	41 56                	push   %r14
  406458:	53                   	push   %rbx
  406459:	48 83 ec 18          	sub    $0x18,%rsp
  40645d:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  406461:	e8 fa 57 01 00       	callq  41bc60 <strlen>
  406466:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40646d:	48 63 15 00 6f 22 00 	movslq 0x226f00(%rip),%rdx        # 62d374 <longestFileName>
  406474:	48 d3 e0             	shl    %cl,%rax
  406477:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40647e:	48 d3 f8             	sar    %cl,%rax
  406481:	48 39 d0             	cmp    %rdx,%rax
  406484:	7d 64                	jge    4064ea <pad+0x9a>
  406486:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40648d:	89 45 dc             	mov    %eax,-0x24(%rbp)
  406490:	49 be ae 7d 42 00 00 	movabs $0x427dae,%r14
  406497:	00 00 00 
  40649a:	eb 1f                	jmp    4064bb <pad+0x6b>
  40649c:	0f 1f 40 00          	nopl   0x0(%rax)
  4064a0:	48 8b 3d 29 25 02 00 	mov    0x22529(%rip),%rdi        # 4289d0 <stderr>
  4064a7:	48 31 c0             	xor    %rax,%rax
  4064aa:	4c 89 f6             	mov    %r14,%rsi
  4064ad:	e8 46 38 01 00       	callq  419cf8 <fprintf>
  4064b2:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4064b5:	48 ff c0             	inc    %rax
  4064b8:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4064bb:	4c 63 7d dc          	movslq -0x24(%rbp),%r15
  4064bf:	8b 1d af 6e 22 00    	mov    0x226eaf(%rip),%ebx        # 62d374 <longestFileName>
  4064c5:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  4064c9:	e8 92 57 01 00       	callq  41bc60 <strlen>
  4064ce:	48 29 c3             	sub    %rax,%rbx
  4064d1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4064d8:	48 d3 e3             	shl    %cl,%rbx
  4064db:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4064e2:	48 d3 fb             	sar    %cl,%rbx
  4064e5:	49 39 df             	cmp    %rbx,%r15
  4064e8:	7e b6                	jle    4064a0 <pad+0x50>
  4064ea:	48 83 c4 18          	add    $0x18,%rsp
  4064ee:	5b                   	pop    %rbx
  4064ef:	41 5e                	pop    %r14
  4064f1:	41 5f                	pop    %r15
  4064f3:	5d                   	pop    %rbp
  4064f4:	c3                   	retq   
  4064f5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  4064fc:	00 00 00 00 

0000000000406500 <testStream>:
  406500:	55                   	push   %rbp
  406501:	48 89 e5             	mov    %rsp,%rbp
  406504:	41 57                	push   %r15
  406506:	41 56                	push   %r14
  406508:	41 55                	push   %r13
  40650a:	41 54                	push   %r12
  40650c:	53                   	push   %rbx
  40650d:	48 81 ec 68 27 00 00 	sub    $0x2768,%rsp
  406514:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  406518:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  40651f:	00 
  406520:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  406524:	4d 31 ed             	xor    %r13,%r13
  406527:	44 89 ad 8c d8 ff ff 	mov    %r13d,-0x2774(%rbp)
  40652e:	44 89 6d ac          	mov    %r13d,-0x54(%rbp)
  406532:	e8 3d 35 01 00       	callq  419a74 <ferror>
  406537:	49 be ff ff ff ff 00 	movabs $0xffffffff,%r14
  40653e:	00 00 00 
  406541:	4c 85 f0             	test   %r14,%rax
  406544:	0f 85 d3 02 00 00    	jne    40681d <testStream+0x31d>
  40654a:	48 8d 5d bc          	lea    -0x44(%rbp),%rbx
  40654e:	4c 8d bd 20 ec ff ff 	lea    -0x13e0(%rbp),%r15
  406555:	49 bc fb ff ff ff 00 	movabs $0xfffffffb,%r12
  40655c:	00 00 00 
  40655f:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  406563:	0f b6 0d 0e 6e 22 00 	movzbl 0x226e0e(%rip),%ecx        # 62d378 <smallMode>
  40656a:	44 8b 8d 8c d8 ff ff 	mov    -0x2774(%rbp),%r9d
  406571:	8b 15 b9 69 22 00    	mov    0x2269b9(%rip),%edx        # 62cf30 <verbosity>
  406577:	48 89 df             	mov    %rbx,%rdi
  40657a:	4c 8d 85 90 d8 ff ff 	lea    -0x2770(%rbp),%r8
  406581:	e8 5a 42 00 00       	callq  40a7e0 <BZ2_bzReadOpen>
  406586:	48 85 c0             	test   %rax,%rax
  406589:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  40658d:	0f 84 59 01 00 00    	je     4066ec <testStream+0x1ec>
  406593:	8b 45 bc             	mov    -0x44(%rbp),%eax
  406596:	48 85 c0             	test   %rax,%rax
  406599:	0f 85 4d 01 00 00    	jne    4066ec <testStream+0x1ec>
  40659f:	8b 45 ac             	mov    -0x54(%rbp),%eax
  4065a2:	48 ff c0             	inc    %rax
  4065a5:	89 45 ac             	mov    %eax,-0x54(%rbp)
  4065a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4065af:	00 
  4065b0:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4065b3:	48 85 c0             	test   %rax,%rax
  4065b6:	75 28                	jne    4065e0 <testStream+0xe0>
  4065b8:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  4065bc:	48 c7 c1 88 13 00 00 	mov    $0x1388,%rcx
  4065c3:	48 89 df             	mov    %rbx,%rdi
  4065c6:	4c 89 fa             	mov    %r15,%rdx
  4065c9:	e8 f2 45 00 00       	callq  40abc0 <BZ2_bzRead>
  4065ce:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  4065d1:	89 45 b0             	mov    %eax,-0x50(%rbp)
  4065d4:	4c 39 e1             	cmp    %r12,%rcx
  4065d7:	75 d7                	jne    4065b0 <testStream+0xb0>
  4065d9:	e9 0e 01 00 00       	jmpq   4066ec <testStream+0x1ec>
  4065de:	66 90                	xchg   %ax,%ax
  4065e0:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4065e3:	48 83 f8 04          	cmp    $0x4,%rax
  4065e7:	0f 85 ff 00 00 00    	jne    4066ec <testStream+0x1ec>
  4065ed:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  4065f1:	48 89 df             	mov    %rbx,%rdi
  4065f4:	48 8d 95 80 d8 ff ff 	lea    -0x2780(%rbp),%rdx
  4065fb:	48 8d 8d 8c d8 ff ff 	lea    -0x2774(%rbp),%rcx
  406602:	e8 79 49 00 00       	callq  40af80 <BZ2_bzReadGetUnused>
  406607:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40660a:	48 85 c0             	test   %rax,%rax
  40660d:	0f 85 f3 01 00 00    	jne    406806 <testStream+0x306>
  406613:	48 8b 85 80 d8 ff ff 	mov    -0x2780(%rbp),%rax
  40661a:	48 89 85 78 d8 ff ff 	mov    %rax,-0x2788(%rbp)
  406621:	44 89 6d a8          	mov    %r13d,-0x58(%rbp)
  406625:	eb 28                	jmp    40664f <testStream+0x14f>
  406627:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40662e:	00 00 
  406630:	48 63 45 a8          	movslq -0x58(%rbp),%rax
  406634:	48 8b 8d 78 d8 ff ff 	mov    -0x2788(%rbp),%rcx
  40663b:	8b 55 a8             	mov    -0x58(%rbp),%edx
  40663e:	0f b6 0c 01          	movzbl (%rcx,%rax,1),%ecx
  406642:	88 8c 05 90 d8 ff ff 	mov    %cl,-0x2770(%rbp,%rax,1)
  406649:	48 ff c2             	inc    %rdx
  40664c:	89 55 a8             	mov    %edx,-0x58(%rbp)
  40664f:	48 63 45 a8          	movslq -0x58(%rbp),%rax
  406653:	48 63 8d 8c d8 ff ff 	movslq -0x2774(%rbp),%rcx
  40665a:	48 39 c8             	cmp    %rcx,%rax
  40665d:	7c d1                	jl     406630 <testStream+0x130>
  40665f:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  406663:	48 89 df             	mov    %rbx,%rdi
  406666:	e8 75 44 00 00       	callq  40aae0 <BZ2_bzReadClose>
  40666b:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40666e:	48 85 c0             	test   %rax,%rax
  406671:	0f 85 8f 01 00 00    	jne    406806 <testStream+0x306>
  406677:	8b 85 8c d8 ff ff    	mov    -0x2774(%rbp),%eax
  40667d:	48 85 c0             	test   %rax,%rax
  406680:	0f 85 d9 fe ff ff    	jne    40655f <testStream+0x5f>
  406686:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  40668a:	e8 a1 01 00 00       	callq  406830 <myfeof>
  40668f:	48 85 c0             	test   %rax,%rax
  406692:	0f 84 c7 fe ff ff    	je     40655f <testStream+0x5f>
  406698:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  40669c:	e8 d3 33 01 00       	callq  419a74 <ferror>
  4066a1:	4c 85 f0             	test   %r14,%rax
  4066a4:	0f 85 73 01 00 00    	jne    40681d <testStream+0x31d>
  4066aa:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  4066ae:	e8 1d 33 01 00       	callq  4199d0 <fclose>
  4066b3:	48 89 c1             	mov    %rax,%rcx
  4066b6:	4c 21 f1             	and    %r14,%rcx
  4066b9:	4c 39 f1             	cmp    %r14,%rcx
  4066bc:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  4066bf:	0f 84 58 01 00 00    	je     40681d <testStream+0x31d>
  4066c5:	48 63 05 64 68 22 00 	movslq 0x226864(%rip),%rax        # 62cf30 <verbosity>
  4066cc:	48 83 f8 02          	cmp    $0x2,%rax
  4066d0:	0f 8c 01 01 00 00    	jl     4067d7 <testStream+0x2d7>
  4066d6:	48 8b 3d f3 22 02 00 	mov    0x222f3(%rip),%rdi        # 4289d0 <stderr>
  4066dd:	48 be 86 5f 42 00 00 	movabs $0x425f86,%rsi
  4066e4:	00 00 00 
  4066e7:	e9 e3 00 00 00       	jmpq   4067cf <testStream+0x2cf>
  4066ec:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  4066f0:	48 8d 7d b8          	lea    -0x48(%rbp),%rdi
  4066f4:	e8 e7 43 00 00       	callq  40aae0 <BZ2_bzReadClose>
  4066f9:	8b 05 31 68 22 00    	mov    0x226831(%rip),%eax        # 62cf30 <verbosity>
  4066ff:	48 85 c0             	test   %rax,%rax
  406702:	75 2a                	jne    40672e <testStream+0x22e>
  406704:	48 8b 3d c5 22 02 00 	mov    0x222c5(%rip),%rdi        # 4289d0 <stderr>
  40670b:	48 8b 15 26 68 22 00 	mov    0x226826(%rip),%rdx        # 62cf38 <progName>
  406712:	48 be 8c 5f 42 00 00 	movabs $0x425f8c,%rsi
  406719:	00 00 00 
  40671c:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  406723:	00 00 00 
  406726:	48 31 c0             	xor    %rax,%rax
  406729:	e8 ca 35 01 00       	callq  419cf8 <fprintf>
  40672e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  406731:	48 83 c0 09          	add    $0x9,%rax
  406735:	4c 21 f0             	and    %r14,%rax
  406738:	48 83 f8 06          	cmp    $0x6,%rax
  40673c:	0f 87 b5 00 00 00    	ja     4067f7 <testStream+0x2f7>
  406742:	ff 24 c5 b0 5c 42 00 	jmpq   *0x425cb0(,%rax,8)
  406749:	48 8b 3d 80 22 02 00 	mov    0x22280(%rip),%rdi        # 4289d0 <stderr>
  406750:	48 be b9 5f 42 00 00 	movabs $0x425fb9,%rsi
  406757:	00 00 00 
  40675a:	eb 46                	jmp    4067a2 <testStream+0x2a2>
  40675c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  406760:	48 8b 0d 71 22 02 00 	mov    0x22271(%rip),%rcx        # 4289d8 <stdin>
  406767:	48 39 c8             	cmp    %rcx,%rax
  40676a:	74 09                	je     406775 <testStream+0x275>
  40676c:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  406770:	e8 5b 32 01 00       	callq  4199d0 <fclose>
  406775:	8b 45 ac             	mov    -0x54(%rbp),%eax
  406778:	48 83 f8 01          	cmp    $0x1,%rax
  40677c:	75 34                	jne    4067b2 <testStream+0x2b2>
  40677e:	48 8b 3d 4b 22 02 00 	mov    0x2224b(%rip),%rdi        # 4289d0 <stderr>
  406785:	48 be d1 5f 42 00 00 	movabs $0x425fd1,%rsi
  40678c:	00 00 00 
  40678f:	eb 11                	jmp    4067a2 <testStream+0x2a2>
  406791:	48 8b 3d 38 22 02 00 	mov    0x22238(%rip),%rdi        # 4289d0 <stderr>
  406798:	48 be 95 5f 42 00 00 	movabs $0x425f95,%rsi
  40679f:	00 00 00 
  4067a2:	48 31 c0             	xor    %rax,%rax
  4067a5:	48 31 db             	xor    %rbx,%rbx
  4067a8:	e8 4b 35 01 00       	callq  419cf8 <fprintf>
  4067ad:	88 5d d7             	mov    %bl,-0x29(%rbp)
  4067b0:	eb 2f                	jmp    4067e1 <testStream+0x2e1>
  4067b2:	0f b6 05 b7 6b 22 00 	movzbl 0x226bb7(%rip),%eax        # 62d370 <noisy>
  4067b9:	48 85 c0             	test   %rax,%rax
  4067bc:	74 19                	je     4067d7 <testStream+0x2d7>
  4067be:	48 8b 3d 0b 22 02 00 	mov    0x2220b(%rip),%rdi        # 4289d0 <stderr>
  4067c5:	48 be 0b 65 42 00 00 	movabs $0x42650b,%rsi
  4067cc:	00 00 00 
  4067cf:	48 31 c0             	xor    %rax,%rax
  4067d2:	e8 21 35 01 00       	callq  419cf8 <fprintf>
  4067d7:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4067de:	88 45 d7             	mov    %al,-0x29(%rbp)
  4067e1:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  4067e5:	48 81 c4 68 27 00 00 	add    $0x2768,%rsp
  4067ec:	5b                   	pop    %rbx
  4067ed:	41 5c                	pop    %r12
  4067ef:	41 5d                	pop    %r13
  4067f1:	41 5e                	pop    %r14
  4067f3:	41 5f                	pop    %r15
  4067f5:	5d                   	pop    %rbp
  4067f6:	c3                   	retq   
  4067f7:	48 bf ff 5f 42 00 00 	movabs $0x425fff,%rdi
  4067fe:	00 00 00 
  406801:	e8 8a fb ff ff       	callq  406390 <panic>
  406806:	48 b8 71 5f 42 00 00 	movabs $0x425f71,%rax
  40680d:	00 00 00 
  406810:	48 89 c7             	mov    %rax,%rdi
  406813:	e8 78 fb ff ff       	callq  406390 <panic>
  406818:	e8 63 00 00 00       	callq  406880 <configError>
  40681d:	e8 9e 00 00 00       	callq  4068c0 <ioError>
  406822:	e8 e9 00 00 00       	callq  406910 <outOfMemory>
  406827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40682e:	00 00 

0000000000406830 <myfeof>:
  406830:	55                   	push   %rbp
  406831:	48 89 e5             	mov    %rsp,%rbp
  406834:	48 83 ec 20          	sub    $0x20,%rsp
  406838:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  40683c:	e8 93 33 01 00       	callq  419bd4 <fgetc>
  406841:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  406848:	00 00 00 
  40684b:	48 89 c2             	mov    %rax,%rdx
  40684e:	48 21 ca             	and    %rcx,%rdx
  406851:	48 39 ca             	cmp    %rcx,%rdx
  406854:	89 45 ec             	mov    %eax,-0x14(%rbp)
  406857:	74 11                	je     40686a <myfeof+0x3a>
  406859:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40685d:	8b 7d ec             	mov    -0x14(%rbp),%edi
  406860:	e8 27 39 01 00       	callq  41a18c <ungetc>
  406865:	48 31 c0             	xor    %rax,%rax
  406868:	eb 07                	jmp    406871 <myfeof+0x41>
  40686a:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  406871:	88 45 ff             	mov    %al,-0x1(%rbp)
  406874:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  406878:	48 83 c4 20          	add    $0x20,%rsp
  40687c:	5d                   	pop    %rbp
  40687d:	c3                   	retq   
  40687e:	66 90                	xchg   %ax,%ax

0000000000406880 <configError>:
  406880:	55                   	push   %rbp
  406881:	48 89 e5             	mov    %rsp,%rbp
  406884:	48 8b 3d 45 21 02 00 	mov    0x22145(%rip),%rdi        # 4289d0 <stderr>
  40688b:	48 be 3b 62 42 00 00 	movabs $0x42623b,%rsi
  406892:	00 00 00 
  406895:	48 31 c0             	xor    %rax,%rax
  406898:	e8 5b 34 01 00       	callq  419cf8 <fprintf>
  40689d:	48 c7 c7 03 00 00 00 	mov    $0x3,%rdi
  4068a4:	e8 37 f7 ff ff       	callq  405fe0 <setExit>
  4068a9:	8b 3d dd 6e 22 00    	mov    0x226edd(%rip),%edi        # 62d78c <exitValue>
  4068af:	e8 9d 17 01 00       	callq  418051 <exit>
  4068b4:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4068bb:	00 00 00 00 00 

00000000004068c0 <ioError>:
  4068c0:	55                   	push   %rbp
  4068c1:	48 89 e5             	mov    %rsp,%rbp
  4068c4:	48 8b 3d 05 21 02 00 	mov    0x22105(%rip),%rdi        # 4289d0 <stderr>
  4068cb:	48 8b 15 66 66 22 00 	mov    0x226666(%rip),%rdx        # 62cf38 <progName>
  4068d2:	48 be fa 61 42 00 00 	movabs $0x4261fa,%rsi
  4068d9:	00 00 00 
  4068dc:	48 31 c0             	xor    %rax,%rax
  4068df:	e8 14 34 01 00       	callq  419cf8 <fprintf>
  4068e4:	48 8b 3d 4d 66 22 00 	mov    0x22664d(%rip),%rdi        # 62cf38 <progName>
  4068eb:	e8 bc 36 01 00       	callq  419fac <perror>
  4068f0:	e8 5b 00 00 00       	callq  406950 <showFileNames>
  4068f5:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  4068fc:	e8 8f 00 00 00       	callq  406990 <cleanUpAndFail>
  406901:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  406908:	0f 1f 84 00 00 00 00 
  40690f:	00 

0000000000406910 <outOfMemory>:
  406910:	55                   	push   %rbp
  406911:	48 89 e5             	mov    %rsp,%rbp
  406914:	48 8b 3d b5 20 02 00 	mov    0x220b5(%rip),%rdi        # 4289d0 <stderr>
  40691b:	48 8b 15 16 66 22 00 	mov    0x226616(%rip),%rdx        # 62cf38 <progName>
  406922:	48 be 15 60 42 00 00 	movabs $0x426015,%rsi
  406929:	00 00 00 
  40692c:	48 31 c0             	xor    %rax,%rax
  40692f:	e8 c4 33 01 00       	callq  419cf8 <fprintf>
  406934:	e8 17 00 00 00       	callq  406950 <showFileNames>
  406939:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  406940:	e8 4b 00 00 00       	callq  406990 <cleanUpAndFail>
  406945:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40694c:	00 00 00 00 

0000000000406950 <showFileNames>:
  406950:	55                   	push   %rbp
  406951:	48 89 e5             	mov    %rsp,%rbp
  406954:	0f b6 05 15 6a 22 00 	movzbl 0x226a15(%rip),%eax        # 62d370 <noisy>
  40695b:	48 85 c0             	test   %rax,%rax
  40695e:	74 2d                	je     40698d <showFileNames+0x3d>
  406960:	48 8b 3d 69 20 02 00 	mov    0x22069(%rip),%rdi        # 4289d0 <stderr>
  406967:	48 be d6 61 42 00 00 	movabs $0x4261d6,%rsi
  40696e:	00 00 00 
  406971:	48 ba 60 cf 62 00 00 	movabs $0x62cf60,%rdx
  406978:	00 00 00 
  40697b:	48 b9 20 cb 62 00 00 	movabs $0x62cb20,%rcx
  406982:	00 00 00 
  406985:	48 31 c0             	xor    %rax,%rax
  406988:	e8 6b 33 01 00       	callq  419cf8 <fprintf>
  40698d:	5d                   	pop    %rbp
  40698e:	c3                   	retq   
  40698f:	90                   	nop

0000000000406990 <cleanUpAndFail>:
  406990:	55                   	push   %rbp
  406991:	48 89 e5             	mov    %rsp,%rbp
  406994:	53                   	push   %rbx
  406995:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  40699c:	8b 05 4e 5d 22 00    	mov    0x225d4e(%rip),%eax        # 62c6f0 <srcMode>
  4069a2:	89 7d f4             	mov    %edi,-0xc(%rbp)
  4069a5:	48 83 f8 03          	cmp    $0x3,%rax
  4069a9:	0f 85 51 01 00 00    	jne    406b00 <cleanUpAndFail+0x170>
  4069af:	8b 05 57 61 22 00    	mov    0x226157(%rip),%eax        # 62cb0c <opMode>
  4069b5:	48 83 f8 03          	cmp    $0x3,%rax
  4069b9:	0f 84 41 01 00 00    	je     406b00 <cleanUpAndFail+0x170>
  4069bf:	0f b6 05 44 61 22 00 	movzbl 0x226144(%rip),%eax        # 62cb0a <deleteOutputOnInterrupt>
  4069c6:	48 85 c0             	test   %rax,%rax
  4069c9:	0f 84 31 01 00 00    	je     406b00 <cleanUpAndFail+0x170>
  4069cf:	48 bf 60 cf 62 00 00 	movabs $0x62cf60,%rdi
  4069d6:	00 00 00 
  4069d9:	48 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%rsi
  4069e0:	e8 7f 2b 01 00       	callq  419564 <stat>
  4069e5:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  4069ec:	00 00 00 
  4069ef:	48 85 d8             	test   %rbx,%rax
  4069f2:	89 45 f0             	mov    %eax,-0x10(%rbp)
  4069f5:	0f 85 84 00 00 00    	jne    406a7f <cleanUpAndFail+0xef>
  4069fb:	0f b6 05 6e 69 22 00 	movzbl 0x22696e(%rip),%eax        # 62d370 <noisy>
  406a02:	48 85 c0             	test   %rax,%rax
  406a05:	74 2a                	je     406a31 <cleanUpAndFail+0xa1>
  406a07:	48 8b 3d c2 1f 02 00 	mov    0x21fc2(%rip),%rdi        # 4289d0 <stderr>
  406a0e:	48 8b 15 23 65 22 00 	mov    0x226523(%rip),%rdx        # 62cf38 <progName>
  406a15:	48 be 3b 60 42 00 00 	movabs $0x42603b,%rsi
  406a1c:	00 00 00 
  406a1f:	48 b9 20 cb 62 00 00 	movabs $0x62cb20,%rcx
  406a26:	00 00 00 
  406a29:	48 31 c0             	xor    %rax,%rax
  406a2c:	e8 c7 32 01 00       	callq  419cf8 <fprintf>
  406a31:	48 83 3d 0f 65 22 00 	cmpq   $0x0,0x22650f(%rip)        # 62cf48 <outputHandleJustInCase>
  406a38:	00 
  406a39:	74 0c                	je     406a47 <cleanUpAndFail+0xb7>
  406a3b:	48 8b 3d 06 65 22 00 	mov    0x226506(%rip),%rdi        # 62cf48 <outputHandleJustInCase>
  406a42:	e8 89 2f 01 00       	callq  4199d0 <fclose>
  406a47:	48 bf 20 cb 62 00 00 	movabs $0x62cb20,%rdi
  406a4e:	00 00 00 
  406a51:	e8 b2 36 01 00       	callq  41a108 <remove>
  406a56:	48 85 d8             	test   %rbx,%rax
  406a59:	89 45 f0             	mov    %eax,-0x10(%rbp)
  406a5c:	0f 84 9e 00 00 00    	je     406b00 <cleanUpAndFail+0x170>
  406a62:	48 8b 3d 67 1f 02 00 	mov    0x21f67(%rip),%rdi        # 4289d0 <stderr>
  406a69:	48 8b 15 c8 64 22 00 	mov    0x2264c8(%rip),%rdx        # 62cf38 <progName>
  406a70:	48 be 67 60 42 00 00 	movabs $0x426067,%rsi
  406a77:	00 00 00 
  406a7a:	48 31 c0             	xor    %rax,%rax
  406a7d:	eb 7c                	jmp    406afb <cleanUpAndFail+0x16b>
  406a7f:	48 8b 1d 4a 1f 02 00 	mov    0x21f4a(%rip),%rbx        # 4289d0 <stderr>
  406a86:	48 8b 15 ab 64 22 00 	mov    0x2264ab(%rip),%rdx        # 62cf38 <progName>
  406a8d:	48 be a2 60 42 00 00 	movabs $0x4260a2,%rsi
  406a94:	00 00 00 
  406a97:	48 31 c0             	xor    %rax,%rax
  406a9a:	48 89 df             	mov    %rbx,%rdi
  406a9d:	e8 56 32 01 00       	callq  419cf8 <fprintf>
  406aa2:	48 8b 15 8f 64 22 00 	mov    0x22648f(%rip),%rdx        # 62cf38 <progName>
  406aa9:	48 be d3 60 42 00 00 	movabs $0x4260d3,%rsi
  406ab0:	00 00 00 
  406ab3:	48 31 c0             	xor    %rax,%rax
  406ab6:	48 89 df             	mov    %rbx,%rdi
  406ab9:	e8 3a 32 01 00       	callq  419cf8 <fprintf>
  406abe:	48 8b 15 73 64 22 00 	mov    0x226473(%rip),%rdx        # 62cf38 <progName>
  406ac5:	48 be 0b 61 42 00 00 	movabs $0x42610b,%rsi
  406acc:	00 00 00 
  406acf:	48 b9 20 cb 62 00 00 	movabs $0x62cb20,%rcx
  406ad6:	00 00 00 
  406ad9:	48 31 c0             	xor    %rax,%rax
  406adc:	48 89 df             	mov    %rbx,%rdi
  406adf:	e8 14 32 01 00       	callq  419cf8 <fprintf>
  406ae4:	48 8b 15 4d 64 22 00 	mov    0x22644d(%rip),%rdx        # 62cf38 <progName>
  406aeb:	48 be 2b 61 42 00 00 	movabs $0x42612b,%rsi
  406af2:	00 00 00 
  406af5:	48 31 c0             	xor    %rax,%rax
  406af8:	48 89 df             	mov    %rbx,%rdi
  406afb:	e8 f8 31 01 00       	callq  419cf8 <fprintf>
  406b00:	0f b6 05 69 68 22 00 	movzbl 0x226869(%rip),%eax        # 62d370 <noisy>
  406b07:	48 85 c0             	test   %rax,%rax
  406b0a:	74 55                	je     406b61 <cleanUpAndFail+0x1d1>
  406b0c:	48 63 05 59 68 22 00 	movslq 0x226859(%rip),%rax        # 62d36c <numFileNames>
  406b13:	48 85 c0             	test   %rax,%rax
  406b16:	7e 49                	jle    406b61 <cleanUpAndFail+0x1d1>
  406b18:	48 63 05 21 64 22 00 	movslq 0x226421(%rip),%rax        # 62cf40 <numFilesProcessed>
  406b1f:	48 63 0d 46 68 22 00 	movslq 0x226846(%rip),%rcx        # 62d36c <numFileNames>
  406b26:	48 39 c8             	cmp    %rcx,%rax
  406b29:	7d 36                	jge    406b61 <cleanUpAndFail+0x1d1>
  406b2b:	48 8b 3d 9e 1e 02 00 	mov    0x21e9e(%rip),%rdi        # 4289d0 <stderr>
  406b32:	44 8b 05 33 68 22 00 	mov    0x226833(%rip),%r8d        # 62d36c <numFileNames>
  406b39:	8b 05 01 64 22 00    	mov    0x226401(%rip),%eax        # 62cf40 <numFilesProcessed>
  406b3f:	48 8b 15 f2 63 22 00 	mov    0x2263f2(%rip),%rdx        # 62cf38 <progName>
  406b46:	4d 89 c1             	mov    %r8,%r9
  406b49:	49 29 c1             	sub    %rax,%r9
  406b4c:	48 be 68 61 42 00 00 	movabs $0x426168,%rsi
  406b53:	00 00 00 
  406b56:	48 31 c0             	xor    %rax,%rax
  406b59:	48 89 d1             	mov    %rdx,%rcx
  406b5c:	e8 97 31 01 00       	callq  419cf8 <fprintf>
  406b61:	8b 7d f4             	mov    -0xc(%rbp),%edi
  406b64:	e8 77 f4 ff ff       	callq  405fe0 <setExit>
  406b69:	8b 3d 1d 6c 22 00    	mov    0x226c1d(%rip),%edi        # 62d78c <exitValue>
  406b6f:	e8 dd 14 01 00       	callq  418051 <exit>
  406b74:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  406b7b:	00 00 00 00 00 

0000000000406b80 <mapSuffix>:
  406b80:	55                   	push   %rbp
  406b81:	48 89 e5             	mov    %rsp,%rbp
  406b84:	53                   	push   %rbx
  406b85:	48 83 ec 28          	sub    $0x28,%rsp
  406b89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  406b8d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  406b91:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  406b95:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  406b99:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  406b9d:	e8 de 06 00 00       	callq  407280 <hasSuffix>
  406ba2:	48 85 c0             	test   %rax,%rax
  406ba5:	74 38                	je     406bdf <mapSuffix+0x5f>
  406ba7:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  406bab:	e8 b0 50 01 00       	callq  41bc60 <strlen>
  406bb0:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  406bb4:	48 89 c3             	mov    %rax,%rbx
  406bb7:	e8 a4 50 01 00       	callq  41bc60 <strlen>
  406bbc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  406bc0:	48 29 c3             	sub    %rax,%rbx
  406bc3:	48 31 c0             	xor    %rax,%rax
  406bc6:	88 04 19             	mov    %al,(%rcx,%rbx,1)
  406bc9:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  406bcd:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  406bd1:	e8 ea 4e 01 00       	callq  41bac0 <strcat>
  406bd6:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  406bdd:	eb 03                	jmp    406be2 <mapSuffix+0x62>
  406bdf:	48 31 c0             	xor    %rax,%rax
  406be2:	88 45 f7             	mov    %al,-0x9(%rbp)
  406be5:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
  406be9:	48 83 c4 28          	add    $0x28,%rsp
  406bed:	5b                   	pop    %rbx
  406bee:	5d                   	pop    %rbp
  406bef:	c3                   	retq   

0000000000406bf0 <notAStandardFile>:
  406bf0:	55                   	push   %rbp
  406bf1:	48 89 e5             	mov    %rsp,%rbp
  406bf4:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
  406bfb:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  406bff:	48 8d b5 58 ff ff ff 	lea    -0xa8(%rbp),%rsi
  406c06:	e8 41 29 01 00       	callq  41954c <lstat>
  406c0b:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  406c12:	00 00 00 
  406c15:	48 85 c8             	test   %rcx,%rax
  406c18:	89 45 ec             	mov    %eax,-0x14(%rbp)
  406c1b:	75 19                	jne    406c36 <notAStandardFile+0x46>
  406c1d:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
  406c23:	48 25 00 f0 00 00    	and    $0xf000,%rax
  406c29:	48 3d 00 80 00 00    	cmp    $0x8000,%rax
  406c2f:	75 05                	jne    406c36 <notAStandardFile+0x46>
  406c31:	48 31 c0             	xor    %rax,%rax
  406c34:	eb 07                	jmp    406c3d <notAStandardFile+0x4d>
  406c36:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  406c3d:	88 45 ff             	mov    %al,-0x1(%rbp)
  406c40:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  406c44:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
  406c4b:	5d                   	pop    %rbp
  406c4c:	c3                   	retq   
  406c4d:	0f 1f 00             	nopl   (%rax)

0000000000406c50 <countHardLinks>:
  406c50:	55                   	push   %rbp
  406c51:	48 89 e5             	mov    %rsp,%rbp
  406c54:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
  406c5b:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  406c5f:	48 8d b5 58 ff ff ff 	lea    -0xa8(%rbp),%rsi
  406c66:	e8 e1 28 01 00       	callq  41954c <lstat>
  406c6b:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  406c72:	00 00 00 
  406c75:	48 85 c8             	test   %rcx,%rax
  406c78:	89 45 ec             	mov    %eax,-0x14(%rbp)
  406c7b:	74 05                	je     406c82 <countHardLinks+0x32>
  406c7d:	48 31 c0             	xor    %rax,%rax
  406c80:	eb 0a                	jmp    406c8c <countHardLinks+0x3c>
  406c82:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  406c89:	48 ff c8             	dec    %rax
  406c8c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  406c8f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  406c92:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
  406c99:	5d                   	pop    %rbp
  406c9a:	c3                   	retq   
  406c9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000406ca0 <saveInputFileMetaInfo>:
  406ca0:	55                   	push   %rbp
  406ca1:	48 89 e5             	mov    %rsp,%rbp
  406ca4:	48 83 ec 10          	sub    $0x10,%rsp
  406ca8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  406cac:	48 be 80 b7 62 00 00 	movabs $0x62b780,%rsi
  406cb3:	00 00 00 
  406cb6:	e8 a9 28 01 00       	callq  419564 <stat>
  406cbb:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  406cc2:	00 00 00 
  406cc5:	48 85 c8             	test   %rcx,%rax
  406cc8:	89 45 f4             	mov    %eax,-0xc(%rbp)
  406ccb:	75 06                	jne    406cd3 <saveInputFileMetaInfo+0x33>
  406ccd:	48 83 c4 10          	add    $0x10,%rsp
  406cd1:	5d                   	pop    %rbp
  406cd2:	c3                   	retq   
  406cd3:	e8 e8 fb ff ff       	callq  4068c0 <ioError>
  406cd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  406cdf:	00 

0000000000406ce0 <uncompressStream>:
  406ce0:	55                   	push   %rbp
  406ce1:	48 89 e5             	mov    %rsp,%rbp
  406ce4:	41 57                	push   %r15
  406ce6:	41 56                	push   %r14
  406ce8:	41 55                	push   %r13
  406cea:	41 54                	push   %r12
  406cec:	53                   	push   %rbx
  406ced:	48 81 ec 78 27 00 00 	sub    $0x2778,%rsp
  406cf4:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  406cf8:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  406cfc:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
  406d03:	00 
  406d04:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  406d08:	48 31 c0             	xor    %rax,%rax
  406d0b:	89 85 7c d8 ff ff    	mov    %eax,-0x2784(%rbp)
  406d11:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  406d14:	e8 5b 2d 01 00       	callq  419a74 <ferror>
  406d19:	49 bc ff ff ff ff 00 	movabs $0xffffffff,%r12
  406d20:	00 00 00 
  406d23:	4c 85 e0             	test   %r12,%rax
  406d26:	0f 85 ee 03 00 00    	jne    40711a <uncompressStream+0x43a>
  406d2c:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  406d30:	e8 3f 2d 01 00       	callq  419a74 <ferror>
  406d35:	4c 85 e0             	test   %r12,%rax
  406d38:	0f 85 dc 03 00 00    	jne    40711a <uncompressStream+0x43a>
  406d3e:	4c 8d 7d b4          	lea    -0x4c(%rbp),%r15
  406d42:	4c 8d b5 80 d8 ff ff 	lea    -0x2780(%rbp),%r14
  406d49:	48 8d 9d 10 ec ff ff 	lea    -0x13f0(%rbp),%rbx
  406d50:	49 bd fb ff ff ff 00 	movabs $0xfffffffb,%r13
  406d57:	00 00 00 
  406d5a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  406d5e:	0f b6 0d 13 66 22 00 	movzbl 0x226613(%rip),%ecx        # 62d378 <smallMode>
  406d65:	44 8b 8d 7c d8 ff ff 	mov    -0x2784(%rbp),%r9d
  406d6c:	8b 15 be 61 22 00    	mov    0x2261be(%rip),%edx        # 62cf30 <verbosity>
  406d72:	4c 89 ff             	mov    %r15,%rdi
  406d75:	4d 89 f0             	mov    %r14,%r8
  406d78:	e8 63 3a 00 00       	callq  40a7e0 <BZ2_bzReadOpen>
  406d7d:	48 85 c0             	test   %rax,%rax
  406d80:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  406d84:	0f 84 a7 02 00 00    	je     407031 <uncompressStream+0x351>
  406d8a:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  406d8d:	48 85 c0             	test   %rax,%rax
  406d90:	0f 85 9b 02 00 00    	jne    407031 <uncompressStream+0x351>
  406d96:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  406d99:	48 ff c0             	inc    %rax
  406d9c:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  406d9f:	90                   	nop
  406da0:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  406da3:	48 85 c0             	test   %rax,%rax
  406da6:	75 78                	jne    406e20 <uncompressStream+0x140>
  406da8:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  406dac:	48 c7 c1 88 13 00 00 	mov    $0x1388,%rcx
  406db3:	4c 89 ff             	mov    %r15,%rdi
  406db6:	48 89 da             	mov    %rbx,%rdx
  406db9:	e8 02 3e 00 00       	callq  40abc0 <BZ2_bzRead>
  406dbe:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  406dc1:	89 45 a8             	mov    %eax,-0x58(%rbp)
  406dc4:	4c 39 e9             	cmp    %r13,%rcx
  406dc7:	0f 84 10 01 00 00    	je     406edd <uncompressStream+0x1fd>
  406dcd:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  406dd0:	48 85 c0             	test   %rax,%rax
  406dd3:	74 09                	je     406dde <uncompressStream+0xfe>
  406dd5:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  406dd8:	48 83 f8 04          	cmp    $0x4,%rax
  406ddc:	75 20                	jne    406dfe <uncompressStream+0x11e>
  406dde:	48 63 45 a8          	movslq -0x58(%rbp),%rax
  406de2:	48 85 c0             	test   %rax,%rax
  406de5:	7e 17                	jle    406dfe <uncompressStream+0x11e>
  406de7:	48 63 55 a8          	movslq -0x58(%rbp),%rdx
  406deb:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  406def:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  406df6:	48 89 df             	mov    %rbx,%rdi
  406df9:	e8 27 31 01 00       	callq  419f25 <fwrite>
  406dfe:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  406e02:	e8 6d 2c 01 00       	callq  419a74 <ferror>
  406e07:	4c 85 e0             	test   %r12,%rax
  406e0a:	74 94                	je     406da0 <uncompressStream+0xc0>
  406e0c:	e9 09 03 00 00       	jmpq   40711a <uncompressStream+0x43a>
  406e11:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  406e18:	0f 1f 84 00 00 00 00 
  406e1f:	00 
  406e20:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  406e23:	48 83 f8 04          	cmp    $0x4,%rax
  406e27:	0f 85 04 02 00 00    	jne    407031 <uncompressStream+0x351>
  406e2d:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  406e31:	4c 89 ff             	mov    %r15,%rdi
  406e34:	48 8d 95 70 d8 ff ff 	lea    -0x2790(%rbp),%rdx
  406e3b:	48 8d 8d 7c d8 ff ff 	lea    -0x2784(%rbp),%rcx
  406e42:	e8 39 41 00 00       	callq  40af80 <BZ2_bzReadGetUnused>
  406e47:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  406e4a:	48 85 c0             	test   %rax,%rax
  406e4d:	0f 85 ab 02 00 00    	jne    4070fe <uncompressStream+0x41e>
  406e53:	48 8b 85 70 d8 ff ff 	mov    -0x2790(%rbp),%rax
  406e5a:	48 89 85 68 d8 ff ff 	mov    %rax,-0x2798(%rbp)
  406e61:	48 31 c0             	xor    %rax,%rax
  406e64:	89 45 a0             	mov    %eax,-0x60(%rbp)
  406e67:	eb 26                	jmp    406e8f <uncompressStream+0x1af>
  406e69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  406e70:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  406e74:	48 8b 8d 68 d8 ff ff 	mov    -0x2798(%rbp),%rcx
  406e7b:	8b 55 a0             	mov    -0x60(%rbp),%edx
  406e7e:	0f b6 0c 01          	movzbl (%rcx,%rax,1),%ecx
  406e82:	88 8c 05 80 d8 ff ff 	mov    %cl,-0x2780(%rbp,%rax,1)
  406e89:	48 ff c2             	inc    %rdx
  406e8c:	89 55 a0             	mov    %edx,-0x60(%rbp)
  406e8f:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  406e93:	48 63 8d 7c d8 ff ff 	movslq -0x2784(%rbp),%rcx
  406e9a:	48 39 c8             	cmp    %rcx,%rax
  406e9d:	7c d1                	jl     406e70 <uncompressStream+0x190>
  406e9f:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  406ea3:	4c 89 ff             	mov    %r15,%rdi
  406ea6:	e8 35 3c 00 00       	callq  40aae0 <BZ2_bzReadClose>
  406eab:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  406eae:	48 85 c0             	test   %rax,%rax
  406eb1:	0f 85 47 02 00 00    	jne    4070fe <uncompressStream+0x41e>
  406eb7:	8b 85 7c d8 ff ff    	mov    -0x2784(%rbp),%eax
  406ebd:	48 85 c0             	test   %rax,%rax
  406ec0:	0f 85 94 fe ff ff    	jne    406d5a <uncompressStream+0x7a>
  406ec6:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  406eca:	e8 61 f9 ff ff       	callq  406830 <myfeof>
  406ecf:	48 85 c0             	test   %rax,%rax
  406ed2:	0f 84 82 fe ff ff    	je     406d5a <uncompressStream+0x7a>
  406ed8:	e9 93 00 00 00       	jmpq   406f70 <uncompressStream+0x290>
  406edd:	0f b6 05 27 5c 22 00 	movzbl 0x225c27(%rip),%eax        # 62cb0b <forceOverwrite>
  406ee4:	48 85 c0             	test   %rax,%rax
  406ee7:	0f 84 44 01 00 00    	je     407031 <uncompressStream+0x351>
  406eed:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  406ef1:	e8 5a 32 01 00       	callq  41a150 <rewind>
  406ef6:	48 8d 9d 10 ec ff ff 	lea    -0x13f0(%rbp),%rbx
  406efd:	0f 1f 00             	nopl   (%rax)
  406f00:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  406f04:	e8 27 f9 ff ff       	callq  406830 <myfeof>
  406f09:	48 85 c0             	test   %rax,%rax
  406f0c:	75 62                	jne    406f70 <uncompressStream+0x290>
  406f0e:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  406f12:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  406f19:	48 c7 c2 88 13 00 00 	mov    $0x1388,%rdx
  406f20:	48 89 df             	mov    %rbx,%rdi
  406f23:	e8 60 2e 01 00       	callq  419d88 <fread>
  406f28:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  406f2c:	89 45 a8             	mov    %eax,-0x58(%rbp)
  406f2f:	e8 40 2b 01 00       	callq  419a74 <ferror>
  406f34:	4c 85 e0             	test   %r12,%rax
  406f37:	0f 85 dd 01 00 00    	jne    40711a <uncompressStream+0x43a>
  406f3d:	48 63 45 a8          	movslq -0x58(%rbp),%rax
  406f41:	48 85 c0             	test   %rax,%rax
  406f44:	7e 17                	jle    406f5d <uncompressStream+0x27d>
  406f46:	48 63 55 a8          	movslq -0x58(%rbp),%rdx
  406f4a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  406f4e:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  406f55:	48 89 df             	mov    %rbx,%rdi
  406f58:	e8 c8 2f 01 00       	callq  419f25 <fwrite>
  406f5d:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  406f61:	e8 0e 2b 01 00       	callq  419a74 <ferror>
  406f66:	4c 85 e0             	test   %r12,%rax
  406f69:	74 95                	je     406f00 <uncompressStream+0x220>
  406f6b:	e9 aa 01 00 00       	jmpq   40711a <uncompressStream+0x43a>
  406f70:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  406f74:	e8 fb 2a 01 00       	callq  419a74 <ferror>
  406f79:	4c 85 e0             	test   %r12,%rax
  406f7c:	0f 85 98 01 00 00    	jne    40711a <uncompressStream+0x43a>
  406f82:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  406f86:	e8 45 2a 01 00       	callq  4199d0 <fclose>
  406f8b:	48 89 c1             	mov    %rax,%rcx
  406f8e:	4c 21 e1             	and    %r12,%rcx
  406f91:	4c 39 e1             	cmp    %r12,%rcx
  406f94:	89 45 ac             	mov    %eax,-0x54(%rbp)
  406f97:	0f 84 7d 01 00 00    	je     40711a <uncompressStream+0x43a>
  406f9d:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  406fa1:	e8 ce 2a 01 00       	callq  419a74 <ferror>
  406fa6:	4c 85 e0             	test   %r12,%rax
  406fa9:	0f 85 6b 01 00 00    	jne    40711a <uncompressStream+0x43a>
  406faf:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  406fb3:	e8 5c 2b 01 00       	callq  419b14 <fflush>
  406fb8:	4c 85 e0             	test   %r12,%rax
  406fbb:	89 45 ac             	mov    %eax,-0x54(%rbp)
  406fbe:	0f 85 56 01 00 00    	jne    40711a <uncompressStream+0x43a>
  406fc4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  406fc8:	48 8b 0d 11 1a 02 00 	mov    0x21a11(%rip),%rcx        # 4289e0 <stdout>
  406fcf:	48 39 c8             	cmp    %rcx,%rax
  406fd2:	74 23                	je     406ff7 <uncompressStream+0x317>
  406fd4:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  406fd8:	e8 f3 29 01 00       	callq  4199d0 <fclose>
  406fdd:	89 45 ac             	mov    %eax,-0x54(%rbp)
  406fe0:	8b 45 ac             	mov    -0x54(%rbp),%eax
  406fe3:	48 c7 05 5a 5f 22 00 	movq   $0x0,0x225f5a(%rip)        # 62cf48 <outputHandleJustInCase>
  406fea:	00 00 00 00 
  406fee:	4c 39 e0             	cmp    %r12,%rax
  406ff1:	0f 84 23 01 00 00    	je     40711a <uncompressStream+0x43a>
  406ff7:	48 63 05 32 5f 22 00 	movslq 0x225f32(%rip),%rax        # 62cf30 <verbosity>
  406ffe:	48 c7 05 3f 5f 22 00 	movq   $0x0,0x225f3f(%rip)        # 62cf48 <outputHandleJustInCase>
  407005:	00 00 00 00 
  407009:	48 83 f8 02          	cmp    $0x2,%rax
  40700d:	0f 8c bc 00 00 00    	jl     4070cf <uncompressStream+0x3ef>
  407013:	48 8b 3d b6 19 02 00 	mov    0x219b6(%rip),%rdi        # 4289d0 <stderr>
  40701a:	48 be 86 5f 42 00 00 	movabs $0x425f86,%rsi
  407021:	00 00 00 
  407024:	48 31 c0             	xor    %rax,%rax
  407027:	e8 cc 2c 01 00       	callq  419cf8 <fprintf>
  40702c:	e9 9e 00 00 00       	jmpq   4070cf <uncompressStream+0x3ef>
  407031:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  407035:	48 8d 7d b0          	lea    -0x50(%rbp),%rdi
  407039:	e8 a2 3a 00 00       	callq  40aae0 <BZ2_bzReadClose>
  40703e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  407041:	48 83 c0 09          	add    $0x9,%rax
  407045:	4c 21 e0             	and    %r12,%rax
  407048:	48 83 f8 06          	cmp    $0x6,%rax
  40704c:	0f 87 9d 00 00 00    	ja     4070ef <uncompressStream+0x40f>
  407052:	ff 24 c5 e8 5c 42 00 	jmpq   *0x425ce8(,%rax,8)
  407059:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40705d:	48 8b 0d 74 19 02 00 	mov    0x21974(%rip),%rcx        # 4289d8 <stdin>
  407064:	48 39 c8             	cmp    %rcx,%rax
  407067:	74 09                	je     407072 <uncompressStream+0x392>
  407069:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  40706d:	e8 5e 29 01 00       	callq  4199d0 <fclose>
  407072:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  407076:	48 8b 0d 63 19 02 00 	mov    0x21963(%rip),%rcx        # 4289e0 <stdout>
  40707d:	48 39 c8             	cmp    %rcx,%rax
  407080:	74 09                	je     40708b <uncompressStream+0x3ab>
  407082:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  407086:	e8 45 29 01 00       	callq  4199d0 <fclose>
  40708b:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  40708e:	48 83 f8 01          	cmp    $0x1,%rax
  407092:	75 05                	jne    407099 <uncompressStream+0x3b9>
  407094:	48 31 c0             	xor    %rax,%rax
  407097:	eb 3d                	jmp    4070d6 <uncompressStream+0x3f6>
  407099:	0f b6 05 d0 62 22 00 	movzbl 0x2262d0(%rip),%eax        # 62d370 <noisy>
  4070a0:	48 85 c0             	test   %rax,%rax
  4070a3:	74 2a                	je     4070cf <uncompressStream+0x3ef>
  4070a5:	48 8b 3d 24 19 02 00 	mov    0x21924(%rip),%rdi        # 4289d0 <stderr>
  4070ac:	48 8b 15 85 5e 22 00 	mov    0x225e85(%rip),%rdx        # 62cf38 <progName>
  4070b3:	48 be 02 65 42 00 00 	movabs $0x426502,%rsi
  4070ba:	00 00 00 
  4070bd:	48 b9 60 cf 62 00 00 	movabs $0x62cf60,%rcx
  4070c4:	00 00 00 
  4070c7:	48 31 c0             	xor    %rax,%rax
  4070ca:	e8 29 2c 01 00       	callq  419cf8 <fprintf>
  4070cf:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4070d6:	88 45 d7             	mov    %al,-0x29(%rbp)
  4070d9:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  4070dd:	48 81 c4 78 27 00 00 	add    $0x2778,%rsp
  4070e4:	5b                   	pop    %rbx
  4070e5:	41 5c                	pop    %r12
  4070e7:	41 5d                	pop    %r13
  4070e9:	41 5e                	pop    %r14
  4070eb:	41 5f                	pop    %r15
  4070ed:	5d                   	pop    %rbp
  4070ee:	c3                   	retq   
  4070ef:	48 bf 2f 65 42 00 00 	movabs $0x42652f,%rdi
  4070f6:	00 00 00 
  4070f9:	e8 92 f2 ff ff       	callq  406390 <panic>
  4070fe:	48 b8 e7 64 42 00 00 	movabs $0x4264e7,%rax
  407105:	00 00 00 
  407108:	48 89 c7             	mov    %rax,%rdi
  40710b:	e8 80 f2 ff ff       	callq  406390 <panic>
  407110:	e8 6b f7 ff ff       	callq  406880 <configError>
  407115:	e8 d6 00 00 00       	callq  4071f0 <compressedStreamEOF>
  40711a:	e8 a1 f7 ff ff       	callq  4068c0 <ioError>
  40711f:	e8 8c 00 00 00       	callq  4071b0 <crcError>
  407124:	e8 e7 f7 ff ff       	callq  406910 <outOfMemory>
  407129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000407130 <applySavedMetaInfoToOutputFile>:
  407130:	55                   	push   %rbp
  407131:	48 89 e5             	mov    %rsp,%rbp
  407134:	53                   	push   %rbx
  407135:	48 83 ec 28          	sub    $0x28,%rsp
  407139:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  40713d:	48 8b 05 84 46 22 00 	mov    0x224684(%rip),%rax        # 62b7c8 <_edata+0x48>
  407144:	48 8b 0d 8d 46 22 00 	mov    0x22468d(%rip),%rcx        # 62b7d8 <_edata+0x58>
  40714b:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  40714f:	8b 35 43 46 22 00    	mov    0x224643(%rip),%esi        # 62b798 <_edata+0x18>
  407155:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  407159:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  40715d:	e8 d2 23 01 00       	callq  419534 <chmod>
  407162:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  407169:	00 00 00 
  40716c:	48 85 d8             	test   %rbx,%rax
  40716f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  407172:	75 34                	jne    4071a8 <applySavedMetaInfoToOutputFile+0x78>
  407174:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  407178:	48 8d 75 d8          	lea    -0x28(%rbp),%rsi
  40717c:	e8 cb 51 01 00       	callq  41c34c <utime>
  407181:	48 85 d8             	test   %rbx,%rax
  407184:	89 45 ec             	mov    %eax,-0x14(%rbp)
  407187:	75 1f                	jne    4071a8 <applySavedMetaInfoToOutputFile+0x78>
  407189:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  40718d:	8b 15 0d 46 22 00    	mov    0x22460d(%rip),%edx        # 62b7a0 <_edata+0x20>
  407193:	8b 35 03 46 22 00    	mov    0x224603(%rip),%esi        # 62b79c <_edata+0x1c>
  407199:	e8 f6 51 01 00       	callq  41c394 <chown>
  40719e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4071a1:	48 83 c4 28          	add    $0x28,%rsp
  4071a5:	5b                   	pop    %rbx
  4071a6:	5d                   	pop    %rbp
  4071a7:	c3                   	retq   
  4071a8:	e8 13 f7 ff ff       	callq  4068c0 <ioError>
  4071ad:	0f 1f 00             	nopl   (%rax)

00000000004071b0 <crcError>:
  4071b0:	55                   	push   %rbp
  4071b1:	48 89 e5             	mov    %rsp,%rbp
  4071b4:	48 8b 3d 15 18 02 00 	mov    0x21815(%rip),%rdi        # 4289d0 <stderr>
  4071bb:	48 8b 15 76 5d 22 00 	mov    0x225d76(%rip),%rdx        # 62cf38 <progName>
  4071c2:	48 be 9b 66 42 00 00 	movabs $0x42669b,%rsi
  4071c9:	00 00 00 
  4071cc:	48 31 c0             	xor    %rax,%rax
  4071cf:	e8 24 2b 01 00       	callq  419cf8 <fprintf>
  4071d4:	e8 77 f7 ff ff       	callq  406950 <showFileNames>
  4071d9:	e8 72 00 00 00       	callq  407250 <cadvise>
  4071de:	48 c7 c7 02 00 00 00 	mov    $0x2,%rdi
  4071e5:	e8 a6 f7 ff ff       	callq  406990 <cleanUpAndFail>
  4071ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004071f0 <compressedStreamEOF>:
  4071f0:	55                   	push   %rbp
  4071f1:	48 89 e5             	mov    %rsp,%rbp
  4071f4:	0f b6 05 75 61 22 00 	movzbl 0x226175(%rip),%eax        # 62d370 <noisy>
  4071fb:	48 85 c0             	test   %rax,%rax
  4071fe:	74 36                	je     407236 <compressedStreamEOF+0x46>
  407200:	48 8b 3d c9 17 02 00 	mov    0x217c9(%rip),%rdi        # 4289d0 <stderr>
  407207:	48 8b 15 2a 5d 22 00 	mov    0x225d2a(%rip),%rdx        # 62cf38 <progName>
  40720e:	48 be 4b 65 42 00 00 	movabs $0x42654b,%rsi
  407215:	00 00 00 
  407218:	48 31 c0             	xor    %rax,%rax
  40721b:	e8 d8 2a 01 00       	callq  419cf8 <fprintf>
  407220:	48 8b 3d 11 5d 22 00 	mov    0x225d11(%rip),%rdi        # 62cf38 <progName>
  407227:	e8 80 2d 01 00       	callq  419fac <perror>
  40722c:	e8 1f f7 ff ff       	callq  406950 <showFileNames>
  407231:	e8 1a 00 00 00       	callq  407250 <cadvise>
  407236:	48 c7 c7 02 00 00 00 	mov    $0x2,%rdi
  40723d:	e8 4e f7 ff ff       	callq  406990 <cleanUpAndFail>
  407242:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  407249:	1f 84 00 00 00 00 00 

0000000000407250 <cadvise>:
  407250:	55                   	push   %rbp
  407251:	48 89 e5             	mov    %rsp,%rbp
  407254:	0f b6 05 15 61 22 00 	movzbl 0x226115(%rip),%eax        # 62d370 <noisy>
  40725b:	48 85 c0             	test   %rax,%rax
  40725e:	74 19                	je     407279 <cadvise+0x29>
  407260:	48 8b 3d 69 17 02 00 	mov    0x21769(%rip),%rdi        # 4289d0 <stderr>
  407267:	48 be aa 65 42 00 00 	movabs $0x4265aa,%rsi
  40726e:	00 00 00 
  407271:	48 31 c0             	xor    %rax,%rax
  407274:	e8 7f 2a 01 00       	callq  419cf8 <fprintf>
  407279:	5d                   	pop    %rbp
  40727a:	c3                   	retq   
  40727b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000407280 <hasSuffix>:
  407280:	55                   	push   %rbp
  407281:	48 89 e5             	mov    %rsp,%rbp
  407284:	48 83 ec 20          	sub    $0x20,%rsp
  407288:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  40728c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  407290:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  407294:	e8 c7 49 01 00       	callq  41bc60 <strlen>
  407299:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40729d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4072a0:	e8 bb 49 01 00       	callq  41bc60 <strlen>
  4072a5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4072ac:	48 89 c2             	mov    %rax,%rdx
  4072af:	48 d3 e2             	shl    %cl,%rdx
  4072b2:	48 63 75 e4          	movslq -0x1c(%rbp),%rsi
  4072b6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4072bd:	48 d3 fa             	sar    %cl,%rdx
  4072c0:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4072c3:	48 39 d6             	cmp    %rdx,%rsi
  4072c6:	7c 2a                	jl     4072f2 <hasSuffix+0x72>
  4072c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4072cc:	48 63 7d e4          	movslq -0x1c(%rbp),%rdi
  4072d0:	48 63 4d e0          	movslq -0x20(%rbp),%rcx
  4072d4:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4072d8:	48 01 c7             	add    %rax,%rdi
  4072db:	48 29 cf             	sub    %rcx,%rdi
  4072de:	e8 3d 49 01 00       	callq  41bc20 <strcmp>
  4072e3:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4072ea:	00 00 00 
  4072ed:	48 85 c8             	test   %rcx,%rax
  4072f0:	74 05                	je     4072f7 <hasSuffix+0x77>
  4072f2:	48 31 c0             	xor    %rax,%rax
  4072f5:	eb 07                	jmp    4072fe <hasSuffix+0x7e>
  4072f7:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4072fe:	88 45 ff             	mov    %al,-0x1(%rbp)
  407301:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  407305:	48 83 c4 20          	add    $0x20,%rsp
  407309:	5d                   	pop    %rbp
  40730a:	c3                   	retq   
  40730b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000407310 <compressStream>:
  407310:	55                   	push   %rbp
  407311:	48 89 e5             	mov    %rsp,%rbp
  407314:	41 57                	push   %r15
  407316:	41 56                	push   %r14
  407318:	41 55                	push   %r13
  40731a:	41 54                	push   %r12
  40731c:	53                   	push   %rbx
  40731d:	48 81 ec 38 14 00 00 	sub    $0x1438,%rsp
  407324:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  407328:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  40732c:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  407330:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  407337:	00 
  407338:	e8 37 27 01 00       	callq  419a74 <ferror>
  40733d:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  407344:	00 00 00 
  407347:	48 85 d8             	test   %rbx,%rax
  40734a:	0f 85 9e 03 00 00    	jne    4076ee <compressStream+0x3de>
  407350:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  407354:	e8 1b 27 01 00       	callq  419a74 <ferror>
  407359:	48 85 d8             	test   %rbx,%rax
  40735c:	0f 85 8c 03 00 00    	jne    4076ee <compressStream+0x3de>
  407362:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  407366:	44 8b 05 bf 5b 22 00 	mov    0x225bbf(%rip),%r8d        # 62cf2c <workFactor>
  40736d:	8b 0d bd 5b 22 00    	mov    0x225bbd(%rip),%ecx        # 62cf30 <verbosity>
  407373:	8b 15 d7 5b 22 00    	mov    0x225bd7(%rip),%edx        # 62cf50 <blockSize100k>
  407379:	48 8d bd 18 ec ff ff 	lea    -0x13e8(%rbp),%rdi
  407380:	e8 ab 2b 00 00       	callq  409f30 <BZ2_bzWriteOpen>
  407385:	8b 8d 18 ec ff ff    	mov    -0x13e8(%rbp),%ecx
  40738b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  40738f:	48 85 c9             	test   %rcx,%rcx
  407392:	0f 85 f2 02 00 00    	jne    40768a <compressStream+0x37a>
  407398:	48 63 05 91 5b 22 00 	movslq 0x225b91(%rip),%rax        # 62cf30 <verbosity>
  40739f:	48 83 f8 02          	cmp    $0x2,%rax
  4073a3:	7c 1b                	jl     4073c0 <compressStream+0xb0>
  4073a5:	48 8b 3d 24 16 02 00 	mov    0x21624(%rip),%rdi        # 4289d0 <stderr>
  4073ac:	48 be 51 78 42 00 00 	movabs $0x427851,%rsi
  4073b3:	00 00 00 
  4073b6:	48 31 c0             	xor    %rax,%rax
  4073b9:	e8 3a 29 01 00       	callq  419cf8 <fprintf>
  4073be:	66 90                	xchg   %ax,%ax
  4073c0:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4073c4:	e8 67 f4 ff ff       	callq  406830 <myfeof>
  4073c9:	48 85 c0             	test   %rax,%rax
  4073cc:	75 6f                	jne    40743d <compressStream+0x12d>
  4073ce:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4073d2:	48 8d bd 30 ec ff ff 	lea    -0x13d0(%rbp),%rdi
  4073d9:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  4073e0:	48 c7 c2 88 13 00 00 	mov    $0x1388,%rdx
  4073e7:	e8 9c 29 01 00       	callq  419d88 <fread>
  4073ec:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4073f0:	89 85 2c ec ff ff    	mov    %eax,-0x13d4(%rbp)
  4073f6:	e8 79 26 01 00       	callq  419a74 <ferror>
  4073fb:	48 85 d8             	test   %rbx,%rax
  4073fe:	0f 85 ea 02 00 00    	jne    4076ee <compressStream+0x3de>
  407404:	48 63 85 2c ec ff ff 	movslq -0x13d4(%rbp),%rax
  40740b:	48 85 c0             	test   %rax,%rax
  40740e:	7e 1d                	jle    40742d <compressStream+0x11d>
  407410:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  407414:	8b 8d 2c ec ff ff    	mov    -0x13d4(%rbp),%ecx
  40741a:	48 8d bd 18 ec ff ff 	lea    -0x13e8(%rbp),%rdi
  407421:	48 8d 95 30 ec ff ff 	lea    -0x13d0(%rbp),%rdx
  407428:	e8 a3 2d 00 00       	callq  40a1d0 <BZ2_bzWrite>
  40742d:	8b 85 18 ec ff ff    	mov    -0x13e8(%rbp),%eax
  407433:	48 85 c0             	test   %rax,%rax
  407436:	74 88                	je     4073c0 <compressStream+0xb0>
  407438:	e9 4d 02 00 00       	jmpq   40768a <compressStream+0x37a>
  40743d:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  407441:	48 8d 85 1c ec ff ff 	lea    -0x13e4(%rbp),%rax
  407448:	48 8d bd 18 ec ff ff 	lea    -0x13e8(%rbp),%rdi
  40744f:	48 8d 8d 28 ec ff ff 	lea    -0x13d8(%rbp),%rcx
  407456:	4c 8d 85 24 ec ff ff 	lea    -0x13dc(%rbp),%r8
  40745d:	4c 8d 8d 20 ec ff ff 	lea    -0x13e0(%rbp),%r9
  407464:	48 31 d2             	xor    %rdx,%rdx
  407467:	48 89 04 24          	mov    %rax,(%rsp)
  40746b:	e8 20 30 00 00       	callq  40a490 <BZ2_bzWriteClose64>
  407470:	8b 85 18 ec ff ff    	mov    -0x13e8(%rbp),%eax
  407476:	48 85 c0             	test   %rax,%rax
  407479:	0f 85 0b 02 00 00    	jne    40768a <compressStream+0x37a>
  40747f:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  407483:	e8 ec 25 01 00       	callq  419a74 <ferror>
  407488:	48 85 d8             	test   %rbx,%rax
  40748b:	0f 85 5d 02 00 00    	jne    4076ee <compressStream+0x3de>
  407491:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  407495:	e8 7a 26 01 00       	callq  419b14 <fflush>
  40749a:	48 89 c1             	mov    %rax,%rcx
  40749d:	48 21 d9             	and    %rbx,%rcx
  4074a0:	48 39 d9             	cmp    %rbx,%rcx
  4074a3:	89 85 10 ec ff ff    	mov    %eax,-0x13f0(%rbp)
  4074a9:	0f 84 3f 02 00 00    	je     4076ee <compressStream+0x3de>
  4074af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4074b3:	48 8b 0d 26 15 02 00 	mov    0x21526(%rip),%rcx        # 4289e0 <stdout>
  4074ba:	48 39 c8             	cmp    %rcx,%rax
  4074bd:	74 29                	je     4074e8 <compressStream+0x1d8>
  4074bf:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  4074c3:	e8 08 25 01 00       	callq  4199d0 <fclose>
  4074c8:	89 85 10 ec ff ff    	mov    %eax,-0x13f0(%rbp)
  4074ce:	8b 85 10 ec ff ff    	mov    -0x13f0(%rbp),%eax
  4074d4:	48 c7 05 69 5a 22 00 	movq   $0x0,0x225a69(%rip)        # 62cf48 <outputHandleJustInCase>
  4074db:	00 00 00 00 
  4074df:	48 39 d8             	cmp    %rbx,%rax
  4074e2:	0f 84 06 02 00 00    	je     4076ee <compressStream+0x3de>
  4074e8:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4074ec:	48 c7 05 51 5a 22 00 	movq   $0x0,0x225a51(%rip)        # 62cf48 <outputHandleJustInCase>
  4074f3:	00 00 00 00 
  4074f7:	e8 78 25 01 00       	callq  419a74 <ferror>
  4074fc:	48 85 d8             	test   %rbx,%rax
  4074ff:	0f 85 e9 01 00 00    	jne    4076ee <compressStream+0x3de>
  407505:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  407509:	e8 c2 24 01 00       	callq  4199d0 <fclose>
  40750e:	48 89 c1             	mov    %rax,%rcx
  407511:	48 21 d9             	and    %rbx,%rcx
  407514:	48 39 d9             	cmp    %rbx,%rcx
  407517:	89 85 10 ec ff ff    	mov    %eax,-0x13f0(%rbp)
  40751d:	0f 84 cb 01 00 00    	je     4076ee <compressStream+0x3de>
  407523:	48 63 05 06 5a 22 00 	movslq 0x225a06(%rip),%rax        # 62cf30 <verbosity>
  40752a:	48 85 c0             	test   %rax,%rax
  40752d:	0f 8e 2a 01 00 00    	jle    40765d <compressStream+0x34d>
  407533:	8b 85 28 ec ff ff    	mov    -0x13d8(%rbp),%eax
  407539:	48 85 c0             	test   %rax,%rax
  40753c:	75 0f                	jne    40754d <compressStream+0x23d>
  40753e:	8b 85 24 ec ff ff    	mov    -0x13dc(%rbp),%eax
  407544:	48 85 c0             	test   %rax,%rax
  407547:	0f 84 22 01 00 00    	je     40766f <compressStream+0x35f>
  40754d:	8b 95 24 ec ff ff    	mov    -0x13dc(%rbp),%edx
  407553:	8b b5 28 ec ff ff    	mov    -0x13d8(%rbp),%esi
  407559:	4c 8d bd c8 eb ff ff 	lea    -0x1438(%rbp),%r15
  407560:	4c 89 ff             	mov    %r15,%rdi
  407563:	e8 b8 01 00 00       	callq  407720 <uInt64_from_UInt32s>
  407568:	8b 95 1c ec ff ff    	mov    -0x13e4(%rbp),%edx
  40756e:	8b b5 20 ec ff ff    	mov    -0x13e0(%rbp),%esi
  407574:	48 8d 9d c0 eb ff ff 	lea    -0x1440(%rbp),%rbx
  40757b:	48 89 df             	mov    %rbx,%rdi
  40757e:	e8 9d 01 00 00       	callq  407720 <uInt64_from_UInt32s>
  407583:	4c 89 ff             	mov    %r15,%rdi
  407586:	e8 05 02 00 00       	callq  407790 <uInt64_to_double>
  40758b:	48 89 85 b8 eb ff ff 	mov    %rax,-0x1448(%rbp)
  407592:	48 89 df             	mov    %rbx,%rdi
  407595:	e8 f6 01 00 00       	callq  407790 <uInt64_to_double>
  40759a:	48 89 85 b0 eb ff ff 	mov    %rax,-0x1450(%rbp)
  4075a1:	48 8d bd f0 eb ff ff 	lea    -0x1410(%rbp),%rdi
  4075a8:	4c 89 fe             	mov    %r15,%rsi
  4075ab:	e8 80 02 00 00       	callq  407830 <uInt64_toAscii>
  4075b0:	48 8d bd d0 eb ff ff 	lea    -0x1430(%rbp),%rdi
  4075b7:	49 89 fc             	mov    %rdi,%r12
  4075ba:	48 89 de             	mov    %rbx,%rsi
  4075bd:	e8 6e 02 00 00       	callq  407830 <uInt64_toAscii>
  4075c2:	48 8b 9d b8 eb ff ff 	mov    -0x1448(%rbp),%rbx
  4075c9:	4c 8b bd b0 eb ff ff 	mov    -0x1450(%rbp),%r15
  4075d0:	48 89 df             	mov    %rbx,%rdi
  4075d3:	4c 89 fe             	mov    %r15,%rsi
  4075d6:	e8 a5 c7 01 00       	callq  423d80 <float64_div>
  4075db:	49 89 c5             	mov    %rax,%r13
  4075de:	48 be 00 00 00 00 00 	movabs $0x4020000000000000,%rsi
  4075e5:	00 20 40 
  4075e8:	4c 89 ff             	mov    %r15,%rdi
  4075eb:	e8 00 bf 01 00       	callq  4234f0 <float64_mul>
  4075f0:	48 89 c7             	mov    %rax,%rdi
  4075f3:	48 89 de             	mov    %rbx,%rsi
  4075f6:	e8 85 c7 01 00       	callq  423d80 <float64_div>
  4075fb:	49 89 c6             	mov    %rax,%r14
  4075fe:	4c 89 ff             	mov    %r15,%rdi
  407601:	48 89 de             	mov    %rbx,%rsi
  407604:	e8 77 c7 01 00       	callq  423d80 <float64_div>
  407609:	48 bf 00 00 00 00 00 	movabs $0x3ff0000000000000,%rdi
  407610:	00 f0 3f 
  407613:	48 89 c6             	mov    %rax,%rsi
  407616:	e8 a5 be 01 00       	callq  4234c0 <float64_sub>
  40761b:	48 be 00 00 00 00 00 	movabs $0x4059000000000000,%rsi
  407622:	00 59 40 
  407625:	48 89 c7             	mov    %rax,%rdi
  407628:	e8 c3 be 01 00       	callq  4234f0 <float64_mul>
  40762d:	48 89 c3             	mov    %rax,%rbx
  407630:	48 be 3c 67 42 00 00 	movabs $0x42673c,%rsi
  407637:	00 00 00 
  40763a:	48 31 c0             	xor    %rax,%rax
  40763d:	4c 89 24 24          	mov    %r12,(%rsp)
  407641:	48 8b 3d 88 13 02 00 	mov    0x21388(%rip),%rdi        # 4289d0 <stderr>
  407648:	4c 89 ea             	mov    %r13,%rdx
  40764b:	4c 89 f1             	mov    %r14,%rcx
  40764e:	49 89 d8             	mov    %rbx,%r8
  407651:	4c 8d 8d f0 eb ff ff 	lea    -0x1410(%rbp),%r9
  407658:	e8 9b 26 01 00       	callq  419cf8 <fprintf>
  40765d:	48 81 c4 38 14 00 00 	add    $0x1438,%rsp
  407664:	5b                   	pop    %rbx
  407665:	41 5c                	pop    %r12
  407667:	41 5d                	pop    %r13
  407669:	41 5e                	pop    %r14
  40766b:	41 5f                	pop    %r15
  40766d:	5d                   	pop    %rbp
  40766e:	c3                   	retq   
  40766f:	48 8b 3d 5a 13 02 00 	mov    0x2135a(%rip),%rdi        # 4289d0 <stderr>
  407676:	48 be 26 67 42 00 00 	movabs $0x426726,%rsi
  40767d:	00 00 00 
  407680:	48 31 c0             	xor    %rax,%rax
  407683:	e8 70 26 01 00       	callq  419cf8 <fprintf>
  407688:	eb d3                	jmp    40765d <compressStream+0x34d>
  40768a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40768e:	48 8d 8d 1c ec ff ff 	lea    -0x13e4(%rbp),%rcx
  407695:	48 8d b5 14 ec ff ff 	lea    -0x13ec(%rbp),%rsi
  40769c:	48 8d 9d 28 ec ff ff 	lea    -0x13d8(%rbp),%rbx
  4076a3:	4c 8d 85 24 ec ff ff 	lea    -0x13dc(%rbp),%r8
  4076aa:	4c 8d 8d 20 ec ff ff 	lea    -0x13e0(%rbp),%r9
  4076b1:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  4076b8:	48 89 0c 24          	mov    %rcx,(%rsp)
  4076bc:	48 89 f7             	mov    %rsi,%rdi
  4076bf:	48 89 c6             	mov    %rax,%rsi
  4076c2:	48 89 d9             	mov    %rbx,%rcx
  4076c5:	e8 c6 2d 00 00       	callq  40a490 <BZ2_bzWriteClose64>
  4076ca:	8b 85 18 ec ff ff    	mov    -0x13e8(%rbp),%eax
  4076d0:	48 b9 fd ff ff ff 00 	movabs $0xfffffffd,%rcx
  4076d7:	00 00 00 
  4076da:	48 39 c8             	cmp    %rcx,%rax
  4076dd:	74 14                	je     4076f3 <compressStream+0x3e3>
  4076df:	48 b9 fa ff ff ff 00 	movabs $0xfffffffa,%rcx
  4076e6:	00 00 00 
  4076e9:	48 39 c8             	cmp    %rcx,%rax
  4076ec:	75 0a                	jne    4076f8 <compressStream+0x3e8>
  4076ee:	e8 cd f1 ff ff       	callq  4068c0 <ioError>
  4076f3:	e8 18 f2 ff ff       	callq  406910 <outOfMemory>
  4076f8:	48 b9 f7 ff ff ff 00 	movabs $0xfffffff7,%rcx
  4076ff:	00 00 00 
  407702:	48 39 c8             	cmp    %rcx,%rax
  407705:	75 05                	jne    40770c <compressStream+0x3fc>
  407707:	e8 74 f1 ff ff       	callq  406880 <configError>
  40770c:	48 b8 31 65 42 00 00 	movabs $0x426531,%rax
  407713:	00 00 00 
  407716:	48 89 c7             	mov    %rax,%rdi
  407719:	e8 72 ec ff ff       	callq  406390 <panic>
  40771e:	66 90                	xchg   %ax,%ax

0000000000407720 <uInt64_from_UInt32s>:
  407720:	55                   	push   %rbp
  407721:	48 89 e5             	mov    %rsp,%rbp
  407724:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  407728:	89 55 f0             	mov    %edx,-0x10(%rbp)
  40772b:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
  40772f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  407733:	89 75 f4             	mov    %esi,-0xc(%rbp)
  407736:	88 41 07             	mov    %al,0x7(%rcx)
  407739:	0f b6 45 f2          	movzbl -0xe(%rbp),%eax
  40773d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  407741:	88 41 06             	mov    %al,0x6(%rcx)
  407744:	0f b6 45 f1          	movzbl -0xf(%rbp),%eax
  407748:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40774c:	88 41 05             	mov    %al,0x5(%rcx)
  40774f:	0f b6 45 f0          	movzbl -0x10(%rbp),%eax
  407753:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  407757:	88 41 04             	mov    %al,0x4(%rcx)
  40775a:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
  40775e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  407762:	88 41 03             	mov    %al,0x3(%rcx)
  407765:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
  407769:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40776d:	88 41 02             	mov    %al,0x2(%rcx)
  407770:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
  407774:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  407778:	88 41 01             	mov    %al,0x1(%rcx)
  40777b:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  40777f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  407783:	88 01                	mov    %al,(%rcx)
  407785:	5d                   	pop    %rbp
  407786:	c3                   	retq   
  407787:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40778e:	00 00 

0000000000407790 <uInt64_to_double>:
  407790:	55                   	push   %rbp
  407791:	48 89 e5             	mov    %rsp,%rbp
  407794:	41 56                	push   %r14
  407796:	53                   	push   %rbx
  407797:	48 83 ec 20          	sub    $0x20,%rsp
  40779b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40779f:	48 b8 00 00 00 00 00 	movabs $0x3ff0000000000000,%rax
  4077a6:	00 f0 3f 
  4077a9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4077ad:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
  4077b4:	00 
  4077b5:	48 31 c0             	xor    %rax,%rax
  4077b8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4077bb:	49 be 00 00 00 00 00 	movabs $0x4070000000000000,%r14
  4077c2:	00 70 40 
  4077c5:	eb 52                	jmp    407819 <uInt64_to_double+0x89>
  4077c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4077ce:	00 00 
  4077d0:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  4077d4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4077d8:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
  4077dc:	0f b6 3c 01          	movzbl (%rcx,%rax,1),%edi
  4077e0:	e8 2b 66 01 00       	callq  41de10 <int32_to_float64>
  4077e5:	48 89 df             	mov    %rbx,%rdi
  4077e8:	48 89 c6             	mov    %rax,%rsi
  4077eb:	e8 00 bd 01 00       	callq  4234f0 <float64_mul>
  4077f0:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4077f4:	48 89 c6             	mov    %rax,%rsi
  4077f7:	e8 e4 ae 01 00       	callq  4226e0 <float64_add>
  4077fc:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  407800:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  407804:	4c 89 f6             	mov    %r14,%rsi
  407807:	e8 e4 bc 01 00       	callq  4234f0 <float64_mul>
  40780c:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40780f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  407813:	48 ff c1             	inc    %rcx
  407816:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  407819:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  40781d:	48 83 f8 07          	cmp    $0x7,%rax
  407821:	7e ad                	jle    4077d0 <uInt64_to_double+0x40>
  407823:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407827:	48 83 c4 20          	add    $0x20,%rsp
  40782b:	5b                   	pop    %rbx
  40782c:	41 5e                	pop    %r14
  40782e:	5d                   	pop    %rbp
  40782f:	c3                   	retq   

0000000000407830 <uInt64_toAscii>:
  407830:	55                   	push   %rbp
  407831:	48 89 e5             	mov    %rsp,%rbp
  407834:	53                   	push   %rbx
  407835:	48 83 ec 48          	sub    $0x48,%rsp
  407839:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  40783d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407841:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  407845:	48 31 c9             	xor    %rcx,%rcx
  407848:	89 4d bc             	mov    %ecx,-0x44(%rbp)
  40784b:	48 8b 00             	mov    (%rax),%rax
  40784e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  407852:	48 8d 5d b0          	lea    -0x50(%rbp),%rbx
  407856:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40785d:	00 00 00 
  407860:	48 89 df             	mov    %rbx,%rdi
  407863:	e8 98 00 00 00       	callq  407900 <uInt64_qrm10>
  407868:	89 45 e0             	mov    %eax,-0x20(%rbp)
  40786b:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  40786e:	48 63 55 bc          	movslq -0x44(%rbp),%rdx
  407872:	48 83 c0 30          	add    $0x30,%rax
  407876:	88 44 15 c0          	mov    %al,-0x40(%rbp,%rdx,1)
  40787a:	48 ff c1             	inc    %rcx
  40787d:	89 4d bc             	mov    %ecx,-0x44(%rbp)
  407880:	48 89 df             	mov    %rbx,%rdi
  407883:	e8 38 01 00 00       	callq  4079c0 <uInt64_isZero>
  407888:	48 85 c0             	test   %rax,%rax
  40788b:	74 d3                	je     407860 <uInt64_toAscii+0x30>
  40788d:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  407891:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  407895:	48 31 d2             	xor    %rdx,%rdx
  407898:	88 14 01             	mov    %dl,(%rcx,%rax,1)
  40789b:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  40789e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  4078a2:	eb 3f                	jmp    4078e3 <uInt64_toAscii+0xb3>
  4078a4:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4078ab:	00 00 00 00 00 
  4078b0:	8b 55 bc             	mov    -0x44(%rbp),%edx
  4078b3:	48 63 75 e4          	movslq -0x1c(%rbp),%rsi
  4078b7:	48 29 f2             	sub    %rsi,%rdx
  4078ba:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4078c1:	48 d3 e2             	shl    %cl,%rdx
  4078c4:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4078cb:	48 d3 fa             	sar    %cl,%rdx
  4078ce:	0f b6 4c 02 ff       	movzbl -0x1(%rdx,%rax,1),%ecx
  4078d3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4078d7:	88 0c 32             	mov    %cl,(%rdx,%rsi,1)
  4078da:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  4078dd:	48 ff c1             	inc    %rcx
  4078e0:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  4078e3:	48 63 4d e4          	movslq -0x1c(%rbp),%rcx
  4078e7:	48 63 55 bc          	movslq -0x44(%rbp),%rdx
  4078eb:	48 39 d1             	cmp    %rdx,%rcx
  4078ee:	7c c0                	jl     4078b0 <uInt64_toAscii+0x80>
  4078f0:	48 83 c4 48          	add    $0x48,%rsp
  4078f4:	5b                   	pop    %rbx
  4078f5:	5d                   	pop    %rbp
  4078f6:	c3                   	retq   
  4078f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4078fe:	00 00 

0000000000407900 <uInt64_qrm10>:
  407900:	55                   	push   %rbp
  407901:	48 89 e5             	mov    %rsp,%rbp
  407904:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  407908:	48 31 c0             	xor    %rax,%rax
  40790b:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40790e:	48 c7 c0 07 00 00 00 	mov    $0x7,%rax
  407915:	89 45 ec             	mov    %eax,-0x14(%rbp)
  407918:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  40791f:	00 00 00 
  407922:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
  407929:	cc cc cc 
  40792c:	49 b9 fe ff ff ff ff 	movabs $0x3ffffffffffffffe,%r9
  407933:	ff ff 3f 
  407936:	eb 6b                	jmp    4079a3 <uInt64_qrm10+0xa3>
  407938:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40793f:	00 
  407940:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  407944:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  407948:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40794b:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
  40794f:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  407956:	48 d3 e2             	shl    %cl,%rdx
  407959:	48 09 d0             	or     %rdx,%rax
  40795c:	89 45 f0             	mov    %eax,-0x10(%rbp)
  40795f:	4c 21 c0             	and    %r8,%rax
  407962:	48 63 75 ec          	movslq -0x14(%rbp),%rsi
  407966:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40796a:	49 f7 e2             	mul    %r10
  40796d:	48 c7 c1 03 00 00 00 	mov    $0x3,%rcx
  407974:	48 d3 ea             	shr    %cl,%rdx
  407977:	88 14 37             	mov    %dl,(%rdi,%rsi,1)
  40797a:	8b 75 f0             	mov    -0x10(%rbp),%esi
  40797d:	48 89 f0             	mov    %rsi,%rax
  407980:	49 f7 e2             	mul    %r10
  407983:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  40798a:	48 d3 ea             	shr    %cl,%rdx
  40798d:	4c 21 ca             	and    %r9,%rdx
  407990:	8b 45 ec             	mov    -0x14(%rbp),%eax
  407993:	48 8d 0c 92          	lea    (%rdx,%rdx,4),%rcx
  407997:	48 29 ce             	sub    %rcx,%rsi
  40799a:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40799d:	48 ff c8             	dec    %rax
  4079a0:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4079a3:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  4079a7:	48 85 c0             	test   %rax,%rax
  4079aa:	79 94                	jns    407940 <uInt64_qrm10+0x40>
  4079ac:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4079af:	5d                   	pop    %rbp
  4079b0:	c3                   	retq   
  4079b1:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4079b8:	0f 1f 84 00 00 00 00 
  4079bf:	00 

00000000004079c0 <uInt64_isZero>:
  4079c0:	55                   	push   %rbp
  4079c1:	48 89 e5             	mov    %rsp,%rbp
  4079c4:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  4079c8:	48 31 c0             	xor    %rax,%rax
  4079cb:	eb 09                	jmp    4079d6 <uInt64_isZero+0x16>
  4079cd:	0f 1f 00             	nopl   (%rax)
  4079d0:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4079d3:	48 ff c0             	inc    %rax
  4079d6:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4079d9:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  4079dd:	48 83 f8 07          	cmp    $0x7,%rax
  4079e1:	7f 16                	jg     4079f9 <uInt64_isZero+0x39>
  4079e3:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  4079e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4079eb:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
  4079ef:	48 85 c0             	test   %rax,%rax
  4079f2:	74 dc                	je     4079d0 <uInt64_isZero+0x10>
  4079f4:	48 31 c0             	xor    %rax,%rax
  4079f7:	eb 07                	jmp    407a00 <uInt64_isZero+0x40>
  4079f9:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  407a00:	88 45 ff             	mov    %al,-0x1(%rbp)
  407a03:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  407a07:	5d                   	pop    %rbp
  407a08:	c3                   	retq   
  407a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000407a10 <mkCell>:
  407a10:	55                   	push   %rbp
  407a11:	48 89 e5             	mov    %rsp,%rbp
  407a14:	48 83 ec 10          	sub    $0x10,%rsp
  407a18:	48 c7 c7 10 00 00 00 	mov    $0x10,%rdi
  407a1f:	e8 2c 00 00 00       	callq  407a50 <myMalloc>
  407a24:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  407a28:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  407a2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407a33:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  407a3a:	00 
  407a3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407a3f:	48 83 c4 10          	add    $0x10,%rsp
  407a43:	5d                   	pop    %rbp
  407a44:	c3                   	retq   
  407a45:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  407a4c:	00 00 00 00 

0000000000407a50 <myMalloc>:
  407a50:	55                   	push   %rbp
  407a51:	48 89 e5             	mov    %rsp,%rbp
  407a54:	48 83 ec 10          	sub    $0x10,%rsp
  407a58:	89 7d fc             	mov    %edi,-0x4(%rbp)
  407a5b:	48 63 7d fc          	movslq -0x4(%rbp),%rdi
  407a5f:	e8 2c 11 01 00       	callq  418b90 <malloc>
  407a64:	48 85 c0             	test   %rax,%rax
  407a67:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  407a6b:	74 0a                	je     407a77 <myMalloc+0x27>
  407a6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407a71:	48 83 c4 10          	add    $0x10,%rsp
  407a75:	5d                   	pop    %rbp
  407a76:	c3                   	retq   
  407a77:	e8 94 ee ff ff       	callq  406910 <outOfMemory>
  407a7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000407a80 <BZ2_bz__AssertH__fail>:
  407a80:	55                   	push   %rbp
  407a81:	48 89 e5             	mov    %rsp,%rbp
  407a84:	41 56                	push   %r14
  407a86:	53                   	push   %rbx
  407a87:	48 83 ec 10          	sub    $0x10,%rsp
  407a8b:	89 7d ec             	mov    %edi,-0x14(%rbp)
  407a8e:	4c 8b 35 3b 0f 02 00 	mov    0x20f3b(%rip),%r14        # 4289d0 <stderr>
  407a95:	8b 5d ec             	mov    -0x14(%rbp),%ebx
  407a98:	e8 53 00 00 00       	callq  407af0 <BZ2_bzlibVersion>
  407a9d:	48 89 c1             	mov    %rax,%rcx
  407aa0:	48 be 98 76 42 00 00 	movabs $0x427698,%rsi
  407aa7:	00 00 00 
  407aaa:	48 31 c0             	xor    %rax,%rax
  407aad:	4c 89 f7             	mov    %r14,%rdi
  407ab0:	48 89 da             	mov    %rbx,%rdx
  407ab3:	e8 40 22 01 00       	callq  419cf8 <fprintf>
  407ab8:	8b 45 ec             	mov    -0x14(%rbp),%eax
  407abb:	48 3d ef 03 00 00    	cmp    $0x3ef,%rax
  407ac1:	75 19                	jne    407adc <BZ2_bz__AssertH__fail+0x5c>
  407ac3:	48 8b 3d 06 0f 02 00 	mov    0x20f06(%rip),%rdi        # 4289d0 <stderr>
  407aca:	48 be 53 78 42 00 00 	movabs $0x427853,%rsi
  407ad1:	00 00 00 
  407ad4:	48 31 c0             	xor    %rax,%rax
  407ad7:	e8 1c 22 01 00       	callq  419cf8 <fprintf>
  407adc:	48 c7 c7 03 00 00 00 	mov    $0x3,%rdi
  407ae3:	e8 69 05 01 00       	callq  418051 <exit>
  407ae8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  407aef:	00 

0000000000407af0 <BZ2_bzlibVersion>:
  407af0:	55                   	push   %rbp
  407af1:	48 89 e5             	mov    %rsp,%rbp
  407af4:	48 b8 bf 7c 42 00 00 	movabs $0x427cbf,%rax
  407afb:	00 00 00 
  407afe:	5d                   	pop    %rbp
  407aff:	c3                   	retq   

0000000000407b00 <BZ2_bzCompressInit>:
  407b00:	55                   	push   %rbp
  407b01:	48 89 e5             	mov    %rsp,%rbp
  407b04:	53                   	push   %rbx
  407b05:	48 83 ec 28          	sub    $0x28,%rsp
  407b09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  407b0d:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  407b10:	89 55 e0             	mov    %edx,-0x20(%rbp)
  407b13:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  407b16:	e8 15 03 00 00       	callq  407e30 <bz_config_ok>
  407b1b:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  407b22:	00 00 00 
  407b25:	48 85 c8             	test   %rcx,%rax
  407b28:	74 3e                	je     407b68 <BZ2_bzCompressInit+0x68>
  407b2a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  407b2f:	74 28                	je     407b59 <BZ2_bzCompressInit+0x59>
  407b31:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  407b35:	48 85 c0             	test   %rax,%rax
  407b38:	7e 1f                	jle    407b59 <BZ2_bzCompressInit+0x59>
  407b3a:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  407b3e:	48 83 f8 09          	cmp    $0x9,%rax
  407b42:	7f 15                	jg     407b59 <BZ2_bzCompressInit+0x59>
  407b44:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  407b48:	48 85 c0             	test   %rax,%rax
  407b4b:	78 0c                	js     407b59 <BZ2_bzCompressInit+0x59>
  407b4d:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  407b51:	48 3d fb 00 00 00    	cmp    $0xfb,%rax
  407b57:	7c 26                	jl     407b7f <BZ2_bzCompressInit+0x7f>
  407b59:	48 b8 fe ff ff ff 00 	movabs $0xfffffffe,%rax
  407b60:	00 00 00 
  407b63:	89 45 f4             	mov    %eax,-0xc(%rbp)
  407b66:	eb 0d                	jmp    407b75 <BZ2_bzCompressInit+0x75>
  407b68:	48 b8 f7 ff ff ff 00 	movabs $0xfffffff7,%rax
  407b6f:	00 00 00 
  407b72:	89 45 f4             	mov    %eax,-0xc(%rbp)
  407b75:	8b 45 f4             	mov    -0xc(%rbp),%eax
  407b78:	48 83 c4 28          	add    $0x28,%rsp
  407b7c:	5b                   	pop    %rbx
  407b7d:	5d                   	pop    %rbp
  407b7e:	c3                   	retq   
  407b7f:	8b 45 dc             	mov    -0x24(%rbp),%eax
  407b82:	48 85 c0             	test   %rax,%rax
  407b85:	75 0a                	jne    407b91 <BZ2_bzCompressInit+0x91>
  407b87:	48 c7 c0 1e 00 00 00 	mov    $0x1e,%rax
  407b8e:	89 45 dc             	mov    %eax,-0x24(%rbp)
  407b91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407b95:	48 83 78 38 00       	cmpq   $0x0,0x38(%rax)
  407b9a:	75 0c                	jne    407ba8 <BZ2_bzCompressInit+0xa8>
  407b9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407ba0:	48 c7 40 38 40 7e 40 	movq   $0x407e40,0x38(%rax)
  407ba7:	00 
  407ba8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407bac:	48 83 78 40 00       	cmpq   $0x0,0x40(%rax)
  407bb1:	75 0c                	jne    407bbf <BZ2_bzCompressInit+0xbf>
  407bb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407bb7:	48 c7 40 40 80 7e 40 	movq   $0x407e80,0x40(%rax)
  407bbe:	00 
  407bbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407bc3:	48 8b 78 48          	mov    0x48(%rax),%rdi
  407bc7:	48 c7 c6 d8 d9 00 00 	mov    $0xd9d8,%rsi
  407bce:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  407bd5:	ff 50 38             	callq  *0x38(%rax)
  407bd8:	48 85 c0             	test   %rax,%rax
  407bdb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  407bdf:	0f 84 38 02 00 00    	je     407e1d <BZ2_bzCompressInit+0x31d>
  407be5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407be9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  407bed:	48 89 01             	mov    %rax,(%rcx)
  407bf0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407bf4:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  407bfb:	00 
  407bfc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407c00:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  407c07:	00 
  407c08:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407c0c:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
  407c13:	00 
  407c14:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  407c17:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
  407c1b:	48 69 c0 a0 86 01 00 	imul   $0x186a0,%rax,%rax
  407c22:	89 45 d8             	mov    %eax,-0x28(%rbp)
  407c25:	48 63 75 d8          	movslq -0x28(%rbp),%rsi
  407c29:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
  407c2d:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  407c34:	48 d3 e6             	shl    %cl,%rsi
  407c37:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  407c3e:	ff 53 38             	callq  *0x38(%rbx)
  407c41:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  407c45:	48 89 41 18          	mov    %rax,0x18(%rcx)
  407c49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407c4d:	8b 75 d8             	mov    -0x28(%rbp),%esi
  407c50:	48 8b 78 48          	mov    0x48(%rax),%rdi
  407c54:	48 83 c6 22          	add    $0x22,%rsi
  407c58:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  407c5f:	48 d3 e6             	shl    %cl,%rsi
  407c62:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  407c69:	48 d3 fe             	sar    %cl,%rsi
  407c6c:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  407c73:	48 d3 e6             	shl    %cl,%rsi
  407c76:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  407c7d:	ff 50 38             	callq  *0x38(%rax)
  407c80:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  407c84:	48 89 41 20          	mov    %rax,0x20(%rcx)
  407c88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407c8c:	48 8b 78 48          	mov    0x48(%rax),%rdi
  407c90:	48 c7 c6 04 00 04 00 	mov    $0x40004,%rsi
  407c97:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  407c9e:	ff 50 38             	callq  *0x38(%rax)
  407ca1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  407ca5:	48 89 41 28          	mov    %rax,0x28(%rcx)
  407ca9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407cad:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
  407cb2:	0f 84 f5 00 00 00    	je     407dad <BZ2_bzCompressInit+0x2ad>
  407cb8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407cbc:	48 83 78 20 00       	cmpq   $0x0,0x20(%rax)
  407cc1:	0f 84 e6 00 00 00    	je     407dad <BZ2_bzCompressInit+0x2ad>
  407cc7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407ccb:	48 83 78 28 00       	cmpq   $0x0,0x28(%rax)
  407cd0:	0f 84 d7 00 00 00    	je     407dad <BZ2_bzCompressInit+0x2ad>
  407cd6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407cda:	48 31 db             	xor    %rbx,%rbx
  407cdd:	89 98 94 02 00 00    	mov    %ebx,0x294(%rax)
  407ce3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407ce7:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  407cee:	89 48 0c             	mov    %ecx,0xc(%rax)
  407cf1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407cf5:	89 48 08             	mov    %ecx,0x8(%rax)
  407cf8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407cfc:	89 98 8c 02 00 00    	mov    %ebx,0x28c(%rax)
  407d02:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  407d05:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  407d09:	89 81 98 02 00 00    	mov    %eax,0x298(%rcx)
  407d0f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  407d12:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  407d16:	48 69 c0 a0 86 01 00 	imul   $0x186a0,%rax,%rax
  407d1d:	48 83 c0 ed          	add    $0xffffffffffffffed,%rax
  407d21:	89 41 70             	mov    %eax,0x70(%rcx)
  407d24:	8b 45 e0             	mov    -0x20(%rbp),%eax
  407d27:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  407d2b:	89 81 90 02 00 00    	mov    %eax,0x290(%rcx)
  407d31:	8b 45 dc             	mov    -0x24(%rbp),%eax
  407d34:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  407d38:	89 41 58             	mov    %eax,0x58(%rcx)
  407d3b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407d3f:	48 8b 48 20          	mov    0x20(%rax),%rcx
  407d43:	48 89 48 40          	mov    %rcx,0x40(%rax)
  407d47:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407d4b:	48 8b 48 18          	mov    0x18(%rax),%rcx
  407d4f:	48 89 48 48          	mov    %rcx,0x48(%rax)
  407d53:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407d57:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
  407d5e:	00 
  407d5f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407d63:	48 8b 48 18          	mov    0x18(%rax),%rcx
  407d67:	48 89 48 38          	mov    %rcx,0x38(%rax)
  407d6b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407d6f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  407d73:	48 89 41 30          	mov    %rax,0x30(%rcx)
  407d77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407d7b:	89 58 0c             	mov    %ebx,0xc(%rax)
  407d7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407d82:	89 58 10             	mov    %ebx,0x10(%rax)
  407d85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407d89:	89 58 24             	mov    %ebx,0x24(%rax)
  407d8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407d90:	89 58 28             	mov    %ebx,0x28(%rax)
  407d93:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  407d97:	e8 14 01 00 00       	callq  407eb0 <init_RL>
  407d9c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  407da0:	e8 2b 01 00 00       	callq  407ed0 <prepare_new_block>
  407da5:	89 5d f4             	mov    %ebx,-0xc(%rbp)
  407da8:	e9 c8 fd ff ff       	jmpq   407b75 <BZ2_bzCompressInit+0x75>
  407dad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407db1:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
  407db6:	74 13                	je     407dcb <BZ2_bzCompressInit+0x2cb>
  407db8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407dbc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  407dc0:	48 8b 78 48          	mov    0x48(%rax),%rdi
  407dc4:	48 8b 71 18          	mov    0x18(%rcx),%rsi
  407dc8:	ff 50 40             	callq  *0x40(%rax)
  407dcb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407dcf:	48 83 78 20 00       	cmpq   $0x0,0x20(%rax)
  407dd4:	74 13                	je     407de9 <BZ2_bzCompressInit+0x2e9>
  407dd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407dda:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  407dde:	48 8b 78 48          	mov    0x48(%rax),%rdi
  407de2:	48 8b 71 20          	mov    0x20(%rcx),%rsi
  407de6:	ff 50 40             	callq  *0x40(%rax)
  407de9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  407ded:	48 83 78 28 00       	cmpq   $0x0,0x28(%rax)
  407df2:	74 13                	je     407e07 <BZ2_bzCompressInit+0x307>
  407df4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407df8:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  407dfc:	48 8b 78 48          	mov    0x48(%rax),%rdi
  407e00:	48 8b 71 28          	mov    0x28(%rcx),%rsi
  407e04:	ff 50 40             	callq  *0x40(%rax)
  407e07:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  407e0c:	74 0f                	je     407e1d <BZ2_bzCompressInit+0x31d>
  407e0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407e12:	48 8b 78 48          	mov    0x48(%rax),%rdi
  407e16:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  407e1a:	ff 50 40             	callq  *0x40(%rax)
  407e1d:	48 b8 fd ff ff ff 00 	movabs $0xfffffffd,%rax
  407e24:	00 00 00 
  407e27:	89 45 f4             	mov    %eax,-0xc(%rbp)
  407e2a:	e9 46 fd ff ff       	jmpq   407b75 <BZ2_bzCompressInit+0x75>
  407e2f:	90                   	nop

0000000000407e30 <bz_config_ok>:
  407e30:	55                   	push   %rbp
  407e31:	48 89 e5             	mov    %rsp,%rbp
  407e34:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  407e3b:	5d                   	pop    %rbp
  407e3c:	c3                   	retq   
  407e3d:	0f 1f 00             	nopl   (%rax)

0000000000407e40 <default_bzalloc>:
  407e40:	55                   	push   %rbp
  407e41:	48 89 e5             	mov    %rsp,%rbp
  407e44:	48 83 ec 20          	sub    $0x20,%rsp
  407e48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  407e4c:	89 75 f4             	mov    %esi,-0xc(%rbp)
  407e4f:	8b 7d f4             	mov    -0xc(%rbp),%edi
  407e52:	89 55 f0             	mov    %edx,-0x10(%rbp)
  407e55:	48 0f af fa          	imul   %rdx,%rdi
  407e59:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  407e60:	48 d3 e7             	shl    %cl,%rdi
  407e63:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  407e6a:	48 d3 ff             	sar    %cl,%rdi
  407e6d:	e8 1e 0d 01 00       	callq  418b90 <malloc>
  407e72:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  407e76:	48 83 c4 20          	add    $0x20,%rsp
  407e7a:	5d                   	pop    %rbp
  407e7b:	c3                   	retq   
  407e7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000407e80 <default_bzfree>:
  407e80:	55                   	push   %rbp
  407e81:	48 89 e5             	mov    %rsp,%rbp
  407e84:	48 83 ec 10          	sub    $0x10,%rsp
  407e88:	48 85 f6             	test   %rsi,%rsi
  407e8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  407e8f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  407e93:	74 09                	je     407e9e <default_bzfree+0x1e>
  407e95:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  407e99:	e8 12 09 01 00       	callq  4187b0 <free>
  407e9e:	48 83 c4 10          	add    $0x10,%rsp
  407ea2:	5d                   	pop    %rbp
  407ea3:	c3                   	retq   
  407ea4:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  407eab:	00 00 00 00 00 

0000000000407eb0 <init_RL>:
  407eb0:	55                   	push   %rbp
  407eb1:	48 89 e5             	mov    %rsp,%rbp
  407eb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  407eb8:	48 c7 c0 00 01 00 00 	mov    $0x100,%rax
  407ebf:	89 47 5c             	mov    %eax,0x5c(%rdi)
  407ec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407ec6:	48 31 c9             	xor    %rcx,%rcx
  407ec9:	89 48 60             	mov    %ecx,0x60(%rax)
  407ecc:	5d                   	pop    %rbp
  407ecd:	c3                   	retq   
  407ece:	66 90                	xchg   %ax,%ax

0000000000407ed0 <prepare_new_block>:
  407ed0:	55                   	push   %rbp
  407ed1:	48 89 e5             	mov    %rsp,%rbp
  407ed4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  407ed8:	48 31 c0             	xor    %rax,%rax
  407edb:	89 47 6c             	mov    %eax,0x6c(%rdi)
  407ede:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  407ee2:	89 41 74             	mov    %eax,0x74(%rcx)
  407ee5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  407ee9:	89 41 78             	mov    %eax,0x78(%rcx)
  407eec:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  407ef0:	48 ba ff ff ff ff 00 	movabs $0xffffffff,%rdx
  407ef7:	00 00 00 
  407efa:	89 91 88 02 00 00    	mov    %edx,0x288(%rcx)
  407f00:	89 45 f4             	mov    %eax,-0xc(%rbp)
  407f03:	eb 23                	jmp    407f28 <prepare_new_block+0x58>
  407f05:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  407f0c:	00 00 00 00 
  407f10:	48 63 4d f4          	movslq -0xc(%rbp),%rcx
  407f14:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  407f18:	88 84 0a 80 00 00 00 	mov    %al,0x80(%rdx,%rcx,1)
  407f1f:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  407f22:	48 ff c1             	inc    %rcx
  407f25:	89 4d f4             	mov    %ecx,-0xc(%rbp)
  407f28:	48 63 4d f4          	movslq -0xc(%rbp),%rcx
  407f2c:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
  407f33:	7e db                	jle    407f10 <prepare_new_block+0x40>
  407f35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407f39:	8b 88 94 02 00 00    	mov    0x294(%rax),%ecx
  407f3f:	48 ff c1             	inc    %rcx
  407f42:	89 88 94 02 00 00    	mov    %ecx,0x294(%rax)
  407f48:	5d                   	pop    %rbp
  407f49:	c3                   	retq   
  407f4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000407f50 <BZ2_bzCompress>:
  407f50:	55                   	push   %rbp
  407f51:	48 89 e5             	mov    %rsp,%rbp
  407f54:	53                   	push   %rbx
  407f55:	48 83 ec 28          	sub    $0x28,%rsp
  407f59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  407f5d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  407f62:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  407f65:	0f 84 a5 00 00 00    	je     408010 <BZ2_bzCompress+0xc0>
  407f6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407f6f:	48 8b 40 30          	mov    0x30(%rax),%rax
  407f73:	48 85 c0             	test   %rax,%rax
  407f76:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  407f7a:	0f 84 90 00 00 00    	je     408010 <BZ2_bzCompress+0xc0>
  407f80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  407f84:	48 8b 00             	mov    (%rax),%rax
  407f87:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  407f8b:	48 39 c8             	cmp    %rcx,%rax
  407f8e:	0f 85 7c 00 00 00    	jne    408010 <BZ2_bzCompress+0xc0>
  407f94:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  407f9b:	00 00 00 
  407f9e:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax
  407fa5:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  407fac:	eb 17                	jmp    407fc5 <BZ2_bzCompress+0x75>
  407fae:	66 90                	xchg   %ax,%ax
  407fb0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  407fb4:	8b 52 08             	mov    0x8(%rdx),%edx
  407fb7:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  407fbb:	89 56 10             	mov    %edx,0x10(%rsi)
  407fbe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  407fc2:	89 42 08             	mov    %eax,0x8(%rdx)
  407fc5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  407fc9:	8b 52 08             	mov    0x8(%rdx),%edx
  407fcc:	48 ff ca             	dec    %rdx
  407fcf:	48 21 da             	and    %rbx,%rdx
  407fd2:	48 83 fa 03          	cmp    $0x3,%rdx
  407fd6:	77 4f                	ja     408027 <BZ2_bzCompress+0xd7>
  407fd8:	ff 24 d5 78 76 42 00 	jmpq   *0x427678(,%rdx,8)
  407fdf:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  407fe2:	48 85 d2             	test   %rdx,%rdx
  407fe5:	74 45                	je     40802c <BZ2_bzCompress+0xdc>
  407fe7:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  407fea:	48 83 fa 01          	cmp    $0x1,%rdx
  407fee:	74 c0                	je     407fb0 <BZ2_bzCompress+0x60>
  407ff0:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  407ff3:	48 83 fa 02          	cmp    $0x2,%rdx
  407ff7:	75 17                	jne    408010 <BZ2_bzCompress+0xc0>
  407ff9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  407ffd:	8b 52 08             	mov    0x8(%rdx),%edx
  408000:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  408004:	89 56 10             	mov    %edx,0x10(%rsi)
  408007:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40800b:	89 4a 08             	mov    %ecx,0x8(%rdx)
  40800e:	eb b5                	jmp    407fc5 <BZ2_bzCompress+0x75>
  408010:	48 b8 fe ff ff ff 00 	movabs $0xfffffffe,%rax
  408017:	00 00 00 
  40801a:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40801d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  408020:	48 83 c4 28          	add    $0x28,%rsp
  408024:	5b                   	pop    %rbx
  408025:	5d                   	pop    %rbp
  408026:	c3                   	retq   
  408027:	48 31 c0             	xor    %rax,%rax
  40802a:	eb ee                	jmp    40801a <BZ2_bzCompress+0xca>
  40802c:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  408030:	e8 3b 01 00 00       	callq  408170 <handle_compress>
  408035:	48 85 c0             	test   %rax,%rax
  408038:	88 45 e3             	mov    %al,-0x1d(%rbp)
  40803b:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  408042:	75 d6                	jne    40801a <BZ2_bzCompress+0xca>
  408044:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
  40804b:	eb cd                	jmp    40801a <BZ2_bzCompress+0xca>
  40804d:	89 5d f4             	mov    %ebx,-0xc(%rbp)
  408050:	eb cb                	jmp    40801d <BZ2_bzCompress+0xcd>
  408052:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  408055:	48 83 f8 01          	cmp    $0x1,%rax
  408059:	74 13                	je     40806e <BZ2_bzCompress+0x11e>
  40805b:	89 5d f4             	mov    %ebx,-0xc(%rbp)
  40805e:	eb bd                	jmp    40801d <BZ2_bzCompress+0xcd>
  408060:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  408063:	48 83 f8 02          	cmp    $0x2,%rax
  408067:	74 1c                	je     408085 <BZ2_bzCompress+0x135>
  408069:	89 5d f4             	mov    %ebx,-0xc(%rbp)
  40806c:	eb af                	jmp    40801d <BZ2_bzCompress+0xcd>
  40806e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  408072:	48 8b 08             	mov    (%rax),%rcx
  408075:	8b 40 10             	mov    0x10(%rax),%eax
  408078:	8b 49 08             	mov    0x8(%rcx),%ecx
  40807b:	48 39 c8             	cmp    %rcx,%rax
  40807e:	74 1c                	je     40809c <BZ2_bzCompress+0x14c>
  408080:	89 5d f4             	mov    %ebx,-0xc(%rbp)
  408083:	eb 98                	jmp    40801d <BZ2_bzCompress+0xcd>
  408085:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  408089:	48 8b 08             	mov    (%rax),%rcx
  40808c:	8b 40 10             	mov    0x10(%rax),%eax
  40808f:	8b 49 08             	mov    0x8(%rcx),%ecx
  408092:	48 39 c8             	cmp    %rcx,%rax
  408095:	74 48                	je     4080df <BZ2_bzCompress+0x18f>
  408097:	89 5d f4             	mov    %ebx,-0xc(%rbp)
  40809a:	eb 81                	jmp    40801d <BZ2_bzCompress+0xcd>
  40809c:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4080a0:	e8 cb 00 00 00       	callq  408170 <handle_compress>
  4080a5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4080a9:	88 45 e3             	mov    %al,-0x1d(%rbp)
  4080ac:	8b 41 10             	mov    0x10(%rcx),%eax
  4080af:	48 85 c0             	test   %rax,%rax
  4080b2:	75 1f                	jne    4080d3 <BZ2_bzCompress+0x183>
  4080b4:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  4080b8:	e8 93 02 00 00       	callq  408350 <isempty_RL>
  4080bd:	48 85 c0             	test   %rax,%rax
  4080c0:	74 11                	je     4080d3 <BZ2_bzCompress+0x183>
  4080c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4080c6:	48 63 48 78          	movslq 0x78(%rax),%rcx
  4080ca:	48 63 40 74          	movslq 0x74(%rax),%rax
  4080ce:	48 39 c1             	cmp    %rax,%rcx
  4080d1:	7d 5c                	jge    40812f <BZ2_bzCompress+0x1df>
  4080d3:	48 c7 c0 02 00 00 00 	mov    $0x2,%rax
  4080da:	e9 3b ff ff ff       	jmpq   40801a <BZ2_bzCompress+0xca>
  4080df:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4080e3:	e8 88 00 00 00       	callq  408170 <handle_compress>
  4080e8:	48 85 c0             	test   %rax,%rax
  4080eb:	88 45 e3             	mov    %al,-0x1d(%rbp)
  4080ee:	74 37                	je     408127 <BZ2_bzCompress+0x1d7>
  4080f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4080f4:	8b 40 10             	mov    0x10(%rax),%eax
  4080f7:	48 85 c0             	test   %rax,%rax
  4080fa:	75 1f                	jne    40811b <BZ2_bzCompress+0x1cb>
  4080fc:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  408100:	e8 4b 02 00 00       	callq  408350 <isempty_RL>
  408105:	48 85 c0             	test   %rax,%rax
  408108:	74 11                	je     40811b <BZ2_bzCompress+0x1cb>
  40810a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40810e:	48 63 48 78          	movslq 0x78(%rax),%rcx
  408112:	48 63 40 74          	movslq 0x74(%rax),%rax
  408116:	48 39 c1             	cmp    %rax,%rcx
  408119:	7d 2e                	jge    408149 <BZ2_bzCompress+0x1f9>
  40811b:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax
  408122:	e9 f3 fe ff ff       	jmpq   40801a <BZ2_bzCompress+0xca>
  408127:	89 5d f4             	mov    %ebx,-0xc(%rbp)
  40812a:	e9 ee fe ff ff       	jmpq   40801d <BZ2_bzCompress+0xcd>
  40812f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  408133:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  40813a:	89 48 08             	mov    %ecx,0x8(%rax)
  40813d:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  408144:	e9 d1 fe ff ff       	jmpq   40801a <BZ2_bzCompress+0xca>
  408149:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40814d:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  408154:	89 48 08             	mov    %ecx,0x8(%rax)
  408157:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
  40815e:	e9 b7 fe ff ff       	jmpq   40801a <BZ2_bzCompress+0xca>
  408163:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40816a:	84 00 00 00 00 00 

0000000000408170 <handle_compress>:
  408170:	55                   	push   %rbp
  408171:	48 89 e5             	mov    %rsp,%rbp
  408174:	41 57                	push   %r15
  408176:	41 56                	push   %r14
  408178:	41 54                	push   %r12
  40817a:	53                   	push   %rbx
  40817b:	48 83 ec 20          	sub    $0x20,%rsp
  40817f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  408183:	48 31 c0             	xor    %rax,%rax
  408186:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40818a:	88 45 d7             	mov    %al,-0x29(%rbp)
  40818d:	88 45 d6             	mov    %al,-0x2a(%rbp)
  408190:	48 8b 41 30          	mov    0x30(%rcx),%rax
  408194:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  408198:	48 c7 c3 02 00 00 00 	mov    $0x2,%rbx
  40819f:	49 be 00 00 00 00 00 	movabs $0x0,%r14
  4081a6:	00 00 00 
  4081a9:	49 bf 01 00 00 00 00 	movabs $0x1,%r15
  4081b0:	00 00 00 
  4081b3:	49 c7 c4 01 00 00 00 	mov    $0x1,%r12
  4081ba:	eb 11                	jmp    4081cd <handle_compress+0x5d>
  4081bc:	0f 1f 40 00          	nopl   0x0(%rax)
  4081c0:	e8 4b 3d 00 00       	callq  40bf10 <BZ2_compressBlock>
  4081c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4081c9:	44 89 60 0c          	mov    %r12d,0xc(%rax)
  4081cd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4081d1:	8b 40 0c             	mov    0xc(%rax),%eax
  4081d4:	48 83 f8 01          	cmp    $0x1,%rax
  4081d8:	0f 85 92 00 00 00    	jne    408270 <handle_compress+0x100>
  4081de:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  4081e2:	e8 b9 36 00 00       	callq  40b8a0 <copy_output_until_stop>
  4081e7:	0f b6 4d d6          	movzbl -0x2a(%rbp),%ecx
  4081eb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4081ef:	48 09 c1             	or     %rax,%rcx
  4081f2:	88 4d d6             	mov    %cl,-0x2a(%rbp)
  4081f5:	48 63 42 78          	movslq 0x78(%rdx),%rax
  4081f9:	48 63 4a 74          	movslq 0x74(%rdx),%rcx
  4081fd:	48 39 c8             	cmp    %rcx,%rax
  408200:	0f 8c 0a 01 00 00    	jl     408310 <handle_compress+0x1a0>
  408206:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40820a:	8b 40 08             	mov    0x8(%rax),%eax
  40820d:	48 83 f8 04          	cmp    $0x4,%rax
  408211:	75 1e                	jne    408231 <handle_compress+0xc1>
  408213:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408217:	8b 40 10             	mov    0x10(%rax),%eax
  40821a:	48 85 c0             	test   %rax,%rax
  40821d:	75 12                	jne    408231 <handle_compress+0xc1>
  40821f:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  408223:	e8 28 01 00 00       	callq  408350 <isempty_RL>
  408228:	48 85 c0             	test   %rax,%rax
  40822b:	0f 85 df 00 00 00    	jne    408310 <handle_compress+0x1a0>
  408231:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  408235:	e8 96 fc ff ff       	callq  407ed0 <prepare_new_block>
  40823a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40823e:	89 58 0c             	mov    %ebx,0xc(%rax)
  408241:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408245:	8b 40 08             	mov    0x8(%rax),%eax
  408248:	48 83 f8 03          	cmp    $0x3,%rax
  40824c:	75 22                	jne    408270 <handle_compress+0x100>
  40824e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408252:	8b 40 10             	mov    0x10(%rax),%eax
  408255:	48 85 c0             	test   %rax,%rax
  408258:	75 16                	jne    408270 <handle_compress+0x100>
  40825a:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  40825e:	e8 ed 00 00 00       	callq  408350 <isempty_RL>
  408263:	48 85 c0             	test   %rax,%rax
  408266:	0f 85 a4 00 00 00    	jne    408310 <handle_compress+0x1a0>
  40826c:	0f 1f 40 00          	nopl   0x0(%rax)
  408270:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408274:	8b 40 0c             	mov    0xc(%rax),%eax
  408277:	48 83 f8 02          	cmp    $0x2,%rax
  40827b:	0f 85 4c ff ff ff    	jne    4081cd <handle_compress+0x5d>
  408281:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  408285:	e8 e6 36 00 00       	callq  40b970 <copy_input_until_stop>
  40828a:	0f b6 4d d7          	movzbl -0x29(%rbp),%ecx
  40828e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  408292:	48 09 c1             	or     %rax,%rcx
  408295:	88 4d d7             	mov    %cl,-0x29(%rbp)
  408298:	8b 42 08             	mov    0x8(%rdx),%eax
  40829b:	48 83 f8 02          	cmp    $0x2,%rax
  40829f:	74 3f                	je     4082e0 <handle_compress+0x170>
  4082a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4082a5:	8b 40 10             	mov    0x10(%rax),%eax
  4082a8:	48 85 c0             	test   %rax,%rax
  4082ab:	75 33                	jne    4082e0 <handle_compress+0x170>
  4082ad:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  4082b1:	e8 4a 3a 00 00       	callq  40bd00 <flush_RL>
  4082b6:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  4082ba:	8b 47 08             	mov    0x8(%rdi),%eax
  4082bd:	48 83 f8 04          	cmp    $0x4,%rax
  4082c1:	4c 89 f6             	mov    %r14,%rsi
  4082c4:	0f 85 f6 fe ff ff    	jne    4081c0 <handle_compress+0x50>
  4082ca:	4c 89 fe             	mov    %r15,%rsi
  4082cd:	e9 ee fe ff ff       	jmpq   4081c0 <handle_compress+0x50>
  4082d2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4082d9:	1f 84 00 00 00 00 00 
  4082e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4082e4:	48 63 48 6c          	movslq 0x6c(%rax),%rcx
  4082e8:	48 63 40 70          	movslq 0x70(%rax),%rax
  4082ec:	48 39 c1             	cmp    %rax,%rcx
  4082ef:	7c 0c                	jl     4082fd <handle_compress+0x18d>
  4082f1:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  4082f5:	48 31 f6             	xor    %rsi,%rsi
  4082f8:	e9 c3 fe ff ff       	jmpq   4081c0 <handle_compress+0x50>
  4082fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408301:	48 8b 00             	mov    (%rax),%rax
  408304:	8b 40 08             	mov    0x8(%rax),%eax
  408307:	48 85 c0             	test   %rax,%rax
  40830a:	0f 85 bd fe ff ff    	jne    4081cd <handle_compress+0x5d>
  408310:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  408314:	48 85 c0             	test   %rax,%rax
  408317:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40831e:	75 1f                	jne    40833f <handle_compress+0x1cf>
  408320:	0f b6 45 d6          	movzbl -0x2a(%rbp),%eax
  408324:	48 85 c0             	test   %rax,%rax
  408327:	74 0c                	je     408335 <handle_compress+0x1c5>
  408329:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  408330:	00 00 00 
  408333:	eb 0a                	jmp    40833f <handle_compress+0x1cf>
  408335:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  40833c:	00 00 00 
  40833f:	48 83 c4 20          	add    $0x20,%rsp
  408343:	5b                   	pop    %rbx
  408344:	41 5c                	pop    %r12
  408346:	41 5e                	pop    %r14
  408348:	41 5f                	pop    %r15
  40834a:	5d                   	pop    %rbp
  40834b:	c3                   	retq   
  40834c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000408350 <isempty_RL>:
  408350:	55                   	push   %rbp
  408351:	48 89 e5             	mov    %rsp,%rbp
  408354:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  408358:	8b 47 5c             	mov    0x5c(%rdi),%eax
  40835b:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  408361:	77 12                	ja     408375 <isempty_RL+0x25>
  408363:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  408367:	48 63 40 60          	movslq 0x60(%rax),%rax
  40836b:	48 85 c0             	test   %rax,%rax
  40836e:	7e 05                	jle    408375 <isempty_RL+0x25>
  408370:	48 31 c0             	xor    %rax,%rax
  408373:	eb 07                	jmp    40837c <isempty_RL+0x2c>
  408375:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40837c:	88 45 ff             	mov    %al,-0x1(%rbp)
  40837f:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  408383:	5d                   	pop    %rbp
  408384:	c3                   	retq   
  408385:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40838c:	00 00 00 00 

0000000000408390 <BZ2_bzCompressEnd>:
  408390:	55                   	push   %rbp
  408391:	48 89 e5             	mov    %rsp,%rbp
  408394:	48 83 ec 20          	sub    $0x20,%rsp
  408398:	48 85 ff             	test   %rdi,%rdi
  40839b:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  40839f:	74 21                	je     4083c2 <BZ2_bzCompressEnd+0x32>
  4083a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4083a5:	48 8b 40 30          	mov    0x30(%rax),%rax
  4083a9:	48 85 c0             	test   %rax,%rax
  4083ac:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4083b0:	74 10                	je     4083c2 <BZ2_bzCompressEnd+0x32>
  4083b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4083b6:	48 8b 00             	mov    (%rax),%rax
  4083b9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4083bd:	48 39 c8             	cmp    %rcx,%rax
  4083c0:	74 16                	je     4083d8 <BZ2_bzCompressEnd+0x48>
  4083c2:	48 b8 fe ff ff ff 00 	movabs $0xfffffffe,%rax
  4083c9:	00 00 00 
  4083cc:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4083cf:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4083d2:	48 83 c4 20          	add    $0x20,%rsp
  4083d6:	5d                   	pop    %rbp
  4083d7:	c3                   	retq   
  4083d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4083dc:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
  4083e1:	74 13                	je     4083f6 <BZ2_bzCompressEnd+0x66>
  4083e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4083e7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4083eb:	48 8b 78 48          	mov    0x48(%rax),%rdi
  4083ef:	48 8b 71 18          	mov    0x18(%rcx),%rsi
  4083f3:	ff 50 40             	callq  *0x40(%rax)
  4083f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4083fa:	48 83 78 20 00       	cmpq   $0x0,0x20(%rax)
  4083ff:	74 13                	je     408414 <BZ2_bzCompressEnd+0x84>
  408401:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  408405:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  408409:	48 8b 78 48          	mov    0x48(%rax),%rdi
  40840d:	48 8b 71 20          	mov    0x20(%rcx),%rsi
  408411:	ff 50 40             	callq  *0x40(%rax)
  408414:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408418:	48 83 78 28 00       	cmpq   $0x0,0x28(%rax)
  40841d:	74 13                	je     408432 <BZ2_bzCompressEnd+0xa2>
  40841f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  408423:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  408427:	48 8b 78 48          	mov    0x48(%rax),%rdi
  40842b:	48 8b 71 28          	mov    0x28(%rcx),%rsi
  40842f:	ff 50 40             	callq  *0x40(%rax)
  408432:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  408436:	48 8b 70 30          	mov    0x30(%rax),%rsi
  40843a:	48 8b 78 48          	mov    0x48(%rax),%rdi
  40843e:	ff 50 40             	callq  *0x40(%rax)
  408441:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  408445:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  40844c:	00 
  40844d:	48 31 c0             	xor    %rax,%rax
  408450:	e9 77 ff ff ff       	jmpq   4083cc <BZ2_bzCompressEnd+0x3c>
  408455:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40845c:	00 00 00 00 

0000000000408460 <BZ2_bzDecompressInit>:
  408460:	55                   	push   %rbp
  408461:	48 89 e5             	mov    %rsp,%rbp
  408464:	48 83 ec 20          	sub    $0x20,%rsp
  408468:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  40846c:	89 75 ec             	mov    %esi,-0x14(%rbp)
  40846f:	89 55 e8             	mov    %edx,-0x18(%rbp)
  408472:	e8 b9 f9 ff ff       	callq  407e30 <bz_config_ok>
  408477:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40847e:	00 00 00 
  408481:	48 85 c8             	test   %rcx,%rax
  408484:	74 3a                	je     4084c0 <BZ2_bzDecompressInit+0x60>
  408486:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40848b:	74 24                	je     4084b1 <BZ2_bzDecompressInit+0x51>
  40848d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  408490:	48 85 c0             	test   %rax,%rax
  408493:	74 09                	je     40849e <BZ2_bzDecompressInit+0x3e>
  408495:	8b 45 e8             	mov    -0x18(%rbp),%eax
  408498:	48 83 f8 01          	cmp    $0x1,%rax
  40849c:	75 13                	jne    4084b1 <BZ2_bzDecompressInit+0x51>
  40849e:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  4084a2:	48 85 c0             	test   %rax,%rax
  4084a5:	78 0a                	js     4084b1 <BZ2_bzDecompressInit+0x51>
  4084a7:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  4084ab:	48 83 f8 05          	cmp    $0x5,%rax
  4084af:	7c 25                	jl     4084d6 <BZ2_bzDecompressInit+0x76>
  4084b1:	48 b8 fe ff ff ff 00 	movabs $0xfffffffe,%rax
  4084b8:	00 00 00 
  4084bb:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4084be:	eb 0d                	jmp    4084cd <BZ2_bzDecompressInit+0x6d>
  4084c0:	48 b8 f7 ff ff ff 00 	movabs $0xfffffff7,%rax
  4084c7:	00 00 00 
  4084ca:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4084cd:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4084d0:	48 83 c4 20          	add    $0x20,%rsp
  4084d4:	5d                   	pop    %rbp
  4084d5:	c3                   	retq   
  4084d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4084da:	48 83 78 38 00       	cmpq   $0x0,0x38(%rax)
  4084df:	75 0c                	jne    4084ed <BZ2_bzDecompressInit+0x8d>
  4084e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4084e5:	48 c7 40 38 40 7e 40 	movq   $0x407e40,0x38(%rax)
  4084ec:	00 
  4084ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4084f1:	48 83 78 40 00       	cmpq   $0x0,0x40(%rax)
  4084f6:	75 0c                	jne    408504 <BZ2_bzDecompressInit+0xa4>
  4084f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4084fc:	48 c7 40 40 80 7e 40 	movq   $0x407e80,0x40(%rax)
  408503:	00 
  408504:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  408508:	48 8b 78 48          	mov    0x48(%rax),%rdi
  40850c:	48 c7 c6 90 fa 00 00 	mov    $0xfa90,%rsi
  408513:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  40851a:	ff 50 38             	callq  *0x38(%rax)
  40851d:	48 85 c0             	test   %rax,%rax
  408520:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  408524:	0f 84 ad 00 00 00    	je     4085d7 <BZ2_bzDecompressInit+0x177>
  40852a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40852e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  408532:	48 89 01             	mov    %rax,(%rcx)
  408535:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  408539:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40853d:	48 89 41 30          	mov    %rax,0x30(%rcx)
  408541:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  408545:	48 c7 c1 0a 00 00 00 	mov    $0xa,%rcx
  40854c:	89 48 08             	mov    %ecx,0x8(%rax)
  40854f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  408553:	48 31 c9             	xor    %rcx,%rcx
  408556:	89 48 24             	mov    %ecx,0x24(%rax)
  408559:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40855d:	89 48 20             	mov    %ecx,0x20(%rax)
  408560:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  408564:	89 88 74 0c 00 00    	mov    %ecx,0xc74(%rax)
  40856a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40856e:	89 48 0c             	mov    %ecx,0xc(%rax)
  408571:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  408575:	89 48 10             	mov    %ecx,0x10(%rax)
  408578:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40857c:	89 48 24             	mov    %ecx,0x24(%rax)
  40857f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  408583:	89 48 28             	mov    %ecx,0x28(%rax)
  408586:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax
  40858a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40858e:	88 42 2c             	mov    %al,0x2c(%rdx)
  408591:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  408595:	48 c7 80 60 0c 00 00 	movq   $0x0,0xc60(%rax)
  40859c:	00 00 00 00 
  4085a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4085a4:	48 c7 80 58 0c 00 00 	movq   $0x0,0xc58(%rax)
  4085ab:	00 00 00 00 
  4085af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4085b3:	48 c7 80 50 0c 00 00 	movq   $0x0,0xc50(%rax)
  4085ba:	00 00 00 00 
  4085be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4085c2:	89 48 30             	mov    %ecx,0x30(%rax)
  4085c5:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4085c8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4085cc:	89 42 34             	mov    %eax,0x34(%rdx)
  4085cf:	89 4d fc             	mov    %ecx,-0x4(%rbp)
  4085d2:	e9 f6 fe ff ff       	jmpq   4084cd <BZ2_bzDecompressInit+0x6d>
  4085d7:	48 b8 fd ff ff ff 00 	movabs $0xfffffffd,%rax
  4085de:	00 00 00 
  4085e1:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4085e4:	e9 e4 fe ff ff       	jmpq   4084cd <BZ2_bzDecompressInit+0x6d>
  4085e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004085f0 <BZ2_indexIntoF>:
  4085f0:	55                   	push   %rbp
  4085f1:	48 89 e5             	mov    %rsp,%rbp
  4085f4:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4085f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4085fb:	48 31 c0             	xor    %rax,%rax
  4085fe:	89 45 ec             	mov    %eax,-0x14(%rbp)
  408601:	48 c7 c0 00 01 00 00 	mov    $0x100,%rax
  408608:	89 45 e8             	mov    %eax,-0x18(%rbp)
  40860b:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  408612:	00 00 00 
  408615:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40861c:	00 00 00 00 
  408620:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  408623:	8b 55 e8             	mov    -0x18(%rbp),%edx
  408626:	48 01 ca             	add    %rcx,%rdx
  408629:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  408630:	48 d3 e2             	shl    %cl,%rdx
  408633:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40863a:	48 d3 fa             	sar    %cl,%rdx
  40863d:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  408644:	48 d3 ea             	shr    %cl,%rdx
  408647:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  40864a:	48 63 4d e4          	movslq -0x1c(%rbp),%rcx
  40864e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  408652:	48 63 75 fc          	movslq -0x4(%rbp),%rsi
  408656:	48 63 0c 8a          	movslq (%rdx,%rcx,4),%rcx
  40865a:	48 39 ce             	cmp    %rcx,%rsi
  40865d:	7c 11                	jl     408670 <BZ2_indexIntoF+0x80>
  40865f:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  408662:	89 4d ec             	mov    %ecx,-0x14(%rbp)
  408665:	eb 0f                	jmp    408676 <BZ2_indexIntoF+0x86>
  408667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40866e:	00 00 
  408670:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  408673:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  408676:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  408679:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40867c:	48 29 d1             	sub    %rdx,%rcx
  40867f:	48 21 c1             	and    %rax,%rcx
  408682:	48 83 f9 01          	cmp    $0x1,%rcx
  408686:	75 98                	jne    408620 <BZ2_indexIntoF+0x30>
  408688:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40868b:	5d                   	pop    %rbp
  40868c:	c3                   	retq   
  40868d:	0f 1f 00             	nopl   (%rax)

0000000000408690 <BZ2_bzDecompress>:
  408690:	55                   	push   %rbp
  408691:	48 89 e5             	mov    %rsp,%rbp
  408694:	41 57                	push   %r15
  408696:	41 56                	push   %r14
  408698:	41 54                	push   %r12
  40869a:	53                   	push   %rbx
  40869b:	48 83 ec 30          	sub    $0x30,%rsp
  40869f:	48 85 ff             	test   %rdi,%rdi
  4086a2:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  4086a6:	74 21                	je     4086c9 <BZ2_bzDecompress+0x39>
  4086a8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4086ac:	48 8b 40 30          	mov    0x30(%rax),%rax
  4086b0:	48 85 c0             	test   %rax,%rax
  4086b3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  4086b7:	74 10                	je     4086c9 <BZ2_bzDecompress+0x39>
  4086b9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4086bd:	48 8b 00             	mov    (%rax),%rax
  4086c0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4086c4:	48 39 c8             	cmp    %rcx,%rax
  4086c7:	74 1d                	je     4086e6 <BZ2_bzDecompress+0x56>
  4086c9:	48 b8 fe ff ff ff 00 	movabs $0xfffffffe,%rax
  4086d0:	00 00 00 
  4086d3:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4086d6:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4086d9:	48 83 c4 30          	add    $0x30,%rsp
  4086dd:	5b                   	pop    %rbx
  4086de:	41 5c                	pop    %r12
  4086e0:	41 5e                	pop    %r14
  4086e2:	41 5f                	pop    %r15
  4086e4:	5d                   	pop    %rbp
  4086e5:	c3                   	retq   
  4086e6:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  4086ed:	00 00 00 
  4086f0:	49 be 74 7c 42 00 00 	movabs $0x427c74,%r14
  4086f7:	00 00 00 
  4086fa:	49 bf 86 7c 42 00 00 	movabs $0x427c86,%r15
  408701:	00 00 00 
  408704:	49 c7 c4 0e 00 00 00 	mov    $0xe,%r12
  40870b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  408710:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  408714:	8b 40 08             	mov    0x8(%rax),%eax
  408717:	48 83 f8 01          	cmp    $0x1,%rax
  40871b:	0f 84 75 01 00 00    	je     408896 <BZ2_bzDecompress+0x206>
  408721:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  408725:	8b 40 08             	mov    0x8(%rax),%eax
  408728:	48 83 f8 02          	cmp    $0x2,%rax
  40872c:	0f 85 27 01 00 00    	jne    408859 <BZ2_bzDecompress+0x1c9>
  408732:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  408736:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
  40873a:	48 85 c0             	test   %rax,%rax
  40873d:	74 11                	je     408750 <BZ2_bzDecompress+0xc0>
  40873f:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  408743:	e8 c8 01 00 00       	callq  408910 <unRLE_obuf_to_output_SMALL>
  408748:	eb 0f                	jmp    408759 <BZ2_bzDecompress+0xc9>
  40874a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  408750:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  408754:	e8 47 0d 00 00       	callq  4094a0 <unRLE_obuf_to_output_FAST>
  408759:	88 45 cf             	mov    %al,-0x31(%rbp)
  40875c:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
  408760:	48 85 c0             	test   %rax,%rax
  408763:	0f 85 89 01 00 00    	jne    4088f2 <BZ2_bzDecompress+0x262>
  408769:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40876d:	8b 88 50 fa 00 00    	mov    0xfa50(%rax),%ecx
  408773:	8b 80 44 04 00 00    	mov    0x444(%rax),%eax
  408779:	48 ff c1             	inc    %rcx
  40877c:	48 21 d9             	and    %rbx,%rcx
  40877f:	48 39 c8             	cmp    %rcx,%rax
  408782:	0f 85 16 01 00 00    	jne    40889e <BZ2_bzDecompress+0x20e>
  408788:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40878c:	8b 40 10             	mov    0x10(%rax),%eax
  40878f:	48 85 c0             	test   %rax,%rax
  408792:	0f 85 06 01 00 00    	jne    40889e <BZ2_bzDecompress+0x20e>
  408798:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40879c:	8b 88 70 0c 00 00    	mov    0xc70(%rax),%ecx
  4087a2:	48 f7 d1             	not    %rcx
  4087a5:	89 88 70 0c 00 00    	mov    %ecx,0xc70(%rax)
  4087ab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4087af:	48 63 40 34          	movslq 0x34(%rax),%rax
  4087b3:	48 83 f8 03          	cmp    $0x3,%rax
  4087b7:	7c 22                	jl     4087db <BZ2_bzDecompress+0x14b>
  4087b9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4087bd:	48 8b 3d 0c 02 02 00 	mov    0x2020c(%rip),%rdi        # 4289d0 <stderr>
  4087c4:	8b 88 70 0c 00 00    	mov    0xc70(%rax),%ecx
  4087ca:	8b 90 68 0c 00 00    	mov    0xc68(%rax),%edx
  4087d0:	48 31 c0             	xor    %rax,%rax
  4087d3:	4c 89 f6             	mov    %r14,%rsi
  4087d6:	e8 1d 15 01 00       	callq  419cf8 <fprintf>
  4087db:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4087df:	48 63 40 34          	movslq 0x34(%rax),%rax
  4087e3:	48 83 f8 02          	cmp    $0x2,%rax
  4087e7:	7c 12                	jl     4087fb <BZ2_bzDecompress+0x16b>
  4087e9:	48 8b 3d e0 01 02 00 	mov    0x201e0(%rip),%rdi        # 4289d0 <stderr>
  4087f0:	48 31 c0             	xor    %rax,%rax
  4087f3:	4c 89 fe             	mov    %r15,%rsi
  4087f6:	e8 fd 14 01 00       	callq  419cf8 <fprintf>
  4087fb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4087ff:	8b 88 70 0c 00 00    	mov    0xc70(%rax),%ecx
  408805:	8b 80 68 0c 00 00    	mov    0xc68(%rax),%eax
  40880b:	48 39 c1             	cmp    %rax,%rcx
  40880e:	0f 85 de 00 00 00    	jne    4088f2 <BZ2_bzDecompress+0x262>
  408814:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  408818:	8b 90 74 0c 00 00    	mov    0xc74(%rax),%edx
  40881e:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  408825:	48 89 d6             	mov    %rdx,%rsi
  408828:	48 d3 ee             	shr    %cl,%rsi
  40882b:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
  40882f:	48 09 f1             	or     %rsi,%rcx
  408832:	89 88 74 0c 00 00    	mov    %ecx,0xc74(%rax)
  408838:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40883c:	8b 88 70 0c 00 00    	mov    0xc70(%rax),%ecx
  408842:	8b 90 74 0c 00 00    	mov    0xc74(%rax),%edx
  408848:	48 31 ca             	xor    %rcx,%rdx
  40884b:	89 90 74 0c 00 00    	mov    %edx,0xc74(%rax)
  408851:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  408855:	44 89 60 08          	mov    %r12d,0x8(%rax)
  408859:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40885d:	48 63 40 08          	movslq 0x8(%rax),%rax
  408861:	48 83 f8 0a          	cmp    $0xa,%rax
  408865:	0f 8c a5 fe ff ff    	jl     408710 <BZ2_bzDecompress+0x80>
  40886b:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  40886f:	e8 9c 94 00 00       	callq  411d10 <BZ2_decompress>
  408874:	48 89 c1             	mov    %rax,%rcx
  408877:	48 21 d9             	and    %rbx,%rcx
  40887a:	48 83 f9 04          	cmp    $0x4,%rcx
  40887e:	89 45 bc             	mov    %eax,-0x44(%rbp)
  408881:	74 23                	je     4088a6 <BZ2_bzDecompress+0x216>
  408883:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  408887:	8b 40 08             	mov    0x8(%rax),%eax
  40888a:	48 83 f8 02          	cmp    $0x2,%rax
  40888e:	0f 84 7c fe ff ff    	je     408710 <BZ2_bzDecompress+0x80>
  408894:	eb 6b                	jmp    408901 <BZ2_bzDecompress+0x271>
  408896:	89 5d dc             	mov    %ebx,-0x24(%rbp)
  408899:	e9 38 fe ff ff       	jmpq   4086d6 <BZ2_bzDecompress+0x46>
  40889e:	48 31 c0             	xor    %rax,%rax
  4088a1:	e9 2d fe ff ff       	jmpq   4086d3 <BZ2_bzDecompress+0x43>
  4088a6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4088aa:	48 63 40 34          	movslq 0x34(%rax),%rax
  4088ae:	48 83 f8 03          	cmp    $0x3,%rax
  4088b2:	7c 29                	jl     4088dd <BZ2_bzDecompress+0x24d>
  4088b4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4088b8:	48 8b 3d 11 01 02 00 	mov    0x20111(%rip),%rdi        # 4289d0 <stderr>
  4088bf:	8b 88 74 0c 00 00    	mov    0xc74(%rax),%ecx
  4088c5:	8b 90 6c 0c 00 00    	mov    0xc6c(%rax),%edx
  4088cb:	48 be 88 7c 42 00 00 	movabs $0x427c88,%rsi
  4088d2:	00 00 00 
  4088d5:	48 31 c0             	xor    %rax,%rax
  4088d8:	e8 1b 14 01 00       	callq  419cf8 <fprintf>
  4088dd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4088e1:	8b 88 74 0c 00 00    	mov    0xc74(%rax),%ecx
  4088e7:	8b 80 6c 0c 00 00    	mov    0xc6c(%rax),%eax
  4088ed:	48 39 c1             	cmp    %rax,%rcx
  4088f0:	74 0f                	je     408901 <BZ2_bzDecompress+0x271>
  4088f2:	48 b8 fc ff ff ff 00 	movabs $0xfffffffc,%rax
  4088f9:	00 00 00 
  4088fc:	e9 d2 fd ff ff       	jmpq   4086d3 <BZ2_bzDecompress+0x43>
  408901:	8b 45 bc             	mov    -0x44(%rbp),%eax
  408904:	e9 ca fd ff ff       	jmpq   4086d3 <BZ2_bzDecompress+0x43>
  408909:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000408910 <unRLE_obuf_to_output_SMALL>:
  408910:	55                   	push   %rbp
  408911:	48 89 e5             	mov    %rsp,%rbp
  408914:	41 57                	push   %r15
  408916:	41 56                	push   %r14
  408918:	41 55                	push   %r13
  40891a:	41 54                	push   %r12
  40891c:	53                   	push   %rbx
  40891d:	48 83 ec 18          	sub    $0x18,%rsp
  408921:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  408925:	0f b6 47 14          	movzbl 0x14(%rdi),%eax
  408929:	49 bd ff ff ff ff 00 	movabs $0xffffffff,%r13
  408930:	00 00 00 
  408933:	49 c7 c6 01 00 00 00 	mov    $0x1,%r14
  40893a:	49 c7 c7 02 00 00 00 	mov    $0x2,%r15
  408941:	48 85 c0             	test   %rax,%rax
  408944:	0f 84 b0 06 00 00    	je     408ffa <unRLE_obuf_to_output_SMALL+0x6ea>
  40894a:	4d 31 e4             	xor    %r12,%r12
  40894d:	eb 11                	jmp    408960 <unRLE_obuf_to_output_SMALL+0x50>
  40894f:	90                   	nop
  408950:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408954:	48 8b 00             	mov    (%rax),%rax
  408957:	8b 48 28             	mov    0x28(%rax),%ecx
  40895a:	48 ff c1             	inc    %rcx
  40895d:	89 48 28             	mov    %ecx,0x28(%rax)
  408960:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408964:	48 8b 00             	mov    (%rax),%rax
  408967:	8b 40 20             	mov    0x20(%rax),%eax
  40896a:	48 85 c0             	test   %rax,%rax
  40896d:	0f 84 04 0b 00 00    	je     409477 <unRLE_obuf_to_output_SMALL+0xb67>
  408973:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408977:	8b 40 10             	mov    0x10(%rax),%eax
  40897a:	48 85 c0             	test   %rax,%rax
  40897d:	0f 85 ed 03 00 00    	jne    408d70 <unRLE_obuf_to_output_SMALL+0x460>
  408983:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408987:	8b 88 50 fa 00 00    	mov    0xfa50(%rax),%ecx
  40898d:	8b 80 44 04 00 00    	mov    0x444(%rax),%eax
  408993:	48 ff c1             	inc    %rcx
  408996:	4c 21 e9             	and    %r13,%rcx
  408999:	48 39 c8             	cmp    %rcx,%rax
  40899c:	0f 84 d5 0a 00 00    	je     409477 <unRLE_obuf_to_output_SMALL+0xb67>
  4089a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4089a6:	8b 90 50 fa 00 00    	mov    0xfa50(%rax),%edx
  4089ac:	48 63 80 44 04 00 00 	movslq 0x444(%rax),%rax
  4089b3:	48 ff c2             	inc    %rdx
  4089b6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4089bd:	48 d3 e2             	shl    %cl,%rdx
  4089c0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4089c7:	48 d3 fa             	sar    %cl,%rdx
  4089ca:	48 39 d0             	cmp    %rdx,%rax
  4089cd:	0f 8f a9 0a 00 00    	jg     40947c <unRLE_obuf_to_output_SMALL+0xb6c>
  4089d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4089d7:	44 89 70 10          	mov    %r14d,0x10(%rax)
  4089db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4089df:	0f b6 48 40          	movzbl 0x40(%rax),%ecx
  4089e3:	88 48 0c             	mov    %cl,0xc(%rax)
  4089e6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  4089ea:	8b 7e 3c             	mov    0x3c(%rsi),%edi
  4089ed:	48 81 c6 48 04 00 00 	add    $0x448,%rsi
  4089f4:	e8 f7 fb ff ff       	callq  4085f0 <BZ2_indexIntoF>
  4089f9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4089fd:	88 45 c7             	mov    %al,-0x39(%rbp)
  408a00:	8b 5a 3c             	mov    0x3c(%rdx),%ebx
  408a03:	48 8b 8a 58 0c 00 00 	mov    0xc58(%rdx),%rcx
  408a0a:	48 8b b2 60 0c 00 00 	mov    0xc60(%rdx),%rsi
  408a11:	0f b6 3c 59          	movzbl (%rcx,%rbx,2),%edi
  408a15:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  408a1c:	48 89 d8             	mov    %rbx,%rax
  408a1f:	48 d3 e8             	shr    %cl,%rax
  408a22:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
  408a26:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  408a2d:	48 d3 e3             	shl    %cl,%rbx
  408a30:	48 83 e3 04          	and    $0x4,%rbx
  408a34:	48 89 d9             	mov    %rbx,%rcx
  408a37:	48 d3 e8             	shr    %cl,%rax
  408a3a:	48 83 e0 0f          	and    $0xf,%rax
  408a3e:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  408a45:	48 d3 e0             	shl    %cl,%rax
  408a48:	48 09 f8             	or     %rdi,%rax
  408a4b:	89 42 3c             	mov    %eax,0x3c(%rdx)
  408a4e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408a52:	8b 40 18             	mov    0x18(%rax),%eax
  408a55:	48 85 c0             	test   %rax,%rax
  408a58:	75 36                	jne    408a90 <unRLE_obuf_to_output_SMALL+0x180>
  408a5a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408a5e:	48 63 48 1c          	movslq 0x1c(%rax),%rcx
  408a62:	8b 0c 8d d0 ac 62 00 	mov    0x62acd0(,%rcx,4),%ecx
  408a69:	89 48 18             	mov    %ecx,0x18(%rax)
  408a6c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408a70:	8b 48 1c             	mov    0x1c(%rax),%ecx
  408a73:	48 ff c1             	inc    %rcx
  408a76:	89 48 1c             	mov    %ecx,0x1c(%rax)
  408a79:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408a7d:	8b 40 1c             	mov    0x1c(%rax),%eax
  408a80:	48 3d 00 02 00 00    	cmp    $0x200,%rax
  408a86:	75 08                	jne    408a90 <unRLE_obuf_to_output_SMALL+0x180>
  408a88:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408a8c:	44 89 60 1c          	mov    %r12d,0x1c(%rax)
  408a90:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408a94:	8b 48 18             	mov    0x18(%rax),%ecx
  408a97:	48 ff c9             	dec    %rcx
  408a9a:	89 48 18             	mov    %ecx,0x18(%rax)
  408a9d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408aa1:	8b 40 18             	mov    0x18(%rax),%eax
  408aa4:	48 83 f8 01          	cmp    $0x1,%rax
  408aa8:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  408aaf:	74 03                	je     408ab4 <unRLE_obuf_to_output_SMALL+0x1a4>
  408ab1:	48 31 c0             	xor    %rax,%rax
  408ab4:	0f b6 4d c7          	movzbl -0x39(%rbp),%ecx
  408ab8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  408abc:	48 31 c1             	xor    %rax,%rcx
  408abf:	88 4d c7             	mov    %cl,-0x39(%rbp)
  408ac2:	8b 82 44 04 00 00    	mov    0x444(%rdx),%eax
  408ac8:	48 ff c0             	inc    %rax
  408acb:	89 82 44 04 00 00    	mov    %eax,0x444(%rdx)
  408ad1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408ad5:	8b 88 50 fa 00 00    	mov    0xfa50(%rax),%ecx
  408adb:	8b 80 44 04 00 00    	mov    0x444(%rax),%eax
  408ae1:	48 ff c1             	inc    %rcx
  408ae4:	4c 21 e9             	and    %r13,%rcx
  408ae7:	48 39 c8             	cmp    %rcx,%rax
  408aea:	0f 84 70 fe ff ff    	je     408960 <unRLE_obuf_to_output_SMALL+0x50>
  408af0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408af4:	0f b6 4d c7          	movzbl -0x39(%rbp),%ecx
  408af8:	8b 40 40             	mov    0x40(%rax),%eax
  408afb:	48 39 c1             	cmp    %rax,%rcx
  408afe:	0f 85 52 02 00 00    	jne    408d56 <unRLE_obuf_to_output_SMALL+0x446>
  408b04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408b08:	44 89 78 10          	mov    %r15d,0x10(%rax)
  408b0c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  408b10:	8b 7e 3c             	mov    0x3c(%rsi),%edi
  408b13:	48 81 c6 48 04 00 00 	add    $0x448,%rsi
  408b1a:	e8 d1 fa ff ff       	callq  4085f0 <BZ2_indexIntoF>
  408b1f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  408b23:	88 45 c7             	mov    %al,-0x39(%rbp)
  408b26:	8b 5a 3c             	mov    0x3c(%rdx),%ebx
  408b29:	48 8b 8a 58 0c 00 00 	mov    0xc58(%rdx),%rcx
  408b30:	48 8b b2 60 0c 00 00 	mov    0xc60(%rdx),%rsi
  408b37:	0f b6 3c 59          	movzbl (%rcx,%rbx,2),%edi
  408b3b:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  408b42:	48 89 d8             	mov    %rbx,%rax
  408b45:	48 d3 e8             	shr    %cl,%rax
  408b48:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
  408b4c:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  408b53:	48 d3 e3             	shl    %cl,%rbx
  408b56:	48 83 e3 04          	and    $0x4,%rbx
  408b5a:	48 89 d9             	mov    %rbx,%rcx
  408b5d:	48 d3 e8             	shr    %cl,%rax
  408b60:	48 83 e0 0f          	and    $0xf,%rax
  408b64:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  408b6b:	48 d3 e0             	shl    %cl,%rax
  408b6e:	48 09 f8             	or     %rdi,%rax
  408b71:	89 42 3c             	mov    %eax,0x3c(%rdx)
  408b74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408b78:	8b 40 18             	mov    0x18(%rax),%eax
  408b7b:	48 85 c0             	test   %rax,%rax
  408b7e:	75 36                	jne    408bb6 <unRLE_obuf_to_output_SMALL+0x2a6>
  408b80:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408b84:	48 63 48 1c          	movslq 0x1c(%rax),%rcx
  408b88:	8b 0c 8d d0 ac 62 00 	mov    0x62acd0(,%rcx,4),%ecx
  408b8f:	89 48 18             	mov    %ecx,0x18(%rax)
  408b92:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408b96:	8b 48 1c             	mov    0x1c(%rax),%ecx
  408b99:	48 ff c1             	inc    %rcx
  408b9c:	89 48 1c             	mov    %ecx,0x1c(%rax)
  408b9f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408ba3:	8b 40 1c             	mov    0x1c(%rax),%eax
  408ba6:	48 3d 00 02 00 00    	cmp    $0x200,%rax
  408bac:	75 08                	jne    408bb6 <unRLE_obuf_to_output_SMALL+0x2a6>
  408bae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408bb2:	44 89 60 1c          	mov    %r12d,0x1c(%rax)
  408bb6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408bba:	8b 48 18             	mov    0x18(%rax),%ecx
  408bbd:	48 ff c9             	dec    %rcx
  408bc0:	89 48 18             	mov    %ecx,0x18(%rax)
  408bc3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408bc7:	8b 40 18             	mov    0x18(%rax),%eax
  408bca:	48 83 f8 01          	cmp    $0x1,%rax
  408bce:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  408bd5:	74 03                	je     408bda <unRLE_obuf_to_output_SMALL+0x2ca>
  408bd7:	48 31 c0             	xor    %rax,%rax
  408bda:	0f b6 4d c7          	movzbl -0x39(%rbp),%ecx
  408bde:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  408be2:	48 31 c1             	xor    %rax,%rcx
  408be5:	88 4d c7             	mov    %cl,-0x39(%rbp)
  408be8:	8b 82 44 04 00 00    	mov    0x444(%rdx),%eax
  408bee:	48 ff c0             	inc    %rax
  408bf1:	89 82 44 04 00 00    	mov    %eax,0x444(%rdx)
  408bf7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408bfb:	8b 88 50 fa 00 00    	mov    0xfa50(%rax),%ecx
  408c01:	8b 80 44 04 00 00    	mov    0x444(%rax),%eax
  408c07:	48 ff c1             	inc    %rcx
  408c0a:	4c 21 e9             	and    %r13,%rcx
  408c0d:	48 39 c8             	cmp    %rcx,%rax
  408c10:	0f 84 4a fd ff ff    	je     408960 <unRLE_obuf_to_output_SMALL+0x50>
  408c16:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408c1a:	0f b6 4d c7          	movzbl -0x39(%rbp),%ecx
  408c1e:	8b 40 40             	mov    0x40(%rax),%eax
  408c21:	48 39 c1             	cmp    %rax,%rcx
  408c24:	0f 85 2c 01 00 00    	jne    408d56 <unRLE_obuf_to_output_SMALL+0x446>
  408c2a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408c2e:	48 c7 c1 03 00 00 00 	mov    $0x3,%rcx
  408c35:	89 48 10             	mov    %ecx,0x10(%rax)
  408c38:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  408c3c:	8b 7e 3c             	mov    0x3c(%rsi),%edi
  408c3f:	48 81 c6 48 04 00 00 	add    $0x448,%rsi
  408c46:	e8 a5 f9 ff ff       	callq  4085f0 <BZ2_indexIntoF>
  408c4b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  408c4f:	88 45 c7             	mov    %al,-0x39(%rbp)
  408c52:	8b 5a 3c             	mov    0x3c(%rdx),%ebx
  408c55:	48 8b 8a 58 0c 00 00 	mov    0xc58(%rdx),%rcx
  408c5c:	48 8b b2 60 0c 00 00 	mov    0xc60(%rdx),%rsi
  408c63:	0f b6 3c 59          	movzbl (%rcx,%rbx,2),%edi
  408c67:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  408c6e:	48 89 d8             	mov    %rbx,%rax
  408c71:	48 d3 e8             	shr    %cl,%rax
  408c74:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
  408c78:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  408c7f:	48 d3 e3             	shl    %cl,%rbx
  408c82:	48 83 e3 04          	and    $0x4,%rbx
  408c86:	48 89 d9             	mov    %rbx,%rcx
  408c89:	48 d3 e8             	shr    %cl,%rax
  408c8c:	48 83 e0 0f          	and    $0xf,%rax
  408c90:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  408c97:	48 d3 e0             	shl    %cl,%rax
  408c9a:	48 09 f8             	or     %rdi,%rax
  408c9d:	89 42 3c             	mov    %eax,0x3c(%rdx)
  408ca0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408ca4:	8b 40 18             	mov    0x18(%rax),%eax
  408ca7:	48 85 c0             	test   %rax,%rax
  408caa:	75 36                	jne    408ce2 <unRLE_obuf_to_output_SMALL+0x3d2>
  408cac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408cb0:	48 63 48 1c          	movslq 0x1c(%rax),%rcx
  408cb4:	8b 0c 8d d0 ac 62 00 	mov    0x62acd0(,%rcx,4),%ecx
  408cbb:	89 48 18             	mov    %ecx,0x18(%rax)
  408cbe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408cc2:	8b 48 1c             	mov    0x1c(%rax),%ecx
  408cc5:	48 ff c1             	inc    %rcx
  408cc8:	89 48 1c             	mov    %ecx,0x1c(%rax)
  408ccb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408ccf:	8b 40 1c             	mov    0x1c(%rax),%eax
  408cd2:	48 3d 00 02 00 00    	cmp    $0x200,%rax
  408cd8:	75 08                	jne    408ce2 <unRLE_obuf_to_output_SMALL+0x3d2>
  408cda:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408cde:	44 89 60 1c          	mov    %r12d,0x1c(%rax)
  408ce2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408ce6:	8b 48 18             	mov    0x18(%rax),%ecx
  408ce9:	48 ff c9             	dec    %rcx
  408cec:	89 48 18             	mov    %ecx,0x18(%rax)
  408cef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408cf3:	8b 40 18             	mov    0x18(%rax),%eax
  408cf6:	48 83 f8 01          	cmp    $0x1,%rax
  408cfa:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  408d01:	74 03                	je     408d06 <unRLE_obuf_to_output_SMALL+0x3f6>
  408d03:	48 31 c0             	xor    %rax,%rax
  408d06:	0f b6 4d c7          	movzbl -0x39(%rbp),%ecx
  408d0a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  408d0e:	48 31 c1             	xor    %rax,%rcx
  408d11:	88 4d c7             	mov    %cl,-0x39(%rbp)
  408d14:	8b 82 44 04 00 00    	mov    0x444(%rdx),%eax
  408d1a:	48 ff c0             	inc    %rax
  408d1d:	89 82 44 04 00 00    	mov    %eax,0x444(%rdx)
  408d23:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408d27:	8b 88 50 fa 00 00    	mov    0xfa50(%rax),%ecx
  408d2d:	8b 80 44 04 00 00    	mov    0x444(%rax),%eax
  408d33:	48 ff c1             	inc    %rcx
  408d36:	4c 21 e9             	and    %r13,%rcx
  408d39:	48 39 c8             	cmp    %rcx,%rax
  408d3c:	0f 84 1e fc ff ff    	je     408960 <unRLE_obuf_to_output_SMALL+0x50>
  408d42:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408d46:	0f b6 4d c7          	movzbl -0x39(%rbp),%ecx
  408d4a:	8b 40 40             	mov    0x40(%rax),%eax
  408d4d:	48 39 c1             	cmp    %rax,%rcx
  408d50:	0f 84 b3 00 00 00    	je     408e09 <unRLE_obuf_to_output_SMALL+0x4f9>
  408d56:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
  408d5a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  408d5e:	89 41 40             	mov    %eax,0x40(%rcx)
  408d61:	e9 fa fb ff ff       	jmpq   408960 <unRLE_obuf_to_output_SMALL+0x50>
  408d66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  408d6d:	00 00 00 
  408d70:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408d74:	48 8b 08             	mov    (%rax),%rcx
  408d77:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  408d7b:	48 8b 49 18          	mov    0x18(%rcx),%rcx
  408d7f:	88 01                	mov    %al,(%rcx)
  408d81:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408d85:	8b 90 70 0c 00 00    	mov    0xc70(%rax),%edx
  408d8b:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  408d92:	48 89 d6             	mov    %rdx,%rsi
  408d95:	0f b6 78 0c          	movzbl 0xc(%rax),%edi
  408d99:	48 d3 e6             	shl    %cl,%rsi
  408d9c:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  408da3:	48 d3 ea             	shr    %cl,%rdx
  408da6:	48 31 d7             	xor    %rdx,%rdi
  408da9:	8b 0c bd d0 a8 62 00 	mov    0x62a8d0(,%rdi,4),%ecx
  408db0:	48 31 f1             	xor    %rsi,%rcx
  408db3:	89 88 70 0c 00 00    	mov    %ecx,0xc70(%rax)
  408db9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408dbd:	8b 48 10             	mov    0x10(%rax),%ecx
  408dc0:	48 ff c9             	dec    %rcx
  408dc3:	89 48 10             	mov    %ecx,0x10(%rax)
  408dc6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408dca:	48 8b 00             	mov    (%rax),%rax
  408dcd:	48 ff 40 18          	incq   0x18(%rax)
  408dd1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408dd5:	48 8b 00             	mov    (%rax),%rax
  408dd8:	8b 48 20             	mov    0x20(%rax),%ecx
  408ddb:	48 ff c9             	dec    %rcx
  408dde:	89 48 20             	mov    %ecx,0x20(%rax)
  408de1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408de5:	48 8b 00             	mov    (%rax),%rax
  408de8:	8b 48 24             	mov    0x24(%rax),%ecx
  408deb:	48 ff c1             	inc    %rcx
  408dee:	89 48 24             	mov    %ecx,0x24(%rax)
  408df1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408df5:	48 8b 00             	mov    (%rax),%rax
  408df8:	8b 40 24             	mov    0x24(%rax),%eax
  408dfb:	48 85 c0             	test   %rax,%rax
  408dfe:	0f 85 5c fb ff ff    	jne    408960 <unRLE_obuf_to_output_SMALL+0x50>
  408e04:	e9 47 fb ff ff       	jmpq   408950 <unRLE_obuf_to_output_SMALL+0x40>
  408e09:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  408e0d:	8b 7e 3c             	mov    0x3c(%rsi),%edi
  408e10:	48 81 c6 48 04 00 00 	add    $0x448,%rsi
  408e17:	e8 d4 f7 ff ff       	callq  4085f0 <BZ2_indexIntoF>
  408e1c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  408e20:	88 45 c7             	mov    %al,-0x39(%rbp)
  408e23:	8b 5a 3c             	mov    0x3c(%rdx),%ebx
  408e26:	48 8b 8a 58 0c 00 00 	mov    0xc58(%rdx),%rcx
  408e2d:	48 8b b2 60 0c 00 00 	mov    0xc60(%rdx),%rsi
  408e34:	0f b6 3c 59          	movzbl (%rcx,%rbx,2),%edi
  408e38:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  408e3f:	48 89 d8             	mov    %rbx,%rax
  408e42:	48 d3 e8             	shr    %cl,%rax
  408e45:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
  408e49:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  408e50:	48 d3 e3             	shl    %cl,%rbx
  408e53:	48 83 e3 04          	and    $0x4,%rbx
  408e57:	48 89 d9             	mov    %rbx,%rcx
  408e5a:	48 d3 e8             	shr    %cl,%rax
  408e5d:	48 83 e0 0f          	and    $0xf,%rax
  408e61:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  408e68:	48 d3 e0             	shl    %cl,%rax
  408e6b:	48 09 f8             	or     %rdi,%rax
  408e6e:	89 42 3c             	mov    %eax,0x3c(%rdx)
  408e71:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408e75:	8b 40 18             	mov    0x18(%rax),%eax
  408e78:	48 85 c0             	test   %rax,%rax
  408e7b:	75 36                	jne    408eb3 <unRLE_obuf_to_output_SMALL+0x5a3>
  408e7d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408e81:	48 63 48 1c          	movslq 0x1c(%rax),%rcx
  408e85:	8b 0c 8d d0 ac 62 00 	mov    0x62acd0(,%rcx,4),%ecx
  408e8c:	89 48 18             	mov    %ecx,0x18(%rax)
  408e8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408e93:	8b 48 1c             	mov    0x1c(%rax),%ecx
  408e96:	48 ff c1             	inc    %rcx
  408e99:	89 48 1c             	mov    %ecx,0x1c(%rax)
  408e9c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408ea0:	8b 40 1c             	mov    0x1c(%rax),%eax
  408ea3:	48 3d 00 02 00 00    	cmp    $0x200,%rax
  408ea9:	75 08                	jne    408eb3 <unRLE_obuf_to_output_SMALL+0x5a3>
  408eab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408eaf:	44 89 60 1c          	mov    %r12d,0x1c(%rax)
  408eb3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408eb7:	8b 48 18             	mov    0x18(%rax),%ecx
  408eba:	48 ff c9             	dec    %rcx
  408ebd:	89 48 18             	mov    %ecx,0x18(%rax)
  408ec0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408ec4:	8b 40 18             	mov    0x18(%rax),%eax
  408ec7:	48 83 f8 01          	cmp    $0x1,%rax
  408ecb:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  408ed2:	74 03                	je     408ed7 <unRLE_obuf_to_output_SMALL+0x5c7>
  408ed4:	48 31 c0             	xor    %rax,%rax
  408ed7:	0f b6 4d c7          	movzbl -0x39(%rbp),%ecx
  408edb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  408edf:	48 31 c1             	xor    %rax,%rcx
  408ee2:	88 4d c7             	mov    %cl,-0x39(%rbp)
  408ee5:	8b 82 44 04 00 00    	mov    0x444(%rdx),%eax
  408eeb:	48 ff c0             	inc    %rax
  408eee:	89 82 44 04 00 00    	mov    %eax,0x444(%rdx)
  408ef4:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
  408ef8:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  408efc:	48 83 c0 04          	add    $0x4,%rax
  408f00:	89 41 10             	mov    %eax,0x10(%rcx)
  408f03:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  408f07:	8b 7e 3c             	mov    0x3c(%rsi),%edi
  408f0a:	48 81 c6 48 04 00 00 	add    $0x448,%rsi
  408f11:	e8 da f6 ff ff       	callq  4085f0 <BZ2_indexIntoF>
  408f16:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  408f1a:	89 41 40             	mov    %eax,0x40(%rcx)
  408f1d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  408f21:	8b 5a 3c             	mov    0x3c(%rdx),%ebx
  408f24:	48 8b 8a 58 0c 00 00 	mov    0xc58(%rdx),%rcx
  408f2b:	48 8b b2 60 0c 00 00 	mov    0xc60(%rdx),%rsi
  408f32:	0f b6 3c 59          	movzbl (%rcx,%rbx,2),%edi
  408f36:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  408f3d:	48 89 d8             	mov    %rbx,%rax
  408f40:	48 d3 e8             	shr    %cl,%rax
  408f43:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
  408f47:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  408f4e:	48 d3 e3             	shl    %cl,%rbx
  408f51:	48 83 e3 04          	and    $0x4,%rbx
  408f55:	48 89 d9             	mov    %rbx,%rcx
  408f58:	48 d3 e8             	shr    %cl,%rax
  408f5b:	48 83 e0 0f          	and    $0xf,%rax
  408f5f:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  408f66:	48 d3 e0             	shl    %cl,%rax
  408f69:	48 09 f8             	or     %rdi,%rax
  408f6c:	89 42 3c             	mov    %eax,0x3c(%rdx)
  408f6f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408f73:	8b 40 18             	mov    0x18(%rax),%eax
  408f76:	48 85 c0             	test   %rax,%rax
  408f79:	75 36                	jne    408fb1 <unRLE_obuf_to_output_SMALL+0x6a1>
  408f7b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408f7f:	48 63 48 1c          	movslq 0x1c(%rax),%rcx
  408f83:	8b 0c 8d d0 ac 62 00 	mov    0x62acd0(,%rcx,4),%ecx
  408f8a:	89 48 18             	mov    %ecx,0x18(%rax)
  408f8d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408f91:	8b 48 1c             	mov    0x1c(%rax),%ecx
  408f94:	48 ff c1             	inc    %rcx
  408f97:	89 48 1c             	mov    %ecx,0x1c(%rax)
  408f9a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408f9e:	8b 40 1c             	mov    0x1c(%rax),%eax
  408fa1:	48 3d 00 02 00 00    	cmp    $0x200,%rax
  408fa7:	75 08                	jne    408fb1 <unRLE_obuf_to_output_SMALL+0x6a1>
  408fa9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408fad:	44 89 60 1c          	mov    %r12d,0x1c(%rax)
  408fb1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408fb5:	8b 48 18             	mov    0x18(%rax),%ecx
  408fb8:	48 ff c9             	dec    %rcx
  408fbb:	89 48 18             	mov    %ecx,0x18(%rax)
  408fbe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408fc2:	8b 40 18             	mov    0x18(%rax),%eax
  408fc5:	48 83 f8 01          	cmp    $0x1,%rax
  408fc9:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  408fd0:	74 03                	je     408fd5 <unRLE_obuf_to_output_SMALL+0x6c5>
  408fd2:	48 31 c0             	xor    %rax,%rax
  408fd5:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  408fd9:	8b 51 40             	mov    0x40(%rcx),%edx
  408fdc:	48 31 c2             	xor    %rax,%rdx
  408fdf:	89 51 40             	mov    %edx,0x40(%rcx)
  408fe2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  408fe6:	8b 88 44 04 00 00    	mov    0x444(%rax),%ecx
  408fec:	48 ff c1             	inc    %rcx
  408fef:	89 88 44 04 00 00    	mov    %ecx,0x444(%rax)
  408ff5:	e9 66 f9 ff ff       	jmpq   408960 <unRLE_obuf_to_output_SMALL+0x50>
  408ffa:	49 c7 c4 03 00 00 00 	mov    $0x3,%r12
  409001:	eb 1d                	jmp    409020 <unRLE_obuf_to_output_SMALL+0x710>
  409003:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40900a:	84 00 00 00 00 00 
  409010:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409014:	48 8b 00             	mov    (%rax),%rax
  409017:	8b 48 28             	mov    0x28(%rax),%ecx
  40901a:	48 ff c1             	inc    %rcx
  40901d:	89 48 28             	mov    %ecx,0x28(%rax)
  409020:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409024:	48 8b 00             	mov    (%rax),%rax
  409027:	8b 40 20             	mov    0x20(%rax),%eax
  40902a:	48 85 c0             	test   %rax,%rax
  40902d:	0f 84 44 04 00 00    	je     409477 <unRLE_obuf_to_output_SMALL+0xb67>
  409033:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409037:	8b 40 10             	mov    0x10(%rax),%eax
  40903a:	48 85 c0             	test   %rax,%rax
  40903d:	0f 85 8d 02 00 00    	jne    4092d0 <unRLE_obuf_to_output_SMALL+0x9c0>
  409043:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409047:	8b 88 50 fa 00 00    	mov    0xfa50(%rax),%ecx
  40904d:	8b 80 44 04 00 00    	mov    0x444(%rax),%eax
  409053:	48 ff c1             	inc    %rcx
  409056:	4c 21 e9             	and    %r13,%rcx
  409059:	48 39 c8             	cmp    %rcx,%rax
  40905c:	0f 84 15 04 00 00    	je     409477 <unRLE_obuf_to_output_SMALL+0xb67>
  409062:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409066:	8b 90 50 fa 00 00    	mov    0xfa50(%rax),%edx
  40906c:	48 63 80 44 04 00 00 	movslq 0x444(%rax),%rax
  409073:	48 ff c2             	inc    %rdx
  409076:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40907d:	48 d3 e2             	shl    %cl,%rdx
  409080:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  409087:	48 d3 fa             	sar    %cl,%rdx
  40908a:	48 39 d0             	cmp    %rdx,%rax
  40908d:	0f 8f e9 03 00 00    	jg     40947c <unRLE_obuf_to_output_SMALL+0xb6c>
  409093:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409097:	44 89 70 10          	mov    %r14d,0x10(%rax)
  40909b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40909f:	0f b6 48 40          	movzbl 0x40(%rax),%ecx
  4090a3:	88 48 0c             	mov    %cl,0xc(%rax)
  4090a6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  4090aa:	8b 7e 3c             	mov    0x3c(%rsi),%edi
  4090ad:	48 81 c6 48 04 00 00 	add    $0x448,%rsi
  4090b4:	e8 37 f5 ff ff       	callq  4085f0 <BZ2_indexIntoF>
  4090b9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4090bd:	88 45 c7             	mov    %al,-0x39(%rbp)
  4090c0:	8b 5a 3c             	mov    0x3c(%rdx),%ebx
  4090c3:	48 8b 8a 58 0c 00 00 	mov    0xc58(%rdx),%rcx
  4090ca:	48 8b b2 60 0c 00 00 	mov    0xc60(%rdx),%rsi
  4090d1:	0f b6 3c 59          	movzbl (%rcx,%rbx,2),%edi
  4090d5:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  4090dc:	48 89 d8             	mov    %rbx,%rax
  4090df:	48 d3 e8             	shr    %cl,%rax
  4090e2:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
  4090e6:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  4090ed:	48 d3 e3             	shl    %cl,%rbx
  4090f0:	48 83 e3 04          	and    $0x4,%rbx
  4090f4:	48 89 d9             	mov    %rbx,%rcx
  4090f7:	48 d3 e8             	shr    %cl,%rax
  4090fa:	48 83 e0 0f          	and    $0xf,%rax
  4090fe:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  409105:	48 d3 e0             	shl    %cl,%rax
  409108:	48 09 f8             	or     %rdi,%rax
  40910b:	89 42 3c             	mov    %eax,0x3c(%rdx)
  40910e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409112:	8b 88 44 04 00 00    	mov    0x444(%rax),%ecx
  409118:	48 ff c1             	inc    %rcx
  40911b:	89 88 44 04 00 00    	mov    %ecx,0x444(%rax)
  409121:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409125:	8b 88 50 fa 00 00    	mov    0xfa50(%rax),%ecx
  40912b:	8b 80 44 04 00 00    	mov    0x444(%rax),%eax
  409131:	48 ff c1             	inc    %rcx
  409134:	4c 21 e9             	and    %r13,%rcx
  409137:	48 39 c8             	cmp    %rcx,%rax
  40913a:	0f 84 e0 fe ff ff    	je     409020 <unRLE_obuf_to_output_SMALL+0x710>
  409140:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409144:	0f b6 4d c7          	movzbl -0x39(%rbp),%ecx
  409148:	8b 40 40             	mov    0x40(%rax),%eax
  40914b:	48 39 c1             	cmp    %rax,%rcx
  40914e:	0f 85 6c 01 00 00    	jne    4092c0 <unRLE_obuf_to_output_SMALL+0x9b0>
  409154:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409158:	44 89 78 10          	mov    %r15d,0x10(%rax)
  40915c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  409160:	8b 7e 3c             	mov    0x3c(%rsi),%edi
  409163:	48 81 c6 48 04 00 00 	add    $0x448,%rsi
  40916a:	e8 81 f4 ff ff       	callq  4085f0 <BZ2_indexIntoF>
  40916f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  409173:	88 45 c7             	mov    %al,-0x39(%rbp)
  409176:	8b 5a 3c             	mov    0x3c(%rdx),%ebx
  409179:	48 8b 8a 58 0c 00 00 	mov    0xc58(%rdx),%rcx
  409180:	48 8b b2 60 0c 00 00 	mov    0xc60(%rdx),%rsi
  409187:	0f b6 3c 59          	movzbl (%rcx,%rbx,2),%edi
  40918b:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  409192:	48 89 d8             	mov    %rbx,%rax
  409195:	48 d3 e8             	shr    %cl,%rax
  409198:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
  40919c:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  4091a3:	48 d3 e3             	shl    %cl,%rbx
  4091a6:	48 83 e3 04          	and    $0x4,%rbx
  4091aa:	48 89 d9             	mov    %rbx,%rcx
  4091ad:	48 d3 e8             	shr    %cl,%rax
  4091b0:	48 83 e0 0f          	and    $0xf,%rax
  4091b4:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  4091bb:	48 d3 e0             	shl    %cl,%rax
  4091be:	48 09 f8             	or     %rdi,%rax
  4091c1:	89 42 3c             	mov    %eax,0x3c(%rdx)
  4091c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4091c8:	8b 88 44 04 00 00    	mov    0x444(%rax),%ecx
  4091ce:	48 ff c1             	inc    %rcx
  4091d1:	89 88 44 04 00 00    	mov    %ecx,0x444(%rax)
  4091d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4091db:	8b 88 50 fa 00 00    	mov    0xfa50(%rax),%ecx
  4091e1:	8b 80 44 04 00 00    	mov    0x444(%rax),%eax
  4091e7:	48 ff c1             	inc    %rcx
  4091ea:	4c 21 e9             	and    %r13,%rcx
  4091ed:	48 39 c8             	cmp    %rcx,%rax
  4091f0:	0f 84 2a fe ff ff    	je     409020 <unRLE_obuf_to_output_SMALL+0x710>
  4091f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4091fa:	0f b6 4d c7          	movzbl -0x39(%rbp),%ecx
  4091fe:	8b 40 40             	mov    0x40(%rax),%eax
  409201:	48 39 c1             	cmp    %rax,%rcx
  409204:	0f 85 b6 00 00 00    	jne    4092c0 <unRLE_obuf_to_output_SMALL+0x9b0>
  40920a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40920e:	44 89 60 10          	mov    %r12d,0x10(%rax)
  409212:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  409216:	8b 7e 3c             	mov    0x3c(%rsi),%edi
  409219:	48 81 c6 48 04 00 00 	add    $0x448,%rsi
  409220:	e8 cb f3 ff ff       	callq  4085f0 <BZ2_indexIntoF>
  409225:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  409229:	88 45 c7             	mov    %al,-0x39(%rbp)
  40922c:	8b 5a 3c             	mov    0x3c(%rdx),%ebx
  40922f:	48 8b 8a 58 0c 00 00 	mov    0xc58(%rdx),%rcx
  409236:	48 8b b2 60 0c 00 00 	mov    0xc60(%rdx),%rsi
  40923d:	0f b6 3c 59          	movzbl (%rcx,%rbx,2),%edi
  409241:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  409248:	48 89 d8             	mov    %rbx,%rax
  40924b:	48 d3 e8             	shr    %cl,%rax
  40924e:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
  409252:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  409259:	48 d3 e3             	shl    %cl,%rbx
  40925c:	48 83 e3 04          	and    $0x4,%rbx
  409260:	48 89 d9             	mov    %rbx,%rcx
  409263:	48 d3 e8             	shr    %cl,%rax
  409266:	48 83 e0 0f          	and    $0xf,%rax
  40926a:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  409271:	48 d3 e0             	shl    %cl,%rax
  409274:	48 09 f8             	or     %rdi,%rax
  409277:	89 42 3c             	mov    %eax,0x3c(%rdx)
  40927a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40927e:	8b 88 44 04 00 00    	mov    0x444(%rax),%ecx
  409284:	48 ff c1             	inc    %rcx
  409287:	89 88 44 04 00 00    	mov    %ecx,0x444(%rax)
  40928d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409291:	8b 88 50 fa 00 00    	mov    0xfa50(%rax),%ecx
  409297:	8b 80 44 04 00 00    	mov    0x444(%rax),%eax
  40929d:	48 ff c1             	inc    %rcx
  4092a0:	4c 21 e9             	and    %r13,%rcx
  4092a3:	48 39 c8             	cmp    %rcx,%rax
  4092a6:	0f 84 74 fd ff ff    	je     409020 <unRLE_obuf_to_output_SMALL+0x710>
  4092ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4092b0:	0f b6 4d c7          	movzbl -0x39(%rbp),%ecx
  4092b4:	8b 40 40             	mov    0x40(%rax),%eax
  4092b7:	48 39 c1             	cmp    %rax,%rcx
  4092ba:	0f 84 a9 00 00 00    	je     409369 <unRLE_obuf_to_output_SMALL+0xa59>
  4092c0:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
  4092c4:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4092c8:	89 41 40             	mov    %eax,0x40(%rcx)
  4092cb:	e9 50 fd ff ff       	jmpq   409020 <unRLE_obuf_to_output_SMALL+0x710>
  4092d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4092d4:	48 8b 08             	mov    (%rax),%rcx
  4092d7:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  4092db:	48 8b 49 18          	mov    0x18(%rcx),%rcx
  4092df:	88 01                	mov    %al,(%rcx)
  4092e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4092e5:	8b 90 70 0c 00 00    	mov    0xc70(%rax),%edx
  4092eb:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4092f2:	48 89 d6             	mov    %rdx,%rsi
  4092f5:	0f b6 78 0c          	movzbl 0xc(%rax),%edi
  4092f9:	48 d3 e6             	shl    %cl,%rsi
  4092fc:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  409303:	48 d3 ea             	shr    %cl,%rdx
  409306:	48 31 d7             	xor    %rdx,%rdi
  409309:	8b 0c bd d0 a8 62 00 	mov    0x62a8d0(,%rdi,4),%ecx
  409310:	48 31 f1             	xor    %rsi,%rcx
  409313:	89 88 70 0c 00 00    	mov    %ecx,0xc70(%rax)
  409319:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40931d:	8b 48 10             	mov    0x10(%rax),%ecx
  409320:	48 ff c9             	dec    %rcx
  409323:	89 48 10             	mov    %ecx,0x10(%rax)
  409326:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40932a:	48 8b 00             	mov    (%rax),%rax
  40932d:	48 ff 40 18          	incq   0x18(%rax)
  409331:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409335:	48 8b 00             	mov    (%rax),%rax
  409338:	8b 48 20             	mov    0x20(%rax),%ecx
  40933b:	48 ff c9             	dec    %rcx
  40933e:	89 48 20             	mov    %ecx,0x20(%rax)
  409341:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409345:	48 8b 00             	mov    (%rax),%rax
  409348:	8b 48 24             	mov    0x24(%rax),%ecx
  40934b:	48 ff c1             	inc    %rcx
  40934e:	89 48 24             	mov    %ecx,0x24(%rax)
  409351:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409355:	48 8b 00             	mov    (%rax),%rax
  409358:	8b 40 24             	mov    0x24(%rax),%eax
  40935b:	48 85 c0             	test   %rax,%rax
  40935e:	0f 85 bc fc ff ff    	jne    409020 <unRLE_obuf_to_output_SMALL+0x710>
  409364:	e9 a7 fc ff ff       	jmpq   409010 <unRLE_obuf_to_output_SMALL+0x700>
  409369:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  40936d:	8b 7e 3c             	mov    0x3c(%rsi),%edi
  409370:	48 81 c6 48 04 00 00 	add    $0x448,%rsi
  409377:	e8 74 f2 ff ff       	callq  4085f0 <BZ2_indexIntoF>
  40937c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  409380:	88 45 c7             	mov    %al,-0x39(%rbp)
  409383:	8b 5a 3c             	mov    0x3c(%rdx),%ebx
  409386:	48 8b 8a 58 0c 00 00 	mov    0xc58(%rdx),%rcx
  40938d:	48 8b b2 60 0c 00 00 	mov    0xc60(%rdx),%rsi
  409394:	0f b6 3c 59          	movzbl (%rcx,%rbx,2),%edi
  409398:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  40939f:	48 89 d8             	mov    %rbx,%rax
  4093a2:	48 d3 e8             	shr    %cl,%rax
  4093a5:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
  4093a9:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  4093b0:	48 d3 e3             	shl    %cl,%rbx
  4093b3:	48 83 e3 04          	and    $0x4,%rbx
  4093b7:	48 89 d9             	mov    %rbx,%rcx
  4093ba:	48 d3 e8             	shr    %cl,%rax
  4093bd:	48 83 e0 0f          	and    $0xf,%rax
  4093c1:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  4093c8:	48 d3 e0             	shl    %cl,%rax
  4093cb:	48 09 f8             	or     %rdi,%rax
  4093ce:	89 42 3c             	mov    %eax,0x3c(%rdx)
  4093d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4093d5:	8b 88 44 04 00 00    	mov    0x444(%rax),%ecx
  4093db:	48 ff c1             	inc    %rcx
  4093de:	89 88 44 04 00 00    	mov    %ecx,0x444(%rax)
  4093e4:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
  4093e8:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4093ec:	48 83 c0 04          	add    $0x4,%rax
  4093f0:	89 41 10             	mov    %eax,0x10(%rcx)
  4093f3:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  4093f7:	8b 7e 3c             	mov    0x3c(%rsi),%edi
  4093fa:	48 81 c6 48 04 00 00 	add    $0x448,%rsi
  409401:	e8 ea f1 ff ff       	callq  4085f0 <BZ2_indexIntoF>
  409406:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40940a:	89 41 40             	mov    %eax,0x40(%rcx)
  40940d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  409411:	8b 5a 3c             	mov    0x3c(%rdx),%ebx
  409414:	48 8b 8a 58 0c 00 00 	mov    0xc58(%rdx),%rcx
  40941b:	48 8b b2 60 0c 00 00 	mov    0xc60(%rdx),%rsi
  409422:	0f b6 3c 59          	movzbl (%rcx,%rbx,2),%edi
  409426:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  40942d:	48 89 d8             	mov    %rbx,%rax
  409430:	48 d3 e8             	shr    %cl,%rax
  409433:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
  409437:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  40943e:	48 d3 e3             	shl    %cl,%rbx
  409441:	48 83 e3 04          	and    $0x4,%rbx
  409445:	48 89 d9             	mov    %rbx,%rcx
  409448:	48 d3 e8             	shr    %cl,%rax
  40944b:	48 83 e0 0f          	and    $0xf,%rax
  40944f:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  409456:	48 d3 e0             	shl    %cl,%rax
  409459:	48 09 f8             	or     %rdi,%rax
  40945c:	89 42 3c             	mov    %eax,0x3c(%rdx)
  40945f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409463:	8b 88 44 04 00 00    	mov    0x444(%rax),%ecx
  409469:	48 ff c1             	inc    %rcx
  40946c:	89 88 44 04 00 00    	mov    %ecx,0x444(%rax)
  409472:	e9 a9 fb ff ff       	jmpq   409020 <unRLE_obuf_to_output_SMALL+0x710>
  409477:	48 31 c0             	xor    %rax,%rax
  40947a:	eb 07                	jmp    409483 <unRLE_obuf_to_output_SMALL+0xb73>
  40947c:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  409483:	88 45 d7             	mov    %al,-0x29(%rbp)
  409486:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  40948a:	48 83 c4 18          	add    $0x18,%rsp
  40948e:	5b                   	pop    %rbx
  40948f:	41 5c                	pop    %r12
  409491:	41 5d                	pop    %r13
  409493:	41 5e                	pop    %r14
  409495:	41 5f                	pop    %r15
  409497:	5d                   	pop    %rbp
  409498:	c3                   	retq   
  409499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004094a0 <unRLE_obuf_to_output_FAST>:
  4094a0:	55                   	push   %rbp
  4094a1:	48 89 e5             	mov    %rsp,%rbp
  4094a4:	53                   	push   %rbx
  4094a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4094a9:	0f b6 47 14          	movzbl 0x14(%rdi),%eax
  4094ad:	48 85 c0             	test   %rax,%rax
  4094b0:	0f 84 c8 05 00 00    	je     409a7e <unRLE_obuf_to_output_FAST+0x5de>
  4094b6:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  4094bd:	00 00 00 
  4094c0:	49 c7 c3 01 00 00 00 	mov    $0x1,%r11
  4094c7:	4d 31 d2             	xor    %r10,%r10
  4094ca:	49 c7 c1 02 00 00 00 	mov    $0x2,%r9
  4094d1:	49 c7 c0 03 00 00 00 	mov    $0x3,%r8
  4094d8:	eb 16                	jmp    4094f0 <unRLE_obuf_to_output_FAST+0x50>
  4094da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4094e0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4094e4:	48 8b 09             	mov    (%rcx),%rcx
  4094e7:	8b 51 28             	mov    0x28(%rcx),%edx
  4094ea:	48 ff c2             	inc    %rdx
  4094ed:	89 51 28             	mov    %edx,0x28(%rcx)
  4094f0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4094f4:	48 8b 09             	mov    (%rcx),%rcx
  4094f7:	8b 49 20             	mov    0x20(%rcx),%ecx
  4094fa:	48 85 c9             	test   %rcx,%rcx
  4094fd:	0f 84 36 09 00 00    	je     409e39 <unRLE_obuf_to_output_FAST+0x999>
  409503:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409507:	8b 49 10             	mov    0x10(%rcx),%ecx
  40950a:	48 85 c9             	test   %rcx,%rcx
  40950d:	0f 85 4d 03 00 00    	jne    409860 <unRLE_obuf_to_output_FAST+0x3c0>
  409513:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409517:	8b 91 50 fa 00 00    	mov    0xfa50(%rcx),%edx
  40951d:	8b 89 44 04 00 00    	mov    0x444(%rcx),%ecx
  409523:	48 ff c2             	inc    %rdx
  409526:	48 21 c2             	and    %rax,%rdx
  409529:	48 39 d1             	cmp    %rdx,%rcx
  40952c:	0f 84 07 09 00 00    	je     409e39 <unRLE_obuf_to_output_FAST+0x999>
  409532:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409536:	8b 91 50 fa 00 00    	mov    0xfa50(%rcx),%edx
  40953c:	48 63 b1 44 04 00 00 	movslq 0x444(%rcx),%rsi
  409543:	48 ff c2             	inc    %rdx
  409546:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40954d:	48 d3 e2             	shl    %cl,%rdx
  409550:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  409557:	48 d3 fa             	sar    %cl,%rdx
  40955a:	48 39 d6             	cmp    %rdx,%rsi
  40955d:	0f 8f 05 08 00 00    	jg     409d68 <unRLE_obuf_to_output_FAST+0x8c8>
  409563:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409567:	44 89 59 10          	mov    %r11d,0x10(%rcx)
  40956b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40956f:	0f b6 51 40          	movzbl 0x40(%rcx),%edx
  409573:	88 51 0c             	mov    %dl,0xc(%rcx)
  409576:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40957a:	8b 51 3c             	mov    0x3c(%rcx),%edx
  40957d:	48 8b b1 50 0c 00 00 	mov    0xc50(%rcx),%rsi
  409584:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
  409587:	89 51 3c             	mov    %edx,0x3c(%rcx)
  40958a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40958e:	0f b6 49 3c          	movzbl 0x3c(%rcx),%ecx
  409592:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  409596:	88 4d e7             	mov    %cl,-0x19(%rbp)
  409599:	8b 72 3c             	mov    0x3c(%rdx),%esi
  40959c:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4095a3:	48 d3 ee             	shr    %cl,%rsi
  4095a6:	89 72 3c             	mov    %esi,0x3c(%rdx)
  4095a9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4095ad:	8b 49 18             	mov    0x18(%rcx),%ecx
  4095b0:	48 85 c9             	test   %rcx,%rcx
  4095b3:	75 37                	jne    4095ec <unRLE_obuf_to_output_FAST+0x14c>
  4095b5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4095b9:	48 63 51 1c          	movslq 0x1c(%rcx),%rdx
  4095bd:	8b 14 95 d0 ac 62 00 	mov    0x62acd0(,%rdx,4),%edx
  4095c4:	89 51 18             	mov    %edx,0x18(%rcx)
  4095c7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4095cb:	8b 51 1c             	mov    0x1c(%rcx),%edx
  4095ce:	48 ff c2             	inc    %rdx
  4095d1:	89 51 1c             	mov    %edx,0x1c(%rcx)
  4095d4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4095d8:	8b 49 1c             	mov    0x1c(%rcx),%ecx
  4095db:	48 81 f9 00 02 00 00 	cmp    $0x200,%rcx
  4095e2:	75 08                	jne    4095ec <unRLE_obuf_to_output_FAST+0x14c>
  4095e4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4095e8:	44 89 51 1c          	mov    %r10d,0x1c(%rcx)
  4095ec:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4095f0:	8b 51 18             	mov    0x18(%rcx),%edx
  4095f3:	48 ff ca             	dec    %rdx
  4095f6:	89 51 18             	mov    %edx,0x18(%rcx)
  4095f9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4095fd:	8b 49 18             	mov    0x18(%rcx),%ecx
  409600:	48 83 f9 01          	cmp    $0x1,%rcx
  409604:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  40960b:	74 03                	je     409610 <unRLE_obuf_to_output_FAST+0x170>
  40960d:	48 31 c9             	xor    %rcx,%rcx
  409610:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
  409614:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  409618:	48 31 ca             	xor    %rcx,%rdx
  40961b:	88 55 e7             	mov    %dl,-0x19(%rbp)
  40961e:	8b 8e 44 04 00 00    	mov    0x444(%rsi),%ecx
  409624:	48 ff c1             	inc    %rcx
  409627:	89 8e 44 04 00 00    	mov    %ecx,0x444(%rsi)
  40962d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409631:	8b 91 50 fa 00 00    	mov    0xfa50(%rcx),%edx
  409637:	8b 89 44 04 00 00    	mov    0x444(%rcx),%ecx
  40963d:	48 ff c2             	inc    %rdx
  409640:	48 21 c2             	and    %rax,%rdx
  409643:	48 39 d1             	cmp    %rdx,%rcx
  409646:	0f 84 a4 fe ff ff    	je     4094f0 <unRLE_obuf_to_output_FAST+0x50>
  40964c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409650:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
  409654:	8b 49 40             	mov    0x40(%rcx),%ecx
  409657:	48 39 ca             	cmp    %rcx,%rdx
  40965a:	0f 85 e4 01 00 00    	jne    409844 <unRLE_obuf_to_output_FAST+0x3a4>
  409660:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409664:	44 89 49 10          	mov    %r9d,0x10(%rcx)
  409668:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40966c:	8b 51 3c             	mov    0x3c(%rcx),%edx
  40966f:	48 8b b1 50 0c 00 00 	mov    0xc50(%rcx),%rsi
  409676:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
  409679:	89 51 3c             	mov    %edx,0x3c(%rcx)
  40967c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409680:	0f b6 49 3c          	movzbl 0x3c(%rcx),%ecx
  409684:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  409688:	88 4d e7             	mov    %cl,-0x19(%rbp)
  40968b:	8b 72 3c             	mov    0x3c(%rdx),%esi
  40968e:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  409695:	48 d3 ee             	shr    %cl,%rsi
  409698:	89 72 3c             	mov    %esi,0x3c(%rdx)
  40969b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40969f:	8b 49 18             	mov    0x18(%rcx),%ecx
  4096a2:	48 85 c9             	test   %rcx,%rcx
  4096a5:	75 37                	jne    4096de <unRLE_obuf_to_output_FAST+0x23e>
  4096a7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4096ab:	48 63 51 1c          	movslq 0x1c(%rcx),%rdx
  4096af:	8b 14 95 d0 ac 62 00 	mov    0x62acd0(,%rdx,4),%edx
  4096b6:	89 51 18             	mov    %edx,0x18(%rcx)
  4096b9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4096bd:	8b 51 1c             	mov    0x1c(%rcx),%edx
  4096c0:	48 ff c2             	inc    %rdx
  4096c3:	89 51 1c             	mov    %edx,0x1c(%rcx)
  4096c6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4096ca:	8b 49 1c             	mov    0x1c(%rcx),%ecx
  4096cd:	48 81 f9 00 02 00 00 	cmp    $0x200,%rcx
  4096d4:	75 08                	jne    4096de <unRLE_obuf_to_output_FAST+0x23e>
  4096d6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4096da:	44 89 51 1c          	mov    %r10d,0x1c(%rcx)
  4096de:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4096e2:	8b 51 18             	mov    0x18(%rcx),%edx
  4096e5:	48 ff ca             	dec    %rdx
  4096e8:	89 51 18             	mov    %edx,0x18(%rcx)
  4096eb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4096ef:	8b 49 18             	mov    0x18(%rcx),%ecx
  4096f2:	48 83 f9 01          	cmp    $0x1,%rcx
  4096f6:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  4096fd:	74 03                	je     409702 <unRLE_obuf_to_output_FAST+0x262>
  4096ff:	48 31 c9             	xor    %rcx,%rcx
  409702:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
  409706:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  40970a:	48 31 ca             	xor    %rcx,%rdx
  40970d:	88 55 e7             	mov    %dl,-0x19(%rbp)
  409710:	8b 8e 44 04 00 00    	mov    0x444(%rsi),%ecx
  409716:	48 ff c1             	inc    %rcx
  409719:	89 8e 44 04 00 00    	mov    %ecx,0x444(%rsi)
  40971f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409723:	8b 91 50 fa 00 00    	mov    0xfa50(%rcx),%edx
  409729:	8b 89 44 04 00 00    	mov    0x444(%rcx),%ecx
  40972f:	48 ff c2             	inc    %rdx
  409732:	48 21 c2             	and    %rax,%rdx
  409735:	48 39 d1             	cmp    %rdx,%rcx
  409738:	0f 84 b2 fd ff ff    	je     4094f0 <unRLE_obuf_to_output_FAST+0x50>
  40973e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409742:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
  409746:	8b 49 40             	mov    0x40(%rcx),%ecx
  409749:	48 39 ca             	cmp    %rcx,%rdx
  40974c:	0f 85 f2 00 00 00    	jne    409844 <unRLE_obuf_to_output_FAST+0x3a4>
  409752:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409756:	44 89 41 10          	mov    %r8d,0x10(%rcx)
  40975a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40975e:	8b 51 3c             	mov    0x3c(%rcx),%edx
  409761:	48 8b b1 50 0c 00 00 	mov    0xc50(%rcx),%rsi
  409768:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
  40976b:	89 51 3c             	mov    %edx,0x3c(%rcx)
  40976e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409772:	0f b6 49 3c          	movzbl 0x3c(%rcx),%ecx
  409776:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40977a:	88 4d e7             	mov    %cl,-0x19(%rbp)
  40977d:	8b 72 3c             	mov    0x3c(%rdx),%esi
  409780:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  409787:	48 d3 ee             	shr    %cl,%rsi
  40978a:	89 72 3c             	mov    %esi,0x3c(%rdx)
  40978d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409791:	8b 49 18             	mov    0x18(%rcx),%ecx
  409794:	48 85 c9             	test   %rcx,%rcx
  409797:	75 37                	jne    4097d0 <unRLE_obuf_to_output_FAST+0x330>
  409799:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40979d:	48 63 51 1c          	movslq 0x1c(%rcx),%rdx
  4097a1:	8b 14 95 d0 ac 62 00 	mov    0x62acd0(,%rdx,4),%edx
  4097a8:	89 51 18             	mov    %edx,0x18(%rcx)
  4097ab:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4097af:	8b 51 1c             	mov    0x1c(%rcx),%edx
  4097b2:	48 ff c2             	inc    %rdx
  4097b5:	89 51 1c             	mov    %edx,0x1c(%rcx)
  4097b8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4097bc:	8b 49 1c             	mov    0x1c(%rcx),%ecx
  4097bf:	48 81 f9 00 02 00 00 	cmp    $0x200,%rcx
  4097c6:	75 08                	jne    4097d0 <unRLE_obuf_to_output_FAST+0x330>
  4097c8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4097cc:	44 89 51 1c          	mov    %r10d,0x1c(%rcx)
  4097d0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4097d4:	8b 51 18             	mov    0x18(%rcx),%edx
  4097d7:	48 ff ca             	dec    %rdx
  4097da:	89 51 18             	mov    %edx,0x18(%rcx)
  4097dd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4097e1:	8b 49 18             	mov    0x18(%rcx),%ecx
  4097e4:	48 83 f9 01          	cmp    $0x1,%rcx
  4097e8:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  4097ef:	74 03                	je     4097f4 <unRLE_obuf_to_output_FAST+0x354>
  4097f1:	48 31 c9             	xor    %rcx,%rcx
  4097f4:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
  4097f8:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4097fc:	48 31 ca             	xor    %rcx,%rdx
  4097ff:	88 55 e7             	mov    %dl,-0x19(%rbp)
  409802:	8b 8e 44 04 00 00    	mov    0x444(%rsi),%ecx
  409808:	48 ff c1             	inc    %rcx
  40980b:	89 8e 44 04 00 00    	mov    %ecx,0x444(%rsi)
  409811:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409815:	8b 91 50 fa 00 00    	mov    0xfa50(%rcx),%edx
  40981b:	8b 89 44 04 00 00    	mov    0x444(%rcx),%ecx
  409821:	48 ff c2             	inc    %rdx
  409824:	48 21 c2             	and    %rax,%rdx
  409827:	48 39 d1             	cmp    %rdx,%rcx
  40982a:	0f 84 c0 fc ff ff    	je     4094f0 <unRLE_obuf_to_output_FAST+0x50>
  409830:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409834:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
  409838:	8b 49 40             	mov    0x40(%rcx),%ecx
  40983b:	48 39 ca             	cmp    %rcx,%rdx
  40983e:	0f 84 b5 00 00 00    	je     4098f9 <unRLE_obuf_to_output_FAST+0x459>
  409844:	0f b6 4d e7          	movzbl -0x19(%rbp),%ecx
  409848:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40984c:	89 4a 40             	mov    %ecx,0x40(%rdx)
  40984f:	e9 9c fc ff ff       	jmpq   4094f0 <unRLE_obuf_to_output_FAST+0x50>
  409854:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40985b:	00 00 00 00 00 
  409860:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409864:	48 8b 39             	mov    (%rcx),%rdi
  409867:	0f b6 49 0c          	movzbl 0xc(%rcx),%ecx
  40986b:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
  40986f:	88 0f                	mov    %cl,(%rdi)
  409871:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  409875:	8b b7 70 0c 00 00    	mov    0xc70(%rdi),%esi
  40987b:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  409882:	48 89 f2             	mov    %rsi,%rdx
  409885:	0f b6 5f 0c          	movzbl 0xc(%rdi),%ebx
  409889:	48 d3 e2             	shl    %cl,%rdx
  40988c:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  409893:	48 d3 ee             	shr    %cl,%rsi
  409896:	48 31 f3             	xor    %rsi,%rbx
  409899:	8b 0c 9d d0 a8 62 00 	mov    0x62a8d0(,%rbx,4),%ecx
  4098a0:	48 31 d1             	xor    %rdx,%rcx
  4098a3:	89 8f 70 0c 00 00    	mov    %ecx,0xc70(%rdi)
  4098a9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4098ad:	8b 51 10             	mov    0x10(%rcx),%edx
  4098b0:	48 ff ca             	dec    %rdx
  4098b3:	89 51 10             	mov    %edx,0x10(%rcx)
  4098b6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4098ba:	48 8b 09             	mov    (%rcx),%rcx
  4098bd:	48 ff 41 18          	incq   0x18(%rcx)
  4098c1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4098c5:	48 8b 09             	mov    (%rcx),%rcx
  4098c8:	8b 51 20             	mov    0x20(%rcx),%edx
  4098cb:	48 ff ca             	dec    %rdx
  4098ce:	89 51 20             	mov    %edx,0x20(%rcx)
  4098d1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4098d5:	48 8b 09             	mov    (%rcx),%rcx
  4098d8:	8b 51 24             	mov    0x24(%rcx),%edx
  4098db:	48 ff c2             	inc    %rdx
  4098de:	89 51 24             	mov    %edx,0x24(%rcx)
  4098e1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4098e5:	48 8b 09             	mov    (%rcx),%rcx
  4098e8:	8b 49 24             	mov    0x24(%rcx),%ecx
  4098eb:	48 85 c9             	test   %rcx,%rcx
  4098ee:	0f 85 fc fb ff ff    	jne    4094f0 <unRLE_obuf_to_output_FAST+0x50>
  4098f4:	e9 e7 fb ff ff       	jmpq   4094e0 <unRLE_obuf_to_output_FAST+0x40>
  4098f9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4098fd:	8b 51 3c             	mov    0x3c(%rcx),%edx
  409900:	48 8b b1 50 0c 00 00 	mov    0xc50(%rcx),%rsi
  409907:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
  40990a:	89 51 3c             	mov    %edx,0x3c(%rcx)
  40990d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409911:	0f b6 49 3c          	movzbl 0x3c(%rcx),%ecx
  409915:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  409919:	88 4d e7             	mov    %cl,-0x19(%rbp)
  40991c:	8b 72 3c             	mov    0x3c(%rdx),%esi
  40991f:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  409926:	48 d3 ee             	shr    %cl,%rsi
  409929:	89 72 3c             	mov    %esi,0x3c(%rdx)
  40992c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409930:	8b 49 18             	mov    0x18(%rcx),%ecx
  409933:	48 85 c9             	test   %rcx,%rcx
  409936:	75 37                	jne    40996f <unRLE_obuf_to_output_FAST+0x4cf>
  409938:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40993c:	48 63 51 1c          	movslq 0x1c(%rcx),%rdx
  409940:	8b 14 95 d0 ac 62 00 	mov    0x62acd0(,%rdx,4),%edx
  409947:	89 51 18             	mov    %edx,0x18(%rcx)
  40994a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40994e:	8b 51 1c             	mov    0x1c(%rcx),%edx
  409951:	48 ff c2             	inc    %rdx
  409954:	89 51 1c             	mov    %edx,0x1c(%rcx)
  409957:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40995b:	8b 49 1c             	mov    0x1c(%rcx),%ecx
  40995e:	48 81 f9 00 02 00 00 	cmp    $0x200,%rcx
  409965:	75 08                	jne    40996f <unRLE_obuf_to_output_FAST+0x4cf>
  409967:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40996b:	44 89 51 1c          	mov    %r10d,0x1c(%rcx)
  40996f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409973:	8b 51 18             	mov    0x18(%rcx),%edx
  409976:	48 ff ca             	dec    %rdx
  409979:	89 51 18             	mov    %edx,0x18(%rcx)
  40997c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409980:	8b 49 18             	mov    0x18(%rcx),%ecx
  409983:	48 83 f9 01          	cmp    $0x1,%rcx
  409987:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  40998e:	74 03                	je     409993 <unRLE_obuf_to_output_FAST+0x4f3>
  409990:	48 31 c9             	xor    %rcx,%rcx
  409993:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
  409997:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  40999b:	48 31 ca             	xor    %rcx,%rdx
  40999e:	88 55 e7             	mov    %dl,-0x19(%rbp)
  4099a1:	8b 8e 44 04 00 00    	mov    0x444(%rsi),%ecx
  4099a7:	48 ff c1             	inc    %rcx
  4099aa:	89 8e 44 04 00 00    	mov    %ecx,0x444(%rsi)
  4099b0:	0f b6 4d e7          	movzbl -0x19(%rbp),%ecx
  4099b4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4099b8:	48 83 c1 04          	add    $0x4,%rcx
  4099bc:	89 4a 10             	mov    %ecx,0x10(%rdx)
  4099bf:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4099c3:	8b 51 3c             	mov    0x3c(%rcx),%edx
  4099c6:	48 8b b1 50 0c 00 00 	mov    0xc50(%rcx),%rsi
  4099cd:	8b 14 96             	mov    (%rsi,%rdx,4),%edx
  4099d0:	89 51 3c             	mov    %edx,0x3c(%rcx)
  4099d3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4099d7:	0f b6 51 3c          	movzbl 0x3c(%rcx),%edx
  4099db:	89 51 40             	mov    %edx,0x40(%rcx)
  4099de:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4099e2:	8b 72 3c             	mov    0x3c(%rdx),%esi
  4099e5:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4099ec:	48 d3 ee             	shr    %cl,%rsi
  4099ef:	89 72 3c             	mov    %esi,0x3c(%rdx)
  4099f2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4099f6:	8b 49 18             	mov    0x18(%rcx),%ecx
  4099f9:	48 85 c9             	test   %rcx,%rcx
  4099fc:	75 37                	jne    409a35 <unRLE_obuf_to_output_FAST+0x595>
  4099fe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409a02:	48 63 51 1c          	movslq 0x1c(%rcx),%rdx
  409a06:	8b 14 95 d0 ac 62 00 	mov    0x62acd0(,%rdx,4),%edx
  409a0d:	89 51 18             	mov    %edx,0x18(%rcx)
  409a10:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409a14:	8b 51 1c             	mov    0x1c(%rcx),%edx
  409a17:	48 ff c2             	inc    %rdx
  409a1a:	89 51 1c             	mov    %edx,0x1c(%rcx)
  409a1d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409a21:	8b 49 1c             	mov    0x1c(%rcx),%ecx
  409a24:	48 81 f9 00 02 00 00 	cmp    $0x200,%rcx
  409a2b:	75 08                	jne    409a35 <unRLE_obuf_to_output_FAST+0x595>
  409a2d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409a31:	44 89 51 1c          	mov    %r10d,0x1c(%rcx)
  409a35:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409a39:	8b 51 18             	mov    0x18(%rcx),%edx
  409a3c:	48 ff ca             	dec    %rdx
  409a3f:	89 51 18             	mov    %edx,0x18(%rcx)
  409a42:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409a46:	8b 49 18             	mov    0x18(%rcx),%ecx
  409a49:	48 83 f9 01          	cmp    $0x1,%rcx
  409a4d:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  409a54:	74 03                	je     409a59 <unRLE_obuf_to_output_FAST+0x5b9>
  409a56:	48 31 c9             	xor    %rcx,%rcx
  409a59:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  409a5d:	8b 72 40             	mov    0x40(%rdx),%esi
  409a60:	48 31 ce             	xor    %rcx,%rsi
  409a63:	89 72 40             	mov    %esi,0x40(%rdx)
  409a66:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409a6a:	8b 91 44 04 00 00    	mov    0x444(%rcx),%edx
  409a70:	48 ff c2             	inc    %rdx
  409a73:	89 91 44 04 00 00    	mov    %edx,0x444(%rcx)
  409a79:	e9 72 fa ff ff       	jmpq   4094f0 <unRLE_obuf_to_output_FAST+0x50>
  409a7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409a82:	8b 80 70 0c 00 00    	mov    0xc70(%rax),%eax
  409a88:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409a8c:	89 45 e0             	mov    %eax,-0x20(%rbp)
  409a8f:	0f b6 41 0c          	movzbl 0xc(%rcx),%eax
  409a93:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409a97:	88 45 df             	mov    %al,-0x21(%rbp)
  409a9a:	8b 41 10             	mov    0x10(%rcx),%eax
  409a9d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409aa1:	89 45 d8             	mov    %eax,-0x28(%rbp)
  409aa4:	8b 81 44 04 00 00    	mov    0x444(%rcx),%eax
  409aaa:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409aae:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  409ab1:	8b 41 40             	mov    0x40(%rcx),%eax
  409ab4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409ab8:	89 45 d0             	mov    %eax,-0x30(%rbp)
  409abb:	48 8b 81 50 0c 00 00 	mov    0xc50(%rcx),%rax
  409ac2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409ac6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  409aca:	8b 41 3c             	mov    0x3c(%rcx),%eax
  409acd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409ad1:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  409ad4:	48 8b 01             	mov    (%rcx),%rax
  409ad7:	48 8b 40 18          	mov    0x18(%rax),%rax
  409adb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409adf:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  409ae3:	48 8b 01             	mov    (%rcx),%rax
  409ae6:	8b 40 20             	mov    0x20(%rax),%eax
  409ae9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409aed:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  409af0:	89 45 b0             	mov    %eax,-0x50(%rbp)
  409af3:	8b 81 50 fa 00 00    	mov    0xfa50(%rcx),%eax
  409af9:	48 ff c0             	inc    %rax
  409afc:	89 45 ac             	mov    %eax,-0x54(%rbp)
  409aff:	48 c7 c0 02 00 00 00 	mov    $0x2,%rax
  409b06:	48 ba ff ff ff ff 00 	movabs $0xffffffff,%rdx
  409b0d:	00 00 00 
  409b10:	49 c7 c0 03 00 00 00 	mov    $0x3,%r8
  409b17:	eb 07                	jmp    409b20 <unRLE_obuf_to_output_FAST+0x680>
  409b19:	0f b6 4d e7          	movzbl -0x19(%rbp),%ecx
  409b1d:	89 4d d0             	mov    %ecx,-0x30(%rbp)
  409b20:	48 63 4d d8          	movslq -0x28(%rbp),%rcx
  409b24:	48 85 c9             	test   %rcx,%rcx
  409b27:	0f 8e b7 00 00 00    	jle    409be4 <unRLE_obuf_to_output_FAST+0x744>
  409b2d:	eb 4f                	jmp    409b7e <unRLE_obuf_to_output_FAST+0x6de>
  409b2f:	90                   	nop
  409b30:	0f b6 4d df          	movzbl -0x21(%rbp),%ecx
  409b34:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  409b38:	88 0f                	mov    %cl,(%rdi)
  409b3a:	8b 7d e0             	mov    -0x20(%rbp),%edi
  409b3d:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  409b44:	48 89 fb             	mov    %rdi,%rbx
  409b47:	48 d3 e3             	shl    %cl,%rbx
  409b4a:	0f b6 75 df          	movzbl -0x21(%rbp),%esi
  409b4e:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  409b55:	48 d3 ef             	shr    %cl,%rdi
  409b58:	48 31 fe             	xor    %rdi,%rsi
  409b5b:	8b 0c b5 d0 a8 62 00 	mov    0x62a8d0(,%rsi,4),%ecx
  409b62:	8b 75 d8             	mov    -0x28(%rbp),%esi
  409b65:	48 31 d9             	xor    %rbx,%rcx
  409b68:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  409b6b:	48 ff ce             	dec    %rsi
  409b6e:	89 75 d8             	mov    %esi,-0x28(%rbp)
  409b71:	48 ff 45 b8          	incq   -0x48(%rbp)
  409b75:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  409b78:	48 ff c9             	dec    %rcx
  409b7b:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
  409b7e:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  409b81:	48 85 c9             	test   %rcx,%rcx
  409b84:	0f 84 f9 01 00 00    	je     409d83 <unRLE_obuf_to_output_FAST+0x8e3>
  409b8a:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  409b8d:	48 83 f9 01          	cmp    $0x1,%rcx
  409b91:	75 9d                	jne    409b30 <unRLE_obuf_to_output_FAST+0x690>
  409b93:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  409b96:	48 85 c9             	test   %rcx,%rcx
  409b99:	0f 84 da 01 00 00    	je     409d79 <unRLE_obuf_to_output_FAST+0x8d9>
  409b9f:	0f b6 4d df          	movzbl -0x21(%rbp),%ecx
  409ba3:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  409ba7:	88 0e                	mov    %cl,(%rsi)
  409ba9:	8b 75 e0             	mov    -0x20(%rbp),%esi
  409bac:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  409bb3:	48 89 f7             	mov    %rsi,%rdi
  409bb6:	0f b6 5d df          	movzbl -0x21(%rbp),%ebx
  409bba:	48 d3 e7             	shl    %cl,%rdi
  409bbd:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  409bc4:	48 d3 ee             	shr    %cl,%rsi
  409bc7:	48 31 f3             	xor    %rsi,%rbx
  409bca:	8b 0c 9d d0 a8 62 00 	mov    0x62a8d0(,%rbx,4),%ecx
  409bd1:	48 31 f9             	xor    %rdi,%rcx
  409bd4:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  409bd7:	48 ff 45 b8          	incq   -0x48(%rbp)
  409bdb:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  409bde:	48 ff c9             	dec    %rcx
  409be1:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
  409be4:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  409be8:	48 63 75 ac          	movslq -0x54(%rbp),%rsi
  409bec:	48 39 f1             	cmp    %rsi,%rcx
  409bef:	0f 8f 73 01 00 00    	jg     409d68 <unRLE_obuf_to_output_FAST+0x8c8>
  409bf5:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  409bf8:	8b 75 ac             	mov    -0x54(%rbp),%esi
  409bfb:	48 39 f1             	cmp    %rsi,%rcx
  409bfe:	0f 84 70 01 00 00    	je     409d74 <unRLE_obuf_to_output_FAST+0x8d4>
  409c04:	0f b6 4d d0          	movzbl -0x30(%rbp),%ecx
  409c08:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  409c0b:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  409c0f:	88 4d df             	mov    %cl,-0x21(%rbp)
  409c12:	8b 0c b7             	mov    (%rdi,%rsi,4),%ecx
  409c15:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  409c18:	0f b6 4d c4          	movzbl -0x3c(%rbp),%ecx
  409c1c:	88 4d e7             	mov    %cl,-0x19(%rbp)
  409c1f:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  409c22:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  409c29:	48 d3 ee             	shr    %cl,%rsi
  409c2c:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  409c2f:	0f b6 7d e7          	movzbl -0x19(%rbp),%edi
  409c33:	8b 5d d0             	mov    -0x30(%rbp),%ebx
  409c36:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  409c39:	48 ff c1             	inc    %rcx
  409c3c:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  409c3f:	48 39 df             	cmp    %rbx,%rdi
  409c42:	74 0c                	je     409c50 <unRLE_obuf_to_output_FAST+0x7b0>
  409c44:	0f b6 4d e7          	movzbl -0x19(%rbp),%ecx
  409c48:	89 4d d0             	mov    %ecx,-0x30(%rbp)
  409c4b:	e9 43 ff ff ff       	jmpq   409b93 <unRLE_obuf_to_output_FAST+0x6f3>
  409c50:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  409c53:	8b 75 ac             	mov    -0x54(%rbp),%esi
  409c56:	48 39 f1             	cmp    %rsi,%rcx
  409c59:	0f 84 34 ff ff ff    	je     409b93 <unRLE_obuf_to_output_FAST+0x6f3>
  409c5f:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  409c62:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  409c66:	89 45 d8             	mov    %eax,-0x28(%rbp)
  409c69:	8b 0c 8e             	mov    (%rsi,%rcx,4),%ecx
  409c6c:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  409c6f:	0f b6 4d c4          	movzbl -0x3c(%rbp),%ecx
  409c73:	88 4d e7             	mov    %cl,-0x19(%rbp)
  409c76:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  409c79:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  409c80:	48 d3 ee             	shr    %cl,%rsi
  409c83:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  409c86:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  409c89:	8b 75 ac             	mov    -0x54(%rbp),%esi
  409c8c:	48 ff c1             	inc    %rcx
  409c8f:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  409c92:	48 21 d1             	and    %rdx,%rcx
  409c95:	48 39 f1             	cmp    %rsi,%rcx
  409c98:	0f 84 82 fe ff ff    	je     409b20 <unRLE_obuf_to_output_FAST+0x680>
  409c9e:	0f b6 4d e7          	movzbl -0x19(%rbp),%ecx
  409ca2:	8b 75 d0             	mov    -0x30(%rbp),%esi
  409ca5:	48 39 f1             	cmp    %rsi,%rcx
  409ca8:	0f 85 6b fe ff ff    	jne    409b19 <unRLE_obuf_to_output_FAST+0x679>
  409cae:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  409cb1:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  409cb5:	44 89 45 d8          	mov    %r8d,-0x28(%rbp)
  409cb9:	8b 0c 8e             	mov    (%rsi,%rcx,4),%ecx
  409cbc:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  409cbf:	0f b6 4d c4          	movzbl -0x3c(%rbp),%ecx
  409cc3:	88 4d e7             	mov    %cl,-0x19(%rbp)
  409cc6:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  409cc9:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  409cd0:	48 d3 ee             	shr    %cl,%rsi
  409cd3:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  409cd6:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  409cd9:	8b 75 ac             	mov    -0x54(%rbp),%esi
  409cdc:	48 ff c1             	inc    %rcx
  409cdf:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  409ce2:	48 21 d1             	and    %rdx,%rcx
  409ce5:	48 39 f1             	cmp    %rsi,%rcx
  409ce8:	0f 84 32 fe ff ff    	je     409b20 <unRLE_obuf_to_output_FAST+0x680>
  409cee:	0f b6 4d e7          	movzbl -0x19(%rbp),%ecx
  409cf2:	8b 75 d0             	mov    -0x30(%rbp),%esi
  409cf5:	48 39 f1             	cmp    %rsi,%rcx
  409cf8:	0f 85 1b fe ff ff    	jne    409b19 <unRLE_obuf_to_output_FAST+0x679>
  409cfe:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  409d01:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  409d05:	8b 0c 8e             	mov    (%rsi,%rcx,4),%ecx
  409d08:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  409d0b:	0f b6 4d c4          	movzbl -0x3c(%rbp),%ecx
  409d0f:	88 4d e7             	mov    %cl,-0x19(%rbp)
  409d12:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  409d15:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  409d1c:	48 d3 ee             	shr    %cl,%rsi
  409d1f:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  409d22:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  409d25:	48 ff c1             	inc    %rcx
  409d28:	0f b6 75 e7          	movzbl -0x19(%rbp),%esi
  409d2c:	8b 7d c4             	mov    -0x3c(%rbp),%edi
  409d2f:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
  409d33:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  409d36:	48 83 c6 04          	add    $0x4,%rsi
  409d3a:	89 75 d8             	mov    %esi,-0x28(%rbp)
  409d3d:	8b 0c bb             	mov    (%rbx,%rdi,4),%ecx
  409d40:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  409d43:	0f b6 4d c4          	movzbl -0x3c(%rbp),%ecx
  409d47:	89 4d d0             	mov    %ecx,-0x30(%rbp)
  409d4a:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  409d4d:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  409d50:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  409d57:	48 d3 ee             	shr    %cl,%rsi
  409d5a:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  409d5d:	48 ff c7             	inc    %rdi
  409d60:	89 7d d4             	mov    %edi,-0x2c(%rbp)
  409d63:	e9 b8 fd ff ff       	jmpq   409b20 <unRLE_obuf_to_output_FAST+0x680>
  409d68:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  409d6f:	e9 c8 00 00 00       	jmpq   409e3c <unRLE_obuf_to_output_FAST+0x99c>
  409d74:	48 31 c0             	xor    %rax,%rax
  409d77:	eb 07                	jmp    409d80 <unRLE_obuf_to_output_FAST+0x8e0>
  409d79:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  409d80:	89 45 d8             	mov    %eax,-0x28(%rbp)
  409d83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409d87:	48 8b 00             	mov    (%rax),%rax
  409d8a:	8b 40 24             	mov    0x24(%rax),%eax
  409d8d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409d91:	89 45 a8             	mov    %eax,-0x58(%rbp)
  409d94:	48 8b 01             	mov    (%rcx),%rax
  409d97:	8b 4d b0             	mov    -0x50(%rbp),%ecx
  409d9a:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  409d9d:	8b 70 24             	mov    0x24(%rax),%esi
  409da0:	48 29 d1             	sub    %rdx,%rcx
  409da3:	48 01 ce             	add    %rcx,%rsi
  409da6:	89 70 24             	mov    %esi,0x24(%rax)
  409da9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409dad:	48 8b 00             	mov    (%rax),%rax
  409db0:	8b 40 24             	mov    0x24(%rax),%eax
  409db3:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  409db6:	48 39 c8             	cmp    %rcx,%rax
  409db9:	73 10                	jae    409dcb <unRLE_obuf_to_output_FAST+0x92b>
  409dbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409dbf:	48 8b 00             	mov    (%rax),%rax
  409dc2:	8b 48 28             	mov    0x28(%rax),%ecx
  409dc5:	48 ff c1             	inc    %rcx
  409dc8:	89 48 28             	mov    %ecx,0x28(%rax)
  409dcb:	8b 45 e0             	mov    -0x20(%rbp),%eax
  409dce:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409dd2:	89 81 70 0c 00 00    	mov    %eax,0xc70(%rcx)
  409dd8:	0f b6 45 df          	movzbl -0x21(%rbp),%eax
  409ddc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409de0:	88 41 0c             	mov    %al,0xc(%rcx)
  409de3:	8b 45 d8             	mov    -0x28(%rbp),%eax
  409de6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409dea:	89 41 10             	mov    %eax,0x10(%rcx)
  409ded:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  409df0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409df4:	89 81 44 04 00 00    	mov    %eax,0x444(%rcx)
  409dfa:	8b 45 d0             	mov    -0x30(%rbp),%eax
  409dfd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409e01:	89 41 40             	mov    %eax,0x40(%rcx)
  409e04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409e08:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409e0c:	48 89 81 50 0c 00 00 	mov    %rax,0xc50(%rcx)
  409e13:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  409e16:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409e1a:	89 41 3c             	mov    %eax,0x3c(%rcx)
  409e1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409e21:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  409e25:	48 8b 00             	mov    (%rax),%rax
  409e28:	48 89 48 18          	mov    %rcx,0x18(%rax)
  409e2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409e30:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  409e33:	48 8b 00             	mov    (%rax),%rax
  409e36:	89 48 20             	mov    %ecx,0x20(%rax)
  409e39:	48 31 c0             	xor    %rax,%rax
  409e3c:	88 45 f7             	mov    %al,-0x9(%rbp)
  409e3f:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
  409e43:	5b                   	pop    %rbx
  409e44:	5d                   	pop    %rbp
  409e45:	c3                   	retq   
  409e46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  409e4d:	00 00 00 

0000000000409e50 <BZ2_bzDecompressEnd>:
  409e50:	55                   	push   %rbp
  409e51:	48 89 e5             	mov    %rsp,%rbp
  409e54:	48 83 ec 20          	sub    $0x20,%rsp
  409e58:	48 85 ff             	test   %rdi,%rdi
  409e5b:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  409e5f:	74 21                	je     409e82 <BZ2_bzDecompressEnd+0x32>
  409e61:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409e65:	48 8b 40 30          	mov    0x30(%rax),%rax
  409e69:	48 85 c0             	test   %rax,%rax
  409e6c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  409e70:	74 10                	je     409e82 <BZ2_bzDecompressEnd+0x32>
  409e72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409e76:	48 8b 00             	mov    (%rax),%rax
  409e79:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  409e7d:	48 39 c8             	cmp    %rcx,%rax
  409e80:	74 16                	je     409e98 <BZ2_bzDecompressEnd+0x48>
  409e82:	48 b8 fe ff ff ff 00 	movabs $0xfffffffe,%rax
  409e89:	00 00 00 
  409e8c:	89 45 fc             	mov    %eax,-0x4(%rbp)
  409e8f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  409e92:	48 83 c4 20          	add    $0x20,%rsp
  409e96:	5d                   	pop    %rbp
  409e97:	c3                   	retq   
  409e98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409e9c:	48 83 b8 50 0c 00 00 	cmpq   $0x0,0xc50(%rax)
  409ea3:	00 
  409ea4:	74 16                	je     409ebc <BZ2_bzDecompressEnd+0x6c>
  409ea6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409eaa:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409eae:	48 8b 78 48          	mov    0x48(%rax),%rdi
  409eb2:	48 8b b1 50 0c 00 00 	mov    0xc50(%rcx),%rsi
  409eb9:	ff 50 40             	callq  *0x40(%rax)
  409ebc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409ec0:	48 83 b8 58 0c 00 00 	cmpq   $0x0,0xc58(%rax)
  409ec7:	00 
  409ec8:	74 16                	je     409ee0 <BZ2_bzDecompressEnd+0x90>
  409eca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409ece:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409ed2:	48 8b 78 48          	mov    0x48(%rax),%rdi
  409ed6:	48 8b b1 58 0c 00 00 	mov    0xc58(%rcx),%rsi
  409edd:	ff 50 40             	callq  *0x40(%rax)
  409ee0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409ee4:	48 83 b8 60 0c 00 00 	cmpq   $0x0,0xc60(%rax)
  409eeb:	00 
  409eec:	74 16                	je     409f04 <BZ2_bzDecompressEnd+0xb4>
  409eee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409ef2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  409ef6:	48 8b 78 48          	mov    0x48(%rax),%rdi
  409efa:	48 8b b1 60 0c 00 00 	mov    0xc60(%rcx),%rsi
  409f01:	ff 50 40             	callq  *0x40(%rax)
  409f04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409f08:	48 8b 70 30          	mov    0x30(%rax),%rsi
  409f0c:	48 8b 78 48          	mov    0x48(%rax),%rdi
  409f10:	ff 50 40             	callq  *0x40(%rax)
  409f13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409f17:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  409f1e:	00 
  409f1f:	48 31 c0             	xor    %rax,%rax
  409f22:	e9 65 ff ff ff       	jmpq   409e8c <BZ2_bzDecompressEnd+0x3c>
  409f27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  409f2e:	00 00 

0000000000409f30 <BZ2_bzWriteOpen>:
  409f30:	55                   	push   %rbp
  409f31:	48 89 e5             	mov    %rsp,%rbp
  409f34:	53                   	push   %rbx
  409f35:	48 83 ec 38          	sub    $0x38,%rsp
  409f39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409f3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  409f41:	89 55 dc             	mov    %edx,-0x24(%rbp)
  409f44:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  409f49:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  409f4c:	44 89 45 d4          	mov    %r8d,-0x2c(%rbp)
  409f50:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
  409f57:	00 
  409f58:	74 09                	je     409f63 <BZ2_bzWriteOpen+0x33>
  409f5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409f5e:	48 31 c9             	xor    %rcx,%rcx
  409f61:	89 08                	mov    %ecx,(%rax)
  409f63:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  409f68:	74 0d                	je     409f77 <BZ2_bzWriteOpen+0x47>
  409f6a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409f6e:	48 31 c9             	xor    %rcx,%rcx
  409f71:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  409f77:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  409f7c:	74 3b                	je     409fb9 <BZ2_bzWriteOpen+0x89>
  409f7e:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  409f82:	48 85 c0             	test   %rax,%rax
  409f85:	7e 32                	jle    409fb9 <BZ2_bzWriteOpen+0x89>
  409f87:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  409f8b:	48 83 f8 09          	cmp    $0x9,%rax
  409f8f:	7f 28                	jg     409fb9 <BZ2_bzWriteOpen+0x89>
  409f91:	48 63 45 d4          	movslq -0x2c(%rbp),%rax
  409f95:	48 85 c0             	test   %rax,%rax
  409f98:	78 1f                	js     409fb9 <BZ2_bzWriteOpen+0x89>
  409f9a:	48 63 45 d4          	movslq -0x2c(%rbp),%rax
  409f9e:	48 3d fa 00 00 00    	cmp    $0xfa,%rax
  409fa4:	7f 13                	jg     409fb9 <BZ2_bzWriteOpen+0x89>
  409fa6:	48 63 45 d8          	movslq -0x28(%rbp),%rax
  409faa:	48 85 c0             	test   %rax,%rax
  409fad:	78 0a                	js     409fb9 <BZ2_bzWriteOpen+0x89>
  409faf:	48 63 45 d8          	movslq -0x28(%rbp),%rax
  409fb3:	48 83 f8 05          	cmp    $0x5,%rax
  409fb7:	7c 45                	jl     409ffe <BZ2_bzWriteOpen+0xce>
  409fb9:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  409fbe:	74 10                	je     409fd0 <BZ2_bzWriteOpen+0xa0>
  409fc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409fc4:	48 b9 fe ff ff ff 00 	movabs $0xfffffffe,%rcx
  409fcb:	00 00 00 
  409fce:	89 08                	mov    %ecx,(%rax)
  409fd0:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  409fd5:	74 14                	je     409feb <BZ2_bzWriteOpen+0xbb>
  409fd7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409fdb:	48 b9 fe ff ff ff 00 	movabs $0xfffffffe,%rcx
  409fe2:	00 00 00 
  409fe5:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  409feb:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  409ff2:	00 
  409ff3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  409ff7:	48 83 c4 38          	add    $0x38,%rsp
  409ffb:	5b                   	pop    %rbx
  409ffc:	5d                   	pop    %rbp
  409ffd:	c3                   	retq   
  409ffe:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  40a002:	e8 6d fa 00 00       	callq  419a74 <ferror>
  40a007:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  40a00e:	00 00 00 
  40a011:	48 85 d8             	test   %rbx,%rax
  40a014:	74 3c                	je     40a052 <BZ2_bzWriteOpen+0x122>
  40a016:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a01b:	74 10                	je     40a02d <BZ2_bzWriteOpen+0xfd>
  40a01d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a021:	48 b9 fa ff ff ff 00 	movabs $0xfffffffa,%rcx
  40a028:	00 00 00 
  40a02b:	89 08                	mov    %ecx,(%rax)
  40a02d:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  40a032:	74 14                	je     40a048 <BZ2_bzWriteOpen+0x118>
  40a034:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a038:	48 b9 fa ff ff ff 00 	movabs $0xfffffffa,%rcx
  40a03f:	00 00 00 
  40a042:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40a048:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  40a04f:	00 
  40a050:	eb a1                	jmp    409ff3 <BZ2_bzWriteOpen+0xc3>
  40a052:	48 c7 c7 f0 13 00 00 	mov    $0x13f0,%rdi
  40a059:	e8 32 eb 00 00       	callq  418b90 <malloc>
  40a05e:	48 85 c0             	test   %rax,%rax
  40a061:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  40a065:	0f 84 f1 00 00 00    	je     40a15c <BZ2_bzWriteOpen+0x22c>
  40a06b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a070:	74 09                	je     40a07b <BZ2_bzWriteOpen+0x14b>
  40a072:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a076:	48 31 c9             	xor    %rcx,%rcx
  40a079:	89 08                	mov    %ecx,(%rax)
  40a07b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  40a080:	74 0d                	je     40a08f <BZ2_bzWriteOpen+0x15f>
  40a082:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a086:	48 31 c9             	xor    %rcx,%rcx
  40a089:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40a08f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a093:	48 31 c9             	xor    %rcx,%rcx
  40a096:	88 88 ec 13 00 00    	mov    %cl,0x13ec(%rax)
  40a09c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a0a0:	89 88 90 13 00 00    	mov    %ecx,0x1390(%rax)
  40a0a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a0aa:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40a0ae:	48 89 01             	mov    %rax,(%rcx)
  40a0b1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a0b5:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  40a0bc:	88 88 94 13 00 00    	mov    %cl,0x1394(%rax)
  40a0c2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a0c6:	48 c7 80 d0 13 00 00 	movq   $0x0,0x13d0(%rax)
  40a0cd:	00 00 00 00 
  40a0d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a0d5:	48 c7 80 d8 13 00 00 	movq   $0x0,0x13d8(%rax)
  40a0dc:	00 00 00 00 
  40a0e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a0e4:	48 c7 80 e0 13 00 00 	movq   $0x0,0x13e0(%rax)
  40a0eb:	00 00 00 00 
  40a0ef:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40a0f2:	48 85 c0             	test   %rax,%rax
  40a0f5:	75 0a                	jne    40a101 <BZ2_bzWriteOpen+0x1d1>
  40a0f7:	48 c7 c0 1e 00 00 00 	mov    $0x1e,%rax
  40a0fe:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  40a101:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  40a105:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  40a108:	8b 55 d8             	mov    -0x28(%rbp),%edx
  40a10b:	8b 75 dc             	mov    -0x24(%rbp),%esi
  40a10e:	48 81 c7 98 13 00 00 	add    $0x1398,%rdi
  40a115:	e8 e6 d9 ff ff       	callq  407b00 <BZ2_bzCompressInit>
  40a11a:	48 85 d8             	test   %rbx,%rax
  40a11d:	89 45 d0             	mov    %eax,-0x30(%rbp)
  40a120:	74 79                	je     40a19b <BZ2_bzWriteOpen+0x26b>
  40a122:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a127:	74 09                	je     40a132 <BZ2_bzWriteOpen+0x202>
  40a129:	8b 45 d0             	mov    -0x30(%rbp),%eax
  40a12c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40a130:	89 01                	mov    %eax,(%rcx)
  40a132:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  40a137:	74 0d                	je     40a146 <BZ2_bzWriteOpen+0x216>
  40a139:	8b 45 d0             	mov    -0x30(%rbp),%eax
  40a13c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40a140:	89 81 e8 13 00 00    	mov    %eax,0x13e8(%rcx)
  40a146:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  40a14a:	e8 61 e6 00 00       	callq  4187b0 <free>
  40a14f:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  40a156:	00 
  40a157:	e9 97 fe ff ff       	jmpq   409ff3 <BZ2_bzWriteOpen+0xc3>
  40a15c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a161:	74 10                	je     40a173 <BZ2_bzWriteOpen+0x243>
  40a163:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a167:	48 b9 fd ff ff ff 00 	movabs $0xfffffffd,%rcx
  40a16e:	00 00 00 
  40a171:	89 08                	mov    %ecx,(%rax)
  40a173:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  40a178:	74 14                	je     40a18e <BZ2_bzWriteOpen+0x25e>
  40a17a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a17e:	48 b9 fd ff ff ff 00 	movabs $0xfffffffd,%rcx
  40a185:	00 00 00 
  40a188:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40a18e:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  40a195:	00 
  40a196:	e9 58 fe ff ff       	jmpq   409ff3 <BZ2_bzWriteOpen+0xc3>
  40a19b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a19f:	48 31 c9             	xor    %rcx,%rcx
  40a1a2:	89 88 a0 13 00 00    	mov    %ecx,0x13a0(%rax)
  40a1a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a1ac:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  40a1b3:	88 88 ec 13 00 00    	mov    %cl,0x13ec(%rax)
  40a1b9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a1bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40a1c1:	e9 2d fe ff ff       	jmpq   409ff3 <BZ2_bzWriteOpen+0xc3>
  40a1c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a1cd:	00 00 00 

000000000040a1d0 <BZ2_bzWrite>:
  40a1d0:	55                   	push   %rbp
  40a1d1:	48 89 e5             	mov    %rsp,%rbp
  40a1d4:	41 56                	push   %r14
  40a1d6:	53                   	push   %rbx
  40a1d7:	48 83 ec 30          	sub    $0x30,%rsp
  40a1db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40a1df:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40a1e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a1e7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a1ec:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40a1f0:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40a1f3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  40a1f7:	74 09                	je     40a202 <BZ2_bzWrite+0x32>
  40a1f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a1fd:	48 31 c9             	xor    %rcx,%rcx
  40a200:	89 08                	mov    %ecx,(%rax)
  40a202:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40a207:	74 0d                	je     40a216 <BZ2_bzWrite+0x46>
  40a209:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a20d:	48 31 c9             	xor    %rcx,%rcx
  40a210:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40a216:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40a21b:	0f 84 55 01 00 00    	je     40a376 <BZ2_bzWrite+0x1a6>
  40a221:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40a226:	0f 84 4a 01 00 00    	je     40a376 <BZ2_bzWrite+0x1a6>
  40a22c:	48 63 45 d4          	movslq -0x2c(%rbp),%rax
  40a230:	48 85 c0             	test   %rax,%rax
  40a233:	0f 88 3d 01 00 00    	js     40a376 <BZ2_bzWrite+0x1a6>
  40a239:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a23d:	0f b6 80 94 13 00 00 	movzbl 0x1394(%rax),%eax
  40a244:	48 85 c0             	test   %rax,%rax
  40a247:	0f 84 92 01 00 00    	je     40a3df <BZ2_bzWrite+0x20f>
  40a24d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a251:	48 8b 38             	mov    (%rax),%rdi
  40a254:	e8 1b f8 00 00       	callq  419a74 <ferror>
  40a259:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  40a260:	00 00 00 
  40a263:	48 85 d8             	test   %rbx,%rax
  40a266:	0f 85 45 01 00 00    	jne    40a3b1 <BZ2_bzWrite+0x1e1>
  40a26c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40a26f:	48 85 c0             	test   %rax,%rax
  40a272:	0f 84 de 00 00 00    	je     40a356 <BZ2_bzWrite+0x186>
  40a278:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40a27b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40a27f:	89 81 a0 13 00 00    	mov    %eax,0x13a0(%rcx)
  40a285:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40a289:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40a28d:	48 89 81 98 13 00 00 	mov    %rax,0x1398(%rcx)
  40a294:	49 c7 c6 88 13 00 00 	mov    $0x1388,%r14
  40a29b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40a2a0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a2a4:	44 89 b0 b8 13 00 00 	mov    %r14d,0x13b8(%rax)
  40a2ab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a2af:	48 8d 48 08          	lea    0x8(%rax),%rcx
  40a2b3:	48 89 88 b0 13 00 00 	mov    %rcx,0x13b0(%rax)
  40a2ba:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  40a2be:	48 81 c7 98 13 00 00 	add    $0x1398,%rdi
  40a2c5:	48 31 f6             	xor    %rsi,%rsi
  40a2c8:	e8 83 dc ff ff       	callq  407f50 <BZ2_bzCompress>
  40a2cd:	48 89 c1             	mov    %rax,%rcx
  40a2d0:	48 21 d9             	and    %rbx,%rcx
  40a2d3:	48 83 f9 01          	cmp    $0x1,%rcx
  40a2d7:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40a2da:	0f 85 2d 01 00 00    	jne    40a40d <BZ2_bzWrite+0x23d>
  40a2e0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a2e4:	8b 80 b8 13 00 00    	mov    0x13b8(%rax),%eax
  40a2ea:	48 3d 87 13 00 00    	cmp    $0x1387,%rax
  40a2f0:	77 51                	ja     40a343 <BZ2_bzWrite+0x173>
  40a2f2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a2f6:	8b 80 b8 13 00 00    	mov    0x13b8(%rax),%eax
  40a2fc:	48 c7 c1 88 13 00 00 	mov    $0x1388,%rcx
  40a303:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  40a307:	48 29 c1             	sub    %rax,%rcx
  40a30a:	89 4d d0             	mov    %ecx,-0x30(%rbp)
  40a30d:	48 63 55 d0          	movslq -0x30(%rbp),%rdx
  40a311:	48 8b 0f             	mov    (%rdi),%rcx
  40a314:	48 83 c7 08          	add    $0x8,%rdi
  40a318:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  40a31f:	e8 01 fc 00 00       	callq  419f25 <fwrite>
  40a324:	8b 4d d0             	mov    -0x30(%rbp),%ecx
  40a327:	89 45 cc             	mov    %eax,-0x34(%rbp)
  40a32a:	48 21 d8             	and    %rbx,%rax
  40a32d:	48 39 c1             	cmp    %rax,%rcx
  40a330:	75 7f                	jne    40a3b1 <BZ2_bzWrite+0x1e1>
  40a332:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a336:	48 8b 38             	mov    (%rax),%rdi
  40a339:	e8 36 f7 00 00       	callq  419a74 <ferror>
  40a33e:	48 85 d8             	test   %rbx,%rax
  40a341:	75 6e                	jne    40a3b1 <BZ2_bzWrite+0x1e1>
  40a343:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a347:	8b 80 a0 13 00 00    	mov    0x13a0(%rax),%eax
  40a34d:	48 85 c0             	test   %rax,%rax
  40a350:	0f 85 4a ff ff ff    	jne    40a2a0 <BZ2_bzWrite+0xd0>
  40a356:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a35b:	74 09                	je     40a366 <BZ2_bzWrite+0x196>
  40a35d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a361:	48 31 c9             	xor    %rcx,%rcx
  40a364:	89 08                	mov    %ecx,(%rax)
  40a366:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40a36b:	74 3b                	je     40a3a8 <BZ2_bzWrite+0x1d8>
  40a36d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a371:	48 31 c9             	xor    %rcx,%rcx
  40a374:	eb 2c                	jmp    40a3a2 <BZ2_bzWrite+0x1d2>
  40a376:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a37b:	74 10                	je     40a38d <BZ2_bzWrite+0x1bd>
  40a37d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a381:	48 b9 fe ff ff ff 00 	movabs $0xfffffffe,%rcx
  40a388:	00 00 00 
  40a38b:	89 08                	mov    %ecx,(%rax)
  40a38d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40a392:	74 14                	je     40a3a8 <BZ2_bzWrite+0x1d8>
  40a394:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a398:	48 b9 fe ff ff ff 00 	movabs $0xfffffffe,%rcx
  40a39f:	00 00 00 
  40a3a2:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40a3a8:	48 83 c4 30          	add    $0x30,%rsp
  40a3ac:	5b                   	pop    %rbx
  40a3ad:	41 5e                	pop    %r14
  40a3af:	5d                   	pop    %rbp
  40a3b0:	c3                   	retq   
  40a3b1:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a3b6:	74 10                	je     40a3c8 <BZ2_bzWrite+0x1f8>
  40a3b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a3bc:	48 b9 fa ff ff ff 00 	movabs $0xfffffffa,%rcx
  40a3c3:	00 00 00 
  40a3c6:	89 08                	mov    %ecx,(%rax)
  40a3c8:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40a3cd:	74 d9                	je     40a3a8 <BZ2_bzWrite+0x1d8>
  40a3cf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a3d3:	48 b9 fa ff ff ff 00 	movabs $0xfffffffa,%rcx
  40a3da:	00 00 00 
  40a3dd:	eb c3                	jmp    40a3a2 <BZ2_bzWrite+0x1d2>
  40a3df:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a3e4:	74 10                	je     40a3f6 <BZ2_bzWrite+0x226>
  40a3e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a3ea:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40a3f1:	00 00 00 
  40a3f4:	89 08                	mov    %ecx,(%rax)
  40a3f6:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40a3fb:	74 ab                	je     40a3a8 <BZ2_bzWrite+0x1d8>
  40a3fd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a401:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40a408:	00 00 00 
  40a40b:	eb 95                	jmp    40a3a2 <BZ2_bzWrite+0x1d2>
  40a40d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a412:	74 09                	je     40a41d <BZ2_bzWrite+0x24d>
  40a414:	8b 45 c8             	mov    -0x38(%rbp),%eax
  40a417:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40a41b:	89 01                	mov    %eax,(%rcx)
  40a41d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40a422:	74 84                	je     40a3a8 <BZ2_bzWrite+0x1d8>
  40a424:	8b 45 c8             	mov    -0x38(%rbp),%eax
  40a427:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40a42b:	89 81 e8 13 00 00    	mov    %eax,0x13e8(%rcx)
  40a431:	e9 72 ff ff ff       	jmpq   40a3a8 <BZ2_bzWrite+0x1d8>
  40a436:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a43d:	00 00 00 

000000000040a440 <BZ2_bzWriteClose>:
  40a440:	55                   	push   %rbp
  40a441:	48 89 e5             	mov    %rsp,%rbp
  40a444:	48 83 ec 30          	sub    $0x30,%rsp
  40a448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40a44c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40a450:	89 55 ec             	mov    %edx,-0x14(%rbp)
  40a453:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  40a457:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40a45b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40a45f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40a463:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40a466:	4c 89 c0             	mov    %r8,%rax
  40a469:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40a46d:	4d 31 c0             	xor    %r8,%r8
  40a470:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  40a477:	00 
  40a478:	49 89 c1             	mov    %rax,%r9
  40a47b:	e8 10 00 00 00       	callq  40a490 <BZ2_bzWriteClose64>
  40a480:	48 83 c4 30          	add    $0x30,%rsp
  40a484:	5d                   	pop    %rbp
  40a485:	c3                   	retq   
  40a486:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40a48d:	00 00 00 

000000000040a490 <BZ2_bzWriteClose64>:
  40a490:	55                   	push   %rbp
  40a491:	48 89 e5             	mov    %rsp,%rbp
  40a494:	41 56                	push   %r14
  40a496:	53                   	push   %rbx
  40a497:	48 83 ec 50          	sub    $0x50,%rsp
  40a49b:	48 8b 45 10          	mov    0x10(%rbp),%rax
  40a49f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40a4a3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40a4a7:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40a4aa:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  40a4ae:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  40a4b2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40a4b6:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
  40a4ba:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  40a4be:	48 85 c9             	test   %rcx,%rcx
  40a4c1:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  40a4c5:	0f 84 df 01 00 00    	je     40a6aa <BZ2_bzWriteClose64+0x21a>
  40a4cb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a4cf:	0f b6 80 94 13 00 00 	movzbl 0x1394(%rax),%eax
  40a4d6:	48 85 c0             	test   %rax,%rax
  40a4d9:	0f 84 f8 01 00 00    	je     40a6d7 <BZ2_bzWriteClose64+0x247>
  40a4df:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a4e3:	48 8b 38             	mov    (%rax),%rdi
  40a4e6:	e8 89 f5 00 00       	callq  419a74 <ferror>
  40a4eb:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  40a4f2:	00 00 00 
  40a4f5:	48 85 d8             	test   %rbx,%rax
  40a4f8:	0f 85 71 01 00 00    	jne    40a66f <BZ2_bzWriteClose64+0x1df>
  40a4fe:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40a503:	74 09                	je     40a50e <BZ2_bzWriteClose64+0x7e>
  40a505:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40a509:	48 31 c9             	xor    %rcx,%rcx
  40a50c:	89 08                	mov    %ecx,(%rax)
  40a50e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  40a513:	74 09                	je     40a51e <BZ2_bzWriteClose64+0x8e>
  40a515:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a519:	48 31 c9             	xor    %rcx,%rcx
  40a51c:	89 08                	mov    %ecx,(%rax)
  40a51e:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40a523:	74 09                	je     40a52e <BZ2_bzWriteClose64+0x9e>
  40a525:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a529:	48 31 c9             	xor    %rcx,%rcx
  40a52c:	89 08                	mov    %ecx,(%rax)
  40a52e:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  40a533:	74 09                	je     40a53e <BZ2_bzWriteClose64+0xae>
  40a535:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a539:	48 31 c9             	xor    %rcx,%rcx
  40a53c:	89 08                	mov    %ecx,(%rax)
  40a53e:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40a541:	48 85 c0             	test   %rax,%rax
  40a544:	0f 85 e3 00 00 00    	jne    40a62d <BZ2_bzWriteClose64+0x19d>
  40a54a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a54e:	8b 80 e8 13 00 00    	mov    0x13e8(%rax),%eax
  40a554:	48 85 c0             	test   %rax,%rax
  40a557:	0f 85 d0 00 00 00    	jne    40a62d <BZ2_bzWriteClose64+0x19d>
  40a55d:	49 c7 c6 88 13 00 00 	mov    $0x1388,%r14
  40a564:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40a56b:	00 00 00 00 00 
  40a570:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a574:	44 89 b0 b8 13 00 00 	mov    %r14d,0x13b8(%rax)
  40a57b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a57f:	48 8d 48 08          	lea    0x8(%rax),%rcx
  40a583:	48 89 88 b0 13 00 00 	mov    %rcx,0x13b0(%rax)
  40a58a:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  40a58e:	48 81 c7 98 13 00 00 	add    $0x1398,%rdi
  40a595:	48 c7 c6 02 00 00 00 	mov    $0x2,%rsi
  40a59c:	e8 af d9 ff ff       	callq  407f50 <BZ2_bzCompress>
  40a5a1:	48 89 c1             	mov    %rax,%rcx
  40a5a4:	48 21 d9             	and    %rbx,%rcx
  40a5a7:	48 83 f9 03          	cmp    $0x3,%rcx
  40a5ab:	89 45 ac             	mov    %eax,-0x54(%rbp)
  40a5ae:	74 0d                	je     40a5bd <BZ2_bzWriteClose64+0x12d>
  40a5b0:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40a5b3:	48 83 f8 04          	cmp    $0x4,%rax
  40a5b7:	0f 85 f7 01 00 00    	jne    40a7b4 <BZ2_bzWriteClose64+0x324>
  40a5bd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a5c1:	8b 80 b8 13 00 00    	mov    0x13b8(%rax),%eax
  40a5c7:	48 3d 87 13 00 00    	cmp    $0x1387,%rax
  40a5cd:	77 51                	ja     40a620 <BZ2_bzWriteClose64+0x190>
  40a5cf:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a5d3:	8b 80 b8 13 00 00    	mov    0x13b8(%rax),%eax
  40a5d9:	48 c7 c1 88 13 00 00 	mov    $0x1388,%rcx
  40a5e0:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  40a5e4:	48 29 c1             	sub    %rax,%rcx
  40a5e7:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
  40a5ea:	48 63 55 b4          	movslq -0x4c(%rbp),%rdx
  40a5ee:	48 8b 0f             	mov    (%rdi),%rcx
  40a5f1:	48 83 c7 08          	add    $0x8,%rdi
  40a5f5:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  40a5fc:	e8 24 f9 00 00       	callq  419f25 <fwrite>
  40a601:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  40a604:	89 45 b0             	mov    %eax,-0x50(%rbp)
  40a607:	48 21 d8             	and    %rbx,%rax
  40a60a:	48 39 c1             	cmp    %rax,%rcx
  40a60d:	75 60                	jne    40a66f <BZ2_bzWriteClose64+0x1df>
  40a60f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a613:	48 8b 38             	mov    (%rax),%rdi
  40a616:	e8 59 f4 00 00       	callq  419a74 <ferror>
  40a61b:	48 85 d8             	test   %rbx,%rax
  40a61e:	75 4f                	jne    40a66f <BZ2_bzWriteClose64+0x1df>
  40a620:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40a623:	48 83 f8 04          	cmp    $0x4,%rax
  40a627:	0f 85 43 ff ff ff    	jne    40a570 <BZ2_bzWriteClose64+0xe0>
  40a62d:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40a630:	48 85 c0             	test   %rax,%rax
  40a633:	0f 85 d9 00 00 00    	jne    40a712 <BZ2_bzWriteClose64+0x282>
  40a639:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a63d:	48 8b 38             	mov    (%rax),%rdi
  40a640:	e8 2f f4 00 00       	callq  419a74 <ferror>
  40a645:	48 85 d8             	test   %rbx,%rax
  40a648:	0f 85 c4 00 00 00    	jne    40a712 <BZ2_bzWriteClose64+0x282>
  40a64e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a652:	48 8b 38             	mov    (%rax),%rdi
  40a655:	e8 ba f4 00 00       	callq  419b14 <fflush>
  40a65a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a65e:	48 8b 38             	mov    (%rax),%rdi
  40a661:	e8 0e f4 00 00       	callq  419a74 <ferror>
  40a666:	48 85 d8             	test   %rbx,%rax
  40a669:	0f 84 a3 00 00 00    	je     40a712 <BZ2_bzWriteClose64+0x282>
  40a66f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a674:	74 10                	je     40a686 <BZ2_bzWriteClose64+0x1f6>
  40a676:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a67a:	48 b9 fa ff ff ff 00 	movabs $0xfffffffa,%rcx
  40a681:	00 00 00 
  40a684:	89 08                	mov    %ecx,(%rax)
  40a686:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
  40a68b:	0f 84 1a 01 00 00    	je     40a7ab <BZ2_bzWriteClose64+0x31b>
  40a691:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a695:	48 b9 fa ff ff ff 00 	movabs $0xfffffffa,%rcx
  40a69c:	00 00 00 
  40a69f:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40a6a5:	e9 01 01 00 00       	jmpq   40a7ab <BZ2_bzWriteClose64+0x31b>
  40a6aa:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a6af:	74 09                	je     40a6ba <BZ2_bzWriteClose64+0x22a>
  40a6b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a6b5:	48 31 c9             	xor    %rcx,%rcx
  40a6b8:	89 08                	mov    %ecx,(%rax)
  40a6ba:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
  40a6bf:	0f 84 e6 00 00 00    	je     40a7ab <BZ2_bzWriteClose64+0x31b>
  40a6c5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a6c9:	48 31 c9             	xor    %rcx,%rcx
  40a6cc:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40a6d2:	e9 d4 00 00 00       	jmpq   40a7ab <BZ2_bzWriteClose64+0x31b>
  40a6d7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a6dc:	74 10                	je     40a6ee <BZ2_bzWriteClose64+0x25e>
  40a6de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a6e2:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40a6e9:	00 00 00 
  40a6ec:	89 08                	mov    %ecx,(%rax)
  40a6ee:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
  40a6f3:	0f 84 b2 00 00 00    	je     40a7ab <BZ2_bzWriteClose64+0x31b>
  40a6f9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a6fd:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40a704:	00 00 00 
  40a707:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40a70d:	e9 99 00 00 00       	jmpq   40a7ab <BZ2_bzWriteClose64+0x31b>
  40a712:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40a717:	74 10                	je     40a729 <BZ2_bzWriteClose64+0x299>
  40a719:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a71d:	8b 80 a4 13 00 00    	mov    0x13a4(%rax),%eax
  40a723:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40a727:	89 01                	mov    %eax,(%rcx)
  40a729:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  40a72e:	74 10                	je     40a740 <BZ2_bzWriteClose64+0x2b0>
  40a730:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a734:	8b 80 a8 13 00 00    	mov    0x13a8(%rax),%eax
  40a73a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40a73e:	89 01                	mov    %eax,(%rcx)
  40a740:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40a745:	74 10                	je     40a757 <BZ2_bzWriteClose64+0x2c7>
  40a747:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a74b:	8b 80 bc 13 00 00    	mov    0x13bc(%rax),%eax
  40a751:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40a755:	89 01                	mov    %eax,(%rcx)
  40a757:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  40a75c:	74 10                	je     40a76e <BZ2_bzWriteClose64+0x2de>
  40a75e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a762:	8b 80 c0 13 00 00    	mov    0x13c0(%rax),%eax
  40a768:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  40a76c:	89 01                	mov    %eax,(%rcx)
  40a76e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a773:	74 09                	je     40a77e <BZ2_bzWriteClose64+0x2ee>
  40a775:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a779:	48 31 c9             	xor    %rcx,%rcx
  40a77c:	89 08                	mov    %ecx,(%rax)
  40a77e:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
  40a783:	74 0d                	je     40a792 <BZ2_bzWriteClose64+0x302>
  40a785:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a789:	48 31 c9             	xor    %rcx,%rcx
  40a78c:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40a792:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  40a796:	48 81 c7 98 13 00 00 	add    $0x1398,%rdi
  40a79d:	e8 ee db ff ff       	callq  408390 <BZ2_bzCompressEnd>
  40a7a2:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  40a7a6:	e8 05 e0 00 00       	callq  4187b0 <free>
  40a7ab:	48 83 c4 50          	add    $0x50,%rsp
  40a7af:	5b                   	pop    %rbx
  40a7b0:	41 5e                	pop    %r14
  40a7b2:	5d                   	pop    %rbp
  40a7b3:	c3                   	retq   
  40a7b4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a7b9:	74 09                	je     40a7c4 <BZ2_bzWriteClose64+0x334>
  40a7bb:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40a7be:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40a7c2:	89 01                	mov    %eax,(%rcx)
  40a7c4:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
  40a7c9:	74 e0                	je     40a7ab <BZ2_bzWriteClose64+0x31b>
  40a7cb:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40a7ce:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  40a7d2:	89 81 e8 13 00 00    	mov    %eax,0x13e8(%rcx)
  40a7d8:	eb d1                	jmp    40a7ab <BZ2_bzWriteClose64+0x31b>
  40a7da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040a7e0 <BZ2_bzReadOpen>:
  40a7e0:	55                   	push   %rbp
  40a7e1:	48 89 e5             	mov    %rsp,%rbp
  40a7e4:	53                   	push   %rbx
  40a7e5:	48 83 ec 48          	sub    $0x48,%rsp
  40a7e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40a7ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40a7f1:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40a7f4:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  40a7f7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a7fc:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
  40a800:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)
  40a804:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  40a80b:	00 
  40a80c:	74 09                	je     40a817 <BZ2_bzReadOpen+0x37>
  40a80e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a812:	48 31 c9             	xor    %rcx,%rcx
  40a815:	89 08                	mov    %ecx,(%rax)
  40a817:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40a81c:	74 0d                	je     40a82b <BZ2_bzReadOpen+0x4b>
  40a81e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a822:	48 31 c9             	xor    %rcx,%rcx
  40a825:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40a82b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40a830:	74 4f                	je     40a881 <BZ2_bzReadOpen+0xa1>
  40a832:	8b 45 d8             	mov    -0x28(%rbp),%eax
  40a835:	48 85 c0             	test   %rax,%rax
  40a838:	74 09                	je     40a843 <BZ2_bzReadOpen+0x63>
  40a83a:	8b 45 d8             	mov    -0x28(%rbp),%eax
  40a83d:	48 83 f8 01          	cmp    $0x1,%rax
  40a841:	75 3e                	jne    40a881 <BZ2_bzReadOpen+0xa1>
  40a843:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  40a847:	48 85 c0             	test   %rax,%rax
  40a84a:	78 35                	js     40a881 <BZ2_bzReadOpen+0xa1>
  40a84c:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  40a850:	48 83 f8 04          	cmp    $0x4,%rax
  40a854:	7f 2b                	jg     40a881 <BZ2_bzReadOpen+0xa1>
  40a856:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40a85b:	75 08                	jne    40a865 <BZ2_bzReadOpen+0x85>
  40a85d:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40a860:	48 85 c0             	test   %rax,%rax
  40a863:	75 1c                	jne    40a881 <BZ2_bzReadOpen+0xa1>
  40a865:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40a86a:	74 5a                	je     40a8c6 <BZ2_bzReadOpen+0xe6>
  40a86c:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40a870:	48 85 c0             	test   %rax,%rax
  40a873:	78 0c                	js     40a881 <BZ2_bzReadOpen+0xa1>
  40a875:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40a879:	48 3d 89 13 00 00    	cmp    $0x1389,%rax
  40a87f:	7c 45                	jl     40a8c6 <BZ2_bzReadOpen+0xe6>
  40a881:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a886:	74 10                	je     40a898 <BZ2_bzReadOpen+0xb8>
  40a888:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a88c:	48 b9 fe ff ff ff 00 	movabs $0xfffffffe,%rcx
  40a893:	00 00 00 
  40a896:	89 08                	mov    %ecx,(%rax)
  40a898:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40a89d:	74 14                	je     40a8b3 <BZ2_bzReadOpen+0xd3>
  40a89f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a8a3:	48 b9 fe ff ff ff 00 	movabs $0xfffffffe,%rcx
  40a8aa:	00 00 00 
  40a8ad:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40a8b3:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  40a8ba:	00 
  40a8bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40a8bf:	48 83 c4 48          	add    $0x48,%rsp
  40a8c3:	5b                   	pop    %rbx
  40a8c4:	5d                   	pop    %rbp
  40a8c5:	c3                   	retq   
  40a8c6:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  40a8ca:	e8 a5 f1 00 00       	callq  419a74 <ferror>
  40a8cf:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  40a8d6:	00 00 00 
  40a8d9:	48 85 d8             	test   %rbx,%rax
  40a8dc:	74 3c                	je     40a91a <BZ2_bzReadOpen+0x13a>
  40a8de:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a8e3:	74 10                	je     40a8f5 <BZ2_bzReadOpen+0x115>
  40a8e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a8e9:	48 b9 fa ff ff ff 00 	movabs $0xfffffffa,%rcx
  40a8f0:	00 00 00 
  40a8f3:	89 08                	mov    %ecx,(%rax)
  40a8f5:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40a8fa:	74 14                	je     40a910 <BZ2_bzReadOpen+0x130>
  40a8fc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a900:	48 b9 fa ff ff ff 00 	movabs $0xfffffffa,%rcx
  40a907:	00 00 00 
  40a90a:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40a910:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  40a917:	00 
  40a918:	eb a1                	jmp    40a8bb <BZ2_bzReadOpen+0xdb>
  40a91a:	48 c7 c7 f0 13 00 00 	mov    $0x13f0,%rdi
  40a921:	e8 6a e2 00 00       	callq  418b90 <malloc>
  40a926:	48 85 c0             	test   %rax,%rax
  40a929:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  40a92d:	0f 84 24 01 00 00    	je     40aa57 <BZ2_bzReadOpen+0x277>
  40a933:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40a938:	74 09                	je     40a943 <BZ2_bzReadOpen+0x163>
  40a93a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a93e:	48 31 c9             	xor    %rcx,%rcx
  40a941:	89 08                	mov    %ecx,(%rax)
  40a943:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40a948:	74 0d                	je     40a957 <BZ2_bzReadOpen+0x177>
  40a94a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a94e:	48 31 c9             	xor    %rcx,%rcx
  40a951:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40a957:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a95b:	48 31 c9             	xor    %rcx,%rcx
  40a95e:	88 88 ec 13 00 00    	mov    %cl,0x13ec(%rax)
  40a964:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a968:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40a96c:	48 89 02             	mov    %rax,(%rdx)
  40a96f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a973:	89 88 90 13 00 00    	mov    %ecx,0x1390(%rax)
  40a979:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a97d:	88 88 94 13 00 00    	mov    %cl,0x1394(%rax)
  40a983:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a987:	48 c7 80 d0 13 00 00 	movq   $0x0,0x13d0(%rax)
  40a98e:	00 00 00 00 
  40a992:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a996:	48 c7 80 d8 13 00 00 	movq   $0x0,0x13d8(%rax)
  40a99d:	00 00 00 00 
  40a9a1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a9a5:	48 c7 80 e0 13 00 00 	movq   $0x0,0x13e0(%rax)
  40a9ac:	00 00 00 00 
  40a9b0:	eb 44                	jmp    40a9f6 <BZ2_bzReadOpen+0x216>
  40a9b2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40a9b9:	1f 84 00 00 00 00 00 
  40a9c0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40a9c4:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40a9c8:	0f b6 00             	movzbl (%rax),%eax
  40a9cb:	48 63 91 90 13 00 00 	movslq 0x1390(%rcx),%rdx
  40a9d2:	88 44 11 08          	mov    %al,0x8(%rcx,%rdx,1)
  40a9d6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a9da:	8b 88 90 13 00 00    	mov    0x1390(%rax),%ecx
  40a9e0:	48 ff c1             	inc    %rcx
  40a9e3:	89 88 90 13 00 00    	mov    %ecx,0x1390(%rax)
  40a9e9:	48 ff 45 d0          	incq   -0x30(%rbp)
  40a9ed:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40a9f0:	48 ff c8             	dec    %rax
  40a9f3:	89 45 cc             	mov    %eax,-0x34(%rbp)
  40a9f6:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40a9fa:	48 85 c0             	test   %rax,%rax
  40a9fd:	7f c1                	jg     40a9c0 <BZ2_bzReadOpen+0x1e0>
  40a9ff:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  40aa03:	8b 55 d8             	mov    -0x28(%rbp),%edx
  40aa06:	8b 75 dc             	mov    -0x24(%rbp),%esi
  40aa09:	48 81 c7 98 13 00 00 	add    $0x1398,%rdi
  40aa10:	e8 4b da ff ff       	callq  408460 <BZ2_bzDecompressInit>
  40aa15:	48 85 d8             	test   %rbx,%rax
  40aa18:	89 45 bc             	mov    %eax,-0x44(%rbp)
  40aa1b:	74 79                	je     40aa96 <BZ2_bzReadOpen+0x2b6>
  40aa1d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40aa22:	74 09                	je     40aa2d <BZ2_bzReadOpen+0x24d>
  40aa24:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40aa27:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40aa2b:	89 01                	mov    %eax,(%rcx)
  40aa2d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40aa32:	74 0d                	je     40aa41 <BZ2_bzReadOpen+0x261>
  40aa34:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40aa37:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40aa3b:	89 81 e8 13 00 00    	mov    %eax,0x13e8(%rcx)
  40aa41:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  40aa45:	e8 66 dd 00 00       	callq  4187b0 <free>
  40aa4a:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  40aa51:	00 
  40aa52:	e9 64 fe ff ff       	jmpq   40a8bb <BZ2_bzReadOpen+0xdb>
  40aa57:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40aa5c:	74 10                	je     40aa6e <BZ2_bzReadOpen+0x28e>
  40aa5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40aa62:	48 b9 fd ff ff ff 00 	movabs $0xfffffffd,%rcx
  40aa69:	00 00 00 
  40aa6c:	89 08                	mov    %ecx,(%rax)
  40aa6e:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40aa73:	74 14                	je     40aa89 <BZ2_bzReadOpen+0x2a9>
  40aa75:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40aa79:	48 b9 fd ff ff ff 00 	movabs $0xfffffffd,%rcx
  40aa80:	00 00 00 
  40aa83:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40aa89:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  40aa90:	00 
  40aa91:	e9 25 fe ff ff       	jmpq   40a8bb <BZ2_bzReadOpen+0xdb>
  40aa96:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40aa9a:	8b 88 90 13 00 00    	mov    0x1390(%rax),%ecx
  40aaa0:	89 88 a0 13 00 00    	mov    %ecx,0x13a0(%rax)
  40aaa6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40aaaa:	48 8d 48 08          	lea    0x8(%rax),%rcx
  40aaae:	48 89 88 98 13 00 00 	mov    %rcx,0x1398(%rax)
  40aab5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40aab9:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  40aac0:	88 88 ec 13 00 00    	mov    %cl,0x13ec(%rax)
  40aac6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40aaca:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40aace:	e9 e8 fd ff ff       	jmpq   40a8bb <BZ2_bzReadOpen+0xdb>
  40aad3:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40aada:	84 00 00 00 00 00 

000000000040aae0 <BZ2_bzReadClose>:
  40aae0:	55                   	push   %rbp
  40aae1:	48 89 e5             	mov    %rsp,%rbp
  40aae4:	48 83 ec 20          	sub    $0x20,%rsp
  40aae8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40aaec:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40aaf1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40aaf5:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  40aaf9:	74 09                	je     40ab04 <BZ2_bzReadClose+0x24>
  40aafb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40aaff:	48 31 c9             	xor    %rcx,%rcx
  40ab02:	89 08                	mov    %ecx,(%rax)
  40ab04:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40ab09:	74 0d                	je     40ab18 <BZ2_bzReadClose+0x38>
  40ab0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ab0f:	48 31 c9             	xor    %rcx,%rcx
  40ab12:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40ab18:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40ab1d:	74 44                	je     40ab63 <BZ2_bzReadClose+0x83>
  40ab1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ab23:	0f b6 80 94 13 00 00 	movzbl 0x1394(%rax),%eax
  40ab2a:	48 85 c0             	test   %rax,%rax
  40ab2d:	74 5a                	je     40ab89 <BZ2_bzReadClose+0xa9>
  40ab2f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40ab34:	74 10                	je     40ab46 <BZ2_bzReadClose+0x66>
  40ab36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ab3a:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40ab41:	00 00 00 
  40ab44:	89 08                	mov    %ecx,(%rax)
  40ab46:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40ab4b:	74 65                	je     40abb2 <BZ2_bzReadClose+0xd2>
  40ab4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ab51:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40ab58:	00 00 00 
  40ab5b:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40ab61:	eb 4f                	jmp    40abb2 <BZ2_bzReadClose+0xd2>
  40ab63:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40ab68:	74 09                	je     40ab73 <BZ2_bzReadClose+0x93>
  40ab6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ab6e:	48 31 c9             	xor    %rcx,%rcx
  40ab71:	89 08                	mov    %ecx,(%rax)
  40ab73:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40ab78:	74 38                	je     40abb2 <BZ2_bzReadClose+0xd2>
  40ab7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ab7e:	48 31 c9             	xor    %rcx,%rcx
  40ab81:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40ab87:	eb 29                	jmp    40abb2 <BZ2_bzReadClose+0xd2>
  40ab89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ab8d:	0f b6 80 ec 13 00 00 	movzbl 0x13ec(%rax),%eax
  40ab94:	48 85 c0             	test   %rax,%rax
  40ab97:	74 10                	je     40aba9 <BZ2_bzReadClose+0xc9>
  40ab99:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40ab9d:	48 81 c7 98 13 00 00 	add    $0x1398,%rdi
  40aba4:	e8 a7 f2 ff ff       	callq  409e50 <BZ2_bzDecompressEnd>
  40aba9:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40abad:	e8 fe db 00 00       	callq  4187b0 <free>
  40abb2:	48 83 c4 20          	add    $0x20,%rsp
  40abb6:	5d                   	pop    %rbp
  40abb7:	c3                   	retq   
  40abb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40abbf:	00 

000000000040abc0 <BZ2_bzRead>:
  40abc0:	55                   	push   %rbp
  40abc1:	48 89 e5             	mov    %rsp,%rbp
  40abc4:	53                   	push   %rbx
  40abc5:	48 83 ec 38          	sub    $0x38,%rsp
  40abc9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40abcd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40abd1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40abd5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40abda:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40abde:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40abe1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  40abe5:	74 09                	je     40abf0 <BZ2_bzRead+0x30>
  40abe7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40abeb:	48 31 c9             	xor    %rcx,%rcx
  40abee:	89 08                	mov    %ecx,(%rax)
  40abf0:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40abf5:	74 0d                	je     40ac04 <BZ2_bzRead+0x44>
  40abf7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40abfb:	48 31 c9             	xor    %rcx,%rcx
  40abfe:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40ac04:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40ac09:	74 4e                	je     40ac59 <BZ2_bzRead+0x99>
  40ac0b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40ac10:	74 47                	je     40ac59 <BZ2_bzRead+0x99>
  40ac12:	48 63 45 d4          	movslq -0x2c(%rbp),%rax
  40ac16:	48 85 c0             	test   %rax,%rax
  40ac19:	78 3e                	js     40ac59 <BZ2_bzRead+0x99>
  40ac1b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ac1f:	0f b6 80 94 13 00 00 	movzbl 0x1394(%rax),%eax
  40ac26:	48 85 c0             	test   %rax,%rax
  40ac29:	74 70                	je     40ac9b <BZ2_bzRead+0xdb>
  40ac2b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40ac30:	74 10                	je     40ac42 <BZ2_bzRead+0x82>
  40ac32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ac36:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40ac3d:	00 00 00 
  40ac40:	89 08                	mov    %ecx,(%rax)
  40ac42:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40ac47:	74 42                	je     40ac8b <BZ2_bzRead+0xcb>
  40ac49:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ac4d:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40ac54:	00 00 00 
  40ac57:	eb 2c                	jmp    40ac85 <BZ2_bzRead+0xc5>
  40ac59:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40ac5e:	74 10                	je     40ac70 <BZ2_bzRead+0xb0>
  40ac60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ac64:	48 b9 fe ff ff ff 00 	movabs $0xfffffffe,%rcx
  40ac6b:	00 00 00 
  40ac6e:	89 08                	mov    %ecx,(%rax)
  40ac70:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40ac75:	74 14                	je     40ac8b <BZ2_bzRead+0xcb>
  40ac77:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ac7b:	48 b9 fe ff ff ff 00 	movabs $0xfffffffe,%rcx
  40ac82:	00 00 00 
  40ac85:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40ac8b:	48 31 c0             	xor    %rax,%rax
  40ac8e:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40ac91:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40ac94:	48 83 c4 38          	add    $0x38,%rsp
  40ac98:	5b                   	pop    %rbx
  40ac99:	5d                   	pop    %rbp
  40ac9a:	c3                   	retq   
  40ac9b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40ac9e:	48 85 c0             	test   %rax,%rax
  40aca1:	0f 84 75 01 00 00    	je     40ae1c <BZ2_bzRead+0x25c>
  40aca7:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40acaa:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40acae:	89 81 b8 13 00 00    	mov    %eax,0x13b8(%rcx)
  40acb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40acb8:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40acbc:	48 89 81 b0 13 00 00 	mov    %rax,0x13b0(%rcx)
  40acc3:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  40acca:	00 00 00 
  40accd:	0f 1f 00             	nopl   (%rax)
  40acd0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40acd4:	48 8b 38             	mov    (%rax),%rdi
  40acd7:	e8 98 ed 00 00       	callq  419a74 <ferror>
  40acdc:	48 85 d8             	test   %rbx,%rax
  40acdf:	0f 85 5e 01 00 00    	jne    40ae43 <BZ2_bzRead+0x283>
  40ace5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ace9:	8b 80 a0 13 00 00    	mov    0x13a0(%rax),%eax
  40acef:	48 85 c0             	test   %rax,%rax
  40acf2:	75 73                	jne    40ad67 <BZ2_bzRead+0x1a7>
  40acf4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40acf8:	48 8b 38             	mov    (%rax),%rdi
  40acfb:	e8 30 02 00 00       	callq  40af30 <myfeof>
  40ad00:	48 85 c0             	test   %rax,%rax
  40ad03:	75 62                	jne    40ad67 <BZ2_bzRead+0x1a7>
  40ad05:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  40ad09:	48 8b 0f             	mov    (%rdi),%rcx
  40ad0c:	48 83 c7 08          	add    $0x8,%rdi
  40ad10:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  40ad17:	48 c7 c2 88 13 00 00 	mov    $0x1388,%rdx
  40ad1e:	e8 65 f0 00 00       	callq  419d88 <fread>
  40ad23:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40ad27:	89 45 d0             	mov    %eax,-0x30(%rbp)
  40ad2a:	48 8b 39             	mov    (%rcx),%rdi
  40ad2d:	e8 42 ed 00 00       	callq  419a74 <ferror>
  40ad32:	48 85 d8             	test   %rbx,%rax
  40ad35:	0f 85 08 01 00 00    	jne    40ae43 <BZ2_bzRead+0x283>
  40ad3b:	8b 45 d0             	mov    -0x30(%rbp),%eax
  40ad3e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40ad42:	89 81 90 13 00 00    	mov    %eax,0x1390(%rcx)
  40ad48:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ad4c:	8b 88 90 13 00 00    	mov    0x1390(%rax),%ecx
  40ad52:	89 88 a0 13 00 00    	mov    %ecx,0x13a0(%rax)
  40ad58:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ad5c:	48 8d 48 08          	lea    0x8(%rax),%rcx
  40ad60:	48 89 88 98 13 00 00 	mov    %rcx,0x1398(%rax)
  40ad67:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
  40ad6b:	48 81 c7 98 13 00 00 	add    $0x1398,%rdi
  40ad72:	e8 19 d9 ff ff       	callq  408690 <BZ2_bzDecompress>
  40ad77:	48 85 d8             	test   %rbx,%rax
  40ad7a:	89 45 cc             	mov    %eax,-0x34(%rbp)
  40ad7d:	74 0d                	je     40ad8c <BZ2_bzRead+0x1cc>
  40ad7f:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40ad82:	48 83 f8 04          	cmp    $0x4,%rax
  40ad86:	0f 85 30 01 00 00    	jne    40aebc <BZ2_bzRead+0x2fc>
  40ad8c:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40ad8f:	48 85 c0             	test   %rax,%rax
  40ad92:	75 3c                	jne    40add0 <BZ2_bzRead+0x210>
  40ad94:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ad98:	48 8b 38             	mov    (%rax),%rdi
  40ad9b:	e8 90 01 00 00       	callq  40af30 <myfeof>
  40ada0:	48 85 c0             	test   %rax,%rax
  40ada3:	74 2b                	je     40add0 <BZ2_bzRead+0x210>
  40ada5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ada9:	8b 80 a0 13 00 00    	mov    0x13a0(%rax),%eax
  40adaf:	48 85 c0             	test   %rax,%rax
  40adb2:	75 1c                	jne    40add0 <BZ2_bzRead+0x210>
  40adb4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40adb8:	8b 80 b8 13 00 00    	mov    0x13b8(%rax),%eax
  40adbe:	48 85 c0             	test   %rax,%rax
  40adc1:	0f 85 25 01 00 00    	jne    40aeec <BZ2_bzRead+0x32c>
  40adc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40adce:	00 00 
  40add0:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40add3:	48 83 f8 04          	cmp    $0x4,%rax
  40add7:	0f 84 9b 00 00 00    	je     40ae78 <BZ2_bzRead+0x2b8>
  40addd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ade1:	8b 80 b8 13 00 00    	mov    0x13b8(%rax),%eax
  40ade7:	48 85 c0             	test   %rax,%rax
  40adea:	0f 85 e0 fe ff ff    	jne    40acd0 <BZ2_bzRead+0x110>
  40adf0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40adf5:	74 09                	je     40ae00 <BZ2_bzRead+0x240>
  40adf7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40adfb:	48 31 c9             	xor    %rcx,%rcx
  40adfe:	89 08                	mov    %ecx,(%rax)
  40ae00:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40ae05:	74 0d                	je     40ae14 <BZ2_bzRead+0x254>
  40ae07:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ae0b:	48 31 c9             	xor    %rcx,%rcx
  40ae0e:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40ae14:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40ae17:	e9 72 fe ff ff       	jmpq   40ac8e <BZ2_bzRead+0xce>
  40ae1c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40ae21:	74 09                	je     40ae2c <BZ2_bzRead+0x26c>
  40ae23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ae27:	48 31 c9             	xor    %rcx,%rcx
  40ae2a:	89 08                	mov    %ecx,(%rax)
  40ae2c:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40ae31:	0f 84 54 fe ff ff    	je     40ac8b <BZ2_bzRead+0xcb>
  40ae37:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ae3b:	48 31 c9             	xor    %rcx,%rcx
  40ae3e:	e9 42 fe ff ff       	jmpq   40ac85 <BZ2_bzRead+0xc5>
  40ae43:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40ae48:	74 10                	je     40ae5a <BZ2_bzRead+0x29a>
  40ae4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ae4e:	48 b9 fa ff ff ff 00 	movabs $0xfffffffa,%rcx
  40ae55:	00 00 00 
  40ae58:	89 08                	mov    %ecx,(%rax)
  40ae5a:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40ae5f:	0f 84 26 fe ff ff    	je     40ac8b <BZ2_bzRead+0xcb>
  40ae65:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ae69:	48 b9 fa ff ff ff 00 	movabs $0xfffffffa,%rcx
  40ae70:	00 00 00 
  40ae73:	e9 0d fe ff ff       	jmpq   40ac85 <BZ2_bzRead+0xc5>
  40ae78:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40ae7d:	74 0d                	je     40ae8c <BZ2_bzRead+0x2cc>
  40ae7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ae83:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ae8a:	89 08                	mov    %ecx,(%rax)
  40ae8c:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40ae91:	74 11                	je     40aea4 <BZ2_bzRead+0x2e4>
  40ae93:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ae97:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ae9e:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40aea4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40aea8:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  40aeab:	8b 80 b8 13 00 00    	mov    0x13b8(%rax),%eax
  40aeb1:	48 29 c1             	sub    %rax,%rcx
  40aeb4:	89 4d f4             	mov    %ecx,-0xc(%rbp)
  40aeb7:	e9 d5 fd ff ff       	jmpq   40ac91 <BZ2_bzRead+0xd1>
  40aebc:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40aec1:	74 09                	je     40aecc <BZ2_bzRead+0x30c>
  40aec3:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40aec6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40aeca:	89 01                	mov    %eax,(%rcx)
  40aecc:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40aed1:	0f 84 b4 fd ff ff    	je     40ac8b <BZ2_bzRead+0xcb>
  40aed7:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40aeda:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40aede:	89 81 e8 13 00 00    	mov    %eax,0x13e8(%rcx)
  40aee4:	48 31 c0             	xor    %rax,%rax
  40aee7:	e9 a2 fd ff ff       	jmpq   40ac8e <BZ2_bzRead+0xce>
  40aeec:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40aef1:	74 10                	je     40af03 <BZ2_bzRead+0x343>
  40aef3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40aef7:	48 b9 f9 ff ff ff 00 	movabs $0xfffffff9,%rcx
  40aefe:	00 00 00 
  40af01:	89 08                	mov    %ecx,(%rax)
  40af03:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40af08:	0f 84 7d fd ff ff    	je     40ac8b <BZ2_bzRead+0xcb>
  40af0e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40af12:	48 b9 f9 ff ff ff 00 	movabs $0xfffffff9,%rcx
  40af19:	00 00 00 
  40af1c:	e9 64 fd ff ff       	jmpq   40ac85 <BZ2_bzRead+0xc5>
  40af21:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40af28:	0f 1f 84 00 00 00 00 
  40af2f:	00 

000000000040af30 <myfeof>:
  40af30:	55                   	push   %rbp
  40af31:	48 89 e5             	mov    %rsp,%rbp
  40af34:	48 83 ec 20          	sub    $0x20,%rsp
  40af38:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  40af3c:	e8 93 ec 00 00       	callq  419bd4 <fgetc>
  40af41:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40af48:	00 00 00 
  40af4b:	48 89 c2             	mov    %rax,%rdx
  40af4e:	48 21 ca             	and    %rcx,%rdx
  40af51:	48 39 ca             	cmp    %rcx,%rdx
  40af54:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40af57:	74 11                	je     40af6a <myfeof+0x3a>
  40af59:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40af5d:	8b 7d ec             	mov    -0x14(%rbp),%edi
  40af60:	e8 27 f2 00 00       	callq  41a18c <ungetc>
  40af65:	48 31 c0             	xor    %rax,%rax
  40af68:	eb 07                	jmp    40af71 <myfeof+0x41>
  40af6a:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40af71:	88 45 ff             	mov    %al,-0x1(%rbp)
  40af74:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  40af78:	48 83 c4 20          	add    $0x20,%rsp
  40af7c:	5d                   	pop    %rbp
  40af7d:	c3                   	retq   
  40af7e:	66 90                	xchg   %ax,%ax

000000000040af80 <BZ2_bzReadGetUnused>:
  40af80:	55                   	push   %rbp
  40af81:	48 89 e5             	mov    %rsp,%rbp
  40af84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40af88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40af8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40af90:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40af94:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  40af98:	48 85 c0             	test   %rax,%rax
  40af9b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40af9f:	0f 84 9e 00 00 00    	je     40b043 <BZ2_bzReadGetUnused+0xc3>
  40afa5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40afa9:	8b 80 e8 13 00 00    	mov    0x13e8(%rax),%eax
  40afaf:	48 83 f8 04          	cmp    $0x4,%rax
  40afb3:	74 38                	je     40afed <BZ2_bzReadGetUnused+0x6d>
  40afb5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40afba:	74 10                	je     40afcc <BZ2_bzReadGetUnused+0x4c>
  40afbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40afc0:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40afc7:	00 00 00 
  40afca:	89 08                	mov    %ecx,(%rax)
  40afcc:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40afd1:	0f 84 a0 00 00 00    	je     40b077 <BZ2_bzReadGetUnused+0xf7>
  40afd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40afdb:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  40afe2:	00 00 00 
  40afe5:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40afeb:	5d                   	pop    %rbp
  40afec:	c3                   	retq   
  40afed:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40aff2:	74 4f                	je     40b043 <BZ2_bzReadGetUnused+0xc3>
  40aff4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40aff9:	74 48                	je     40b043 <BZ2_bzReadGetUnused+0xc3>
  40affb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40b000:	74 09                	je     40b00b <BZ2_bzReadGetUnused+0x8b>
  40b002:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b006:	48 31 c9             	xor    %rcx,%rcx
  40b009:	89 08                	mov    %ecx,(%rax)
  40b00b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40b010:	74 0d                	je     40b01f <BZ2_bzReadGetUnused+0x9f>
  40b012:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40b016:	48 31 c9             	xor    %rcx,%rcx
  40b019:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40b01f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40b023:	8b 80 a0 13 00 00    	mov    0x13a0(%rax),%eax
  40b029:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40b02d:	89 01                	mov    %eax,(%rcx)
  40b02f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40b033:	48 8b 80 98 13 00 00 	mov    0x1398(%rax),%rax
  40b03a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40b03e:	48 89 01             	mov    %rax,(%rcx)
  40b041:	eb 34                	jmp    40b077 <BZ2_bzReadGetUnused+0xf7>
  40b043:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40b048:	74 10                	je     40b05a <BZ2_bzReadGetUnused+0xda>
  40b04a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b04e:	48 b9 fe ff ff ff 00 	movabs $0xfffffffe,%rcx
  40b055:	00 00 00 
  40b058:	89 08                	mov    %ecx,(%rax)
  40b05a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40b05f:	74 16                	je     40b077 <BZ2_bzReadGetUnused+0xf7>
  40b061:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40b065:	48 b9 fe ff ff ff 00 	movabs $0xfffffffe,%rcx
  40b06c:	00 00 00 
  40b06f:	89 88 e8 13 00 00    	mov    %ecx,0x13e8(%rax)
  40b075:	5d                   	pop    %rbp
  40b076:	c3                   	retq   
  40b077:	5d                   	pop    %rbp
  40b078:	c3                   	retq   
  40b079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000040b080 <BZ2_bzBuffToBuffCompress>:
  40b080:	55                   	push   %rbp
  40b081:	48 89 e5             	mov    %rsp,%rbp
  40b084:	53                   	push   %rbx
  40b085:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  40b08c:	48 8b 45 10          	mov    0x10(%rbp),%rax
  40b090:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40b094:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40b098:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40b09c:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40b09f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40b0a4:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
  40b0a8:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)
  40b0ac:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40b0af:	74 49                	je     40b0fa <BZ2_bzBuffToBuffCompress+0x7a>
  40b0b1:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40b0b6:	74 42                	je     40b0fa <BZ2_bzBuffToBuffCompress+0x7a>
  40b0b8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40b0bd:	74 3b                	je     40b0fa <BZ2_bzBuffToBuffCompress+0x7a>
  40b0bf:	48 63 45 d0          	movslq -0x30(%rbp),%rax
  40b0c3:	48 85 c0             	test   %rax,%rax
  40b0c6:	7e 32                	jle    40b0fa <BZ2_bzBuffToBuffCompress+0x7a>
  40b0c8:	48 63 45 d0          	movslq -0x30(%rbp),%rax
  40b0cc:	48 83 f8 09          	cmp    $0x9,%rax
  40b0d0:	7f 28                	jg     40b0fa <BZ2_bzBuffToBuffCompress+0x7a>
  40b0d2:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40b0d6:	48 85 c0             	test   %rax,%rax
  40b0d9:	78 1f                	js     40b0fa <BZ2_bzBuffToBuffCompress+0x7a>
  40b0db:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40b0df:	48 83 f8 04          	cmp    $0x4,%rax
  40b0e3:	7f 15                	jg     40b0fa <BZ2_bzBuffToBuffCompress+0x7a>
  40b0e5:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40b0e9:	48 85 c0             	test   %rax,%rax
  40b0ec:	78 0c                	js     40b0fa <BZ2_bzBuffToBuffCompress+0x7a>
  40b0ee:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40b0f2:	48 3d fb 00 00 00    	cmp    $0xfb,%rax
  40b0f8:	7c 1a                	jl     40b114 <BZ2_bzBuffToBuffCompress+0x94>
  40b0fa:	48 b8 fe ff ff ff 00 	movabs $0xfffffffe,%rax
  40b101:	00 00 00 
  40b104:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40b107:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40b10a:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  40b111:	5b                   	pop    %rbx
  40b112:	5d                   	pop    %rbp
  40b113:	c3                   	retq   
  40b114:	8b 45 c8             	mov    -0x38(%rbp),%eax
  40b117:	48 85 c0             	test   %rax,%rax
  40b11a:	75 0a                	jne    40b126 <BZ2_bzBuffToBuffCompress+0xa6>
  40b11c:	48 c7 c0 1e 00 00 00 	mov    $0x1e,%rax
  40b123:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40b126:	8b 4d c8             	mov    -0x38(%rbp),%ecx
  40b129:	8b 55 cc             	mov    -0x34(%rbp),%edx
  40b12c:	8b 75 d0             	mov    -0x30(%rbp),%esi
  40b12f:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
  40b136:	00 
  40b137:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
  40b13e:	00 
  40b13f:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  40b146:	00 
  40b147:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
  40b14e:	e8 ad c9 ff ff       	callq  407b00 <BZ2_bzCompressInit>
  40b153:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  40b15a:	00 00 00 
  40b15d:	48 85 d8             	test   %rbx,%rax
  40b160:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  40b166:	75 77                	jne    40b1df <BZ2_bzBuffToBuffCompress+0x15f>
  40b168:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40b16c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40b170:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  40b173:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40b177:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  40b17e:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  40b182:	89 55 80             	mov    %edx,-0x80(%rbp)
  40b185:	8b 06                	mov    (%rsi),%eax
  40b187:	89 45 98             	mov    %eax,-0x68(%rbp)
  40b18a:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
  40b191:	48 c7 c6 02 00 00 00 	mov    $0x2,%rsi
  40b198:	e8 b3 cd ff ff       	callq  407f50 <BZ2_bzCompress>
  40b19d:	48 21 c3             	and    %rax,%rbx
  40b1a0:	48 83 fb 03          	cmp    $0x3,%rbx
  40b1a4:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  40b1aa:	75 1b                	jne    40b1c7 <BZ2_bzBuffToBuffCompress+0x147>
  40b1ac:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
  40b1b3:	e8 d8 d1 ff ff       	callq  408390 <BZ2_bzCompressEnd>
  40b1b8:	48 b8 f8 ff ff ff 00 	movabs $0xfffffff8,%rax
  40b1bf:	00 00 00 
  40b1c2:	e9 3d ff ff ff       	jmpq   40b104 <BZ2_bzBuffToBuffCompress+0x84>
  40b1c7:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  40b1cd:	48 83 f8 04          	cmp    $0x4,%rax
  40b1d1:	74 17                	je     40b1ea <BZ2_bzBuffToBuffCompress+0x16a>
  40b1d3:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
  40b1da:	e8 b1 d1 ff ff       	callq  408390 <BZ2_bzCompressEnd>
  40b1df:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  40b1e5:	e9 1a ff ff ff       	jmpq   40b104 <BZ2_bzBuffToBuffCompress+0x84>
  40b1ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b1ee:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  40b1f1:	8b 10                	mov    (%rax),%edx
  40b1f3:	48 29 ca             	sub    %rcx,%rdx
  40b1f6:	89 10                	mov    %edx,(%rax)
  40b1f8:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
  40b1ff:	e8 8c d1 ff ff       	callq  408390 <BZ2_bzCompressEnd>
  40b204:	48 31 c0             	xor    %rax,%rax
  40b207:	e9 f8 fe ff ff       	jmpq   40b104 <BZ2_bzBuffToBuffCompress+0x84>
  40b20c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000040b210 <BZ2_bzBuffToBuffDecompress>:
  40b210:	55                   	push   %rbp
  40b211:	48 89 e5             	mov    %rsp,%rbp
  40b214:	53                   	push   %rbx
  40b215:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  40b21c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40b220:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40b224:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40b228:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40b22d:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40b230:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
  40b234:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)
  40b238:	74 32                	je     40b26c <BZ2_bzBuffToBuffDecompress+0x5c>
  40b23a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40b23f:	74 2b                	je     40b26c <BZ2_bzBuffToBuffDecompress+0x5c>
  40b241:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40b246:	74 24                	je     40b26c <BZ2_bzBuffToBuffDecompress+0x5c>
  40b248:	8b 45 d0             	mov    -0x30(%rbp),%eax
  40b24b:	48 85 c0             	test   %rax,%rax
  40b24e:	74 09                	je     40b259 <BZ2_bzBuffToBuffDecompress+0x49>
  40b250:	8b 45 d0             	mov    -0x30(%rbp),%eax
  40b253:	48 83 f8 01          	cmp    $0x1,%rax
  40b257:	75 13                	jne    40b26c <BZ2_bzBuffToBuffDecompress+0x5c>
  40b259:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40b25d:	48 85 c0             	test   %rax,%rax
  40b260:	78 0a                	js     40b26c <BZ2_bzBuffToBuffDecompress+0x5c>
  40b262:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40b266:	48 83 f8 05          	cmp    $0x5,%rax
  40b26a:	7c 1a                	jl     40b286 <BZ2_bzBuffToBuffDecompress+0x76>
  40b26c:	48 b8 fe ff ff ff 00 	movabs $0xfffffffe,%rax
  40b273:	00 00 00 
  40b276:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40b279:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40b27c:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  40b283:	5b                   	pop    %rbx
  40b284:	5d                   	pop    %rbp
  40b285:	c3                   	retq   
  40b286:	8b 55 d0             	mov    -0x30(%rbp),%edx
  40b289:	8b 75 cc             	mov    -0x34(%rbp),%esi
  40b28c:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
  40b293:	00 
  40b294:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
  40b29b:	00 
  40b29c:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  40b2a3:	00 
  40b2a4:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
  40b2ab:	e8 b0 d1 ff ff       	callq  408460 <BZ2_bzDecompressInit>
  40b2b0:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  40b2b7:	00 00 00 
  40b2ba:	48 85 d8             	test   %rbx,%rax
  40b2bd:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  40b2c3:	75 51                	jne    40b316 <BZ2_bzBuffToBuffDecompress+0x106>
  40b2c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40b2c9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40b2cd:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  40b2d0:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40b2d4:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  40b2db:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  40b2df:	89 55 80             	mov    %edx,-0x80(%rbp)
  40b2e2:	8b 06                	mov    (%rsi),%eax
  40b2e4:	89 45 98             	mov    %eax,-0x68(%rbp)
  40b2e7:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
  40b2ee:	e8 9d d3 ff ff       	callq  408690 <BZ2_bzDecompress>
  40b2f3:	48 85 d8             	test   %rbx,%rax
  40b2f6:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  40b2fc:	74 23                	je     40b321 <BZ2_bzBuffToBuffDecompress+0x111>
  40b2fe:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  40b304:	48 83 f8 04          	cmp    $0x4,%rax
  40b308:	74 3a                	je     40b344 <BZ2_bzBuffToBuffDecompress+0x134>
  40b30a:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
  40b311:	e8 3a eb ff ff       	callq  409e50 <BZ2_bzDecompressEnd>
  40b316:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  40b31c:	e9 55 ff ff ff       	jmpq   40b276 <BZ2_bzBuffToBuffDecompress+0x66>
  40b321:	8b 45 98             	mov    -0x68(%rbp),%eax
  40b324:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
  40b32b:	48 85 c0             	test   %rax,%rax
  40b32e:	74 36                	je     40b366 <BZ2_bzBuffToBuffDecompress+0x156>
  40b330:	e8 1b eb ff ff       	callq  409e50 <BZ2_bzDecompressEnd>
  40b335:	48 b8 f9 ff ff ff 00 	movabs $0xfffffff9,%rax
  40b33c:	00 00 00 
  40b33f:	e9 32 ff ff ff       	jmpq   40b276 <BZ2_bzBuffToBuffDecompress+0x66>
  40b344:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b348:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  40b34b:	8b 10                	mov    (%rax),%edx
  40b34d:	48 29 ca             	sub    %rcx,%rdx
  40b350:	89 10                	mov    %edx,(%rax)
  40b352:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
  40b359:	e8 f2 ea ff ff       	callq  409e50 <BZ2_bzDecompressEnd>
  40b35e:	48 31 c0             	xor    %rax,%rax
  40b361:	e9 10 ff ff ff       	jmpq   40b276 <BZ2_bzBuffToBuffDecompress+0x66>
  40b366:	e8 e5 ea ff ff       	callq  409e50 <BZ2_bzDecompressEnd>
  40b36b:	48 b8 f8 ff ff ff 00 	movabs $0xfffffff8,%rax
  40b372:	00 00 00 
  40b375:	e9 fc fe ff ff       	jmpq   40b276 <BZ2_bzBuffToBuffDecompress+0x66>
  40b37a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040b380 <BZ2_bzopen>:
  40b380:	55                   	push   %rbp
  40b381:	48 89 e5             	mov    %rsp,%rbp
  40b384:	48 83 ec 10          	sub    $0x10,%rsp
  40b388:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40b38c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40b390:	48 89 f0             	mov    %rsi,%rax
  40b393:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40b397:	48 be ff ff ff ff 00 	movabs $0xffffffff,%rsi
  40b39e:	00 00 00 
  40b3a1:	48 31 c9             	xor    %rcx,%rcx
  40b3a4:	48 89 c2             	mov    %rax,%rdx
  40b3a7:	e8 14 00 00 00       	callq  40b3c0 <bzopen_or_bzdopen>
  40b3ac:	48 83 c4 10          	add    $0x10,%rsp
  40b3b0:	5d                   	pop    %rbp
  40b3b1:	c3                   	retq   
  40b3b2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40b3b9:	1f 84 00 00 00 00 00 

000000000040b3c0 <bzopen_or_bzdopen>:
  40b3c0:	55                   	push   %rbp
  40b3c1:	48 89 e5             	mov    %rsp,%rbp
  40b3c4:	41 56                	push   %r14
  40b3c6:	53                   	push   %rbx
  40b3c7:	48 81 ec f0 13 00 00 	sub    $0x13f0,%rsp
  40b3ce:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
  40b3d2:	89 75 dc             	mov    %esi,-0x24(%rbp)
  40b3d5:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
  40b3d9:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  40b3dc:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax
  40b3e3:	89 85 3c ec ff ff    	mov    %eax,-0x13c4(%rbp)
  40b3e9:	48 31 c0             	xor    %rax,%rax
  40b3ec:	89 85 38 ec ff ff    	mov    %eax,-0x13c8(%rbp)
  40b3f2:	66 89 85 30 ec ff ff 	mov    %ax,-0x13d0(%rbp)
  40b3f9:	48 c7 85 28 ec ff ff 	movq   $0x0,-0x13d8(%rbp)
  40b400:	00 00 00 00 
  40b404:	48 c7 85 20 ec ff ff 	movq   $0x0,-0x13e0(%rbp)
  40b40b:	00 00 00 00 
  40b40f:	48 c7 85 18 ec ff ff 	movq   $0x0,-0x13e8(%rbp)
  40b416:	00 00 00 00 
  40b41a:	89 85 14 ec ff ff    	mov    %eax,-0x13ec(%rbp)
  40b420:	48 c7 c1 1e 00 00 00 	mov    $0x1e,%rcx
  40b427:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40b42c:	89 8d 10 ec ff ff    	mov    %ecx,-0x13f0(%rbp)
  40b432:	89 85 0c ec ff ff    	mov    %eax,-0x13f4(%rbp)
  40b438:	89 85 08 ec ff ff    	mov    %eax,-0x13f8(%rbp)
  40b43e:	0f 84 ac 00 00 00    	je     40b4f0 <bzopen_or_bzdopen+0x130>
  40b444:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  40b44b:	00 00 00 
  40b44e:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  40b455:	eb 13                	jmp    40b46a <bzopen_or_bzdopen+0xaa>
  40b457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40b45e:	00 00 
  40b460:	89 8d 0c ec ff ff    	mov    %ecx,-0x13f4(%rbp)
  40b466:	48 ff 45 d0          	incq   -0x30(%rbp)
  40b46a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40b46e:	0f b6 12             	movzbl (%rdx),%edx
  40b471:	48 85 d2             	test   %rdx,%rdx
  40b474:	74 63                	je     40b4d9 <bzopen_or_bzdopen+0x119>
  40b476:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40b47a:	48 0f be 12          	movsbq (%rdx),%rdx
  40b47e:	48 21 da             	and    %rbx,%rdx
  40b481:	48 83 fa 77          	cmp    $0x77,%rdx
  40b485:	74 19                	je     40b4a0 <bzopen_or_bzdopen+0xe0>
  40b487:	48 83 fa 73          	cmp    $0x73,%rdx
  40b48b:	74 d3                	je     40b460 <bzopen_or_bzdopen+0xa0>
  40b48d:	48 83 fa 72          	cmp    $0x72,%rdx
  40b491:	75 19                	jne    40b4ac <bzopen_or_bzdopen+0xec>
  40b493:	89 85 38 ec ff ff    	mov    %eax,-0x13c8(%rbp)
  40b499:	48 ff 45 d0          	incq   -0x30(%rbp)
  40b49d:	eb cb                	jmp    40b46a <bzopen_or_bzdopen+0xaa>
  40b49f:	90                   	nop
  40b4a0:	89 8d 38 ec ff ff    	mov    %ecx,-0x13c8(%rbp)
  40b4a6:	48 ff 45 d0          	incq   -0x30(%rbp)
  40b4aa:	eb be                	jmp    40b46a <bzopen_or_bzdopen+0xaa>
  40b4ac:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40b4b0:	48 0f be 12          	movsbq (%rdx),%rdx
  40b4b4:	48 83 c2 d0          	add    $0xffffffffffffffd0,%rdx
  40b4b8:	48 21 da             	and    %rbx,%rdx
  40b4bb:	48 83 fa 09          	cmp    $0x9,%rdx
  40b4bf:	77 12                	ja     40b4d3 <bzopen_or_bzdopen+0x113>
  40b4c1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40b4c5:	48 0f be 12          	movsbq (%rdx),%rdx
  40b4c9:	48 83 c2 d0          	add    $0xffffffffffffffd0,%rdx
  40b4cd:	89 95 3c ec ff ff    	mov    %edx,-0x13c4(%rbp)
  40b4d3:	48 ff 45 d0          	incq   -0x30(%rbp)
  40b4d7:	eb 91                	jmp    40b46a <bzopen_or_bzdopen+0xaa>
  40b4d9:	8b 85 38 ec ff ff    	mov    -0x13c8(%rbp),%eax
  40b4df:	48 85 c0             	test   %rax,%rax
  40b4e2:	74 19                	je     40b4fd <bzopen_or_bzdopen+0x13d>
  40b4e4:	48 be 4c 7d 42 00 00 	movabs $0x427d4c,%rsi
  40b4eb:	00 00 00 
  40b4ee:	eb 17                	jmp    40b507 <bzopen_or_bzdopen+0x147>
  40b4f0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  40b4f7:	00 
  40b4f8:	e9 93 01 00 00       	jmpq   40b690 <bzopen_or_bzdopen+0x2d0>
  40b4fd:	48 be 37 5d 42 00 00 	movabs $0x425d37,%rsi
  40b504:	00 00 00 
  40b507:	4c 8d b5 28 ec ff ff 	lea    -0x13d8(%rbp),%r14
  40b50e:	4c 89 f7             	mov    %r14,%rdi
  40b511:	e8 aa 05 01 00       	callq  41bac0 <strcat>
  40b516:	48 be 2f 5f 42 00 00 	movabs $0x425f2f,%rsi
  40b51d:	00 00 00 
  40b520:	4c 89 f7             	mov    %r14,%rdi
  40b523:	e8 98 05 01 00       	callq  41bac0 <strcat>
  40b528:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40b52b:	48 85 c0             	test   %rax,%rax
  40b52e:	74 11                	je     40b541 <bzopen_or_bzdopen+0x181>
  40b530:	8b 7d dc             	mov    -0x24(%rbp),%edi
  40b533:	48 8d b5 28 ec ff ff 	lea    -0x13d8(%rbp),%rsi
  40b53a:	e8 3d e0 00 00       	callq  41957c <__fdopen>
  40b53f:	eb 4c                	jmp    40b58d <bzopen_or_bzdopen+0x1cd>
  40b541:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40b546:	74 2a                	je     40b572 <bzopen_or_bzdopen+0x1b2>
  40b548:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  40b54c:	48 be 52 78 42 00 00 	movabs $0x427852,%rsi
  40b553:	00 00 00 
  40b556:	e8 c5 06 01 00       	callq  41bc20 <strcmp>
  40b55b:	48 85 d8             	test   %rbx,%rax
  40b55e:	74 12                	je     40b572 <bzopen_or_bzdopen+0x1b2>
  40b560:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  40b564:	48 8d b5 28 ec ff ff 	lea    -0x13d8(%rbp),%rsi
  40b56b:	e8 00 e7 00 00       	callq  419c70 <fopen>
  40b570:	eb 1b                	jmp    40b58d <bzopen_or_bzdopen+0x1cd>
  40b572:	8b 85 38 ec ff ff    	mov    -0x13c8(%rbp),%eax
  40b578:	48 85 c0             	test   %rax,%rax
  40b57b:	74 09                	je     40b586 <bzopen_or_bzdopen+0x1c6>
  40b57d:	48 8b 05 5c d4 01 00 	mov    0x1d45c(%rip),%rax        # 4289e0 <stdout>
  40b584:	eb 07                	jmp    40b58d <bzopen_or_bzdopen+0x1cd>
  40b586:	48 8b 05 4b d4 01 00 	mov    0x1d44b(%rip),%rax        # 4289d8 <stdin>
  40b58d:	48 89 85 20 ec ff ff 	mov    %rax,-0x13e0(%rbp)
  40b594:	48 83 bd 20 ec ff ff 	cmpq   $0x0,-0x13e0(%rbp)
  40b59b:	00 
  40b59c:	74 63                	je     40b601 <bzopen_or_bzdopen+0x241>
  40b59e:	8b 85 38 ec ff ff    	mov    -0x13c8(%rbp),%eax
  40b5a4:	48 85 c0             	test   %rax,%rax
  40b5a7:	74 65                	je     40b60e <bzopen_or_bzdopen+0x24e>
  40b5a9:	48 63 85 3c ec ff ff 	movslq -0x13c4(%rbp),%rax
  40b5b0:	48 85 c0             	test   %rax,%rax
  40b5b3:	7f 0d                	jg     40b5c2 <bzopen_or_bzdopen+0x202>
  40b5b5:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40b5bc:	89 85 3c ec ff ff    	mov    %eax,-0x13c4(%rbp)
  40b5c2:	48 63 85 3c ec ff ff 	movslq -0x13c4(%rbp),%rax
  40b5c9:	48 83 f8 0a          	cmp    $0xa,%rax
  40b5cd:	7c 0d                	jl     40b5dc <bzopen_or_bzdopen+0x21c>
  40b5cf:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax
  40b5d6:	89 85 3c ec ff ff    	mov    %eax,-0x13c4(%rbp)
  40b5dc:	48 8b b5 20 ec ff ff 	mov    -0x13e0(%rbp),%rsi
  40b5e3:	44 8b 85 10 ec ff ff 	mov    -0x13f0(%rbp),%r8d
  40b5ea:	8b 8d 14 ec ff ff    	mov    -0x13ec(%rbp),%ecx
  40b5f0:	8b 95 3c ec ff ff    	mov    -0x13c4(%rbp),%edx
  40b5f6:	48 8d 7d c8          	lea    -0x38(%rbp),%rdi
  40b5fa:	e8 31 e9 ff ff       	callq  409f30 <BZ2_bzWriteOpen>
  40b5ff:	eb 37                	jmp    40b638 <bzopen_or_bzdopen+0x278>
  40b601:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  40b608:	00 
  40b609:	e9 82 00 00 00       	jmpq   40b690 <bzopen_or_bzdopen+0x2d0>
  40b60e:	48 8b b5 20 ec ff ff 	mov    -0x13e0(%rbp),%rsi
  40b615:	44 8b 8d 08 ec ff ff 	mov    -0x13f8(%rbp),%r9d
  40b61c:	8b 8d 0c ec ff ff    	mov    -0x13f4(%rbp),%ecx
  40b622:	8b 95 14 ec ff ff    	mov    -0x13ec(%rbp),%edx
  40b628:	48 8d 7d c8          	lea    -0x38(%rbp),%rdi
  40b62c:	4c 8d 85 40 ec ff ff 	lea    -0x13c0(%rbp),%r8
  40b633:	e8 a8 f1 ff ff       	callq  40a7e0 <BZ2_bzReadOpen>
  40b638:	48 89 85 18 ec ff ff 	mov    %rax,-0x13e8(%rbp)
  40b63f:	48 83 bd 18 ec ff ff 	cmpq   $0x0,-0x13e8(%rbp)
  40b646:	00 
  40b647:	74 0d                	je     40b656 <bzopen_or_bzdopen+0x296>
  40b649:	48 8b 85 18 ec ff ff 	mov    -0x13e8(%rbp),%rax
  40b650:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40b654:	eb 3a                	jmp    40b690 <bzopen_or_bzdopen+0x2d0>
  40b656:	48 8b 85 20 ec ff ff 	mov    -0x13e0(%rbp),%rax
  40b65d:	48 8b 0d 74 d3 01 00 	mov    0x1d374(%rip),%rcx        # 4289d8 <stdin>
  40b664:	48 39 c8             	cmp    %rcx,%rax
  40b667:	74 1f                	je     40b688 <bzopen_or_bzdopen+0x2c8>
  40b669:	48 8b 85 20 ec ff ff 	mov    -0x13e0(%rbp),%rax
  40b670:	48 8b 0d 69 d3 01 00 	mov    0x1d369(%rip),%rcx        # 4289e0 <stdout>
  40b677:	48 39 c8             	cmp    %rcx,%rax
  40b67a:	74 0c                	je     40b688 <bzopen_or_bzdopen+0x2c8>
  40b67c:	48 8b bd 20 ec ff ff 	mov    -0x13e0(%rbp),%rdi
  40b683:	e8 48 e3 00 00       	callq  4199d0 <fclose>
  40b688:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  40b68f:	00 
  40b690:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b694:	48 81 c4 f0 13 00 00 	add    $0x13f0,%rsp
  40b69b:	5b                   	pop    %rbx
  40b69c:	41 5e                	pop    %r14
  40b69e:	5d                   	pop    %rbp
  40b69f:	c3                   	retq   

000000000040b6a0 <BZ2_bzdopen>:
  40b6a0:	55                   	push   %rbp
  40b6a1:	48 89 e5             	mov    %rsp,%rbp
  40b6a4:	48 83 ec 10          	sub    $0x10,%rsp
  40b6a8:	89 7d fc             	mov    %edi,-0x4(%rbp)
  40b6ab:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40b6ae:	48 89 f2             	mov    %rsi,%rdx
  40b6b1:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  40b6b5:	48 31 ff             	xor    %rdi,%rdi
  40b6b8:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  40b6bf:	48 89 c6             	mov    %rax,%rsi
  40b6c2:	e8 f9 fc ff ff       	callq  40b3c0 <bzopen_or_bzdopen>
  40b6c7:	48 83 c4 10          	add    $0x10,%rsp
  40b6cb:	5d                   	pop    %rbp
  40b6cc:	c3                   	retq   
  40b6cd:	0f 1f 00             	nopl   (%rax)

000000000040b6d0 <BZ2_bzread>:
  40b6d0:	55                   	push   %rbp
  40b6d1:	48 89 e5             	mov    %rsp,%rbp
  40b6d4:	48 83 ec 30          	sub    $0x30,%rsp
  40b6d8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  40b6dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b6e0:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  40b6e4:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  40b6e7:	8b 80 e8 13 00 00    	mov    0x13e8(%rax),%eax
  40b6ed:	48 83 f8 04          	cmp    $0x4,%rax
  40b6f1:	75 05                	jne    40b6f8 <BZ2_bzread+0x28>
  40b6f3:	48 31 c0             	xor    %rax,%rax
  40b6f6:	eb 37                	jmp    40b72f <BZ2_bzread+0x5f>
  40b6f8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40b6fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40b700:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40b703:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
  40b707:	e8 b4 f4 ff ff       	callq  40abc0 <BZ2_bzRead>
  40b70c:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  40b70f:	89 45 dc             	mov    %eax,-0x24(%rbp)
  40b712:	48 85 c9             	test   %rcx,%rcx
  40b715:	74 09                	je     40b720 <BZ2_bzread+0x50>
  40b717:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40b71a:	48 83 f8 04          	cmp    $0x4,%rax
  40b71e:	75 05                	jne    40b725 <BZ2_bzread+0x55>
  40b720:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40b723:	eb 0a                	jmp    40b72f <BZ2_bzread+0x5f>
  40b725:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  40b72c:	00 00 00 
  40b72f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b732:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40b735:	48 83 c4 30          	add    $0x30,%rsp
  40b739:	5d                   	pop    %rbp
  40b73a:	c3                   	retq   
  40b73b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040b740 <BZ2_bzwrite>:
  40b740:	55                   	push   %rbp
  40b741:	48 89 e5             	mov    %rsp,%rbp
  40b744:	48 83 ec 20          	sub    $0x20,%rsp
  40b748:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  40b74c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  40b750:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  40b753:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40b757:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40b75b:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40b75e:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
  40b762:	e8 69 ea ff ff       	callq  40a1d0 <BZ2_bzWrite>
  40b767:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40b76a:	48 85 c0             	test   %rax,%rax
  40b76d:	74 0c                	je     40b77b <BZ2_bzwrite+0x3b>
  40b76f:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  40b776:	00 00 00 
  40b779:	eb 03                	jmp    40b77e <BZ2_bzwrite+0x3e>
  40b77b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40b77e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b781:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40b784:	48 83 c4 20          	add    $0x20,%rsp
  40b788:	5d                   	pop    %rbp
  40b789:	c3                   	retq   
  40b78a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040b790 <BZ2_bzflush>:
  40b790:	55                   	push   %rbp
  40b791:	48 89 e5             	mov    %rsp,%rbp
  40b794:	48 31 c0             	xor    %rax,%rax
  40b797:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40b79b:	5d                   	pop    %rbp
  40b79c:	c3                   	retq   
  40b79d:	0f 1f 00             	nopl   (%rax)

000000000040b7a0 <BZ2_bzclose>:
  40b7a0:	55                   	push   %rbp
  40b7a1:	48 89 e5             	mov    %rsp,%rbp
  40b7a4:	48 83 ec 20          	sub    $0x20,%rsp
  40b7a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40b7ac:	48 8b 07             	mov    (%rdi),%rax
  40b7af:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40b7b4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40b7b8:	74 7f                	je     40b839 <BZ2_bzclose+0x99>
  40b7ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b7be:	0f b6 80 94 13 00 00 	movzbl 0x1394(%rax),%eax
  40b7c5:	48 85 c0             	test   %rax,%rax
  40b7c8:	74 39                	je     40b803 <BZ2_bzclose+0x63>
  40b7ca:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  40b7ce:	48 8d 7d f4          	lea    -0xc(%rbp),%rdi
  40b7d2:	48 31 d2             	xor    %rdx,%rdx
  40b7d5:	48 31 c9             	xor    %rcx,%rcx
  40b7d8:	4d 31 c0             	xor    %r8,%r8
  40b7db:	e8 60 ec ff ff       	callq  40a440 <BZ2_bzWriteClose>
  40b7e0:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40b7e3:	48 85 c0             	test   %rax,%rax
  40b7e6:	74 28                	je     40b810 <BZ2_bzclose+0x70>
  40b7e8:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  40b7ec:	48 31 ff             	xor    %rdi,%rdi
  40b7ef:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  40b7f6:	48 31 c9             	xor    %rcx,%rcx
  40b7f9:	4d 31 c0             	xor    %r8,%r8
  40b7fc:	e8 3f ec ff ff       	callq  40a440 <BZ2_bzWriteClose>
  40b801:	eb 0d                	jmp    40b810 <BZ2_bzclose+0x70>
  40b803:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  40b807:	48 8d 7d f4          	lea    -0xc(%rbp),%rdi
  40b80b:	e8 d0 f2 ff ff       	callq  40aae0 <BZ2_bzReadClose>
  40b810:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b814:	48 8b 0d bd d1 01 00 	mov    0x1d1bd(%rip),%rcx        # 4289d8 <stdin>
  40b81b:	48 39 c8             	cmp    %rcx,%rax
  40b81e:	74 19                	je     40b839 <BZ2_bzclose+0x99>
  40b820:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b824:	48 8b 0d b5 d1 01 00 	mov    0x1d1b5(%rip),%rcx        # 4289e0 <stdout>
  40b82b:	48 39 c8             	cmp    %rcx,%rax
  40b82e:	74 09                	je     40b839 <BZ2_bzclose+0x99>
  40b830:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40b834:	e8 97 e1 00 00       	callq  4199d0 <fclose>
  40b839:	48 83 c4 20          	add    $0x20,%rsp
  40b83d:	5d                   	pop    %rbp
  40b83e:	c3                   	retq   
  40b83f:	90                   	nop

000000000040b840 <BZ2_bzerror>:
  40b840:	55                   	push   %rbp
  40b841:	48 89 e5             	mov    %rsp,%rbp
  40b844:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40b848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b84c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40b850:	48 63 80 e8 13 00 00 	movslq 0x13e8(%rax),%rax
  40b857:	48 85 c0             	test   %rax,%rax
  40b85a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40b85d:	7e 06                	jle    40b865 <BZ2_bzerror+0x25>
  40b85f:	48 31 c0             	xor    %rax,%rax
  40b862:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40b865:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40b868:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40b86c:	89 01                	mov    %eax,(%rcx)
  40b86e:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40b871:	48 f7 d8             	neg    %rax
  40b874:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40b87b:	48 d3 e0             	shl    %cl,%rax
  40b87e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40b885:	48 d3 f8             	sar    %cl,%rax
  40b888:	48 8b 04 c5 50 a8 62 	mov    0x62a850(,%rax,8),%rax
  40b88f:	00 
  40b890:	5d                   	pop    %rbp
  40b891:	c3                   	retq   
  40b892:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40b899:	1f 84 00 00 00 00 00 

000000000040b8a0 <copy_output_until_stop>:
  40b8a0:	55                   	push   %rbp
  40b8a1:	48 89 e5             	mov    %rsp,%rbp
  40b8a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40b8a8:	48 31 c0             	xor    %rax,%rax
  40b8ab:	88 45 f7             	mov    %al,-0x9(%rbp)
  40b8ae:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  40b8b5:	eb 19                	jmp    40b8d0 <copy_output_until_stop+0x30>
  40b8b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40b8be:	00 00 
  40b8c0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b8c4:	48 8b 09             	mov    (%rcx),%rcx
  40b8c7:	8b 51 28             	mov    0x28(%rcx),%edx
  40b8ca:	48 ff c2             	inc    %rdx
  40b8cd:	89 51 28             	mov    %edx,0x28(%rcx)
  40b8d0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b8d4:	48 8b 09             	mov    (%rcx),%rcx
  40b8d7:	8b 49 20             	mov    0x20(%rcx),%ecx
  40b8da:	48 85 c9             	test   %rcx,%rcx
  40b8dd:	74 7d                	je     40b95c <copy_output_until_stop+0xbc>
  40b8df:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b8e3:	48 63 51 78          	movslq 0x78(%rcx),%rdx
  40b8e7:	48 63 49 74          	movslq 0x74(%rcx),%rcx
  40b8eb:	48 39 ca             	cmp    %rcx,%rdx
  40b8ee:	7d 6c                	jge    40b95c <copy_output_until_stop+0xbc>
  40b8f0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b8f4:	88 45 f7             	mov    %al,-0x9(%rbp)
  40b8f7:	48 63 51 78          	movslq 0x78(%rcx),%rdx
  40b8fb:	48 8b 31             	mov    (%rcx),%rsi
  40b8fe:	48 8b 49 50          	mov    0x50(%rcx),%rcx
  40b902:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
  40b906:	48 8b 56 18          	mov    0x18(%rsi),%rdx
  40b90a:	88 0a                	mov    %cl,(%rdx)
  40b90c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b910:	8b 51 78             	mov    0x78(%rcx),%edx
  40b913:	48 ff c2             	inc    %rdx
  40b916:	89 51 78             	mov    %edx,0x78(%rcx)
  40b919:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b91d:	48 8b 09             	mov    (%rcx),%rcx
  40b920:	8b 51 20             	mov    0x20(%rcx),%edx
  40b923:	48 ff ca             	dec    %rdx
  40b926:	89 51 20             	mov    %edx,0x20(%rcx)
  40b929:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b92d:	48 8b 09             	mov    (%rcx),%rcx
  40b930:	48 ff 41 18          	incq   0x18(%rcx)
  40b934:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b938:	48 8b 09             	mov    (%rcx),%rcx
  40b93b:	8b 51 24             	mov    0x24(%rcx),%edx
  40b93e:	48 ff c2             	inc    %rdx
  40b941:	89 51 24             	mov    %edx,0x24(%rcx)
  40b944:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40b948:	48 8b 09             	mov    (%rcx),%rcx
  40b94b:	8b 49 24             	mov    0x24(%rcx),%ecx
  40b94e:	48 85 c9             	test   %rcx,%rcx
  40b951:	0f 85 79 ff ff ff    	jne    40b8d0 <copy_output_until_stop+0x30>
  40b957:	e9 64 ff ff ff       	jmpq   40b8c0 <copy_output_until_stop+0x20>
  40b95c:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
  40b960:	5d                   	pop    %rbp
  40b961:	c3                   	retq   
  40b962:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40b969:	1f 84 00 00 00 00 00 

000000000040b970 <copy_input_until_stop>:
  40b970:	55                   	push   %rbp
  40b971:	48 89 e5             	mov    %rsp,%rbp
  40b974:	53                   	push   %rbx
  40b975:	48 83 ec 28          	sub    $0x28,%rsp
  40b979:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  40b97d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b981:	48 31 c9             	xor    %rcx,%rcx
  40b984:	88 4d ef             	mov    %cl,-0x11(%rbp)
  40b987:	8b 40 08             	mov    0x8(%rax),%eax
  40b98a:	48 c7 c3 01 00 00 00 	mov    $0x1,%rbx
  40b991:	48 83 f8 02          	cmp    $0x2,%rax
  40b995:	75 16                	jne    40b9ad <copy_input_until_stop+0x3d>
  40b997:	e9 d4 01 00 00       	jmpq   40bb70 <copy_input_until_stop+0x200>
  40b99c:	0f 1f 40 00          	nopl   0x0(%rax)
  40b9a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b9a4:	8b 48 10             	mov    0x10(%rax),%ecx
  40b9a7:	48 ff c9             	dec    %rcx
  40b9aa:	89 48 10             	mov    %ecx,0x10(%rax)
  40b9ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b9b1:	48 63 48 6c          	movslq 0x6c(%rax),%rcx
  40b9b5:	48 63 40 70          	movslq 0x70(%rax),%rax
  40b9b9:	48 39 c1             	cmp    %rax,%rcx
  40b9bc:	0f 8d 30 03 00 00    	jge    40bcf2 <copy_input_until_stop+0x382>
  40b9c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b9c6:	48 8b 00             	mov    (%rax),%rax
  40b9c9:	8b 40 08             	mov    0x8(%rax),%eax
  40b9cc:	48 85 c0             	test   %rax,%rax
  40b9cf:	0f 84 1d 03 00 00    	je     40bcf2 <copy_input_until_stop+0x382>
  40b9d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b9d9:	8b 40 10             	mov    0x10(%rax),%eax
  40b9dc:	48 85 c0             	test   %rax,%rax
  40b9df:	0f 84 0d 03 00 00    	je     40bcf2 <copy_input_until_stop+0x382>
  40b9e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b9e9:	88 5d ef             	mov    %bl,-0x11(%rbp)
  40b9ec:	48 8b 00             	mov    (%rax),%rax
  40b9ef:	48 8b 00             	mov    (%rax),%rax
  40b9f2:	0f b6 00             	movzbl (%rax),%eax
  40b9f5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40b9f9:	89 45 e0             	mov    %eax,-0x20(%rbp)
  40b9fc:	8b 49 5c             	mov    0x5c(%rcx),%ecx
  40b9ff:	48 39 c8             	cmp    %rcx,%rax
  40ba02:	0f 84 98 00 00 00    	je     40baa0 <copy_input_until_stop+0x130>
  40ba08:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ba0c:	8b 40 60             	mov    0x60(%rax),%eax
  40ba0f:	48 83 f8 01          	cmp    $0x1,%rax
  40ba13:	0f 85 87 00 00 00    	jne    40baa0 <copy_input_until_stop+0x130>
  40ba19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ba1d:	0f b6 40 5c          	movzbl 0x5c(%rax),%eax
  40ba21:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40ba25:	88 45 df             	mov    %al,-0x21(%rbp)
  40ba28:	8b 82 88 02 00 00    	mov    0x288(%rdx),%eax
  40ba2e:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  40ba35:	48 89 c6             	mov    %rax,%rsi
  40ba38:	0f b6 7d df          	movzbl -0x21(%rbp),%edi
  40ba3c:	48 d3 e6             	shl    %cl,%rsi
  40ba3f:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  40ba46:	48 d3 e8             	shr    %cl,%rax
  40ba49:	48 31 c7             	xor    %rax,%rdi
  40ba4c:	8b 04 bd d0 a8 62 00 	mov    0x62a8d0(,%rdi,4),%eax
  40ba53:	48 31 f0             	xor    %rsi,%rax
  40ba56:	89 82 88 02 00 00    	mov    %eax,0x288(%rdx)
  40ba5c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ba60:	8b 48 5c             	mov    0x5c(%rax),%ecx
  40ba63:	88 9c 08 80 00 00 00 	mov    %bl,0x80(%rax,%rcx,1)
  40ba6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ba6e:	0f b6 4d df          	movzbl -0x21(%rbp),%ecx
  40ba72:	48 63 50 6c          	movslq 0x6c(%rax),%rdx
  40ba76:	48 8b 40 40          	mov    0x40(%rax),%rax
  40ba7a:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  40ba7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ba81:	8b 48 6c             	mov    0x6c(%rax),%ecx
  40ba84:	48 ff c1             	inc    %rcx
  40ba87:	89 48 6c             	mov    %ecx,0x6c(%rax)
  40ba8a:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40ba8d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40ba91:	89 41 5c             	mov    %eax,0x5c(%rcx)
  40ba94:	eb 6a                	jmp    40bb00 <copy_input_until_stop+0x190>
  40ba96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40ba9d:	00 00 00 
  40baa0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40baa4:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  40baa7:	8b 40 5c             	mov    0x5c(%rax),%eax
  40baaa:	48 39 c1             	cmp    %rax,%rcx
  40baad:	75 0f                	jne    40babe <copy_input_until_stop+0x14e>
  40baaf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bab3:	8b 40 60             	mov    0x60(%rax),%eax
  40bab6:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  40babc:	75 2b                	jne    40bae9 <copy_input_until_stop+0x179>
  40babe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bac2:	8b 40 5c             	mov    0x5c(%rax),%eax
  40bac5:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  40bacb:	77 09                	ja     40bad6 <copy_input_until_stop+0x166>
  40bacd:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  40bad1:	e8 5a 02 00 00       	callq  40bd30 <add_pair_to_block>
  40bad6:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40bad9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40badd:	89 41 5c             	mov    %eax,0x5c(%rcx)
  40bae0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bae4:	89 58 60             	mov    %ebx,0x60(%rax)
  40bae7:	eb 17                	jmp    40bb00 <copy_input_until_stop+0x190>
  40bae9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40baed:	8b 48 60             	mov    0x60(%rax),%ecx
  40baf0:	48 ff c1             	inc    %rcx
  40baf3:	89 48 60             	mov    %ecx,0x60(%rax)
  40baf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40bafd:	00 00 00 
  40bb00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bb04:	48 8b 00             	mov    (%rax),%rax
  40bb07:	48 ff 00             	incq   (%rax)
  40bb0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bb0e:	48 8b 00             	mov    (%rax),%rax
  40bb11:	8b 48 08             	mov    0x8(%rax),%ecx
  40bb14:	48 ff c9             	dec    %rcx
  40bb17:	89 48 08             	mov    %ecx,0x8(%rax)
  40bb1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bb1e:	48 8b 00             	mov    (%rax),%rax
  40bb21:	8b 48 0c             	mov    0xc(%rax),%ecx
  40bb24:	48 ff c1             	inc    %rcx
  40bb27:	89 48 0c             	mov    %ecx,0xc(%rax)
  40bb2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bb2e:	48 8b 00             	mov    (%rax),%rax
  40bb31:	8b 40 0c             	mov    0xc(%rax),%eax
  40bb34:	48 85 c0             	test   %rax,%rax
  40bb37:	0f 85 63 fe ff ff    	jne    40b9a0 <copy_input_until_stop+0x30>
  40bb3d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bb41:	48 8b 00             	mov    (%rax),%rax
  40bb44:	8b 48 10             	mov    0x10(%rax),%ecx
  40bb47:	48 ff c1             	inc    %rcx
  40bb4a:	89 48 10             	mov    %ecx,0x10(%rax)
  40bb4d:	e9 4e fe ff ff       	jmpq   40b9a0 <copy_input_until_stop+0x30>
  40bb52:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40bb59:	1f 84 00 00 00 00 00 
  40bb60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bb64:	48 8b 00             	mov    (%rax),%rax
  40bb67:	8b 48 10             	mov    0x10(%rax),%ecx
  40bb6a:	48 ff c1             	inc    %rcx
  40bb6d:	89 48 10             	mov    %ecx,0x10(%rax)
  40bb70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bb74:	48 63 48 6c          	movslq 0x6c(%rax),%rcx
  40bb78:	48 63 40 70          	movslq 0x70(%rax),%rax
  40bb7c:	48 39 c1             	cmp    %rax,%rcx
  40bb7f:	0f 8d 6d 01 00 00    	jge    40bcf2 <copy_input_until_stop+0x382>
  40bb85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bb89:	48 8b 00             	mov    (%rax),%rax
  40bb8c:	8b 40 08             	mov    0x8(%rax),%eax
  40bb8f:	48 85 c0             	test   %rax,%rax
  40bb92:	0f 84 5a 01 00 00    	je     40bcf2 <copy_input_until_stop+0x382>
  40bb98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bb9c:	88 5d ef             	mov    %bl,-0x11(%rbp)
  40bb9f:	48 8b 00             	mov    (%rax),%rax
  40bba2:	48 8b 00             	mov    (%rax),%rax
  40bba5:	0f b6 00             	movzbl (%rax),%eax
  40bba8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40bbac:	89 45 e8             	mov    %eax,-0x18(%rbp)
  40bbaf:	8b 49 5c             	mov    0x5c(%rcx),%ecx
  40bbb2:	48 39 c8             	cmp    %rcx,%rax
  40bbb5:	0f 84 95 00 00 00    	je     40bc50 <copy_input_until_stop+0x2e0>
  40bbbb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bbbf:	8b 40 60             	mov    0x60(%rax),%eax
  40bbc2:	48 83 f8 01          	cmp    $0x1,%rax
  40bbc6:	0f 85 84 00 00 00    	jne    40bc50 <copy_input_until_stop+0x2e0>
  40bbcc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bbd0:	0f b6 40 5c          	movzbl 0x5c(%rax),%eax
  40bbd4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40bbd8:	88 45 e7             	mov    %al,-0x19(%rbp)
  40bbdb:	8b 82 88 02 00 00    	mov    0x288(%rdx),%eax
  40bbe1:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  40bbe8:	48 89 c6             	mov    %rax,%rsi
  40bbeb:	0f b6 7d e7          	movzbl -0x19(%rbp),%edi
  40bbef:	48 d3 e6             	shl    %cl,%rsi
  40bbf2:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  40bbf9:	48 d3 e8             	shr    %cl,%rax
  40bbfc:	48 31 c7             	xor    %rax,%rdi
  40bbff:	8b 04 bd d0 a8 62 00 	mov    0x62a8d0(,%rdi,4),%eax
  40bc06:	48 31 f0             	xor    %rsi,%rax
  40bc09:	89 82 88 02 00 00    	mov    %eax,0x288(%rdx)
  40bc0f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bc13:	8b 48 5c             	mov    0x5c(%rax),%ecx
  40bc16:	88 9c 08 80 00 00 00 	mov    %bl,0x80(%rax,%rcx,1)
  40bc1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bc21:	0f b6 4d e7          	movzbl -0x19(%rbp),%ecx
  40bc25:	48 63 50 6c          	movslq 0x6c(%rax),%rdx
  40bc29:	48 8b 40 40          	mov    0x40(%rax),%rax
  40bc2d:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  40bc30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bc34:	8b 48 6c             	mov    0x6c(%rax),%ecx
  40bc37:	48 ff c1             	inc    %rcx
  40bc3a:	89 48 6c             	mov    %ecx,0x6c(%rax)
  40bc3d:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40bc40:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40bc44:	89 41 5c             	mov    %eax,0x5c(%rcx)
  40bc47:	eb 67                	jmp    40bcb0 <copy_input_until_stop+0x340>
  40bc49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40bc50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bc54:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  40bc57:	8b 40 5c             	mov    0x5c(%rax),%eax
  40bc5a:	48 39 c1             	cmp    %rax,%rcx
  40bc5d:	75 0f                	jne    40bc6e <copy_input_until_stop+0x2fe>
  40bc5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bc63:	8b 40 60             	mov    0x60(%rax),%eax
  40bc66:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  40bc6c:	75 2b                	jne    40bc99 <copy_input_until_stop+0x329>
  40bc6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bc72:	8b 40 5c             	mov    0x5c(%rax),%eax
  40bc75:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  40bc7b:	77 09                	ja     40bc86 <copy_input_until_stop+0x316>
  40bc7d:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  40bc81:	e8 aa 00 00 00       	callq  40bd30 <add_pair_to_block>
  40bc86:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40bc89:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40bc8d:	89 41 5c             	mov    %eax,0x5c(%rcx)
  40bc90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bc94:	89 58 60             	mov    %ebx,0x60(%rax)
  40bc97:	eb 17                	jmp    40bcb0 <copy_input_until_stop+0x340>
  40bc99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bc9d:	8b 48 60             	mov    0x60(%rax),%ecx
  40bca0:	48 ff c1             	inc    %rcx
  40bca3:	89 48 60             	mov    %ecx,0x60(%rax)
  40bca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40bcad:	00 00 00 
  40bcb0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bcb4:	48 8b 00             	mov    (%rax),%rax
  40bcb7:	48 ff 00             	incq   (%rax)
  40bcba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bcbe:	48 8b 00             	mov    (%rax),%rax
  40bcc1:	8b 48 08             	mov    0x8(%rax),%ecx
  40bcc4:	48 ff c9             	dec    %rcx
  40bcc7:	89 48 08             	mov    %ecx,0x8(%rax)
  40bcca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bcce:	48 8b 00             	mov    (%rax),%rax
  40bcd1:	8b 48 0c             	mov    0xc(%rax),%ecx
  40bcd4:	48 ff c1             	inc    %rcx
  40bcd7:	89 48 0c             	mov    %ecx,0xc(%rax)
  40bcda:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40bcde:	48 8b 00             	mov    (%rax),%rax
  40bce1:	8b 40 0c             	mov    0xc(%rax),%eax
  40bce4:	48 85 c0             	test   %rax,%rax
  40bce7:	0f 85 83 fe ff ff    	jne    40bb70 <copy_input_until_stop+0x200>
  40bced:	e9 6e fe ff ff       	jmpq   40bb60 <copy_input_until_stop+0x1f0>
  40bcf2:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
  40bcf6:	48 83 c4 28          	add    $0x28,%rsp
  40bcfa:	5b                   	pop    %rbx
  40bcfb:	5d                   	pop    %rbp
  40bcfc:	c3                   	retq   
  40bcfd:	0f 1f 00             	nopl   (%rax)

000000000040bd00 <flush_RL>:
  40bd00:	55                   	push   %rbp
  40bd01:	48 89 e5             	mov    %rsp,%rbp
  40bd04:	48 83 ec 10          	sub    $0x10,%rsp
  40bd08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40bd0c:	8b 47 5c             	mov    0x5c(%rdi),%eax
  40bd0f:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  40bd15:	77 09                	ja     40bd20 <flush_RL+0x20>
  40bd17:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40bd1b:	e8 10 00 00 00       	callq  40bd30 <add_pair_to_block>
  40bd20:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40bd24:	e8 87 c1 ff ff       	callq  407eb0 <init_RL>
  40bd29:	48 83 c4 10          	add    $0x10,%rsp
  40bd2d:	5d                   	pop    %rbp
  40bd2e:	c3                   	retq   
  40bd2f:	90                   	nop

000000000040bd30 <add_pair_to_block>:
  40bd30:	55                   	push   %rbp
  40bd31:	48 89 e5             	mov    %rsp,%rbp
  40bd34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40bd38:	0f b6 47 5c          	movzbl 0x5c(%rdi),%eax
  40bd3c:	88 45 f3             	mov    %al,-0xd(%rbp)
  40bd3f:	48 31 c0             	xor    %rax,%rax
  40bd42:	eb 4a                	jmp    40bd8e <add_pair_to_block+0x5e>
  40bd44:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40bd4b:	00 00 00 00 00 
  40bd50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bd54:	8b 90 88 02 00 00    	mov    0x288(%rax),%edx
  40bd5a:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  40bd61:	48 89 d6             	mov    %rdx,%rsi
  40bd64:	0f b6 7d f3          	movzbl -0xd(%rbp),%edi
  40bd68:	48 d3 e6             	shl    %cl,%rsi
  40bd6b:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  40bd72:	48 d3 ea             	shr    %cl,%rdx
  40bd75:	48 31 d7             	xor    %rdx,%rdi
  40bd78:	8b 0c bd d0 a8 62 00 	mov    0x62a8d0(,%rdi,4),%ecx
  40bd7f:	48 31 f1             	xor    %rsi,%rcx
  40bd82:	89 88 88 02 00 00    	mov    %ecx,0x288(%rax)
  40bd88:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40bd8b:	48 ff c0             	inc    %rax
  40bd8e:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40bd91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bd95:	48 63 4d f4          	movslq -0xc(%rbp),%rcx
  40bd99:	48 63 40 60          	movslq 0x60(%rax),%rax
  40bd9d:	48 39 c1             	cmp    %rax,%rcx
  40bda0:	7c ae                	jl     40bd50 <add_pair_to_block+0x20>
  40bda2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bda6:	8b 48 5c             	mov    0x5c(%rax),%ecx
  40bda9:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  40bdb0:	88 94 08 80 00 00 00 	mov    %dl,0x80(%rax,%rcx,1)
  40bdb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bdbb:	8b 40 60             	mov    0x60(%rax),%eax
  40bdbe:	48 83 f8 03          	cmp    $0x3,%rax
  40bdc2:	0f 84 bc 00 00 00    	je     40be84 <add_pair_to_block+0x154>
  40bdc8:	48 83 f8 02          	cmp    $0x2,%rax
  40bdcc:	0f 84 d2 00 00 00    	je     40bea4 <add_pair_to_block+0x174>
  40bdd2:	48 83 f8 01          	cmp    $0x1,%rax
  40bdd6:	0f 84 e8 00 00 00    	je     40bec4 <add_pair_to_block+0x194>
  40bddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bde0:	48 63 48 60          	movslq 0x60(%rax),%rcx
  40bde4:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  40bdeb:	88 54 01 7c          	mov    %dl,0x7c(%rcx,%rax,1)
  40bdef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bdf3:	0f b6 4d f3          	movzbl -0xd(%rbp),%ecx
  40bdf7:	48 63 50 6c          	movslq 0x6c(%rax),%rdx
  40bdfb:	48 8b 40 40          	mov    0x40(%rax),%rax
  40bdff:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  40be02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be06:	8b 48 6c             	mov    0x6c(%rax),%ecx
  40be09:	48 ff c1             	inc    %rcx
  40be0c:	89 48 6c             	mov    %ecx,0x6c(%rax)
  40be0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be13:	0f b6 4d f3          	movzbl -0xd(%rbp),%ecx
  40be17:	48 63 50 6c          	movslq 0x6c(%rax),%rdx
  40be1b:	48 8b 40 40          	mov    0x40(%rax),%rax
  40be1f:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  40be22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be26:	8b 48 6c             	mov    0x6c(%rax),%ecx
  40be29:	48 ff c1             	inc    %rcx
  40be2c:	89 48 6c             	mov    %ecx,0x6c(%rax)
  40be2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be33:	0f b6 4d f3          	movzbl -0xd(%rbp),%ecx
  40be37:	48 63 50 6c          	movslq 0x6c(%rax),%rdx
  40be3b:	48 8b 40 40          	mov    0x40(%rax),%rax
  40be3f:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  40be42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be46:	8b 48 6c             	mov    0x6c(%rax),%ecx
  40be49:	48 ff c1             	inc    %rcx
  40be4c:	89 48 6c             	mov    %ecx,0x6c(%rax)
  40be4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be53:	0f b6 4d f3          	movzbl -0xd(%rbp),%ecx
  40be57:	48 63 50 6c          	movslq 0x6c(%rax),%rdx
  40be5b:	48 8b 40 40          	mov    0x40(%rax),%rax
  40be5f:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  40be62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be66:	8b 48 6c             	mov    0x6c(%rax),%ecx
  40be69:	48 ff c1             	inc    %rcx
  40be6c:	89 48 6c             	mov    %ecx,0x6c(%rax)
  40be6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be73:	8b 48 60             	mov    0x60(%rax),%ecx
  40be76:	48 63 50 6c          	movslq 0x6c(%rax),%rdx
  40be7a:	48 8b 40 40          	mov    0x40(%rax),%rax
  40be7e:	48 83 c1 fc          	add    $0xfffffffffffffffc,%rcx
  40be82:	eb 50                	jmp    40bed4 <add_pair_to_block+0x1a4>
  40be84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be88:	0f b6 4d f3          	movzbl -0xd(%rbp),%ecx
  40be8c:	48 63 50 6c          	movslq 0x6c(%rax),%rdx
  40be90:	48 8b 40 40          	mov    0x40(%rax),%rax
  40be94:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  40be97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40be9b:	8b 48 6c             	mov    0x6c(%rax),%ecx
  40be9e:	48 ff c1             	inc    %rcx
  40bea1:	89 48 6c             	mov    %ecx,0x6c(%rax)
  40bea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bea8:	0f b6 4d f3          	movzbl -0xd(%rbp),%ecx
  40beac:	48 63 50 6c          	movslq 0x6c(%rax),%rdx
  40beb0:	48 8b 40 40          	mov    0x40(%rax),%rax
  40beb4:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  40beb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bebb:	8b 48 6c             	mov    0x6c(%rax),%ecx
  40bebe:	48 ff c1             	inc    %rcx
  40bec1:	89 48 6c             	mov    %ecx,0x6c(%rax)
  40bec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bec8:	0f b6 4d f3          	movzbl -0xd(%rbp),%ecx
  40becc:	48 63 50 6c          	movslq 0x6c(%rax),%rdx
  40bed0:	48 8b 40 40          	mov    0x40(%rax),%rax
  40bed4:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  40bed7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bedb:	8b 48 6c             	mov    0x6c(%rax),%ecx
  40bede:	48 ff c1             	inc    %rcx
  40bee1:	89 48 6c             	mov    %ecx,0x6c(%rax)
  40bee4:	5d                   	pop    %rbp
  40bee5:	c3                   	retq   
  40bee6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40beed:	00 00 00 

000000000040bef0 <BZ2_bsInitWrite>:
  40bef0:	55                   	push   %rbp
  40bef1:	48 89 e5             	mov    %rsp,%rbp
  40bef4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40bef8:	48 31 c0             	xor    %rax,%rax
  40befb:	89 87 84 02 00 00    	mov    %eax,0x284(%rdi)
  40bf01:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40bf05:	89 81 80 02 00 00    	mov    %eax,0x280(%rcx)
  40bf0b:	5d                   	pop    %rbp
  40bf0c:	c3                   	retq   
  40bf0d:	0f 1f 00             	nopl   (%rax)

000000000040bf10 <BZ2_compressBlock>:
  40bf10:	55                   	push   %rbp
  40bf11:	48 89 e5             	mov    %rsp,%rbp
  40bf14:	48 83 ec 10          	sub    $0x10,%rsp
  40bf18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40bf1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bf20:	40 88 75 f7          	mov    %sil,-0x9(%rbp)
  40bf24:	48 63 40 6c          	movslq 0x6c(%rax),%rax
  40bf28:	48 85 c0             	test   %rax,%rax
  40bf2b:	0f 8e b9 00 00 00    	jle    40bfea <BZ2_compressBlock+0xda>
  40bf31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bf35:	8b 88 88 02 00 00    	mov    0x288(%rax),%ecx
  40bf3b:	48 f7 d1             	not    %rcx
  40bf3e:	89 88 88 02 00 00    	mov    %ecx,0x288(%rax)
  40bf44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bf48:	8b 90 8c 02 00 00    	mov    0x28c(%rax),%edx
  40bf4e:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  40bf55:	48 89 d6             	mov    %rdx,%rsi
  40bf58:	48 d3 ee             	shr    %cl,%rsi
  40bf5b:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
  40bf5f:	48 09 f1             	or     %rsi,%rcx
  40bf62:	89 88 8c 02 00 00    	mov    %ecx,0x28c(%rax)
  40bf68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bf6c:	8b 88 88 02 00 00    	mov    0x288(%rax),%ecx
  40bf72:	8b 90 8c 02 00 00    	mov    0x28c(%rax),%edx
  40bf78:	48 31 ca             	xor    %rcx,%rdx
  40bf7b:	89 90 8c 02 00 00    	mov    %edx,0x28c(%rax)
  40bf81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bf85:	48 63 80 94 02 00 00 	movslq 0x294(%rax),%rax
  40bf8c:	48 83 f8 02          	cmp    $0x2,%rax
  40bf90:	7c 0a                	jl     40bf9c <BZ2_compressBlock+0x8c>
  40bf92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bf96:	48 31 c9             	xor    %rcx,%rcx
  40bf99:	89 48 74             	mov    %ecx,0x74(%rax)
  40bf9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bfa0:	48 63 80 90 02 00 00 	movslq 0x290(%rax),%rax
  40bfa7:	48 83 f8 02          	cmp    $0x2,%rax
  40bfab:	7c 34                	jl     40bfe1 <BZ2_compressBlock+0xd1>
  40bfad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bfb1:	48 8b 3d 18 ca 01 00 	mov    0x1ca18(%rip),%rdi        # 4289d0 <stderr>
  40bfb8:	44 8b 48 6c          	mov    0x6c(%rax),%r9d
  40bfbc:	44 8b 80 8c 02 00 00 	mov    0x28c(%rax),%r8d
  40bfc3:	8b 88 88 02 00 00    	mov    0x288(%rax),%ecx
  40bfc9:	8b 90 94 02 00 00    	mov    0x294(%rax),%edx
  40bfcf:	48 be 4e 7d 42 00 00 	movabs $0x427d4e,%rsi
  40bfd6:	00 00 00 
  40bfd9:	48 31 c0             	xor    %rax,%rax
  40bfdc:	e8 17 dd 00 00       	callq  419cf8 <fprintf>
  40bfe1:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40bfe5:	e8 06 41 ff ff       	callq  4000f0 <BZ2_blockSort>
  40bfea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40bfee:	48 63 48 6c          	movslq 0x6c(%rax),%rcx
  40bff2:	48 8b 50 20          	mov    0x20(%rax),%rdx
  40bff6:	48 01 ca             	add    %rcx,%rdx
  40bff9:	48 89 50 50          	mov    %rdx,0x50(%rax)
  40bffd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c001:	8b 80 94 02 00 00    	mov    0x294(%rax),%eax
  40c007:	48 83 f8 01          	cmp    $0x1,%rax
  40c00b:	75 53                	jne    40c060 <BZ2_compressBlock+0x150>
  40c00d:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c011:	e8 da fe ff ff       	callq  40bef0 <BZ2_bsInitWrite>
  40c016:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c01a:	48 c7 c6 42 00 00 00 	mov    $0x42,%rsi
  40c021:	e8 ba 01 00 00       	callq  40c1e0 <bsPutUChar>
  40c026:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c02a:	48 c7 c6 5a 00 00 00 	mov    $0x5a,%rsi
  40c031:	e8 aa 01 00 00       	callq  40c1e0 <bsPutUChar>
  40c036:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c03a:	48 c7 c6 68 00 00 00 	mov    $0x68,%rsi
  40c041:	e8 9a 01 00 00       	callq  40c1e0 <bsPutUChar>
  40c046:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c04a:	8b b7 98 02 00 00    	mov    0x298(%rdi),%esi
  40c050:	48 83 c6 30          	add    $0x30,%rsi
  40c054:	48 81 e6 ff 00 00 00 	and    $0xff,%rsi
  40c05b:	e8 80 01 00 00       	callq  40c1e0 <bsPutUChar>
  40c060:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c064:	48 63 40 6c          	movslq 0x6c(%rax),%rax
  40c068:	48 85 c0             	test   %rax,%rax
  40c06b:	0f 8e a7 00 00 00    	jle    40c118 <BZ2_compressBlock+0x208>
  40c071:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c075:	48 c7 c6 31 00 00 00 	mov    $0x31,%rsi
  40c07c:	e8 5f 01 00 00       	callq  40c1e0 <bsPutUChar>
  40c081:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c085:	48 c7 c6 41 00 00 00 	mov    $0x41,%rsi
  40c08c:	e8 4f 01 00 00       	callq  40c1e0 <bsPutUChar>
  40c091:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c095:	48 c7 c6 59 00 00 00 	mov    $0x59,%rsi
  40c09c:	e8 3f 01 00 00       	callq  40c1e0 <bsPutUChar>
  40c0a1:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c0a5:	48 c7 c6 26 00 00 00 	mov    $0x26,%rsi
  40c0ac:	e8 2f 01 00 00       	callq  40c1e0 <bsPutUChar>
  40c0b1:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c0b5:	48 c7 c6 53 00 00 00 	mov    $0x53,%rsi
  40c0bc:	e8 1f 01 00 00       	callq  40c1e0 <bsPutUChar>
  40c0c1:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c0c5:	48 c7 c6 59 00 00 00 	mov    $0x59,%rsi
  40c0cc:	e8 0f 01 00 00       	callq  40c1e0 <bsPutUChar>
  40c0d1:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c0d5:	8b b7 88 02 00 00    	mov    0x288(%rdi),%esi
  40c0db:	e8 30 01 00 00       	callq  40c210 <bsPutUInt32>
  40c0e0:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c0e4:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  40c0eb:	48 31 d2             	xor    %rdx,%rdx
  40c0ee:	e8 9d 01 00 00       	callq  40c290 <bsW>
  40c0f3:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c0f7:	8b 57 30             	mov    0x30(%rdi),%edx
  40c0fa:	48 c7 c6 18 00 00 00 	mov    $0x18,%rsi
  40c101:	e8 8a 01 00 00       	callq  40c290 <bsW>
  40c106:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c10a:	e8 41 02 00 00       	callq  40c350 <generateMTFValues>
  40c10f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c113:	e8 98 02 00 00       	callq  40c3b0 <sendMTFValues>
  40c118:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
  40c11c:	48 85 c0             	test   %rax,%rax
  40c11f:	0f 84 ac 00 00 00    	je     40c1d1 <BZ2_compressBlock+0x2c1>
  40c125:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c129:	48 c7 c6 17 00 00 00 	mov    $0x17,%rsi
  40c130:	e8 ab 00 00 00       	callq  40c1e0 <bsPutUChar>
  40c135:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c139:	48 c7 c6 72 00 00 00 	mov    $0x72,%rsi
  40c140:	e8 9b 00 00 00       	callq  40c1e0 <bsPutUChar>
  40c145:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c149:	48 c7 c6 45 00 00 00 	mov    $0x45,%rsi
  40c150:	e8 8b 00 00 00       	callq  40c1e0 <bsPutUChar>
  40c155:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c159:	48 c7 c6 38 00 00 00 	mov    $0x38,%rsi
  40c160:	e8 7b 00 00 00       	callq  40c1e0 <bsPutUChar>
  40c165:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c169:	48 c7 c6 50 00 00 00 	mov    $0x50,%rsi
  40c170:	e8 6b 00 00 00       	callq  40c1e0 <bsPutUChar>
  40c175:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c179:	48 c7 c6 90 00 00 00 	mov    $0x90,%rsi
  40c180:	e8 5b 00 00 00       	callq  40c1e0 <bsPutUChar>
  40c185:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c189:	8b b7 8c 02 00 00    	mov    0x28c(%rdi),%esi
  40c18f:	e8 7c 00 00 00       	callq  40c210 <bsPutUInt32>
  40c194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c198:	48 63 80 90 02 00 00 	movslq 0x290(%rax),%rax
  40c19f:	48 83 f8 02          	cmp    $0x2,%rax
  40c1a3:	7c 23                	jl     40c1c8 <BZ2_compressBlock+0x2b8>
  40c1a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c1a9:	48 8b 3d 20 c8 01 00 	mov    0x1c820(%rip),%rdi        # 4289d0 <stderr>
  40c1b0:	8b 90 8c 02 00 00    	mov    0x28c(%rax),%edx
  40c1b6:	48 be 8c 7d 42 00 00 	movabs $0x427d8c,%rsi
  40c1bd:	00 00 00 
  40c1c0:	48 31 c0             	xor    %rax,%rax
  40c1c3:	e8 30 db 00 00       	callq  419cf8 <fprintf>
  40c1c8:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c1cc:	e8 5f 55 00 00       	callq  411730 <bsFinishWrite>
  40c1d1:	48 83 c4 10          	add    $0x10,%rsp
  40c1d5:	5d                   	pop    %rbp
  40c1d6:	c3                   	retq   
  40c1d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40c1de:	00 00 

000000000040c1e0 <bsPutUChar>:
  40c1e0:	55                   	push   %rbp
  40c1e1:	48 89 e5             	mov    %rsp,%rbp
  40c1e4:	48 83 ec 10          	sub    $0x10,%rsp
  40c1e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40c1ec:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c1f0:	48 89 f0             	mov    %rsi,%rax
  40c1f3:	88 45 f7             	mov    %al,-0x9(%rbp)
  40c1f6:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
  40c1fd:	48 89 c2             	mov    %rax,%rdx
  40c200:	e8 8b 00 00 00       	callq  40c290 <bsW>
  40c205:	48 83 c4 10          	add    $0x10,%rsp
  40c209:	5d                   	pop    %rbp
  40c20a:	c3                   	retq   
  40c20b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000040c210 <bsPutUInt32>:
  40c210:	55                   	push   %rbp
  40c211:	48 89 e5             	mov    %rsp,%rbp
  40c214:	48 83 ec 10          	sub    $0x10,%rsp
  40c218:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40c21c:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40c21f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c223:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
  40c227:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
  40c22e:	e8 5d 00 00 00       	callq  40c290 <bsW>
  40c233:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c237:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
  40c23b:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
  40c242:	e8 49 00 00 00       	callq  40c290 <bsW>
  40c247:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40c24a:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c24e:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  40c255:	48 d3 ea             	shr    %cl,%rdx
  40c258:	48 81 e2 ff 00 00 00 	and    $0xff,%rdx
  40c25f:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
  40c266:	e8 25 00 00 00       	callq  40c290 <bsW>
  40c26b:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c26f:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  40c273:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
  40c27a:	e8 11 00 00 00       	callq  40c290 <bsW>
  40c27f:	48 83 c4 10          	add    $0x10,%rsp
  40c283:	5d                   	pop    %rbp
  40c284:	c3                   	retq   
  40c285:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40c28c:	00 00 00 00 

000000000040c290 <bsW>:
  40c290:	55                   	push   %rbp
  40c291:	48 89 e5             	mov    %rsp,%rbp
  40c294:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40c298:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40c29b:	89 55 f0             	mov    %edx,-0x10(%rbp)
  40c29e:	eb 51                	jmp    40c2f1 <bsW+0x61>
  40c2a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c2a4:	0f b6 88 83 02 00 00 	movzbl 0x283(%rax),%ecx
  40c2ab:	48 63 50 74          	movslq 0x74(%rax),%rdx
  40c2af:	48 8b 40 50          	mov    0x50(%rax),%rax
  40c2b3:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  40c2b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c2ba:	8b 48 74             	mov    0x74(%rax),%ecx
  40c2bd:	48 ff c1             	inc    %rcx
  40c2c0:	89 48 74             	mov    %ecx,0x74(%rax)
  40c2c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c2c7:	8b 90 80 02 00 00    	mov    0x280(%rax),%edx
  40c2cd:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  40c2d4:	48 d3 e2             	shl    %cl,%rdx
  40c2d7:	89 90 80 02 00 00    	mov    %edx,0x280(%rax)
  40c2dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c2e1:	8b 88 84 02 00 00    	mov    0x284(%rax),%ecx
  40c2e7:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  40c2eb:	89 88 84 02 00 00    	mov    %ecx,0x284(%rax)
  40c2f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c2f5:	48 63 80 84 02 00 00 	movslq 0x284(%rax),%rax
  40c2fc:	48 83 f8 08          	cmp    $0x8,%rax
  40c300:	7d 9e                	jge    40c2a0 <bsW+0x10>
  40c302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c306:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40c309:	44 8b 80 84 02 00 00 	mov    0x284(%rax),%r8d
  40c310:	8b 7d f4             	mov    -0xc(%rbp),%edi
  40c313:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40c31a:	8b b0 80 02 00 00    	mov    0x280(%rax),%esi
  40c320:	4c 29 c1             	sub    %r8,%rcx
  40c323:	48 29 f9             	sub    %rdi,%rcx
  40c326:	48 d3 e2             	shl    %cl,%rdx
  40c329:	48 09 d6             	or     %rdx,%rsi
  40c32c:	89 b0 80 02 00 00    	mov    %esi,0x280(%rax)
  40c332:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c336:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  40c339:	8b 90 84 02 00 00    	mov    0x284(%rax),%edx
  40c33f:	48 01 ca             	add    %rcx,%rdx
  40c342:	89 90 84 02 00 00    	mov    %edx,0x284(%rax)
  40c348:	5d                   	pop    %rbp
  40c349:	c3                   	retq   
  40c34a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000040c350 <generateMTFValues>:
  40c350:	55                   	push   %rbp
  40c351:	48 89 e5             	mov    %rsp,%rbp
  40c354:	48 83 ec 30          	sub    $0x30,%rsp
  40c358:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40c35c:	48 8b 47 38          	mov    0x38(%rdi),%rax
  40c360:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40c364:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40c368:	48 8b 41 40          	mov    0x40(%rcx),%rax
  40c36c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40c370:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40c374:	48 8b 41 48          	mov    0x48(%rcx),%rax
  40c378:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c37c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40c380:	e8 2b 54 00 00       	callq  4117b0 <makeMaps_e>
  40c385:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40c389:	8b 40 7c             	mov    0x7c(%rax),%eax
  40c38c:	48 ff c0             	inc    %rax
  40c38f:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40c392:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40c396:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40c39a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40c39e:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
  40c3a2:	8b 75 f4             	mov    -0xc(%rbp),%esi
  40c3a5:	e8 66 54 00 00       	callq  411810 <generateMTFValues1>
  40c3aa:	48 83 c4 30          	add    $0x30,%rsp
  40c3ae:	5d                   	pop    %rbp
  40c3af:	c3                   	retq   

000000000040c3b0 <sendMTFValues>:
  40c3b0:	55                   	push   %rbp
  40c3b1:	48 89 e5             	mov    %rsp,%rbp
  40c3b4:	41 57                	push   %r15
  40c3b6:	41 56                	push   %r14
  40c3b8:	41 55                	push   %r13
  40c3ba:	41 54                	push   %r12
  40c3bc:	53                   	push   %rbx
  40c3bd:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
  40c3c4:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  40c3c8:	48 8b 47 48          	mov    0x48(%rdi),%rax
  40c3cc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40c3d0:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  40c3d7:	48 63 81 90 02 00 00 	movslq 0x290(%rcx),%rax
  40c3de:	48 83 f8 03          	cmp    $0x3,%rax
  40c3e2:	7c 2a                	jl     40c40e <sendMTFValues+0x5e>
  40c3e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40c3e8:	48 8b 3d e1 c5 01 00 	mov    0x1c5e1(%rip),%rdi        # 4289d0 <stderr>
  40c3ef:	44 8b 40 7c          	mov    0x7c(%rax),%r8d
  40c3f3:	8b 88 9c 02 00 00    	mov    0x29c(%rax),%ecx
  40c3f9:	8b 50 6c             	mov    0x6c(%rax),%edx
  40c3fc:	48 be b0 7d 42 00 00 	movabs $0x427db0,%rsi
  40c403:	00 00 00 
  40c406:	48 31 c0             	xor    %rax,%rax
  40c409:	e8 ea d8 00 00       	callq  419cf8 <fprintf>
  40c40e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40c412:	8b 40 7c             	mov    0x7c(%rax),%eax
  40c415:	48 83 c0 02          	add    $0x2,%rax
  40c419:	89 45 a0             	mov    %eax,-0x60(%rbp)
  40c41c:	48 31 c0             	xor    %rax,%rax
  40c41f:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40c422:	48 c7 c1 0f 00 00 00 	mov    $0xf,%rcx
  40c429:	eb 0e                	jmp    40c439 <sendMTFValues+0x89>
  40c42b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40c430:	8b 55 c8             	mov    -0x38(%rbp),%edx
  40c433:	48 ff c2             	inc    %rdx
  40c436:	89 55 c8             	mov    %edx,-0x38(%rbp)
  40c439:	48 63 55 c8          	movslq -0x38(%rbp),%rdx
  40c43d:	48 83 fa 05          	cmp    $0x5,%rdx
  40c441:	7f 42                	jg     40c485 <sendMTFValues+0xd5>
  40c443:	89 45 cc             	mov    %eax,-0x34(%rbp)
  40c446:	eb 2e                	jmp    40c476 <sendMTFValues+0xc6>
  40c448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40c44f:	00 
  40c450:	48 63 55 c8          	movslq -0x38(%rbp),%rdx
  40c454:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40c458:	48 63 7d cc          	movslq -0x34(%rbp),%rdi
  40c45c:	48 69 d2 02 01 00 00 	imul   $0x102,%rdx,%rdx
  40c463:	48 01 f2             	add    %rsi,%rdx
  40c466:	88 8c 17 4c 93 00 00 	mov    %cl,0x934c(%rdi,%rdx,1)
  40c46d:	8b 55 cc             	mov    -0x34(%rbp),%edx
  40c470:	48 ff c2             	inc    %rdx
  40c473:	89 55 cc             	mov    %edx,-0x34(%rbp)
  40c476:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
  40c47a:	48 63 75 a0          	movslq -0x60(%rbp),%rsi
  40c47e:	48 39 f2             	cmp    %rsi,%rdx
  40c481:	7c cd                	jl     40c450 <sendMTFValues+0xa0>
  40c483:	eb ab                	jmp    40c430 <sendMTFValues+0x80>
  40c485:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40c489:	48 63 80 9c 02 00 00 	movslq 0x29c(%rax),%rax
  40c490:	48 85 c0             	test   %rax,%rax
  40c493:	7f 0c                	jg     40c4a1 <sendMTFValues+0xf1>
  40c495:	48 c7 c7 b9 0b 00 00 	mov    $0xbb9,%rdi
  40c49c:	e8 df b5 ff ff       	callq  407a80 <BZ2_bz__AssertH__fail>
  40c4a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40c4a5:	48 63 80 9c 02 00 00 	movslq 0x29c(%rax),%rax
  40c4ac:	48 3d c7 00 00 00    	cmp    $0xc7,%rax
  40c4b2:	7f 09                	jg     40c4bd <sendMTFValues+0x10d>
  40c4b4:	48 c7 c0 02 00 00 00 	mov    $0x2,%rax
  40c4bb:	eb 5b                	jmp    40c518 <sendMTFValues+0x168>
  40c4bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40c4c1:	48 63 80 9c 02 00 00 	movslq 0x29c(%rax),%rax
  40c4c8:	48 3d 57 02 00 00    	cmp    $0x257,%rax
  40c4ce:	7f 09                	jg     40c4d9 <sendMTFValues+0x129>
  40c4d0:	48 c7 c0 03 00 00 00 	mov    $0x3,%rax
  40c4d7:	eb 3f                	jmp    40c518 <sendMTFValues+0x168>
  40c4d9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40c4dd:	48 63 80 9c 02 00 00 	movslq 0x29c(%rax),%rax
  40c4e4:	48 3d af 04 00 00    	cmp    $0x4af,%rax
  40c4ea:	7f 09                	jg     40c4f5 <sendMTFValues+0x145>
  40c4ec:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
  40c4f3:	eb 23                	jmp    40c518 <sendMTFValues+0x168>
  40c4f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40c4f9:	48 63 80 9c 02 00 00 	movslq 0x29c(%rax),%rax
  40c500:	48 3d 5f 09 00 00    	cmp    $0x95f,%rax
  40c506:	7f 09                	jg     40c511 <sendMTFValues+0x161>
  40c508:	48 c7 c0 05 00 00 00 	mov    $0x5,%rax
  40c50f:	eb 07                	jmp    40c518 <sendMTFValues+0x168>
  40c511:	48 c7 c0 06 00 00 00 	mov    $0x6,%rax
  40c518:	89 45 90             	mov    %eax,-0x70(%rbp)
  40c51b:	8b 45 90             	mov    -0x70(%rbp),%eax
  40c51e:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  40c524:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40c528:	8b 80 9c 02 00 00    	mov    0x29c(%rax),%eax
  40c52e:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  40c534:	4d 31 ff             	xor    %r15,%r15
  40c537:	44 89 7d bc          	mov    %r15d,-0x44(%rbp)
  40c53b:	49 be 00 00 00 00 00 	movabs $0x0,%r14
  40c542:	00 00 00 
  40c545:	48 bf 01 00 00 00 00 	movabs $0x1,%rdi
  40c54c:	00 00 00 
  40c54f:	49 b9 ff ff ff ff 00 	movabs $0xffffffff,%r9
  40c556:	00 00 00 
  40c559:	49 c7 c5 0f 00 00 00 	mov    $0xf,%r13
  40c560:	eb 3b                	jmp    40c59d <sendMTFValues+0x1ed>
  40c562:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40c569:	1f 84 00 00 00 00 00 
  40c570:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  40c576:	48 ff c8             	dec    %rax
  40c579:	8b 4d b8             	mov    -0x48(%rbp),%ecx
  40c57c:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
  40c582:	8b b5 50 ff ff ff    	mov    -0xb0(%rbp),%esi
  40c588:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
  40c58e:	48 ff c1             	inc    %rcx
  40c591:	89 4d bc             	mov    %ecx,-0x44(%rbp)
  40c594:	48 29 d6             	sub    %rdx,%rsi
  40c597:	89 b5 50 ff ff ff    	mov    %esi,-0xb0(%rbp)
  40c59d:	48 63 85 54 ff ff ff 	movslq -0xac(%rbp),%rax
  40c5a4:	48 85 c0             	test   %rax,%rax
  40c5a7:	0f 8e 8f 02 00 00    	jle    40c83c <sendMTFValues+0x48c>
  40c5ad:	48 63 85 50 ff ff ff 	movslq -0xb0(%rbp),%rax
  40c5b4:	48 63 8d 54 ff ff ff 	movslq -0xac(%rbp),%rcx
  40c5bb:	48 99                	cqto   
  40c5bd:	48 f7 f9             	idiv   %rcx
  40c5c0:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  40c5c3:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  40c5c9:	48 ff c9             	dec    %rcx
  40c5cc:	89 4d b8             	mov    %ecx,-0x48(%rbp)
  40c5cf:	44 89 bd 48 ff ff ff 	mov    %r15d,-0xb8(%rbp)
  40c5d6:	eb 2f                	jmp    40c607 <sendMTFValues+0x257>
  40c5d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40c5df:	00 
  40c5e0:	8b 45 b8             	mov    -0x48(%rbp),%eax
  40c5e3:	48 ff c0             	inc    %rax
  40c5e6:	89 45 b8             	mov    %eax,-0x48(%rbp)
  40c5e9:	48 63 45 b8          	movslq -0x48(%rbp),%rax
  40c5ed:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40c5f1:	8b 84 81 a0 02 00 00 	mov    0x2a0(%rcx,%rax,4),%eax
  40c5f8:	8b 8d 48 ff ff ff    	mov    -0xb8(%rbp),%ecx
  40c5fe:	48 01 c1             	add    %rax,%rcx
  40c601:	89 8d 48 ff ff ff    	mov    %ecx,-0xb8(%rbp)
  40c607:	48 63 8d 48 ff ff ff 	movslq -0xb8(%rbp),%rcx
  40c60e:	48 63 95 4c ff ff ff 	movslq -0xb4(%rbp),%rdx
  40c615:	48 31 c0             	xor    %rax,%rax
  40c618:	48 39 d1             	cmp    %rdx,%rcx
  40c61b:	7d 29                	jge    40c646 <sendMTFValues+0x296>
  40c61d:	8b 45 a0             	mov    -0x60(%rbp),%eax
  40c620:	48 63 55 b8          	movslq -0x48(%rbp),%rdx
  40c624:	48 ff c8             	dec    %rax
  40c627:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40c62e:	48 d3 e0             	shl    %cl,%rax
  40c631:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40c638:	48 d3 f8             	sar    %cl,%rax
  40c63b:	48 39 c2             	cmp    %rax,%rdx
  40c63e:	4c 89 f0             	mov    %r14,%rax
  40c641:	7d 03                	jge    40c646 <sendMTFValues+0x296>
  40c643:	48 89 f8             	mov    %rdi,%rax
  40c646:	48 85 c0             	test   %rax,%rax
  40c649:	75 95                	jne    40c5e0 <sendMTFValues+0x230>
  40c64b:	49 89 fc             	mov    %rdi,%r12
  40c64e:	48 63 45 b8          	movslq -0x48(%rbp),%rax
  40c652:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  40c656:	48 39 c8             	cmp    %rcx,%rax
  40c659:	0f 8e 91 00 00 00    	jle    40c6f0 <sendMTFValues+0x340>
  40c65f:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  40c665:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  40c668:	48 39 c8             	cmp    %rcx,%rax
  40c66b:	0f 84 7f 00 00 00    	je     40c6f0 <sendMTFValues+0x340>
  40c671:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
  40c677:	48 83 f8 01          	cmp    $0x1,%rax
  40c67b:	74 73                	je     40c6f0 <sendMTFValues+0x340>
  40c67d:	8b 45 90             	mov    -0x70(%rbp),%eax
  40c680:	8b 8d 54 ff ff ff    	mov    -0xac(%rbp),%ecx
  40c686:	48 29 c8             	sub    %rcx,%rax
  40c689:	48 89 c2             	mov    %rax,%rdx
  40c68c:	48 b9 00 00 00 80 00 	movabs $0x80000000,%rcx
  40c693:	00 00 00 
  40c696:	48 21 ca             	and    %rcx,%rdx
  40c699:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  40c6a0:	48 d3 ea             	shr    %cl,%rdx
  40c6a3:	48 01 c2             	add    %rax,%rdx
  40c6a6:	48 b9 fe ff ff ff 00 	movabs $0xfffffffe,%rcx
  40c6ad:	00 00 00 
  40c6b0:	48 21 ca             	and    %rcx,%rdx
  40c6b3:	48 29 d0             	sub    %rdx,%rax
  40c6b6:	4c 21 c8             	and    %r9,%rax
  40c6b9:	48 83 f8 01          	cmp    $0x1,%rax
  40c6bd:	75 31                	jne    40c6f0 <sendMTFValues+0x340>
  40c6bf:	48 63 45 b8          	movslq -0x48(%rbp),%rax
  40c6c3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40c6c7:	8b 84 81 a0 02 00 00 	mov    0x2a0(%rcx,%rax,4),%eax
  40c6ce:	8b 8d 48 ff ff ff    	mov    -0xb8(%rbp),%ecx
  40c6d4:	8b 55 b8             	mov    -0x48(%rbp),%edx
  40c6d7:	48 29 c1             	sub    %rax,%rcx
  40c6da:	89 8d 48 ff ff ff    	mov    %ecx,-0xb8(%rbp)
  40c6e0:	48 ff ca             	dec    %rdx
  40c6e3:	89 55 b8             	mov    %edx,-0x48(%rbp)
  40c6e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c6ed:	00 00 00 
  40c6f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40c6f4:	48 63 80 90 02 00 00 	movslq 0x290(%rax),%rax
  40c6fb:	48 83 f8 03          	cmp    $0x3,%rax
  40c6ff:	7c 78                	jl     40c779 <sendMTFValues+0x3c9>
  40c701:	8b bd 48 ff ff ff    	mov    -0xb8(%rbp),%edi
  40c707:	e8 04 17 01 00       	callq  41de10 <int32_to_float64>
  40c70c:	48 89 c7             	mov    %rax,%rdi
  40c70f:	48 be 00 00 00 00 00 	movabs $0x4059000000000000,%rsi
  40c716:	00 59 40 
  40c719:	e8 d2 6d 01 00       	callq  4234f0 <float64_mul>
  40c71e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40c722:	8b b9 9c 02 00 00    	mov    0x29c(%rcx),%edi
  40c728:	48 89 c3             	mov    %rax,%rbx
  40c72b:	e8 e0 16 01 00       	callq  41de10 <int32_to_float64>
  40c730:	48 89 df             	mov    %rbx,%rdi
  40c733:	48 89 c6             	mov    %rax,%rsi
  40c736:	e8 45 76 01 00       	callq  423d80 <float64_div>
  40c73b:	44 8b 45 b8          	mov    -0x48(%rbp),%r8d
  40c73f:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  40c742:	8b 95 54 ff ff ff    	mov    -0xac(%rbp),%edx
  40c748:	48 89 c6             	mov    %rax,%rsi
  40c74b:	48 31 c0             	xor    %rax,%rax
  40c74e:	48 89 34 24          	mov    %rsi,(%rsp)
  40c752:	48 8b 3d 77 c2 01 00 	mov    0x1c277(%rip),%rdi        # 4289d0 <stderr>
  40c759:	48 be f0 7d 42 00 00 	movabs $0x427df0,%rsi
  40c760:	00 00 00 
  40c763:	44 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%r9d
  40c76a:	e8 89 d5 00 00       	callq  419cf8 <fprintf>
  40c76f:	49 b9 ff ff ff ff 00 	movabs $0xffffffff,%r9
  40c776:	00 00 00 
  40c779:	44 89 7d cc          	mov    %r15d,-0x34(%rbp)
  40c77d:	4c 89 e7             	mov    %r12,%rdi
  40c780:	eb 17                	jmp    40c799 <sendMTFValues+0x3e9>
  40c782:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40c789:	1f 84 00 00 00 00 00 
  40c790:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40c793:	48 ff c0             	inc    %rax
  40c796:	89 45 cc             	mov    %eax,-0x34(%rbp)
  40c799:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40c79d:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  40c7a1:	48 39 c8             	cmp    %rcx,%rax
  40c7a4:	0f 8d c6 fd ff ff    	jge    40c570 <sendMTFValues+0x1c0>
  40c7aa:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40c7ae:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  40c7b2:	48 39 c8             	cmp    %rcx,%rax
  40c7b5:	7c 49                	jl     40c800 <sendMTFValues+0x450>
  40c7b7:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40c7bb:	48 63 4d b8          	movslq -0x48(%rbp),%rcx
  40c7bf:	48 39 c8             	cmp    %rcx,%rax
  40c7c2:	7f 3c                	jg     40c800 <sendMTFValues+0x450>
  40c7c4:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40c7c8:	8b 95 54 ff ff ff    	mov    -0xac(%rbp),%edx
  40c7ce:	48 ff ca             	dec    %rdx
  40c7d1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40c7d8:	48 d3 e2             	shl    %cl,%rdx
  40c7db:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40c7df:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40c7e6:	48 d3 fa             	sar    %cl,%rdx
  40c7e9:	48 69 ca 02 01 00 00 	imul   $0x102,%rdx,%rcx
  40c7f0:	48 01 f1             	add    %rsi,%rcx
  40c7f3:	44 88 bc 08 4c 93 00 	mov    %r15b,0x934c(%rax,%rcx,1)
  40c7fa:	00 
  40c7fb:	eb 93                	jmp    40c790 <sendMTFValues+0x3e0>
  40c7fd:	0f 1f 00             	nopl   (%rax)
  40c800:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40c804:	8b 95 54 ff ff ff    	mov    -0xac(%rbp),%edx
  40c80a:	48 ff ca             	dec    %rdx
  40c80d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40c814:	48 d3 e2             	shl    %cl,%rdx
  40c817:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40c81b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40c822:	48 d3 fa             	sar    %cl,%rdx
  40c825:	48 69 ca 02 01 00 00 	imul   $0x102,%rdx,%rcx
  40c82c:	48 01 f1             	add    %rsi,%rcx
  40c82f:	44 88 ac 08 4c 93 00 	mov    %r13b,0x934c(%rax,%rcx,1)
  40c836:	00 
  40c837:	e9 54 ff ff ff       	jmpq   40c790 <sendMTFValues+0x3e0>
  40c83c:	4d 31 ed             	xor    %r13,%r13
  40c83f:	44 89 6d a8          	mov    %r13d,-0x58(%rbp)
  40c843:	49 bc 54 7e 42 00 00 	movabs $0x427e54,%r12
  40c84a:	00 00 00 
  40c84d:	49 c7 c7 ff c9 9a 3b 	mov    $0x3b9ac9ff,%r15
  40c854:	eb 16                	jmp    40c86c <sendMTFValues+0x4bc>
  40c856:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c85d:	00 00 00 
  40c860:	8b 45 a8             	mov    -0x58(%rbp),%eax
  40c863:	48 ff c0             	inc    %rax
  40c866:	89 45 a8             	mov    %eax,-0x58(%rbp)
  40c869:	4d 89 f1             	mov    %r14,%r9
  40c86c:	48 63 45 a8          	movslq -0x58(%rbp),%rax
  40c870:	48 83 f8 03          	cmp    $0x3,%rax
  40c874:	0f 8f 96 35 00 00    	jg     40fe10 <sendMTFValues+0x3a60>
  40c87a:	44 89 6d c8          	mov    %r13d,-0x38(%rbp)
  40c87e:	eb 15                	jmp    40c895 <sendMTFValues+0x4e5>
  40c880:	8b 45 c8             	mov    -0x38(%rbp),%eax
  40c883:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  40c887:	44 89 ac 8d 60 ff ff 	mov    %r13d,-0xa0(%rbp,%rcx,4)
  40c88e:	ff 
  40c88f:	48 ff c0             	inc    %rax
  40c892:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40c895:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40c899:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  40c89d:	48 39 c8             	cmp    %rcx,%rax
  40c8a0:	7c de                	jl     40c880 <sendMTFValues+0x4d0>
  40c8a2:	44 89 6d c8          	mov    %r13d,-0x38(%rbp)
  40c8a6:	eb 11                	jmp    40c8b9 <sendMTFValues+0x509>
  40c8a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40c8af:	00 
  40c8b0:	8b 45 c8             	mov    -0x38(%rbp),%eax
  40c8b3:	48 ff c0             	inc    %rax
  40c8b6:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40c8b9:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40c8bd:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  40c8c1:	48 39 c8             	cmp    %rcx,%rax
  40c8c4:	7d 4a                	jge    40c910 <sendMTFValues+0x560>
  40c8c6:	44 89 6d cc          	mov    %r13d,-0x34(%rbp)
  40c8ca:	eb 2b                	jmp    40c8f7 <sendMTFValues+0x547>
  40c8cc:	0f 1f 40 00          	nopl   0x0(%rax)
  40c8d0:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40c8d4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40c8d8:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
  40c8dc:	48 69 c0 08 04 00 00 	imul   $0x408,%rax,%rax
  40c8e3:	48 01 c8             	add    %rcx,%rax
  40c8e6:	44 89 ac 90 88 b1 00 	mov    %r13d,0xb188(%rax,%rdx,4)
  40c8ed:	00 
  40c8ee:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40c8f1:	48 ff c0             	inc    %rax
  40c8f4:	89 45 cc             	mov    %eax,-0x34(%rbp)
  40c8f7:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40c8fb:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  40c8ff:	48 39 c8             	cmp    %rcx,%rax
  40c902:	7c cc                	jl     40c8d0 <sendMTFValues+0x520>
  40c904:	eb aa                	jmp    40c8b0 <sendMTFValues+0x500>
  40c906:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c90d:	00 00 00 
  40c910:	8b 45 90             	mov    -0x70(%rbp),%eax
  40c913:	48 83 f8 06          	cmp    $0x6,%rax
  40c917:	0f 85 cf 00 00 00    	jne    40c9ec <sendMTFValues+0x63c>
  40c91d:	44 89 6d cc          	mov    %r13d,-0x34(%rbp)
  40c921:	e9 b5 00 00 00       	jmpq   40c9db <sendMTFValues+0x62b>
  40c926:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40c92d:	00 00 00 
  40c930:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40c934:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40c938:	0f b6 b4 02 4e 94 00 	movzbl 0x944e(%rdx,%rax,1),%esi
  40c93f:	00 
  40c940:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  40c947:	48 d3 e6             	shl    %cl,%rsi
  40c94a:	0f b6 bc 02 4c 93 00 	movzbl 0x934c(%rdx,%rax,1),%edi
  40c951:	00 
  40c952:	48 09 f7             	or     %rsi,%rdi
  40c955:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40c95c:	48 d3 e0             	shl    %cl,%rax
  40c95f:	89 bc 02 b8 c9 00 00 	mov    %edi,0xc9b8(%rdx,%rax,1)
  40c966:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40c96a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40c96e:	0f b6 b4 02 52 96 00 	movzbl 0x9652(%rdx,%rax,1),%esi
  40c975:	00 
  40c976:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  40c97d:	48 d3 e6             	shl    %cl,%rsi
  40c980:	0f b6 bc 02 50 95 00 	movzbl 0x9550(%rdx,%rax,1),%edi
  40c987:	00 
  40c988:	48 09 f7             	or     %rsi,%rdi
  40c98b:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40c992:	48 d3 e0             	shl    %cl,%rax
  40c995:	89 bc 02 bc c9 00 00 	mov    %edi,0xc9bc(%rdx,%rax,1)
  40c99c:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40c9a0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40c9a4:	0f b6 b4 02 56 98 00 	movzbl 0x9856(%rdx,%rax,1),%esi
  40c9ab:	00 
  40c9ac:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  40c9b3:	0f b6 bc 02 54 97 00 	movzbl 0x9754(%rdx,%rax,1),%edi
  40c9ba:	00 
  40c9bb:	48 d3 e6             	shl    %cl,%rsi
  40c9be:	48 09 f7             	or     %rsi,%rdi
  40c9c1:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40c9c8:	48 d3 e0             	shl    %cl,%rax
  40c9cb:	89 bc 02 c0 c9 00 00 	mov    %edi,0xc9c0(%rdx,%rax,1)
  40c9d2:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40c9d5:	48 ff c0             	inc    %rax
  40c9d8:	89 45 cc             	mov    %eax,-0x34(%rbp)
  40c9db:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  40c9df:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  40c9e3:	48 39 c8             	cmp    %rcx,%rax
  40c9e6:	0f 8c 44 ff ff ff    	jl     40c930 <sendMTFValues+0x580>
  40c9ec:	44 89 6d a4          	mov    %r13d,-0x5c(%rbp)
  40c9f0:	44 89 6d b4          	mov    %r13d,-0x4c(%rbp)
  40c9f4:	44 89 6d bc          	mov    %r13d,-0x44(%rbp)
  40c9f8:	eb 0f                	jmp    40ca09 <sendMTFValues+0x659>
  40c9fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  40ca00:	8b 45 b8             	mov    -0x48(%rbp),%eax
  40ca03:	48 ff c0             	inc    %rax
  40ca06:	89 45 bc             	mov    %eax,-0x44(%rbp)
  40ca09:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40ca0d:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  40ca11:	48 63 80 9c 02 00 00 	movslq 0x29c(%rax),%rax
  40ca18:	48 39 c1             	cmp    %rax,%rcx
  40ca1b:	0f 8d cf 32 00 00    	jge    40fcf0 <sendMTFValues+0x3940>
  40ca21:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40ca24:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ca28:	48 83 c0 31          	add    $0x31,%rax
  40ca2c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ca33:	89 45 b8             	mov    %eax,-0x48(%rbp)
  40ca36:	48 63 92 9c 02 00 00 	movslq 0x29c(%rdx),%rdx
  40ca3d:	48 d3 e0             	shl    %cl,%rax
  40ca40:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ca47:	48 d3 f8             	sar    %cl,%rax
  40ca4a:	48 39 d0             	cmp    %rdx,%rax
  40ca4d:	7c 10                	jl     40ca5f <sendMTFValues+0x6af>
  40ca4f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40ca53:	8b 80 9c 02 00 00    	mov    0x29c(%rax),%eax
  40ca59:	48 ff c8             	dec    %rax
  40ca5c:	89 45 b8             	mov    %eax,-0x48(%rbp)
  40ca5f:	44 89 6d c8          	mov    %r13d,-0x38(%rbp)
  40ca63:	eb 1e                	jmp    40ca83 <sendMTFValues+0x6d3>
  40ca65:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40ca6c:	00 00 00 00 
  40ca70:	8b 45 c8             	mov    -0x38(%rbp),%eax
  40ca73:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  40ca77:	66 44 89 6c 4d 80    	mov    %r13w,-0x80(%rbp,%rcx,2)
  40ca7d:	48 ff c0             	inc    %rax
  40ca80:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40ca83:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40ca87:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  40ca8b:	48 39 c8             	cmp    %rcx,%rax
  40ca8e:	7c e0                	jl     40ca70 <sendMTFValues+0x6c0>
  40ca90:	8b 45 90             	mov    -0x70(%rbp),%eax
  40ca93:	48 83 f8 06          	cmp    $0x6,%rax
  40ca97:	0f 85 63 22 00 00    	jne    40ed00 <sendMTFValues+0x2950>
  40ca9d:	8b 45 b8             	mov    -0x48(%rbp),%eax
  40caa0:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  40caa3:	48 29 c8             	sub    %rcx,%rax
  40caa6:	4c 21 c8             	and    %r9,%rax
  40caa9:	48 83 f8 31          	cmp    $0x31,%rax
  40caad:	0f 85 4d 22 00 00    	jne    40ed00 <sendMTFValues+0x2950>
  40cab3:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  40cab7:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  40cabe:	44 89 ad 3c ff ff ff 	mov    %r13d,-0xc4(%rbp)
  40cac5:	44 89 ad 40 ff ff ff 	mov    %r13d,-0xc0(%rbp)
  40cacc:	44 89 ad 44 ff ff ff 	mov    %r13d,-0xbc(%rbp)
  40cad3:	0f b6 04 41          	movzbl (%rcx,%rax,2),%eax
  40cad7:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40cade:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cae5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cae9:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40caf0:	48 d3 e0             	shl    %cl,%rax
  40caf3:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40cafa:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40cb00:	48 01 c1             	add    %rax,%rcx
  40cb03:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40cb09:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cb10:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cb14:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cb1b:	48 d3 e0             	shl    %cl,%rax
  40cb1e:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40cb25:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40cb2b:	48 01 c1             	add    %rax,%rcx
  40cb2e:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40cb34:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cb3b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cb3f:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cb46:	48 d3 e0             	shl    %cl,%rax
  40cb49:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40cb50:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40cb56:	48 01 c1             	add    %rax,%rcx
  40cb59:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40cb5f:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40cb62:	48 ff c0             	inc    %rax
  40cb65:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40cb6c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40cb73:	48 d3 e0             	shl    %cl,%rax
  40cb76:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40cb7d:	48 d3 f8             	sar    %cl,%rax
  40cb80:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40cb84:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40cb8b:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cb92:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cb96:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cb9d:	48 d3 e0             	shl    %cl,%rax
  40cba0:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40cba7:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40cbad:	48 01 c1             	add    %rax,%rcx
  40cbb0:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40cbb6:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cbbd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cbc1:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cbc8:	48 d3 e0             	shl    %cl,%rax
  40cbcb:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40cbd2:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40cbd8:	48 01 c1             	add    %rax,%rcx
  40cbdb:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40cbe1:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cbe8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cbec:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cbf3:	48 d3 e0             	shl    %cl,%rax
  40cbf6:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40cbfd:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40cc03:	48 01 c1             	add    %rax,%rcx
  40cc06:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40cc0c:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40cc0f:	48 83 c0 02          	add    $0x2,%rax
  40cc13:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40cc1a:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40cc21:	48 d3 e0             	shl    %cl,%rax
  40cc24:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40cc2b:	48 d3 f8             	sar    %cl,%rax
  40cc2e:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40cc32:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40cc39:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cc40:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cc44:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cc4b:	48 d3 e0             	shl    %cl,%rax
  40cc4e:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40cc55:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40cc5b:	48 01 c1             	add    %rax,%rcx
  40cc5e:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40cc64:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cc6b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cc6f:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cc76:	48 d3 e0             	shl    %cl,%rax
  40cc79:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40cc80:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40cc86:	48 01 c1             	add    %rax,%rcx
  40cc89:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40cc8f:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cc96:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cc9a:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cca1:	48 d3 e0             	shl    %cl,%rax
  40cca4:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40ccab:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40ccb1:	48 01 c1             	add    %rax,%rcx
  40ccb4:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40ccba:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40ccbd:	48 83 c0 03          	add    $0x3,%rax
  40ccc1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ccc8:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40cccf:	48 d3 e0             	shl    %cl,%rax
  40ccd2:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ccd9:	48 d3 f8             	sar    %cl,%rax
  40ccdc:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40cce0:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40cce7:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40ccee:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ccf2:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ccf9:	48 d3 e0             	shl    %cl,%rax
  40ccfc:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40cd03:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40cd09:	48 01 c1             	add    %rax,%rcx
  40cd0c:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40cd12:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cd19:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cd1d:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cd24:	48 d3 e0             	shl    %cl,%rax
  40cd27:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40cd2e:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40cd34:	48 01 c1             	add    %rax,%rcx
  40cd37:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40cd3d:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cd44:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cd48:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cd4f:	48 d3 e0             	shl    %cl,%rax
  40cd52:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40cd59:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40cd5f:	48 01 c1             	add    %rax,%rcx
  40cd62:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40cd68:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40cd6b:	48 83 c0 04          	add    $0x4,%rax
  40cd6f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40cd76:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40cd7d:	48 d3 e0             	shl    %cl,%rax
  40cd80:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40cd87:	48 d3 f8             	sar    %cl,%rax
  40cd8a:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40cd8e:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40cd95:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cd9c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cda0:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cda7:	48 d3 e0             	shl    %cl,%rax
  40cdaa:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40cdb1:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40cdb7:	48 01 c1             	add    %rax,%rcx
  40cdba:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40cdc0:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cdc7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cdcb:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cdd2:	48 d3 e0             	shl    %cl,%rax
  40cdd5:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40cddc:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40cde2:	48 01 c1             	add    %rax,%rcx
  40cde5:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40cdeb:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cdf2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cdf6:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cdfd:	48 d3 e0             	shl    %cl,%rax
  40ce00:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40ce07:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40ce0d:	48 01 c1             	add    %rax,%rcx
  40ce10:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40ce16:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40ce19:	48 83 c0 05          	add    $0x5,%rax
  40ce1d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ce24:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40ce2b:	48 d3 e0             	shl    %cl,%rax
  40ce2e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ce35:	48 d3 f8             	sar    %cl,%rax
  40ce38:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40ce3c:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40ce43:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40ce4a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ce4e:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ce55:	48 d3 e0             	shl    %cl,%rax
  40ce58:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40ce5f:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40ce65:	48 01 c1             	add    %rax,%rcx
  40ce68:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40ce6e:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40ce75:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ce79:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ce80:	48 d3 e0             	shl    %cl,%rax
  40ce83:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40ce8a:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40ce90:	48 01 c1             	add    %rax,%rcx
  40ce93:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40ce99:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cea0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cea4:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ceab:	48 d3 e0             	shl    %cl,%rax
  40ceae:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40ceb5:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40cebb:	48 01 c1             	add    %rax,%rcx
  40cebe:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40cec4:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40cec7:	48 83 c0 06          	add    $0x6,%rax
  40cecb:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ced2:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40ced9:	48 d3 e0             	shl    %cl,%rax
  40cedc:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40cee3:	48 d3 f8             	sar    %cl,%rax
  40cee6:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40ceea:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40cef1:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cef8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cefc:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cf03:	48 d3 e0             	shl    %cl,%rax
  40cf06:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40cf0d:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40cf13:	48 01 c1             	add    %rax,%rcx
  40cf16:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40cf1c:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cf23:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cf27:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cf2e:	48 d3 e0             	shl    %cl,%rax
  40cf31:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40cf38:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40cf3e:	48 01 c1             	add    %rax,%rcx
  40cf41:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40cf47:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cf4e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cf52:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cf59:	48 d3 e0             	shl    %cl,%rax
  40cf5c:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40cf63:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40cf69:	48 01 c1             	add    %rax,%rcx
  40cf6c:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40cf72:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40cf75:	48 83 c0 07          	add    $0x7,%rax
  40cf79:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40cf80:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40cf87:	48 d3 e0             	shl    %cl,%rax
  40cf8a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40cf91:	48 d3 f8             	sar    %cl,%rax
  40cf94:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40cf98:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40cf9f:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cfa6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cfaa:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cfb1:	48 d3 e0             	shl    %cl,%rax
  40cfb4:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40cfbb:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40cfc1:	48 01 c1             	add    %rax,%rcx
  40cfc4:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40cfca:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cfd1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40cfd5:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40cfdc:	48 d3 e0             	shl    %cl,%rax
  40cfdf:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40cfe6:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40cfec:	48 01 c1             	add    %rax,%rcx
  40cfef:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40cff5:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40cffc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d000:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d007:	48 d3 e0             	shl    %cl,%rax
  40d00a:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d011:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d017:	48 01 c1             	add    %rax,%rcx
  40d01a:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d020:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d023:	48 83 c0 08          	add    $0x8,%rax
  40d027:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d02e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d035:	48 d3 e0             	shl    %cl,%rax
  40d038:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d03f:	48 d3 f8             	sar    %cl,%rax
  40d042:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d046:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d04d:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d054:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d058:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d05f:	48 d3 e0             	shl    %cl,%rax
  40d062:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d069:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d06f:	48 01 c1             	add    %rax,%rcx
  40d072:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d078:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d07f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d083:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d08a:	48 d3 e0             	shl    %cl,%rax
  40d08d:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d094:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d09a:	48 01 c1             	add    %rax,%rcx
  40d09d:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d0a3:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d0aa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d0ae:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d0b5:	48 d3 e0             	shl    %cl,%rax
  40d0b8:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d0bf:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d0c5:	48 01 c1             	add    %rax,%rcx
  40d0c8:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d0ce:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d0d1:	48 83 c0 09          	add    $0x9,%rax
  40d0d5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d0dc:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d0e3:	48 d3 e0             	shl    %cl,%rax
  40d0e6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d0ed:	48 d3 f8             	sar    %cl,%rax
  40d0f0:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d0f4:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d0fb:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d102:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d106:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d10d:	48 d3 e0             	shl    %cl,%rax
  40d110:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d117:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d11d:	48 01 c1             	add    %rax,%rcx
  40d120:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d126:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d12d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d131:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d138:	48 d3 e0             	shl    %cl,%rax
  40d13b:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d142:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d148:	48 01 c1             	add    %rax,%rcx
  40d14b:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d151:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d158:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d15c:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d163:	48 d3 e0             	shl    %cl,%rax
  40d166:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d16d:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d173:	48 01 c1             	add    %rax,%rcx
  40d176:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d17c:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d17f:	48 83 c0 0a          	add    $0xa,%rax
  40d183:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d18a:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d191:	48 d3 e0             	shl    %cl,%rax
  40d194:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d19b:	48 d3 f8             	sar    %cl,%rax
  40d19e:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d1a2:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d1a9:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d1b0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d1b4:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d1bb:	48 d3 e0             	shl    %cl,%rax
  40d1be:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d1c5:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d1cb:	48 01 c1             	add    %rax,%rcx
  40d1ce:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d1d4:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d1db:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d1df:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d1e6:	48 d3 e0             	shl    %cl,%rax
  40d1e9:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d1f0:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d1f6:	48 01 c1             	add    %rax,%rcx
  40d1f9:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d1ff:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d206:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d20a:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d211:	48 d3 e0             	shl    %cl,%rax
  40d214:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d21b:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d221:	48 01 c1             	add    %rax,%rcx
  40d224:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d22a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d22d:	48 83 c0 0b          	add    $0xb,%rax
  40d231:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d238:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d23f:	48 d3 e0             	shl    %cl,%rax
  40d242:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d249:	48 d3 f8             	sar    %cl,%rax
  40d24c:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d250:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d257:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d25e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d262:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d269:	48 d3 e0             	shl    %cl,%rax
  40d26c:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d273:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d279:	48 01 c1             	add    %rax,%rcx
  40d27c:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d282:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d289:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d28d:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d294:	48 d3 e0             	shl    %cl,%rax
  40d297:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d29e:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d2a4:	48 01 c1             	add    %rax,%rcx
  40d2a7:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d2ad:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d2b4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d2b8:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d2bf:	48 d3 e0             	shl    %cl,%rax
  40d2c2:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d2c9:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d2cf:	48 01 c1             	add    %rax,%rcx
  40d2d2:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d2d8:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d2db:	48 83 c0 0c          	add    $0xc,%rax
  40d2df:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d2e6:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d2ed:	48 d3 e0             	shl    %cl,%rax
  40d2f0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d2f7:	48 d3 f8             	sar    %cl,%rax
  40d2fa:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d2fe:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d305:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d30c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d310:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d317:	48 d3 e0             	shl    %cl,%rax
  40d31a:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d321:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d327:	48 01 c1             	add    %rax,%rcx
  40d32a:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d330:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d337:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d33b:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d342:	48 d3 e0             	shl    %cl,%rax
  40d345:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d34c:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d352:	48 01 c1             	add    %rax,%rcx
  40d355:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d35b:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d362:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d366:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d36d:	48 d3 e0             	shl    %cl,%rax
  40d370:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d377:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d37d:	48 01 c1             	add    %rax,%rcx
  40d380:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d386:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d389:	48 83 c0 0d          	add    $0xd,%rax
  40d38d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d394:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d39b:	48 d3 e0             	shl    %cl,%rax
  40d39e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d3a5:	48 d3 f8             	sar    %cl,%rax
  40d3a8:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d3ac:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d3b3:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d3ba:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d3be:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d3c5:	48 d3 e0             	shl    %cl,%rax
  40d3c8:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d3cf:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d3d5:	48 01 c1             	add    %rax,%rcx
  40d3d8:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d3de:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d3e5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d3e9:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d3f0:	48 d3 e0             	shl    %cl,%rax
  40d3f3:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d3fa:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d400:	48 01 c1             	add    %rax,%rcx
  40d403:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d409:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d410:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d414:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d41b:	48 d3 e0             	shl    %cl,%rax
  40d41e:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d425:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d42b:	48 01 c1             	add    %rax,%rcx
  40d42e:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d434:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d437:	48 83 c0 0e          	add    $0xe,%rax
  40d43b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d442:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d449:	48 d3 e0             	shl    %cl,%rax
  40d44c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d453:	48 d3 f8             	sar    %cl,%rax
  40d456:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d45a:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d461:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d468:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d46c:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d473:	48 d3 e0             	shl    %cl,%rax
  40d476:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d47d:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d483:	48 01 c1             	add    %rax,%rcx
  40d486:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d48c:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d493:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d497:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d49e:	48 d3 e0             	shl    %cl,%rax
  40d4a1:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d4a8:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d4ae:	48 01 c1             	add    %rax,%rcx
  40d4b1:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d4b7:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d4be:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d4c2:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d4c9:	48 d3 e0             	shl    %cl,%rax
  40d4cc:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d4d3:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d4d9:	48 01 c1             	add    %rax,%rcx
  40d4dc:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d4e2:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d4e5:	48 83 c0 0f          	add    $0xf,%rax
  40d4e9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d4f0:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d4f7:	48 d3 e0             	shl    %cl,%rax
  40d4fa:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d501:	48 d3 f8             	sar    %cl,%rax
  40d504:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d508:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d50f:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d516:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d51a:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d521:	48 d3 e0             	shl    %cl,%rax
  40d524:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d52b:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d531:	48 01 c1             	add    %rax,%rcx
  40d534:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d53a:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d541:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d545:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d54c:	48 d3 e0             	shl    %cl,%rax
  40d54f:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d556:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d55c:	48 01 c1             	add    %rax,%rcx
  40d55f:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d565:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d56c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d570:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d577:	48 d3 e0             	shl    %cl,%rax
  40d57a:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d581:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d587:	48 01 c1             	add    %rax,%rcx
  40d58a:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d590:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d593:	48 83 c0 10          	add    $0x10,%rax
  40d597:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d59e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d5a5:	48 d3 e0             	shl    %cl,%rax
  40d5a8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d5af:	48 d3 f8             	sar    %cl,%rax
  40d5b2:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d5b6:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d5bd:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d5c4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d5c8:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d5cf:	48 d3 e0             	shl    %cl,%rax
  40d5d2:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d5d9:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d5df:	48 01 c1             	add    %rax,%rcx
  40d5e2:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d5e8:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d5ef:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d5f3:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d5fa:	48 d3 e0             	shl    %cl,%rax
  40d5fd:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d604:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d60a:	48 01 c1             	add    %rax,%rcx
  40d60d:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d613:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d61a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d61e:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d625:	48 d3 e0             	shl    %cl,%rax
  40d628:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d62f:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d635:	48 01 c1             	add    %rax,%rcx
  40d638:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d63e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d641:	48 83 c0 11          	add    $0x11,%rax
  40d645:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d64c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d653:	48 d3 e0             	shl    %cl,%rax
  40d656:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d65d:	48 d3 f8             	sar    %cl,%rax
  40d660:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d664:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d66b:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d672:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d676:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d67d:	48 d3 e0             	shl    %cl,%rax
  40d680:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d687:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d68d:	48 01 c1             	add    %rax,%rcx
  40d690:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d696:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d69d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d6a1:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d6a8:	48 d3 e0             	shl    %cl,%rax
  40d6ab:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d6b2:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d6b8:	48 01 c1             	add    %rax,%rcx
  40d6bb:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d6c1:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d6c8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d6cc:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d6d3:	48 d3 e0             	shl    %cl,%rax
  40d6d6:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d6dd:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d6e3:	48 01 c1             	add    %rax,%rcx
  40d6e6:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d6ec:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d6ef:	48 83 c0 12          	add    $0x12,%rax
  40d6f3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d6fa:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d701:	48 d3 e0             	shl    %cl,%rax
  40d704:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d70b:	48 d3 f8             	sar    %cl,%rax
  40d70e:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d712:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d719:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d720:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d724:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d72b:	48 d3 e0             	shl    %cl,%rax
  40d72e:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d735:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d73b:	48 01 c1             	add    %rax,%rcx
  40d73e:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d744:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d74b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d74f:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d756:	48 d3 e0             	shl    %cl,%rax
  40d759:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d760:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d766:	48 01 c1             	add    %rax,%rcx
  40d769:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d76f:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d776:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d77a:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d781:	48 d3 e0             	shl    %cl,%rax
  40d784:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d78b:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d791:	48 01 c1             	add    %rax,%rcx
  40d794:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d79a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d79d:	48 83 c0 13          	add    $0x13,%rax
  40d7a1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d7a8:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d7af:	48 d3 e0             	shl    %cl,%rax
  40d7b2:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d7b9:	48 d3 f8             	sar    %cl,%rax
  40d7bc:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d7c0:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d7c7:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d7ce:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d7d2:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d7d9:	48 d3 e0             	shl    %cl,%rax
  40d7dc:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d7e3:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d7e9:	48 01 c1             	add    %rax,%rcx
  40d7ec:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d7f2:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d7f9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d7fd:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d804:	48 d3 e0             	shl    %cl,%rax
  40d807:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d80e:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d814:	48 01 c1             	add    %rax,%rcx
  40d817:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d81d:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d824:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d828:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d82f:	48 d3 e0             	shl    %cl,%rax
  40d832:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d839:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d83f:	48 01 c1             	add    %rax,%rcx
  40d842:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d848:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d84b:	48 83 c0 14          	add    $0x14,%rax
  40d84f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d856:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d85d:	48 d3 e0             	shl    %cl,%rax
  40d860:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d867:	48 d3 f8             	sar    %cl,%rax
  40d86a:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d86e:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d875:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d87c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d880:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d887:	48 d3 e0             	shl    %cl,%rax
  40d88a:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d891:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d897:	48 01 c1             	add    %rax,%rcx
  40d89a:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d8a0:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d8a7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d8ab:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d8b2:	48 d3 e0             	shl    %cl,%rax
  40d8b5:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d8bc:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d8c2:	48 01 c1             	add    %rax,%rcx
  40d8c5:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d8cb:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d8d2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d8d6:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d8dd:	48 d3 e0             	shl    %cl,%rax
  40d8e0:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d8e7:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d8ed:	48 01 c1             	add    %rax,%rcx
  40d8f0:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d8f6:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d8f9:	48 83 c0 15          	add    $0x15,%rax
  40d8fd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d904:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d90b:	48 d3 e0             	shl    %cl,%rax
  40d90e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d915:	48 d3 f8             	sar    %cl,%rax
  40d918:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d91c:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d923:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d92a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d92e:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d935:	48 d3 e0             	shl    %cl,%rax
  40d938:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d93f:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d945:	48 01 c1             	add    %rax,%rcx
  40d948:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d94e:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d955:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d959:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d960:	48 d3 e0             	shl    %cl,%rax
  40d963:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40d96a:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40d970:	48 01 c1             	add    %rax,%rcx
  40d973:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40d979:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d980:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d984:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d98b:	48 d3 e0             	shl    %cl,%rax
  40d98e:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40d995:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40d99b:	48 01 c1             	add    %rax,%rcx
  40d99e:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40d9a4:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40d9a7:	48 83 c0 16          	add    $0x16,%rax
  40d9ab:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d9b2:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40d9b9:	48 d3 e0             	shl    %cl,%rax
  40d9bc:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40d9c3:	48 d3 f8             	sar    %cl,%rax
  40d9c6:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40d9ca:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40d9d1:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40d9d8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40d9dc:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40d9e3:	48 d3 e0             	shl    %cl,%rax
  40d9e6:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40d9ed:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40d9f3:	48 01 c1             	add    %rax,%rcx
  40d9f6:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40d9fc:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40da03:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40da07:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40da0e:	48 d3 e0             	shl    %cl,%rax
  40da11:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40da18:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40da1e:	48 01 c1             	add    %rax,%rcx
  40da21:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40da27:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40da2e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40da32:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40da39:	48 d3 e0             	shl    %cl,%rax
  40da3c:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40da43:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40da49:	48 01 c1             	add    %rax,%rcx
  40da4c:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40da52:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40da55:	48 83 c0 17          	add    $0x17,%rax
  40da59:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40da60:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40da67:	48 d3 e0             	shl    %cl,%rax
  40da6a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40da71:	48 d3 f8             	sar    %cl,%rax
  40da74:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40da78:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40da7f:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40da86:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40da8a:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40da91:	48 d3 e0             	shl    %cl,%rax
  40da94:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40da9b:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40daa1:	48 01 c1             	add    %rax,%rcx
  40daa4:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40daaa:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40dab1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dab5:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40dabc:	48 d3 e0             	shl    %cl,%rax
  40dabf:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40dac6:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40dacc:	48 01 c1             	add    %rax,%rcx
  40dacf:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40dad5:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40dadc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dae0:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40dae7:	48 d3 e0             	shl    %cl,%rax
  40daea:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40daf1:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40daf7:	48 01 c1             	add    %rax,%rcx
  40dafa:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40db00:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40db03:	48 83 c0 18          	add    $0x18,%rax
  40db07:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40db0e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40db15:	48 d3 e0             	shl    %cl,%rax
  40db18:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40db1f:	48 d3 f8             	sar    %cl,%rax
  40db22:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40db26:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40db2d:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40db34:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40db38:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40db3f:	48 d3 e0             	shl    %cl,%rax
  40db42:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40db49:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40db4f:	48 01 c1             	add    %rax,%rcx
  40db52:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40db58:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40db5f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40db63:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40db6a:	48 d3 e0             	shl    %cl,%rax
  40db6d:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40db74:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40db7a:	48 01 c1             	add    %rax,%rcx
  40db7d:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40db83:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40db8a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40db8e:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40db95:	48 d3 e0             	shl    %cl,%rax
  40db98:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40db9f:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40dba5:	48 01 c1             	add    %rax,%rcx
  40dba8:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40dbae:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40dbb1:	48 83 c0 19          	add    $0x19,%rax
  40dbb5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40dbbc:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40dbc3:	48 d3 e0             	shl    %cl,%rax
  40dbc6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40dbcd:	48 d3 f8             	sar    %cl,%rax
  40dbd0:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40dbd4:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40dbdb:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40dbe2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dbe6:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40dbed:	48 d3 e0             	shl    %cl,%rax
  40dbf0:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40dbf7:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40dbfd:	48 01 c1             	add    %rax,%rcx
  40dc00:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40dc06:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40dc0d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dc11:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40dc18:	48 d3 e0             	shl    %cl,%rax
  40dc1b:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40dc22:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40dc28:	48 01 c1             	add    %rax,%rcx
  40dc2b:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40dc31:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40dc38:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dc3c:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40dc43:	48 d3 e0             	shl    %cl,%rax
  40dc46:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40dc4d:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40dc53:	48 01 c1             	add    %rax,%rcx
  40dc56:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40dc5c:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40dc5f:	48 83 c0 1a          	add    $0x1a,%rax
  40dc63:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40dc6a:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40dc71:	48 d3 e0             	shl    %cl,%rax
  40dc74:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40dc7b:	48 d3 f8             	sar    %cl,%rax
  40dc7e:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40dc82:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40dc89:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40dc90:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dc94:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40dc9b:	48 d3 e0             	shl    %cl,%rax
  40dc9e:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40dca5:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40dcab:	48 01 c1             	add    %rax,%rcx
  40dcae:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40dcb4:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40dcbb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dcbf:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40dcc6:	48 d3 e0             	shl    %cl,%rax
  40dcc9:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40dcd0:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40dcd6:	48 01 c1             	add    %rax,%rcx
  40dcd9:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40dcdf:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40dce6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dcea:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40dcf1:	48 d3 e0             	shl    %cl,%rax
  40dcf4:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40dcfb:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40dd01:	48 01 c1             	add    %rax,%rcx
  40dd04:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40dd0a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40dd0d:	48 83 c0 1b          	add    $0x1b,%rax
  40dd11:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40dd18:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40dd1f:	48 d3 e0             	shl    %cl,%rax
  40dd22:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40dd29:	48 d3 f8             	sar    %cl,%rax
  40dd2c:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40dd30:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40dd37:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40dd3e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dd42:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40dd49:	48 d3 e0             	shl    %cl,%rax
  40dd4c:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40dd53:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40dd59:	48 01 c1             	add    %rax,%rcx
  40dd5c:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40dd62:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40dd69:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dd6d:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40dd74:	48 d3 e0             	shl    %cl,%rax
  40dd77:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40dd7e:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40dd84:	48 01 c1             	add    %rax,%rcx
  40dd87:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40dd8d:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40dd94:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dd98:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40dd9f:	48 d3 e0             	shl    %cl,%rax
  40dda2:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40dda9:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40ddaf:	48 01 c1             	add    %rax,%rcx
  40ddb2:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40ddb8:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40ddbb:	48 83 c0 1c          	add    $0x1c,%rax
  40ddbf:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ddc6:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40ddcd:	48 d3 e0             	shl    %cl,%rax
  40ddd0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ddd7:	48 d3 f8             	sar    %cl,%rax
  40ddda:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40ddde:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40dde5:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40ddec:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ddf0:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ddf7:	48 d3 e0             	shl    %cl,%rax
  40ddfa:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40de01:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40de07:	48 01 c1             	add    %rax,%rcx
  40de0a:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40de10:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40de17:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40de1b:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40de22:	48 d3 e0             	shl    %cl,%rax
  40de25:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40de2c:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40de32:	48 01 c1             	add    %rax,%rcx
  40de35:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40de3b:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40de42:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40de46:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40de4d:	48 d3 e0             	shl    %cl,%rax
  40de50:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40de57:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40de5d:	48 01 c1             	add    %rax,%rcx
  40de60:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40de66:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40de69:	48 83 c0 1d          	add    $0x1d,%rax
  40de6d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40de74:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40de7b:	48 d3 e0             	shl    %cl,%rax
  40de7e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40de85:	48 d3 f8             	sar    %cl,%rax
  40de88:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40de8c:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40de93:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40de9a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40de9e:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40dea5:	48 d3 e0             	shl    %cl,%rax
  40dea8:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40deaf:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40deb5:	48 01 c1             	add    %rax,%rcx
  40deb8:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40debe:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40dec5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dec9:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ded0:	48 d3 e0             	shl    %cl,%rax
  40ded3:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40deda:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40dee0:	48 01 c1             	add    %rax,%rcx
  40dee3:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40dee9:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40def0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40def4:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40defb:	48 d3 e0             	shl    %cl,%rax
  40defe:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40df05:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40df0b:	48 01 c1             	add    %rax,%rcx
  40df0e:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40df14:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40df17:	48 83 c0 1e          	add    $0x1e,%rax
  40df1b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40df22:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40df29:	48 d3 e0             	shl    %cl,%rax
  40df2c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40df33:	48 d3 f8             	sar    %cl,%rax
  40df36:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40df3a:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40df41:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40df48:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40df4c:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40df53:	48 d3 e0             	shl    %cl,%rax
  40df56:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40df5d:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40df63:	48 01 c1             	add    %rax,%rcx
  40df66:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40df6c:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40df73:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40df77:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40df7e:	48 d3 e0             	shl    %cl,%rax
  40df81:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40df88:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40df8e:	48 01 c1             	add    %rax,%rcx
  40df91:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40df97:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40df9e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dfa2:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40dfa9:	48 d3 e0             	shl    %cl,%rax
  40dfac:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40dfb3:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40dfb9:	48 01 c1             	add    %rax,%rcx
  40dfbc:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40dfc2:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40dfc5:	48 83 c0 1f          	add    $0x1f,%rax
  40dfc9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40dfd0:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40dfd7:	48 d3 e0             	shl    %cl,%rax
  40dfda:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40dfe1:	48 d3 f8             	sar    %cl,%rax
  40dfe4:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40dfe8:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40dfef:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40dff6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40dffa:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e001:	48 d3 e0             	shl    %cl,%rax
  40e004:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e00b:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e011:	48 01 c1             	add    %rax,%rcx
  40e014:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e01a:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e021:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e025:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e02c:	48 d3 e0             	shl    %cl,%rax
  40e02f:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e036:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e03c:	48 01 c1             	add    %rax,%rcx
  40e03f:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e045:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e04c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e050:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e057:	48 d3 e0             	shl    %cl,%rax
  40e05a:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e061:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e067:	48 01 c1             	add    %rax,%rcx
  40e06a:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e070:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e073:	48 83 c0 20          	add    $0x20,%rax
  40e077:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e07e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e085:	48 d3 e0             	shl    %cl,%rax
  40e088:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e08f:	48 d3 f8             	sar    %cl,%rax
  40e092:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e096:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e09d:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e0a4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e0a8:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e0af:	48 d3 e0             	shl    %cl,%rax
  40e0b2:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e0b9:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e0bf:	48 01 c1             	add    %rax,%rcx
  40e0c2:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e0c8:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e0cf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e0d3:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e0da:	48 d3 e0             	shl    %cl,%rax
  40e0dd:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e0e4:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e0ea:	48 01 c1             	add    %rax,%rcx
  40e0ed:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e0f3:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e0fa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e0fe:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e105:	48 d3 e0             	shl    %cl,%rax
  40e108:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e10f:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e115:	48 01 c1             	add    %rax,%rcx
  40e118:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e11e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e121:	48 83 c0 21          	add    $0x21,%rax
  40e125:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e12c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e133:	48 d3 e0             	shl    %cl,%rax
  40e136:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e13d:	48 d3 f8             	sar    %cl,%rax
  40e140:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e144:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e14b:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e152:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e156:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e15d:	48 d3 e0             	shl    %cl,%rax
  40e160:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e167:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e16d:	48 01 c1             	add    %rax,%rcx
  40e170:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e176:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e17d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e181:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e188:	48 d3 e0             	shl    %cl,%rax
  40e18b:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e192:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e198:	48 01 c1             	add    %rax,%rcx
  40e19b:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e1a1:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e1a8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e1ac:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e1b3:	48 d3 e0             	shl    %cl,%rax
  40e1b6:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e1bd:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e1c3:	48 01 c1             	add    %rax,%rcx
  40e1c6:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e1cc:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e1cf:	48 83 c0 22          	add    $0x22,%rax
  40e1d3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e1da:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e1e1:	48 d3 e0             	shl    %cl,%rax
  40e1e4:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e1eb:	48 d3 f8             	sar    %cl,%rax
  40e1ee:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e1f2:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e1f9:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e200:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e204:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e20b:	48 d3 e0             	shl    %cl,%rax
  40e20e:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e215:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e21b:	48 01 c1             	add    %rax,%rcx
  40e21e:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e224:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e22b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e22f:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e236:	48 d3 e0             	shl    %cl,%rax
  40e239:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e240:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e246:	48 01 c1             	add    %rax,%rcx
  40e249:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e24f:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e256:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e25a:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e261:	48 d3 e0             	shl    %cl,%rax
  40e264:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e26b:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e271:	48 01 c1             	add    %rax,%rcx
  40e274:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e27a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e27d:	48 83 c0 23          	add    $0x23,%rax
  40e281:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e288:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e28f:	48 d3 e0             	shl    %cl,%rax
  40e292:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e299:	48 d3 f8             	sar    %cl,%rax
  40e29c:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e2a0:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e2a7:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e2ae:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e2b2:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e2b9:	48 d3 e0             	shl    %cl,%rax
  40e2bc:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e2c3:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e2c9:	48 01 c1             	add    %rax,%rcx
  40e2cc:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e2d2:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e2d9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e2dd:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e2e4:	48 d3 e0             	shl    %cl,%rax
  40e2e7:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e2ee:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e2f4:	48 01 c1             	add    %rax,%rcx
  40e2f7:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e2fd:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e304:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e308:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e30f:	48 d3 e0             	shl    %cl,%rax
  40e312:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e319:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e31f:	48 01 c1             	add    %rax,%rcx
  40e322:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e328:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e32b:	48 83 c0 24          	add    $0x24,%rax
  40e32f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e336:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e33d:	48 d3 e0             	shl    %cl,%rax
  40e340:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e347:	48 d3 f8             	sar    %cl,%rax
  40e34a:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e34e:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e355:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e35c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e360:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e367:	48 d3 e0             	shl    %cl,%rax
  40e36a:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e371:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e377:	48 01 c1             	add    %rax,%rcx
  40e37a:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e380:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e387:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e38b:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e392:	48 d3 e0             	shl    %cl,%rax
  40e395:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e39c:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e3a2:	48 01 c1             	add    %rax,%rcx
  40e3a5:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e3ab:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e3b2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e3b6:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e3bd:	48 d3 e0             	shl    %cl,%rax
  40e3c0:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e3c7:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e3cd:	48 01 c1             	add    %rax,%rcx
  40e3d0:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e3d6:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e3d9:	48 83 c0 25          	add    $0x25,%rax
  40e3dd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e3e4:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e3eb:	48 d3 e0             	shl    %cl,%rax
  40e3ee:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e3f5:	48 d3 f8             	sar    %cl,%rax
  40e3f8:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e3fc:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e403:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e40a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e40e:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e415:	48 d3 e0             	shl    %cl,%rax
  40e418:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e41f:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e425:	48 01 c1             	add    %rax,%rcx
  40e428:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e42e:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e435:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e439:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e440:	48 d3 e0             	shl    %cl,%rax
  40e443:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e44a:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e450:	48 01 c1             	add    %rax,%rcx
  40e453:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e459:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e460:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e464:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e46b:	48 d3 e0             	shl    %cl,%rax
  40e46e:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e475:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e47b:	48 01 c1             	add    %rax,%rcx
  40e47e:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e484:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e487:	48 83 c0 26          	add    $0x26,%rax
  40e48b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e492:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e499:	48 d3 e0             	shl    %cl,%rax
  40e49c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e4a3:	48 d3 f8             	sar    %cl,%rax
  40e4a6:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e4aa:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e4b1:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e4b8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e4bc:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e4c3:	48 d3 e0             	shl    %cl,%rax
  40e4c6:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e4cd:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e4d3:	48 01 c1             	add    %rax,%rcx
  40e4d6:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e4dc:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e4e3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e4e7:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e4ee:	48 d3 e0             	shl    %cl,%rax
  40e4f1:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e4f8:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e4fe:	48 01 c1             	add    %rax,%rcx
  40e501:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e507:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e50e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e512:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e519:	48 d3 e0             	shl    %cl,%rax
  40e51c:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e523:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e529:	48 01 c1             	add    %rax,%rcx
  40e52c:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e532:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e535:	48 83 c0 27          	add    $0x27,%rax
  40e539:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e540:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e547:	48 d3 e0             	shl    %cl,%rax
  40e54a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e551:	48 d3 f8             	sar    %cl,%rax
  40e554:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e558:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e55f:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e566:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e56a:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e571:	48 d3 e0             	shl    %cl,%rax
  40e574:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e57b:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e581:	48 01 c1             	add    %rax,%rcx
  40e584:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e58a:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e591:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e595:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e59c:	48 d3 e0             	shl    %cl,%rax
  40e59f:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e5a6:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e5ac:	48 01 c1             	add    %rax,%rcx
  40e5af:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e5b5:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e5bc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e5c0:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e5c7:	48 d3 e0             	shl    %cl,%rax
  40e5ca:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e5d1:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e5d7:	48 01 c1             	add    %rax,%rcx
  40e5da:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e5e0:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e5e3:	48 83 c0 28          	add    $0x28,%rax
  40e5e7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e5ee:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e5f5:	48 d3 e0             	shl    %cl,%rax
  40e5f8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e5ff:	48 d3 f8             	sar    %cl,%rax
  40e602:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e606:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e60d:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e614:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e618:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e61f:	48 d3 e0             	shl    %cl,%rax
  40e622:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e629:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e62f:	48 01 c1             	add    %rax,%rcx
  40e632:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e638:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e63f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e643:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e64a:	48 d3 e0             	shl    %cl,%rax
  40e64d:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e654:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e65a:	48 01 c1             	add    %rax,%rcx
  40e65d:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e663:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e66a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e66e:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e675:	48 d3 e0             	shl    %cl,%rax
  40e678:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e67f:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e685:	48 01 c1             	add    %rax,%rcx
  40e688:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e68e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e691:	48 83 c0 29          	add    $0x29,%rax
  40e695:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e69c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e6a3:	48 d3 e0             	shl    %cl,%rax
  40e6a6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e6ad:	48 d3 f8             	sar    %cl,%rax
  40e6b0:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e6b4:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e6bb:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e6c2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e6c6:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e6cd:	48 d3 e0             	shl    %cl,%rax
  40e6d0:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e6d7:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e6dd:	48 01 c1             	add    %rax,%rcx
  40e6e0:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e6e6:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e6ed:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e6f1:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e6f8:	48 d3 e0             	shl    %cl,%rax
  40e6fb:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e702:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e708:	48 01 c1             	add    %rax,%rcx
  40e70b:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e711:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e718:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e71c:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e723:	48 d3 e0             	shl    %cl,%rax
  40e726:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e72d:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e733:	48 01 c1             	add    %rax,%rcx
  40e736:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e73c:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e73f:	48 83 c0 2a          	add    $0x2a,%rax
  40e743:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e74a:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e751:	48 d3 e0             	shl    %cl,%rax
  40e754:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e75b:	48 d3 f8             	sar    %cl,%rax
  40e75e:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e762:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e769:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e770:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e774:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e77b:	48 d3 e0             	shl    %cl,%rax
  40e77e:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e785:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e78b:	48 01 c1             	add    %rax,%rcx
  40e78e:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e794:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e79b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e79f:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e7a6:	48 d3 e0             	shl    %cl,%rax
  40e7a9:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e7b0:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e7b6:	48 01 c1             	add    %rax,%rcx
  40e7b9:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e7bf:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e7c6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e7ca:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e7d1:	48 d3 e0             	shl    %cl,%rax
  40e7d4:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e7db:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e7e1:	48 01 c1             	add    %rax,%rcx
  40e7e4:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e7ea:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e7ed:	48 83 c0 2b          	add    $0x2b,%rax
  40e7f1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e7f8:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e7ff:	48 d3 e0             	shl    %cl,%rax
  40e802:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e809:	48 d3 f8             	sar    %cl,%rax
  40e80c:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e810:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e817:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e81e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e822:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e829:	48 d3 e0             	shl    %cl,%rax
  40e82c:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e833:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e839:	48 01 c1             	add    %rax,%rcx
  40e83c:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e842:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e849:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e84d:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e854:	48 d3 e0             	shl    %cl,%rax
  40e857:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e85e:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e864:	48 01 c1             	add    %rax,%rcx
  40e867:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e86d:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e874:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e878:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e87f:	48 d3 e0             	shl    %cl,%rax
  40e882:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e889:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e88f:	48 01 c1             	add    %rax,%rcx
  40e892:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e898:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e89b:	48 83 c0 2c          	add    $0x2c,%rax
  40e89f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e8a6:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e8ad:	48 d3 e0             	shl    %cl,%rax
  40e8b0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e8b7:	48 d3 f8             	sar    %cl,%rax
  40e8ba:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e8be:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e8c5:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e8cc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e8d0:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e8d7:	48 d3 e0             	shl    %cl,%rax
  40e8da:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e8e1:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e8e7:	48 01 c1             	add    %rax,%rcx
  40e8ea:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e8f0:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e8f7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e8fb:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e902:	48 d3 e0             	shl    %cl,%rax
  40e905:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e90c:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e912:	48 01 c1             	add    %rax,%rcx
  40e915:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e91b:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e922:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e926:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e92d:	48 d3 e0             	shl    %cl,%rax
  40e930:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e937:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e93d:	48 01 c1             	add    %rax,%rcx
  40e940:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e946:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e949:	48 83 c0 2d          	add    $0x2d,%rax
  40e94d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e954:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40e95b:	48 d3 e0             	shl    %cl,%rax
  40e95e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40e965:	48 d3 f8             	sar    %cl,%rax
  40e968:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40e96c:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40e973:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e97a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e97e:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e985:	48 d3 e0             	shl    %cl,%rax
  40e988:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40e98f:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40e995:	48 01 c1             	add    %rax,%rcx
  40e998:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40e99e:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e9a5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e9a9:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e9b0:	48 d3 e0             	shl    %cl,%rax
  40e9b3:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40e9ba:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40e9c0:	48 01 c1             	add    %rax,%rcx
  40e9c3:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40e9c9:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40e9d0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e9d4:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40e9db:	48 d3 e0             	shl    %cl,%rax
  40e9de:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40e9e5:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40e9eb:	48 01 c1             	add    %rax,%rcx
  40e9ee:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40e9f4:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40e9f7:	48 83 c0 2e          	add    $0x2e,%rax
  40e9fb:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ea02:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40ea09:	48 d3 e0             	shl    %cl,%rax
  40ea0c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ea13:	48 d3 f8             	sar    %cl,%rax
  40ea16:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40ea1a:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40ea21:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40ea28:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ea2c:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ea33:	48 d3 e0             	shl    %cl,%rax
  40ea36:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40ea3d:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40ea43:	48 01 c1             	add    %rax,%rcx
  40ea46:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40ea4c:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40ea53:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ea57:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ea5e:	48 d3 e0             	shl    %cl,%rax
  40ea61:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40ea68:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40ea6e:	48 01 c1             	add    %rax,%rcx
  40ea71:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40ea77:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40ea7e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ea82:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ea89:	48 d3 e0             	shl    %cl,%rax
  40ea8c:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40ea93:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40ea99:	48 01 c1             	add    %rax,%rcx
  40ea9c:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40eaa2:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40eaa5:	48 83 c0 2f          	add    $0x2f,%rax
  40eaa9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40eab0:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40eab7:	48 d3 e0             	shl    %cl,%rax
  40eaba:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40eac1:	48 d3 f8             	sar    %cl,%rax
  40eac4:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40eac8:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40eacf:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40ead6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40eada:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40eae1:	48 d3 e0             	shl    %cl,%rax
  40eae4:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40eaeb:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40eaf1:	48 01 c1             	add    %rax,%rcx
  40eaf4:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40eafa:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40eb01:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40eb05:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40eb0c:	48 d3 e0             	shl    %cl,%rax
  40eb0f:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40eb16:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40eb1c:	48 01 c1             	add    %rax,%rcx
  40eb1f:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40eb25:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40eb2c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40eb30:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40eb37:	48 d3 e0             	shl    %cl,%rax
  40eb3a:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40eb41:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40eb47:	48 01 c1             	add    %rax,%rcx
  40eb4a:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40eb50:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40eb53:	48 83 c0 30          	add    $0x30,%rax
  40eb57:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40eb5e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40eb65:	48 d3 e0             	shl    %cl,%rax
  40eb68:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40eb6f:	48 d3 f8             	sar    %cl,%rax
  40eb72:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40eb76:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40eb7d:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40eb84:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40eb88:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40eb8f:	48 d3 e0             	shl    %cl,%rax
  40eb92:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40eb99:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40eb9f:	48 01 c1             	add    %rax,%rcx
  40eba2:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40eba8:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40ebaf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ebb3:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ebba:	48 d3 e0             	shl    %cl,%rax
  40ebbd:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40ebc4:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40ebca:	48 01 c1             	add    %rax,%rcx
  40ebcd:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40ebd3:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40ebda:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ebde:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ebe5:	48 d3 e0             	shl    %cl,%rax
  40ebe8:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40ebef:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40ebf5:	48 01 c1             	add    %rax,%rcx
  40ebf8:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40ebfe:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40ec01:	48 83 c0 31          	add    $0x31,%rax
  40ec05:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ec0c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40ec13:	48 d3 e0             	shl    %cl,%rax
  40ec16:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ec1d:	48 d3 f8             	sar    %cl,%rax
  40ec20:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40ec24:	66 89 85 3a ff ff ff 	mov    %ax,-0xc6(%rbp)
  40ec2b:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40ec32:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ec36:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ec3d:	48 d3 e0             	shl    %cl,%rax
  40ec40:	8b 84 02 b8 c9 00 00 	mov    0xc9b8(%rdx,%rax,1),%eax
  40ec47:	8b 8d 44 ff ff ff    	mov    -0xbc(%rbp),%ecx
  40ec4d:	48 01 c1             	add    %rax,%rcx
  40ec50:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
  40ec56:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40ec5d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ec61:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ec68:	48 d3 e0             	shl    %cl,%rax
  40ec6b:	8b 84 02 bc c9 00 00 	mov    0xc9bc(%rdx,%rax,1),%eax
  40ec72:	8b 8d 40 ff ff ff    	mov    -0xc0(%rbp),%ecx
  40ec78:	48 01 c1             	add    %rax,%rcx
  40ec7b:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%rbp)
  40ec81:	0f b6 85 3a ff ff ff 	movzbl -0xc6(%rbp),%eax
  40ec88:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ec8c:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  40ec93:	48 d3 e0             	shl    %cl,%rax
  40ec96:	8b 84 02 c0 c9 00 00 	mov    0xc9c0(%rdx,%rax,1),%eax
  40ec9d:	8b 8d 3c ff ff ff    	mov    -0xc4(%rbp),%ecx
  40eca3:	48 01 c1             	add    %rax,%rcx
  40eca6:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%rbp)
  40ecac:	0f b6 85 44 ff ff ff 	movzbl -0xbc(%rbp),%eax
  40ecb3:	66 89 45 80          	mov    %ax,-0x80(%rbp)
  40ecb7:	0f b6 85 46 ff ff ff 	movzbl -0xba(%rbp),%eax
  40ecbe:	66 89 45 82          	mov    %ax,-0x7e(%rbp)
  40ecc2:	0f b6 85 40 ff ff ff 	movzbl -0xc0(%rbp),%eax
  40ecc9:	0f b6 8d 42 ff ff ff 	movzbl -0xbe(%rbp),%ecx
  40ecd0:	0f b6 95 3c ff ff ff 	movzbl -0xc4(%rbp),%edx
  40ecd7:	0f b6 b5 3e ff ff ff 	movzbl -0xc2(%rbp),%esi
  40ecde:	66 89 45 84          	mov    %ax,-0x7c(%rbp)
  40ece2:	66 89 4d 86          	mov    %cx,-0x7a(%rbp)
  40ece6:	66 89 55 88          	mov    %dx,-0x78(%rbp)
  40ecea:	66 89 75 8a          	mov    %si,-0x76(%rbp)
  40ecee:	e9 ad 00 00 00       	jmpq   40eda0 <sendMTFValues+0x29f0>
  40ecf3:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40ecfa:	84 00 00 00 00 00 
  40ed00:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40ed03:	eb 11                	jmp    40ed16 <sendMTFValues+0x2966>
  40ed05:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40ed0c:	00 00 00 00 
  40ed10:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40ed13:	48 ff c0             	inc    %rax
  40ed16:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  40ed19:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  40ed1d:	48 63 4d b8          	movslq -0x48(%rbp),%rcx
  40ed21:	48 39 c8             	cmp    %rcx,%rax
  40ed24:	7f 7a                	jg     40eda0 <sendMTFValues+0x29f0>
  40ed26:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  40ed2a:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  40ed31:	0f b6 04 41          	movzbl (%rcx,%rax,2),%eax
  40ed35:	66 89 85 38 ff ff ff 	mov    %ax,-0xc8(%rbp)
  40ed3c:	44 89 6d c8          	mov    %r13d,-0x38(%rbp)
  40ed40:	eb 45                	jmp    40ed87 <sendMTFValues+0x29d7>
  40ed42:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40ed49:	1f 84 00 00 00 00 00 
  40ed50:	0f b6 85 38 ff ff ff 	movzbl -0xc8(%rbp),%eax
  40ed57:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  40ed5b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ed5f:	48 69 f1 02 01 00 00 	imul   $0x102,%rcx,%rsi
  40ed66:	48 01 d6             	add    %rdx,%rsi
  40ed69:	0f b6 84 30 4c 93 00 	movzbl 0x934c(%rax,%rsi,1),%eax
  40ed70:	00 
  40ed71:	0f b6 54 4d 80       	movzbl -0x80(%rbp,%rcx,2),%edx
  40ed76:	8b 75 c8             	mov    -0x38(%rbp),%esi
  40ed79:	48 01 c2             	add    %rax,%rdx
  40ed7c:	66 89 54 4d 80       	mov    %dx,-0x80(%rbp,%rcx,2)
  40ed81:	48 ff c6             	inc    %rsi
  40ed84:	89 75 c8             	mov    %esi,-0x38(%rbp)
  40ed87:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40ed8b:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  40ed8f:	48 39 c8             	cmp    %rcx,%rax
  40ed92:	7c bc                	jl     40ed50 <sendMTFValues+0x29a0>
  40ed94:	e9 77 ff ff ff       	jmpq   40ed10 <sendMTFValues+0x2960>
  40ed99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40eda0:	44 89 7d ac          	mov    %r15d,-0x54(%rbp)
  40eda4:	44 89 4d b0          	mov    %r9d,-0x50(%rbp)
  40eda8:	44 89 6d c8          	mov    %r13d,-0x38(%rbp)
  40edac:	eb 0b                	jmp    40edb9 <sendMTFValues+0x2a09>
  40edae:	66 90                	xchg   %ax,%ax
  40edb0:	8b 45 c8             	mov    -0x38(%rbp),%eax
  40edb3:	48 ff c0             	inc    %rax
  40edb6:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40edb9:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40edbd:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  40edc1:	48 39 c8             	cmp    %rcx,%rax
  40edc4:	7d 2a                	jge    40edf0 <sendMTFValues+0x2a40>
  40edc6:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40edca:	0f b6 44 45 80       	movzbl -0x80(%rbp,%rax,2),%eax
  40edcf:	48 63 4d ac          	movslq -0x54(%rbp),%rcx
  40edd3:	48 39 c8             	cmp    %rcx,%rax
  40edd6:	7d d8                	jge    40edb0 <sendMTFValues+0x2a00>
  40edd8:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40eddc:	0f b6 44 45 80       	movzbl -0x80(%rbp,%rax,2),%eax
  40ede1:	8b 4d c8             	mov    -0x38(%rbp),%ecx
  40ede4:	89 45 ac             	mov    %eax,-0x54(%rbp)
  40ede7:	89 4d b0             	mov    %ecx,-0x50(%rbp)
  40edea:	eb c4                	jmp    40edb0 <sendMTFValues+0x2a00>
  40edec:	0f 1f 40 00          	nopl   0x0(%rax)
  40edf0:	44 8b 45 ac          	mov    -0x54(%rbp),%r8d
  40edf4:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  40edf7:	48 63 55 b0          	movslq -0x50(%rbp),%rdx
  40edfb:	8b b4 95 60 ff ff ff 	mov    -0xa0(%rbp,%rdx,4),%esi
  40ee02:	48 ff c6             	inc    %rsi
  40ee05:	0f b6 7d b0          	movzbl -0x50(%rbp),%edi
  40ee09:	48 63 5d a4          	movslq -0x5c(%rbp),%rbx
  40ee0d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40ee11:	89 b4 95 60 ff ff ff 	mov    %esi,-0xa0(%rbp,%rdx,4)
  40ee18:	4c 01 c1             	add    %r8,%rcx
  40ee1b:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
  40ee1e:	40 88 bc 18 a8 06 00 	mov    %dil,0x6a8(%rax,%rbx,1)
  40ee25:	00 
  40ee26:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  40ee29:	8b 4d 90             	mov    -0x70(%rbp),%ecx
  40ee2c:	48 ff c0             	inc    %rax
  40ee2f:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  40ee32:	48 83 f9 06          	cmp    $0x6,%rcx
  40ee36:	0f 85 54 0e 00 00    	jne    40fc90 <sendMTFValues+0x38e0>
  40ee3c:	8b 45 b8             	mov    -0x48(%rbp),%eax
  40ee3f:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  40ee42:	48 29 c8             	sub    %rcx,%rax
  40ee45:	4c 21 c8             	and    %r9,%rax
  40ee48:	48 83 f8 31          	cmp    $0x31,%rax
  40ee4c:	0f 85 3e 0e 00 00    	jne    40fc90 <sendMTFValues+0x38e0>
  40ee52:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  40ee56:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  40ee5d:	48 63 55 b0          	movslq -0x50(%rbp),%rdx
  40ee61:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40ee65:	0f b6 04 41          	movzbl (%rcx,%rax,2),%eax
  40ee69:	48 69 ca 08 04 00 00 	imul   $0x408,%rdx,%rcx
  40ee70:	48 01 f1             	add    %rsi,%rcx
  40ee73:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40ee7a:	48 ff c2             	inc    %rdx
  40ee7d:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40ee84:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40ee87:	48 ff c0             	inc    %rax
  40ee8a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ee91:	48 d3 e0             	shl    %cl,%rax
  40ee94:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ee9b:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40eea2:	48 d3 f8             	sar    %cl,%rax
  40eea5:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40eea9:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40eead:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40eeb1:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40eeb8:	48 01 f1             	add    %rsi,%rcx
  40eebb:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40eec2:	48 ff c2             	inc    %rdx
  40eec5:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40eecc:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40eecf:	48 83 c0 02          	add    $0x2,%rax
  40eed3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40eeda:	48 d3 e0             	shl    %cl,%rax
  40eedd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40eee4:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40eeeb:	48 d3 f8             	sar    %cl,%rax
  40eeee:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40eef2:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40eef6:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40eefa:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40ef01:	48 01 f1             	add    %rsi,%rcx
  40ef04:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40ef0b:	48 ff c2             	inc    %rdx
  40ef0e:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40ef15:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40ef18:	48 83 c0 03          	add    $0x3,%rax
  40ef1c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ef23:	48 d3 e0             	shl    %cl,%rax
  40ef26:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ef2d:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40ef34:	48 d3 f8             	sar    %cl,%rax
  40ef37:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40ef3b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40ef3f:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40ef43:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40ef4a:	48 01 f1             	add    %rsi,%rcx
  40ef4d:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40ef54:	48 ff c2             	inc    %rdx
  40ef57:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40ef5e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40ef61:	48 83 c0 04          	add    $0x4,%rax
  40ef65:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ef6c:	48 d3 e0             	shl    %cl,%rax
  40ef6f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40ef76:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40ef7d:	48 d3 f8             	sar    %cl,%rax
  40ef80:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40ef84:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40ef88:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40ef8c:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40ef93:	48 01 f1             	add    %rsi,%rcx
  40ef96:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40ef9d:	48 ff c2             	inc    %rdx
  40efa0:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40efa7:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40efaa:	48 83 c0 05          	add    $0x5,%rax
  40efae:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40efb5:	48 d3 e0             	shl    %cl,%rax
  40efb8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40efbf:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40efc6:	48 d3 f8             	sar    %cl,%rax
  40efc9:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40efcd:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40efd1:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40efd5:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40efdc:	48 01 f1             	add    %rsi,%rcx
  40efdf:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40efe6:	48 ff c2             	inc    %rdx
  40efe9:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40eff0:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40eff3:	48 83 c0 06          	add    $0x6,%rax
  40eff7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40effe:	48 d3 e0             	shl    %cl,%rax
  40f001:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f008:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f00f:	48 d3 f8             	sar    %cl,%rax
  40f012:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f016:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f01a:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f01e:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f025:	48 01 f1             	add    %rsi,%rcx
  40f028:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f02f:	48 ff c2             	inc    %rdx
  40f032:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f039:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f03c:	48 83 c0 07          	add    $0x7,%rax
  40f040:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f047:	48 d3 e0             	shl    %cl,%rax
  40f04a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f051:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f058:	48 d3 f8             	sar    %cl,%rax
  40f05b:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f05f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f063:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f067:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f06e:	48 01 f1             	add    %rsi,%rcx
  40f071:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f078:	48 ff c2             	inc    %rdx
  40f07b:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f082:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f085:	48 83 c0 08          	add    $0x8,%rax
  40f089:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f090:	48 d3 e0             	shl    %cl,%rax
  40f093:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f09a:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f0a1:	48 d3 f8             	sar    %cl,%rax
  40f0a4:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f0a8:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f0ac:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f0b0:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f0b7:	48 01 f1             	add    %rsi,%rcx
  40f0ba:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f0c1:	48 ff c2             	inc    %rdx
  40f0c4:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f0cb:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f0ce:	48 83 c0 09          	add    $0x9,%rax
  40f0d2:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f0d9:	48 d3 e0             	shl    %cl,%rax
  40f0dc:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f0e3:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f0ea:	48 d3 f8             	sar    %cl,%rax
  40f0ed:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f0f1:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f0f5:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f0f9:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f100:	48 01 f1             	add    %rsi,%rcx
  40f103:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f10a:	48 ff c2             	inc    %rdx
  40f10d:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f114:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f117:	48 83 c0 0a          	add    $0xa,%rax
  40f11b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f122:	48 d3 e0             	shl    %cl,%rax
  40f125:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f12c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f133:	48 d3 f8             	sar    %cl,%rax
  40f136:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f13a:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f13e:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f142:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f149:	48 01 f1             	add    %rsi,%rcx
  40f14c:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f153:	48 ff c2             	inc    %rdx
  40f156:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f15d:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f160:	48 83 c0 0b          	add    $0xb,%rax
  40f164:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f16b:	48 d3 e0             	shl    %cl,%rax
  40f16e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f175:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f17c:	48 d3 f8             	sar    %cl,%rax
  40f17f:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f183:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f187:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f18b:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f192:	48 01 f1             	add    %rsi,%rcx
  40f195:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f19c:	48 ff c2             	inc    %rdx
  40f19f:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f1a6:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f1a9:	48 83 c0 0c          	add    $0xc,%rax
  40f1ad:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f1b4:	48 d3 e0             	shl    %cl,%rax
  40f1b7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f1be:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f1c5:	48 d3 f8             	sar    %cl,%rax
  40f1c8:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f1cc:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f1d0:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f1d4:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f1db:	48 01 f1             	add    %rsi,%rcx
  40f1de:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f1e5:	48 ff c2             	inc    %rdx
  40f1e8:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f1ef:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f1f2:	48 83 c0 0d          	add    $0xd,%rax
  40f1f6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f1fd:	48 d3 e0             	shl    %cl,%rax
  40f200:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f207:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f20e:	48 d3 f8             	sar    %cl,%rax
  40f211:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f215:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f219:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f21d:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f224:	48 01 f1             	add    %rsi,%rcx
  40f227:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f22e:	48 ff c2             	inc    %rdx
  40f231:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f238:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f23b:	48 83 c0 0e          	add    $0xe,%rax
  40f23f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f246:	48 d3 e0             	shl    %cl,%rax
  40f249:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f250:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f257:	48 d3 f8             	sar    %cl,%rax
  40f25a:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f25e:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f262:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f266:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f26d:	48 01 f1             	add    %rsi,%rcx
  40f270:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f277:	48 ff c2             	inc    %rdx
  40f27a:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f281:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f284:	48 83 c0 0f          	add    $0xf,%rax
  40f288:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f28f:	48 d3 e0             	shl    %cl,%rax
  40f292:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f299:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f2a0:	48 d3 f8             	sar    %cl,%rax
  40f2a3:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f2a7:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f2ab:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f2af:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f2b6:	48 01 f1             	add    %rsi,%rcx
  40f2b9:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f2c0:	48 ff c2             	inc    %rdx
  40f2c3:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f2ca:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f2cd:	48 83 c0 10          	add    $0x10,%rax
  40f2d1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f2d8:	48 d3 e0             	shl    %cl,%rax
  40f2db:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f2e2:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f2e9:	48 d3 f8             	sar    %cl,%rax
  40f2ec:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f2f0:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f2f4:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f2f8:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f2ff:	48 01 f1             	add    %rsi,%rcx
  40f302:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f309:	48 ff c2             	inc    %rdx
  40f30c:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f313:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f316:	48 83 c0 11          	add    $0x11,%rax
  40f31a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f321:	48 d3 e0             	shl    %cl,%rax
  40f324:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f32b:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f332:	48 d3 f8             	sar    %cl,%rax
  40f335:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f339:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f33d:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f341:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f348:	48 01 f1             	add    %rsi,%rcx
  40f34b:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f352:	48 ff c2             	inc    %rdx
  40f355:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f35c:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f35f:	48 83 c0 12          	add    $0x12,%rax
  40f363:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f36a:	48 d3 e0             	shl    %cl,%rax
  40f36d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f374:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f37b:	48 d3 f8             	sar    %cl,%rax
  40f37e:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f382:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f386:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f38a:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f391:	48 01 f1             	add    %rsi,%rcx
  40f394:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f39b:	48 ff c2             	inc    %rdx
  40f39e:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f3a5:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f3a8:	48 83 c0 13          	add    $0x13,%rax
  40f3ac:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f3b3:	48 d3 e0             	shl    %cl,%rax
  40f3b6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f3bd:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f3c4:	48 d3 f8             	sar    %cl,%rax
  40f3c7:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f3cb:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f3cf:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f3d3:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f3da:	48 01 f1             	add    %rsi,%rcx
  40f3dd:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f3e4:	48 ff c2             	inc    %rdx
  40f3e7:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f3ee:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f3f1:	48 83 c0 14          	add    $0x14,%rax
  40f3f5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f3fc:	48 d3 e0             	shl    %cl,%rax
  40f3ff:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f406:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f40d:	48 d3 f8             	sar    %cl,%rax
  40f410:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f414:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f418:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f41c:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f423:	48 01 f1             	add    %rsi,%rcx
  40f426:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f42d:	48 ff c2             	inc    %rdx
  40f430:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f437:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f43a:	48 83 c0 15          	add    $0x15,%rax
  40f43e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f445:	48 d3 e0             	shl    %cl,%rax
  40f448:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f44f:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f456:	48 d3 f8             	sar    %cl,%rax
  40f459:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f45d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f461:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f465:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f46c:	48 01 f1             	add    %rsi,%rcx
  40f46f:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f476:	48 ff c2             	inc    %rdx
  40f479:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f480:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f483:	48 83 c0 16          	add    $0x16,%rax
  40f487:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f48e:	48 d3 e0             	shl    %cl,%rax
  40f491:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f498:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f49f:	48 d3 f8             	sar    %cl,%rax
  40f4a2:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f4a6:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f4aa:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f4ae:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f4b5:	48 01 f1             	add    %rsi,%rcx
  40f4b8:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f4bf:	48 ff c2             	inc    %rdx
  40f4c2:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f4c9:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f4cc:	48 83 c0 17          	add    $0x17,%rax
  40f4d0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f4d7:	48 d3 e0             	shl    %cl,%rax
  40f4da:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f4e1:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f4e8:	48 d3 f8             	sar    %cl,%rax
  40f4eb:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f4ef:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f4f3:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f4f7:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f4fe:	48 01 f1             	add    %rsi,%rcx
  40f501:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f508:	48 ff c2             	inc    %rdx
  40f50b:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f512:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f515:	48 83 c0 18          	add    $0x18,%rax
  40f519:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f520:	48 d3 e0             	shl    %cl,%rax
  40f523:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f52a:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f531:	48 d3 f8             	sar    %cl,%rax
  40f534:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f538:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f53c:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f540:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f547:	48 01 f1             	add    %rsi,%rcx
  40f54a:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f551:	48 ff c2             	inc    %rdx
  40f554:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f55b:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f55e:	48 83 c0 19          	add    $0x19,%rax
  40f562:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f569:	48 d3 e0             	shl    %cl,%rax
  40f56c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f573:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f57a:	48 d3 f8             	sar    %cl,%rax
  40f57d:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f581:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f585:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f589:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f590:	48 01 f1             	add    %rsi,%rcx
  40f593:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f59a:	48 ff c2             	inc    %rdx
  40f59d:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f5a4:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f5a7:	48 83 c0 1a          	add    $0x1a,%rax
  40f5ab:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f5b2:	48 d3 e0             	shl    %cl,%rax
  40f5b5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f5bc:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f5c3:	48 d3 f8             	sar    %cl,%rax
  40f5c6:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f5ca:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f5ce:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f5d2:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f5d9:	48 01 f1             	add    %rsi,%rcx
  40f5dc:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f5e3:	48 ff c2             	inc    %rdx
  40f5e6:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f5ed:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f5f0:	48 83 c0 1b          	add    $0x1b,%rax
  40f5f4:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f5fb:	48 d3 e0             	shl    %cl,%rax
  40f5fe:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f605:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f60c:	48 d3 f8             	sar    %cl,%rax
  40f60f:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f613:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f617:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f61b:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f622:	48 01 f1             	add    %rsi,%rcx
  40f625:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f62c:	48 ff c2             	inc    %rdx
  40f62f:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f636:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f639:	48 83 c0 1c          	add    $0x1c,%rax
  40f63d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f644:	48 d3 e0             	shl    %cl,%rax
  40f647:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f64e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f655:	48 d3 f8             	sar    %cl,%rax
  40f658:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f65c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f660:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f664:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f66b:	48 01 f1             	add    %rsi,%rcx
  40f66e:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f675:	48 ff c2             	inc    %rdx
  40f678:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f67f:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f682:	48 83 c0 1d          	add    $0x1d,%rax
  40f686:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f68d:	48 d3 e0             	shl    %cl,%rax
  40f690:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f697:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f69e:	48 d3 f8             	sar    %cl,%rax
  40f6a1:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f6a5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f6a9:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f6ad:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f6b4:	48 01 f1             	add    %rsi,%rcx
  40f6b7:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f6be:	48 ff c2             	inc    %rdx
  40f6c1:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f6c8:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f6cb:	48 83 c0 1e          	add    $0x1e,%rax
  40f6cf:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f6d6:	48 d3 e0             	shl    %cl,%rax
  40f6d9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f6e0:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f6e7:	48 d3 f8             	sar    %cl,%rax
  40f6ea:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f6ee:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f6f2:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f6f6:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f6fd:	48 01 f1             	add    %rsi,%rcx
  40f700:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f707:	48 ff c2             	inc    %rdx
  40f70a:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f711:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f714:	48 83 c0 1f          	add    $0x1f,%rax
  40f718:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f71f:	48 d3 e0             	shl    %cl,%rax
  40f722:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f729:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f730:	48 d3 f8             	sar    %cl,%rax
  40f733:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f737:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f73b:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f73f:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f746:	48 01 f1             	add    %rsi,%rcx
  40f749:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f750:	48 ff c2             	inc    %rdx
  40f753:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f75a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f75d:	48 83 c0 20          	add    $0x20,%rax
  40f761:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f768:	48 d3 e0             	shl    %cl,%rax
  40f76b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f772:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f779:	48 d3 f8             	sar    %cl,%rax
  40f77c:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f780:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f784:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f788:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f78f:	48 01 f1             	add    %rsi,%rcx
  40f792:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f799:	48 ff c2             	inc    %rdx
  40f79c:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f7a3:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f7a6:	48 83 c0 21          	add    $0x21,%rax
  40f7aa:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f7b1:	48 d3 e0             	shl    %cl,%rax
  40f7b4:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f7bb:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f7c2:	48 d3 f8             	sar    %cl,%rax
  40f7c5:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f7c9:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f7cd:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f7d1:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f7d8:	48 01 f1             	add    %rsi,%rcx
  40f7db:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f7e2:	48 ff c2             	inc    %rdx
  40f7e5:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f7ec:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f7ef:	48 83 c0 22          	add    $0x22,%rax
  40f7f3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f7fa:	48 d3 e0             	shl    %cl,%rax
  40f7fd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f804:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f80b:	48 d3 f8             	sar    %cl,%rax
  40f80e:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f812:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f816:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f81a:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f821:	48 01 f1             	add    %rsi,%rcx
  40f824:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f82b:	48 ff c2             	inc    %rdx
  40f82e:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f835:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f838:	48 83 c0 23          	add    $0x23,%rax
  40f83c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f843:	48 d3 e0             	shl    %cl,%rax
  40f846:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f84d:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f854:	48 d3 f8             	sar    %cl,%rax
  40f857:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f85b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f85f:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f863:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f86a:	48 01 f1             	add    %rsi,%rcx
  40f86d:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f874:	48 ff c2             	inc    %rdx
  40f877:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f87e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f881:	48 83 c0 24          	add    $0x24,%rax
  40f885:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f88c:	48 d3 e0             	shl    %cl,%rax
  40f88f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f896:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f89d:	48 d3 f8             	sar    %cl,%rax
  40f8a0:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f8a4:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f8a8:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f8ac:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f8b3:	48 01 f1             	add    %rsi,%rcx
  40f8b6:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f8bd:	48 ff c2             	inc    %rdx
  40f8c0:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f8c7:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f8ca:	48 83 c0 25          	add    $0x25,%rax
  40f8ce:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f8d5:	48 d3 e0             	shl    %cl,%rax
  40f8d8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f8df:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f8e6:	48 d3 f8             	sar    %cl,%rax
  40f8e9:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f8ed:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f8f1:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f8f5:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f8fc:	48 01 f1             	add    %rsi,%rcx
  40f8ff:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f906:	48 ff c2             	inc    %rdx
  40f909:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f910:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f913:	48 83 c0 26          	add    $0x26,%rax
  40f917:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f91e:	48 d3 e0             	shl    %cl,%rax
  40f921:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f928:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f92f:	48 d3 f8             	sar    %cl,%rax
  40f932:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f936:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f93a:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f93e:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f945:	48 01 f1             	add    %rsi,%rcx
  40f948:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f94f:	48 ff c2             	inc    %rdx
  40f952:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f959:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f95c:	48 83 c0 27          	add    $0x27,%rax
  40f960:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f967:	48 d3 e0             	shl    %cl,%rax
  40f96a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f971:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f978:	48 d3 f8             	sar    %cl,%rax
  40f97b:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f97f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f983:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f987:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f98e:	48 01 f1             	add    %rsi,%rcx
  40f991:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f998:	48 ff c2             	inc    %rdx
  40f99b:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f9a2:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f9a5:	48 83 c0 28          	add    $0x28,%rax
  40f9a9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f9b0:	48 d3 e0             	shl    %cl,%rax
  40f9b3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f9ba:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40f9c1:	48 d3 f8             	sar    %cl,%rax
  40f9c4:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40f9c8:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f9cc:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40f9d0:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40f9d7:	48 01 f1             	add    %rsi,%rcx
  40f9da:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40f9e1:	48 ff c2             	inc    %rdx
  40f9e4:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40f9eb:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40f9ee:	48 83 c0 29          	add    $0x29,%rax
  40f9f2:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40f9f9:	48 d3 e0             	shl    %cl,%rax
  40f9fc:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fa03:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40fa0a:	48 d3 f8             	sar    %cl,%rax
  40fa0d:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40fa11:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40fa15:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40fa19:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40fa20:	48 01 f1             	add    %rsi,%rcx
  40fa23:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40fa2a:	48 ff c2             	inc    %rdx
  40fa2d:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40fa34:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40fa37:	48 83 c0 2a          	add    $0x2a,%rax
  40fa3b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fa42:	48 d3 e0             	shl    %cl,%rax
  40fa45:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fa4c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40fa53:	48 d3 f8             	sar    %cl,%rax
  40fa56:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40fa5a:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40fa5e:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40fa62:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40fa69:	48 01 f1             	add    %rsi,%rcx
  40fa6c:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40fa73:	48 ff c2             	inc    %rdx
  40fa76:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40fa7d:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40fa80:	48 83 c0 2b          	add    $0x2b,%rax
  40fa84:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fa8b:	48 d3 e0             	shl    %cl,%rax
  40fa8e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fa95:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40fa9c:	48 d3 f8             	sar    %cl,%rax
  40fa9f:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40faa3:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40faa7:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40faab:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40fab2:	48 01 f1             	add    %rsi,%rcx
  40fab5:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40fabc:	48 ff c2             	inc    %rdx
  40fabf:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40fac6:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40fac9:	48 83 c0 2c          	add    $0x2c,%rax
  40facd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fad4:	48 d3 e0             	shl    %cl,%rax
  40fad7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fade:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40fae5:	48 d3 f8             	sar    %cl,%rax
  40fae8:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40faec:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40faf0:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40faf4:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40fafb:	48 01 f1             	add    %rsi,%rcx
  40fafe:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40fb05:	48 ff c2             	inc    %rdx
  40fb08:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40fb0f:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40fb12:	48 83 c0 2d          	add    $0x2d,%rax
  40fb16:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fb1d:	48 d3 e0             	shl    %cl,%rax
  40fb20:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fb27:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40fb2e:	48 d3 f8             	sar    %cl,%rax
  40fb31:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40fb35:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40fb39:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40fb3d:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40fb44:	48 01 f1             	add    %rsi,%rcx
  40fb47:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40fb4e:	48 ff c2             	inc    %rdx
  40fb51:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40fb58:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40fb5b:	48 83 c0 2e          	add    $0x2e,%rax
  40fb5f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fb66:	48 d3 e0             	shl    %cl,%rax
  40fb69:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fb70:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40fb77:	48 d3 f8             	sar    %cl,%rax
  40fb7a:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40fb7e:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40fb82:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40fb86:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40fb8d:	48 01 f1             	add    %rsi,%rcx
  40fb90:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40fb97:	48 ff c2             	inc    %rdx
  40fb9a:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40fba1:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40fba4:	48 83 c0 2f          	add    $0x2f,%rax
  40fba8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fbaf:	48 d3 e0             	shl    %cl,%rax
  40fbb2:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fbb9:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40fbc0:	48 d3 f8             	sar    %cl,%rax
  40fbc3:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40fbc7:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40fbcb:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40fbcf:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40fbd6:	48 01 f1             	add    %rsi,%rcx
  40fbd9:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40fbe0:	48 ff c2             	inc    %rdx
  40fbe3:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40fbea:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40fbed:	48 83 c0 30          	add    $0x30,%rax
  40fbf1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fbf8:	48 d3 e0             	shl    %cl,%rax
  40fbfb:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fc02:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40fc09:	48 d3 f8             	sar    %cl,%rax
  40fc0c:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40fc10:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40fc14:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40fc18:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40fc1f:	48 01 f1             	add    %rsi,%rcx
  40fc22:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40fc29:	48 ff c2             	inc    %rdx
  40fc2c:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40fc33:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40fc36:	48 83 c0 31          	add    $0x31,%rax
  40fc3a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fc41:	48 d3 e0             	shl    %cl,%rax
  40fc44:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fc4b:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40fc52:	48 d3 f8             	sar    %cl,%rax
  40fc55:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  40fc59:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40fc5d:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  40fc61:	48 69 c9 08 04 00 00 	imul   $0x408,%rcx,%rcx
  40fc68:	48 01 f1             	add    %rsi,%rcx
  40fc6b:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40fc72:	48 ff c2             	inc    %rdx
  40fc75:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40fc7c:	e9 7f cd ff ff       	jmpq   40ca00 <sendMTFValues+0x650>
  40fc81:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40fc88:	0f 1f 84 00 00 00 00 
  40fc8f:	00 
  40fc90:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40fc93:	eb 43                	jmp    40fcd8 <sendMTFValues+0x3928>
  40fc95:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40fc9c:	00 00 00 00 
  40fca0:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  40fca4:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  40fcab:	48 63 55 b0          	movslq -0x50(%rbp),%rdx
  40fcaf:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40fcb3:	0f b6 04 41          	movzbl (%rcx,%rax,2),%eax
  40fcb7:	48 69 ca 08 04 00 00 	imul   $0x408,%rdx,%rcx
  40fcbe:	48 01 f1             	add    %rsi,%rcx
  40fcc1:	8b 94 81 88 b1 00 00 	mov    0xb188(%rcx,%rax,4),%edx
  40fcc8:	48 ff c2             	inc    %rdx
  40fccb:	89 94 81 88 b1 00 00 	mov    %edx,0xb188(%rcx,%rax,4)
  40fcd2:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40fcd5:	48 ff c0             	inc    %rax
  40fcd8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  40fcdb:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  40fcdf:	48 63 4d b8          	movslq -0x48(%rbp),%rcx
  40fce3:	48 39 c8             	cmp    %rcx,%rax
  40fce6:	7e b8                	jle    40fca0 <sendMTFValues+0x38f0>
  40fce8:	e9 13 cd ff ff       	jmpq   40ca00 <sendMTFValues+0x650>
  40fced:	0f 1f 00             	nopl   (%rax)
  40fcf0:	4d 89 ce             	mov    %r9,%r14
  40fcf3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40fcf7:	48 63 80 90 02 00 00 	movslq 0x290(%rax),%rax
  40fcfe:	48 83 f8 03          	cmp    $0x3,%rax
  40fd02:	0f 8c a4 00 00 00    	jl     40fdac <sendMTFValues+0x39fc>
  40fd08:	48 8b 3d c1 8c 01 00 	mov    0x18cc1(%rip),%rdi        # 4289d0 <stderr>
  40fd0f:	8b 55 a8             	mov    -0x58(%rbp),%edx
  40fd12:	48 63 45 b4          	movslq -0x4c(%rbp),%rax
  40fd16:	48 ff c2             	inc    %rdx
  40fd19:	48 c7 c1 3c 00 00 00 	mov    $0x3c,%rcx
  40fd20:	48 89 c3             	mov    %rax,%rbx
  40fd23:	48 d3 eb             	shr    %cl,%rbx
  40fd26:	48 83 e3 07          	and    $0x7,%rbx
  40fd2a:	48 01 c3             	add    %rax,%rbx
  40fd2d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  40fd34:	48 d3 e3             	shl    %cl,%rbx
  40fd37:	48 c7 c1 23 00 00 00 	mov    $0x23,%rcx
  40fd3e:	48 d3 fb             	sar    %cl,%rbx
  40fd41:	48 31 c0             	xor    %rax,%rax
  40fd44:	48 be 2b 7e 42 00 00 	movabs $0x427e2b,%rsi
  40fd4b:	00 00 00 
  40fd4e:	48 89 d9             	mov    %rbx,%rcx
  40fd51:	e8 a2 9f 00 00       	callq  419cf8 <fprintf>
  40fd56:	44 89 6d c8          	mov    %r13d,-0x38(%rbp)
  40fd5a:	eb 2a                	jmp    40fd86 <sendMTFValues+0x39d6>
  40fd5c:	0f 1f 40 00          	nopl   0x0(%rax)
  40fd60:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40fd64:	48 8b 3d 65 8c 01 00 	mov    0x18c65(%rip),%rdi        # 4289d0 <stderr>
  40fd6b:	8b 94 85 60 ff ff ff 	mov    -0xa0(%rbp,%rax,4),%edx
  40fd72:	48 31 c0             	xor    %rax,%rax
  40fd75:	4c 89 e6             	mov    %r12,%rsi
  40fd78:	e8 7b 9f 00 00       	callq  419cf8 <fprintf>
  40fd7d:	8b 45 c8             	mov    -0x38(%rbp),%eax
  40fd80:	48 ff c0             	inc    %rax
  40fd83:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40fd86:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40fd8a:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  40fd8e:	48 39 c8             	cmp    %rcx,%rax
  40fd91:	7c cd                	jl     40fd60 <sendMTFValues+0x39b0>
  40fd93:	48 8b 3d 36 8c 01 00 	mov    0x18c36(%rip),%rdi        # 4289d0 <stderr>
  40fd9a:	48 31 c0             	xor    %rax,%rax
  40fd9d:	48 be 51 78 42 00 00 	movabs $0x427851,%rsi
  40fda4:	00 00 00 
  40fda7:	e8 4c 9f 00 00       	callq  419cf8 <fprintf>
  40fdac:	44 89 6d c8          	mov    %r13d,-0x38(%rbp)
  40fdb0:	eb 4c                	jmp    40fdfe <sendMTFValues+0x3a4e>
  40fdb2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40fdb9:	1f 84 00 00 00 00 00 
  40fdc0:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40fdc4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40fdc8:	48 69 f0 02 01 00 00 	imul   $0x102,%rax,%rsi
  40fdcf:	8b 55 a0             	mov    -0x60(%rbp),%edx
  40fdd2:	48 8d bc 31 4c 93 00 	lea    0x934c(%rcx,%rsi,1),%rdi
  40fdd9:	00 
  40fdda:	48 69 c0 08 04 00 00 	imul   $0x408,%rax,%rax
  40fde1:	48 8d b4 01 88 b1 00 	lea    0xb188(%rcx,%rax,1),%rsi
  40fde8:	00 
  40fde9:	48 c7 c1 11 00 00 00 	mov    $0x11,%rcx
  40fdf0:	e8 9b 66 00 00       	callq  416490 <BZ2_hbMakeCodeLengths>
  40fdf5:	8b 45 c8             	mov    -0x38(%rbp),%eax
  40fdf8:	48 ff c0             	inc    %rax
  40fdfb:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40fdfe:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40fe02:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  40fe06:	48 39 c8             	cmp    %rcx,%rax
  40fe09:	7c b5                	jl     40fdc0 <sendMTFValues+0x3a10>
  40fe0b:	e9 50 ca ff ff       	jmpq   40c860 <sendMTFValues+0x4b0>
  40fe10:	4d 89 cf             	mov    %r9,%r15
  40fe13:	48 63 45 90          	movslq -0x70(%rbp),%rax
  40fe17:	48 83 f8 08          	cmp    $0x8,%rax
  40fe1b:	7c 0c                	jl     40fe29 <sendMTFValues+0x3a79>
  40fe1d:	48 c7 c7 ba 0b 00 00 	mov    $0xbba,%rdi
  40fe24:	e8 57 7c ff ff       	callq  407a80 <BZ2_bz__AssertH__fail>
  40fe29:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  40fe2d:	48 3d ff 7f 00 00    	cmp    $0x7fff,%rax
  40fe33:	7f 0c                	jg     40fe41 <sendMTFValues+0x3a91>
  40fe35:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  40fe39:	48 3d 53 46 00 00    	cmp    $0x4653,%rax
  40fe3f:	7c 0c                	jl     40fe4d <sendMTFValues+0x3a9d>
  40fe41:	48 c7 c7 bb 0b 00 00 	mov    $0xbbb,%rdi
  40fe48:	e8 33 7c ff ff       	callq  407a80 <BZ2_bz__AssertH__fail>
  40fe4d:	48 31 c0             	xor    %rax,%rax
  40fe50:	eb 1f                	jmp    40fe71 <sendMTFValues+0x3ac1>
  40fe52:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40fe59:	1f 84 00 00 00 00 00 
  40fe60:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40fe63:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  40fe67:	88 8c 0d 32 ff ff ff 	mov    %cl,-0xce(%rbp,%rcx,1)
  40fe6e:	48 ff c0             	inc    %rax
  40fe71:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  40fe74:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  40fe78:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  40fe7c:	48 39 c8             	cmp    %rcx,%rax
  40fe7f:	7c df                	jl     40fe60 <sendMTFValues+0x3ab0>
  40fe81:	48 31 c0             	xor    %rax,%rax
  40fe84:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  40fe87:	eb 30                	jmp    40feb9 <sendMTFValues+0x3b09>
  40fe89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  40fe90:	0f b6 8d 2f ff ff ff 	movzbl -0xd1(%rbp),%ecx
  40fe97:	0f b6 55 c0          	movzbl -0x40(%rbp),%edx
  40fe9b:	48 63 75 c4          	movslq -0x3c(%rbp),%rsi
  40fe9f:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  40fea3:	88 8d 32 ff ff ff    	mov    %cl,-0xce(%rbp)
  40fea9:	88 94 37 fa 4c 00 00 	mov    %dl,0x4cfa(%rdi,%rsi,1)
  40feb0:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  40feb3:	48 ff c1             	inc    %rcx
  40feb6:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  40feb9:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  40febd:	48 63 55 a4          	movslq -0x5c(%rbp),%rdx
  40fec1:	48 39 d1             	cmp    %rdx,%rcx
  40fec4:	0f 8d 88 00 00 00    	jge    40ff52 <sendMTFValues+0x3ba2>
  40feca:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  40fece:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40fed2:	0f b6 8c 0a a8 06 00 	movzbl 0x6a8(%rdx,%rcx,1),%ecx
  40fed9:	00 
  40feda:	89 45 c0             	mov    %eax,-0x40(%rbp)
  40fedd:	48 63 55 c0          	movslq -0x40(%rbp),%rdx
  40fee1:	0f b6 94 15 32 ff ff 	movzbl -0xce(%rbp,%rdx,1),%edx
  40fee8:	ff 
  40fee9:	88 8d 31 ff ff ff    	mov    %cl,-0xcf(%rbp)
  40feef:	88 95 2f ff ff ff    	mov    %dl,-0xd1(%rbp)
  40fef5:	eb 43                	jmp    40ff3a <sendMTFValues+0x3b8a>
  40fef7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40fefe:	00 00 
  40ff00:	8b 4d c0             	mov    -0x40(%rbp),%ecx
  40ff03:	48 ff c1             	inc    %rcx
  40ff06:	89 4d c0             	mov    %ecx,-0x40(%rbp)
  40ff09:	0f b6 8d 2f ff ff ff 	movzbl -0xd1(%rbp),%ecx
  40ff10:	48 63 55 c0          	movslq -0x40(%rbp),%rdx
  40ff14:	88 8d 30 ff ff ff    	mov    %cl,-0xd0(%rbp)
  40ff1a:	0f b6 8c 15 32 ff ff 	movzbl -0xce(%rbp,%rdx,1),%ecx
  40ff21:	ff 
  40ff22:	0f b6 95 30 ff ff ff 	movzbl -0xd0(%rbp),%edx
  40ff29:	48 63 75 c0          	movslq -0x40(%rbp),%rsi
  40ff2d:	88 8d 2f ff ff ff    	mov    %cl,-0xd1(%rbp)
  40ff33:	88 94 35 32 ff ff ff 	mov    %dl,-0xce(%rbp,%rsi,1)
  40ff3a:	0f b6 8d 31 ff ff ff 	movzbl -0xcf(%rbp),%ecx
  40ff41:	0f b6 95 2f ff ff ff 	movzbl -0xd1(%rbp),%edx
  40ff48:	48 39 d1             	cmp    %rdx,%rcx
  40ff4b:	75 b3                	jne    40ff00 <sendMTFValues+0x3b50>
  40ff4d:	e9 3e ff ff ff       	jmpq   40fe90 <sendMTFValues+0x3ae0>
  40ff52:	48 31 db             	xor    %rbx,%rbx
  40ff55:	89 5d c8             	mov    %ebx,-0x38(%rbp)
  40ff58:	49 c7 c6 20 00 00 00 	mov    $0x20,%r14
  40ff5f:	eb 4d                	jmp    40ffae <sendMTFValues+0x3bfe>
  40ff61:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40ff68:	0f 1f 84 00 00 00 00 
  40ff6f:	00 
  40ff70:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40ff74:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40ff78:	48 69 f8 08 04 00 00 	imul   $0x408,%rax,%rdi
  40ff7f:	44 8b 45 a0          	mov    -0x60(%rbp),%r8d
  40ff83:	8b 4d 98             	mov    -0x68(%rbp),%ecx
  40ff86:	8b 55 9c             	mov    -0x64(%rbp),%edx
  40ff89:	48 8d bc 3e 58 99 00 	lea    0x9958(%rsi,%rdi,1),%rdi
  40ff90:	00 
  40ff91:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  40ff98:	48 8d b4 06 4c 93 00 	lea    0x934c(%rsi,%rax,1),%rsi
  40ff9f:	00 
  40ffa0:	e8 1b 6c 00 00       	callq  416bc0 <BZ2_hbAssignCodes>
  40ffa5:	8b 45 c8             	mov    -0x38(%rbp),%eax
  40ffa8:	48 ff c0             	inc    %rax
  40ffab:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40ffae:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40ffb2:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  40ffb6:	48 39 c8             	cmp    %rcx,%rax
  40ffb9:	0f 8d 05 01 00 00    	jge    4100c4 <sendMTFValues+0x3d14>
  40ffbf:	44 89 75 9c          	mov    %r14d,-0x64(%rbp)
  40ffc3:	89 5d 98             	mov    %ebx,-0x68(%rbp)
  40ffc6:	89 5d c4             	mov    %ebx,-0x3c(%rbp)
  40ffc9:	eb 0e                	jmp    40ffd9 <sendMTFValues+0x3c29>
  40ffcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  40ffd0:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40ffd3:	48 ff c0             	inc    %rax
  40ffd6:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  40ffd9:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  40ffdd:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  40ffe1:	48 39 c8             	cmp    %rcx,%rax
  40ffe4:	0f 8d a6 00 00 00    	jge    410090 <sendMTFValues+0x3ce0>
  40ffea:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  40ffee:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40fff2:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  40fff6:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  40fffd:	48 01 c8             	add    %rcx,%rax
  410000:	0f b6 84 02 4c 93 00 	movzbl 0x934c(%rdx,%rax,1),%eax
  410007:	00 
  410008:	48 63 4d 98          	movslq -0x68(%rbp),%rcx
  41000c:	48 39 c8             	cmp    %rcx,%rax
  41000f:	7e 21                	jle    410032 <sendMTFValues+0x3c82>
  410011:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  410015:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  410019:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  41001d:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  410024:	48 01 c8             	add    %rcx,%rax
  410027:	0f b6 84 02 4c 93 00 	movzbl 0x934c(%rdx,%rax,1),%eax
  41002e:	00 
  41002f:	89 45 98             	mov    %eax,-0x68(%rbp)
  410032:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  410036:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41003a:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  41003e:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  410045:	48 01 c8             	add    %rcx,%rax
  410048:	0f b6 84 02 4c 93 00 	movzbl 0x934c(%rdx,%rax,1),%eax
  41004f:	00 
  410050:	48 63 4d 9c          	movslq -0x64(%rbp),%rcx
  410054:	48 39 c8             	cmp    %rcx,%rax
  410057:	0f 8d 73 ff ff ff    	jge    40ffd0 <sendMTFValues+0x3c20>
  41005d:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  410061:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  410065:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  410069:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  410070:	48 01 c8             	add    %rcx,%rax
  410073:	0f b6 84 02 4c 93 00 	movzbl 0x934c(%rdx,%rax,1),%eax
  41007a:	00 
  41007b:	89 45 9c             	mov    %eax,-0x64(%rbp)
  41007e:	e9 4d ff ff ff       	jmpq   40ffd0 <sendMTFValues+0x3c20>
  410083:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41008a:	84 00 00 00 00 00 
  410090:	48 63 45 98          	movslq -0x68(%rbp),%rax
  410094:	48 83 f8 12          	cmp    $0x12,%rax
  410098:	7c 0c                	jl     4100a6 <sendMTFValues+0x3cf6>
  41009a:	48 c7 c7 bc 0b 00 00 	mov    $0xbbc,%rdi
  4100a1:	e8 da 79 ff ff       	callq  407a80 <BZ2_bz__AssertH__fail>
  4100a6:	48 63 45 9c          	movslq -0x64(%rbp),%rax
  4100aa:	48 85 c0             	test   %rax,%rax
  4100ad:	0f 8f bd fe ff ff    	jg     40ff70 <sendMTFValues+0x3bc0>
  4100b3:	48 c7 c7 bd 0b 00 00 	mov    $0xbbd,%rdi
  4100ba:	e8 c1 79 ff ff       	callq  407a80 <BZ2_bz__AssertH__fail>
  4100bf:	e9 ac fe ff ff       	jmpq   40ff70 <sendMTFValues+0x3bc0>
  4100c4:	48 31 c0             	xor    %rax,%rax
  4100c7:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  4100ca:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  4100d1:	eb 16                	jmp    4100e9 <sendMTFValues+0x3d39>
  4100d3:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4100da:	84 00 00 00 00 00 
  4100e0:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  4100e3:	48 ff c1             	inc    %rcx
  4100e6:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  4100e9:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  4100ed:	48 83 f9 0f          	cmp    $0xf,%rcx
  4100f1:	7f 75                	jg     410168 <sendMTFValues+0x3db8>
  4100f3:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  4100f7:	88 84 0d 10 ff ff ff 	mov    %al,-0xf0(%rbp,%rcx,1)
  4100fe:	89 45 c0             	mov    %eax,-0x40(%rbp)
  410101:	eb 16                	jmp    410119 <sendMTFValues+0x3d69>
  410103:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41010a:	84 00 00 00 00 00 
  410110:	8b 4d c0             	mov    -0x40(%rbp),%ecx
  410113:	48 ff c1             	inc    %rcx
  410116:	89 4d c0             	mov    %ecx,-0x40(%rbp)
  410119:	48 63 4d c0          	movslq -0x40(%rbp),%rcx
  41011d:	48 83 f9 0f          	cmp    $0xf,%rcx
  410121:	7f bd                	jg     4100e0 <sendMTFValues+0x3d30>
  410123:	8b 75 c4             	mov    -0x3c(%rbp),%esi
  410126:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  41012d:	48 d3 e6             	shl    %cl,%rsi
  410130:	8b 7d c0             	mov    -0x40(%rbp),%edi
  410133:	48 01 f7             	add    %rsi,%rdi
  410136:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41013d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  410141:	48 d3 e7             	shl    %cl,%rdi
  410144:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41014b:	48 d3 ff             	sar    %cl,%rdi
  41014e:	0f b6 8c 3e 80 00 00 	movzbl 0x80(%rsi,%rdi,1),%ecx
  410155:	00 
  410156:	48 85 c9             	test   %rcx,%rcx
  410159:	74 b5                	je     410110 <sendMTFValues+0x3d60>
  41015b:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  41015f:	88 94 0d 10 ff ff ff 	mov    %dl,-0xf0(%rbp,%rcx,1)
  410166:	eb a8                	jmp    410110 <sendMTFValues+0x3d60>
  410168:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41016c:	8b 40 74             	mov    0x74(%rax),%eax
  41016f:	89 45 8c             	mov    %eax,-0x74(%rbp)
  410172:	48 31 c0             	xor    %rax,%rax
  410175:	eb 14                	jmp    41018b <sendMTFValues+0x3ddb>
  410177:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41017e:	00 00 
  410180:	e8 0b c1 ff ff       	callq  40c290 <bsW>
  410185:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  410188:	48 ff c0             	inc    %rax
  41018b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  41018e:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  410192:	48 83 f8 0f          	cmp    $0xf,%rax
  410196:	7f 38                	jg     4101d0 <sendMTFValues+0x3e20>
  410198:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  41019c:	0f b6 84 05 10 ff ff 	movzbl -0xf0(%rbp,%rax,1),%eax
  4101a3:	ff 
  4101a4:	48 85 c0             	test   %rax,%rax
  4101a7:	74 17                	je     4101c0 <sendMTFValues+0x3e10>
  4101a9:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4101ad:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  4101b4:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  4101bb:	eb c3                	jmp    410180 <sendMTFValues+0x3dd0>
  4101bd:	0f 1f 00             	nopl   (%rax)
  4101c0:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4101c4:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  4101cb:	48 31 d2             	xor    %rdx,%rdx
  4101ce:	eb b0                	jmp    410180 <sendMTFValues+0x3dd0>
  4101d0:	48 31 db             	xor    %rbx,%rbx
  4101d3:	89 5d c4             	mov    %ebx,-0x3c(%rbp)
  4101d6:	eb 11                	jmp    4101e9 <sendMTFValues+0x3e39>
  4101d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4101df:	00 
  4101e0:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  4101e3:	48 ff c0             	inc    %rax
  4101e6:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  4101e9:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  4101ed:	48 83 f8 0f          	cmp    $0xf,%rax
  4101f1:	0f 8f 99 00 00 00    	jg     410290 <sendMTFValues+0x3ee0>
  4101f7:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  4101fb:	0f b6 84 05 10 ff ff 	movzbl -0xf0(%rbp,%rax,1),%eax
  410202:	ff 
  410203:	48 85 c0             	test   %rax,%rax
  410206:	74 d8                	je     4101e0 <sendMTFValues+0x3e30>
  410208:	89 5d c0             	mov    %ebx,-0x40(%rbp)
  41020b:	eb 11                	jmp    41021e <sendMTFValues+0x3e6e>
  41020d:	0f 1f 00             	nopl   (%rax)
  410210:	e8 7b c0 ff ff       	callq  40c290 <bsW>
  410215:	8b 45 c0             	mov    -0x40(%rbp),%eax
  410218:	48 ff c0             	inc    %rax
  41021b:	89 45 c0             	mov    %eax,-0x40(%rbp)
  41021e:	48 63 45 c0          	movslq -0x40(%rbp),%rax
  410222:	48 83 f8 0f          	cmp    $0xf,%rax
  410226:	7f b8                	jg     4101e0 <sendMTFValues+0x3e30>
  410228:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  41022b:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  410232:	48 d3 e0             	shl    %cl,%rax
  410235:	8b 55 c0             	mov    -0x40(%rbp),%edx
  410238:	48 01 c2             	add    %rax,%rdx
  41023b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410242:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  410246:	48 d3 e2             	shl    %cl,%rdx
  410249:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410250:	48 d3 fa             	sar    %cl,%rdx
  410253:	0f b6 84 10 80 00 00 	movzbl 0x80(%rax,%rdx,1),%eax
  41025a:	00 
  41025b:	48 85 c0             	test   %rax,%rax
  41025e:	74 20                	je     410280 <sendMTFValues+0x3ed0>
  410260:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410264:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  41026b:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  410272:	eb 9c                	jmp    410210 <sendMTFValues+0x3e60>
  410274:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41027b:	00 00 00 00 00 
  410280:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410284:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  41028b:	48 31 d2             	xor    %rdx,%rdx
  41028e:	eb 80                	jmp    410210 <sendMTFValues+0x3e60>
  410290:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  410294:	48 63 80 90 02 00 00 	movslq 0x290(%rax),%rax
  41029b:	48 83 f8 03          	cmp    $0x3,%rax
  41029f:	7c 26                	jl     4102c7 <sendMTFValues+0x3f17>
  4102a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4102a5:	8b 50 74             	mov    0x74(%rax),%edx
  4102a8:	8b 45 8c             	mov    -0x74(%rbp),%eax
  4102ab:	48 8b 3d 1e 87 01 00 	mov    0x1871e(%rip),%rdi        # 4289d0 <stderr>
  4102b2:	48 29 c2             	sub    %rax,%rdx
  4102b5:	48 be 58 7e 42 00 00 	movabs $0x427e58,%rsi
  4102bc:	00 00 00 
  4102bf:	48 31 c0             	xor    %rax,%rax
  4102c2:	e8 31 9a 00 00       	callq  419cf8 <fprintf>
  4102c7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4102cb:	8b 40 74             	mov    0x74(%rax),%eax
  4102ce:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4102d2:	8b 55 90             	mov    -0x70(%rbp),%edx
  4102d5:	89 45 8c             	mov    %eax,-0x74(%rbp)
  4102d8:	48 c7 c6 03 00 00 00 	mov    $0x3,%rsi
  4102df:	e8 ac bf ff ff       	callq  40c290 <bsW>
  4102e4:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4102e8:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  4102eb:	48 c7 c6 0f 00 00 00 	mov    $0xf,%rsi
  4102f2:	e8 99 bf ff ff       	callq  40c290 <bsW>
  4102f7:	48 31 db             	xor    %rbx,%rbx
  4102fa:	89 5d c4             	mov    %ebx,-0x3c(%rbp)
  4102fd:	eb 1d                	jmp    41031c <sendMTFValues+0x3f6c>
  4102ff:	90                   	nop
  410300:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410304:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  41030b:	48 31 d2             	xor    %rdx,%rdx
  41030e:	e8 7d bf ff ff       	callq  40c290 <bsW>
  410313:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  410316:	48 ff c0             	inc    %rax
  410319:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  41031c:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  410320:	48 63 4d a4          	movslq -0x5c(%rbp),%rcx
  410324:	48 39 c8             	cmp    %rcx,%rax
  410327:	7d 42                	jge    41036b <sendMTFValues+0x3fbb>
  410329:	89 5d c0             	mov    %ebx,-0x40(%rbp)
  41032c:	eb 22                	jmp    410350 <sendMTFValues+0x3fa0>
  41032e:	66 90                	xchg   %ax,%ax
  410330:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410334:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  41033b:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  410342:	e8 49 bf ff ff       	callq  40c290 <bsW>
  410347:	8b 45 c0             	mov    -0x40(%rbp),%eax
  41034a:	48 ff c0             	inc    %rax
  41034d:	89 45 c0             	mov    %eax,-0x40(%rbp)
  410350:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  410354:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  410358:	48 63 55 c0          	movslq -0x40(%rbp),%rdx
  41035c:	0f b6 84 01 fa 4c 00 	movzbl 0x4cfa(%rcx,%rax,1),%eax
  410363:	00 
  410364:	48 39 c2             	cmp    %rax,%rdx
  410367:	7c c7                	jl     410330 <sendMTFValues+0x3f80>
  410369:	eb 95                	jmp    410300 <sendMTFValues+0x3f50>
  41036b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41036f:	48 63 80 90 02 00 00 	movslq 0x290(%rax),%rax
  410376:	48 83 f8 03          	cmp    $0x3,%rax
  41037a:	7c 26                	jl     4103a2 <sendMTFValues+0x3ff2>
  41037c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  410380:	8b 50 74             	mov    0x74(%rax),%edx
  410383:	8b 45 8c             	mov    -0x74(%rbp),%eax
  410386:	48 8b 3d 43 86 01 00 	mov    0x18643(%rip),%rdi        # 4289d0 <stderr>
  41038d:	48 29 c2             	sub    %rax,%rdx
  410390:	48 be 72 7e 42 00 00 	movabs $0x427e72,%rsi
  410397:	00 00 00 
  41039a:	48 31 c0             	xor    %rax,%rax
  41039d:	e8 56 99 00 00       	callq  419cf8 <fprintf>
  4103a2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4103a6:	8b 40 74             	mov    0x74(%rax),%eax
  4103a9:	89 45 8c             	mov    %eax,-0x74(%rbp)
  4103ac:	48 31 db             	xor    %rbx,%rbx
  4103af:	89 5d c8             	mov    %ebx,-0x38(%rbp)
  4103b2:	eb 15                	jmp    4103c9 <sendMTFValues+0x4019>
  4103b4:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4103bb:	00 00 00 00 00 
  4103c0:	8b 45 c8             	mov    -0x38(%rbp),%eax
  4103c3:	48 ff c0             	inc    %rax
  4103c6:	89 45 c8             	mov    %eax,-0x38(%rbp)
  4103c9:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  4103cd:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  4103d1:	48 39 c8             	cmp    %rcx,%rax
  4103d4:	0f 8d 2b 01 00 00    	jge    410505 <sendMTFValues+0x4155>
  4103da:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  4103de:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4103e2:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  4103e9:	0f b6 84 01 4c 93 00 	movzbl 0x934c(%rcx,%rax,1),%eax
  4103f0:	00 
  4103f1:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
  4103f7:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4103fb:	8b 95 0c ff ff ff    	mov    -0xf4(%rbp),%edx
  410401:	48 c7 c6 05 00 00 00 	mov    $0x5,%rsi
  410408:	e8 83 be ff ff       	callq  40c290 <bsW>
  41040d:	89 5d c4             	mov    %ebx,-0x3c(%rbp)
  410410:	eb 2a                	jmp    41043c <sendMTFValues+0x408c>
  410412:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  410419:	1f 84 00 00 00 00 00 
  410420:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410424:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  41042b:	48 31 d2             	xor    %rdx,%rdx
  41042e:	e8 5d be ff ff       	callq  40c290 <bsW>
  410433:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  410436:	48 ff c0             	inc    %rax
  410439:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  41043c:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  410440:	48 63 4d a0          	movslq -0x60(%rbp),%rcx
  410444:	48 39 c8             	cmp    %rcx,%rax
  410447:	7c 2d                	jl     410476 <sendMTFValues+0x40c6>
  410449:	e9 72 ff ff ff       	jmpq   4103c0 <sendMTFValues+0x4010>
  41044e:	66 90                	xchg   %ax,%ax
  410450:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410454:	48 c7 c6 02 00 00 00 	mov    $0x2,%rsi
  41045b:	48 c7 c2 02 00 00 00 	mov    $0x2,%rdx
  410462:	e8 29 be ff ff       	callq  40c290 <bsW>
  410467:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
  41046d:	48 ff c0             	inc    %rax
  410470:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
  410476:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  41047a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  41047e:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  410482:	48 63 b5 0c ff ff ff 	movslq -0xf4(%rbp),%rsi
  410489:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  410490:	48 01 c8             	add    %rcx,%rax
  410493:	0f b6 84 02 4c 93 00 	movzbl 0x934c(%rdx,%rax,1),%eax
  41049a:	00 
  41049b:	48 39 c6             	cmp    %rax,%rsi
  41049e:	7c b0                	jl     410450 <sendMTFValues+0x40a0>
  4104a0:	eb 34                	jmp    4104d6 <sendMTFValues+0x4126>
  4104a2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4104a9:	1f 84 00 00 00 00 00 
  4104b0:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4104b4:	48 c7 c6 02 00 00 00 	mov    $0x2,%rsi
  4104bb:	48 c7 c2 03 00 00 00 	mov    $0x3,%rdx
  4104c2:	e8 c9 bd ff ff       	callq  40c290 <bsW>
  4104c7:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
  4104cd:	48 ff c8             	dec    %rax
  4104d0:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
  4104d6:	48 63 45 c8          	movslq -0x38(%rbp),%rax
  4104da:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4104de:	48 63 55 c4          	movslq -0x3c(%rbp),%rdx
  4104e2:	48 63 b5 0c ff ff ff 	movslq -0xf4(%rbp),%rsi
  4104e9:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  4104f0:	48 01 c8             	add    %rcx,%rax
  4104f3:	0f b6 84 02 4c 93 00 	movzbl 0x934c(%rdx,%rax,1),%eax
  4104fa:	00 
  4104fb:	48 39 c6             	cmp    %rax,%rsi
  4104fe:	7f b0                	jg     4104b0 <sendMTFValues+0x4100>
  410500:	e9 1b ff ff ff       	jmpq   410420 <sendMTFValues+0x4070>
  410505:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  410509:	48 63 80 90 02 00 00 	movslq 0x290(%rax),%rax
  410510:	48 83 f8 03          	cmp    $0x3,%rax
  410514:	7c 26                	jl     41053c <sendMTFValues+0x418c>
  410516:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41051a:	8b 50 74             	mov    0x74(%rax),%edx
  41051d:	8b 45 8c             	mov    -0x74(%rbp),%eax
  410520:	48 8b 3d a9 84 01 00 	mov    0x184a9(%rip),%rdi        # 4289d0 <stderr>
  410527:	48 29 c2             	sub    %rax,%rdx
  41052a:	48 be 81 7e 42 00 00 	movabs $0x427e81,%rsi
  410531:	00 00 00 
  410534:	48 31 c0             	xor    %rax,%rax
  410537:	e8 bc 97 00 00       	callq  419cf8 <fprintf>
  41053c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  410540:	8b 40 74             	mov    0x74(%rax),%eax
  410543:	89 45 8c             	mov    %eax,-0x74(%rbp)
  410546:	48 31 c0             	xor    %rax,%rax
  410549:	89 45 94             	mov    %eax,-0x6c(%rbp)
  41054c:	89 45 bc             	mov    %eax,-0x44(%rbp)
  41054f:	eb 21                	jmp    410572 <sendMTFValues+0x41c2>
  410551:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  410558:	0f 1f 84 00 00 00 00 
  41055f:	00 
  410560:	8b 45 b8             	mov    -0x48(%rbp),%eax
  410563:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
  410566:	48 ff c0             	inc    %rax
  410569:	89 45 bc             	mov    %eax,-0x44(%rbp)
  41056c:	48 ff c1             	inc    %rcx
  41056f:	89 4d 94             	mov    %ecx,-0x6c(%rbp)
  410572:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  410576:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  41057a:	48 63 80 9c 02 00 00 	movslq 0x29c(%rax),%rax
  410581:	48 39 c1             	cmp    %rax,%rcx
  410584:	0f 8d 38 11 00 00    	jge    4116c2 <sendMTFValues+0x5312>
  41058a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41058d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  410591:	48 83 c0 31          	add    $0x31,%rax
  410595:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41059c:	89 45 b8             	mov    %eax,-0x48(%rbp)
  41059f:	48 63 92 9c 02 00 00 	movslq 0x29c(%rdx),%rdx
  4105a6:	48 d3 e0             	shl    %cl,%rax
  4105a9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4105b0:	48 d3 f8             	sar    %cl,%rax
  4105b3:	48 39 d0             	cmp    %rdx,%rax
  4105b6:	7c 10                	jl     4105c8 <sendMTFValues+0x4218>
  4105b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4105bc:	8b 80 9c 02 00 00    	mov    0x29c(%rax),%eax
  4105c2:	48 ff c8             	dec    %rax
  4105c5:	89 45 b8             	mov    %eax,-0x48(%rbp)
  4105c8:	48 63 45 94          	movslq -0x6c(%rbp),%rax
  4105cc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4105d0:	0f b6 84 01 a8 06 00 	movzbl 0x6a8(%rcx,%rax,1),%eax
  4105d7:	00 
  4105d8:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  4105dc:	48 39 c8             	cmp    %rcx,%rax
  4105df:	7c 0c                	jl     4105ed <sendMTFValues+0x423d>
  4105e1:	48 c7 c7 be 0b 00 00 	mov    $0xbbe,%rdi
  4105e8:	e8 93 74 ff ff       	callq  407a80 <BZ2_bz__AssertH__fail>
  4105ed:	8b 45 90             	mov    -0x70(%rbp),%eax
  4105f0:	48 83 f8 06          	cmp    $0x6,%rax
  4105f4:	0f 85 56 10 00 00    	jne    411650 <sendMTFValues+0x52a0>
  4105fa:	8b 45 b8             	mov    -0x48(%rbp),%eax
  4105fd:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  410600:	48 29 c8             	sub    %rcx,%rax
  410603:	4c 21 f8             	and    %r15,%rax
  410606:	48 83 f8 31          	cmp    $0x31,%rax
  41060a:	0f 85 40 10 00 00    	jne    411650 <sendMTFValues+0x52a0>
  410610:	48 63 45 94          	movslq -0x6c(%rbp),%rax
  410614:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  410618:	0f b6 84 01 a8 06 00 	movzbl 0x6a8(%rcx,%rax,1),%eax
  41061f:	00 
  410620:	48 63 55 94          	movslq -0x6c(%rbp),%rdx
  410624:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  410628:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  41062f:	48 8d 84 01 4c 93 00 	lea    0x934c(%rcx,%rax,1),%rax
  410636:	00 
  410637:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  41063e:	0f b6 84 16 a8 06 00 	movzbl 0x6a8(%rsi,%rdx,1),%eax
  410645:	00 
  410646:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  41064a:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410651:	48 69 c0 08 04 00 00 	imul   $0x408,%rax,%rax
  410658:	48 8d 84 06 58 99 00 	lea    0x9958(%rsi,%rax,1),%rax
  41065f:	00 
  410660:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
  410667:	0f b6 04 4a          	movzbl (%rdx,%rcx,2),%eax
  41066b:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410672:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410679:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410680:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410687:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41068b:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  41068f:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410692:	e8 f9 bb ff ff       	callq  40c290 <bsW>
  410697:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41069a:	48 ff c0             	inc    %rax
  41069d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4106a4:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  4106ab:	48 d3 e0             	shl    %cl,%rax
  4106ae:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4106b5:	48 d3 f8             	sar    %cl,%rax
  4106b8:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  4106bc:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  4106c3:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  4106ca:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4106d1:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  4106d8:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4106dc:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  4106e0:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  4106e3:	e8 a8 bb ff ff       	callq  40c290 <bsW>
  4106e8:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4106eb:	48 83 c0 02          	add    $0x2,%rax
  4106ef:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4106f6:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  4106fd:	48 d3 e0             	shl    %cl,%rax
  410700:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410707:	48 d3 f8             	sar    %cl,%rax
  41070a:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  41070e:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410715:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  41071c:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410723:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  41072a:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41072e:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410732:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410735:	e8 56 bb ff ff       	callq  40c290 <bsW>
  41073a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41073d:	48 83 c0 03          	add    $0x3,%rax
  410741:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410748:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  41074f:	48 d3 e0             	shl    %cl,%rax
  410752:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410759:	48 d3 f8             	sar    %cl,%rax
  41075c:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410760:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410767:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  41076e:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410775:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  41077c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410780:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410784:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410787:	e8 04 bb ff ff       	callq  40c290 <bsW>
  41078c:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41078f:	48 83 c0 04          	add    $0x4,%rax
  410793:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41079a:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  4107a1:	48 d3 e0             	shl    %cl,%rax
  4107a4:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4107ab:	48 d3 f8             	sar    %cl,%rax
  4107ae:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  4107b2:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  4107b9:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  4107c0:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4107c7:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  4107ce:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4107d2:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  4107d6:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  4107d9:	e8 b2 ba ff ff       	callq  40c290 <bsW>
  4107de:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4107e1:	48 83 c0 05          	add    $0x5,%rax
  4107e5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4107ec:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  4107f3:	48 d3 e0             	shl    %cl,%rax
  4107f6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4107fd:	48 d3 f8             	sar    %cl,%rax
  410800:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410804:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  41080b:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410812:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410819:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410820:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410824:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410828:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  41082b:	e8 60 ba ff ff       	callq  40c290 <bsW>
  410830:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410833:	48 83 c0 06          	add    $0x6,%rax
  410837:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41083e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410845:	48 d3 e0             	shl    %cl,%rax
  410848:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41084f:	48 d3 f8             	sar    %cl,%rax
  410852:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410856:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  41085d:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410864:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  41086b:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410872:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410876:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  41087a:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  41087d:	e8 0e ba ff ff       	callq  40c290 <bsW>
  410882:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410885:	48 83 c0 07          	add    $0x7,%rax
  410889:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410890:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410897:	48 d3 e0             	shl    %cl,%rax
  41089a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4108a1:	48 d3 f8             	sar    %cl,%rax
  4108a4:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  4108a8:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  4108af:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  4108b6:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4108bd:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  4108c4:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4108c8:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  4108cc:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  4108cf:	e8 bc b9 ff ff       	callq  40c290 <bsW>
  4108d4:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4108d7:	48 83 c0 08          	add    $0x8,%rax
  4108db:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4108e2:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  4108e9:	48 d3 e0             	shl    %cl,%rax
  4108ec:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4108f3:	48 d3 f8             	sar    %cl,%rax
  4108f6:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  4108fa:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410901:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410908:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  41090f:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410916:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41091a:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  41091e:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410921:	e8 6a b9 ff ff       	callq  40c290 <bsW>
  410926:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410929:	48 83 c0 09          	add    $0x9,%rax
  41092d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410934:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  41093b:	48 d3 e0             	shl    %cl,%rax
  41093e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410945:	48 d3 f8             	sar    %cl,%rax
  410948:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  41094c:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410953:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  41095a:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410961:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410968:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41096c:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410970:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410973:	e8 18 b9 ff ff       	callq  40c290 <bsW>
  410978:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41097b:	48 83 c0 0a          	add    $0xa,%rax
  41097f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410986:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  41098d:	48 d3 e0             	shl    %cl,%rax
  410990:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410997:	48 d3 f8             	sar    %cl,%rax
  41099a:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  41099e:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  4109a5:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  4109ac:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4109b3:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  4109ba:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4109be:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  4109c2:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  4109c5:	e8 c6 b8 ff ff       	callq  40c290 <bsW>
  4109ca:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4109cd:	48 83 c0 0b          	add    $0xb,%rax
  4109d1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4109d8:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  4109df:	48 d3 e0             	shl    %cl,%rax
  4109e2:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4109e9:	48 d3 f8             	sar    %cl,%rax
  4109ec:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  4109f0:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  4109f7:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  4109fe:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410a05:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410a0c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410a10:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410a14:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410a17:	e8 74 b8 ff ff       	callq  40c290 <bsW>
  410a1c:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410a1f:	48 83 c0 0c          	add    $0xc,%rax
  410a23:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410a2a:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410a31:	48 d3 e0             	shl    %cl,%rax
  410a34:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410a3b:	48 d3 f8             	sar    %cl,%rax
  410a3e:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410a42:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410a49:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410a50:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410a57:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410a5e:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410a62:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410a66:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410a69:	e8 22 b8 ff ff       	callq  40c290 <bsW>
  410a6e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410a71:	48 83 c0 0d          	add    $0xd,%rax
  410a75:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410a7c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410a83:	48 d3 e0             	shl    %cl,%rax
  410a86:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410a8d:	48 d3 f8             	sar    %cl,%rax
  410a90:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410a94:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410a9b:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410aa2:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410aa9:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410ab0:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410ab4:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410ab8:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410abb:	e8 d0 b7 ff ff       	callq  40c290 <bsW>
  410ac0:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410ac3:	48 83 c0 0e          	add    $0xe,%rax
  410ac7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410ace:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410ad5:	48 d3 e0             	shl    %cl,%rax
  410ad8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410adf:	48 d3 f8             	sar    %cl,%rax
  410ae2:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410ae6:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410aed:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410af4:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410afb:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410b02:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410b06:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410b0a:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410b0d:	e8 7e b7 ff ff       	callq  40c290 <bsW>
  410b12:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410b15:	48 83 c0 0f          	add    $0xf,%rax
  410b19:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410b20:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410b27:	48 d3 e0             	shl    %cl,%rax
  410b2a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410b31:	48 d3 f8             	sar    %cl,%rax
  410b34:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410b38:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410b3f:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410b46:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410b4d:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410b54:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410b58:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410b5c:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410b5f:	e8 2c b7 ff ff       	callq  40c290 <bsW>
  410b64:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410b67:	48 83 c0 10          	add    $0x10,%rax
  410b6b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410b72:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410b79:	48 d3 e0             	shl    %cl,%rax
  410b7c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410b83:	48 d3 f8             	sar    %cl,%rax
  410b86:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410b8a:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410b91:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410b98:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410b9f:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410ba6:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410baa:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410bae:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410bb1:	e8 da b6 ff ff       	callq  40c290 <bsW>
  410bb6:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410bb9:	48 83 c0 11          	add    $0x11,%rax
  410bbd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410bc4:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410bcb:	48 d3 e0             	shl    %cl,%rax
  410bce:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410bd5:	48 d3 f8             	sar    %cl,%rax
  410bd8:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410bdc:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410be3:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410bea:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410bf1:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410bf8:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410bfc:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410c00:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410c03:	e8 88 b6 ff ff       	callq  40c290 <bsW>
  410c08:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410c0b:	48 83 c0 12          	add    $0x12,%rax
  410c0f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410c16:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410c1d:	48 d3 e0             	shl    %cl,%rax
  410c20:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410c27:	48 d3 f8             	sar    %cl,%rax
  410c2a:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410c2e:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410c35:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410c3c:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410c43:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410c4a:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410c4e:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410c52:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410c55:	e8 36 b6 ff ff       	callq  40c290 <bsW>
  410c5a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410c5d:	48 83 c0 13          	add    $0x13,%rax
  410c61:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410c68:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410c6f:	48 d3 e0             	shl    %cl,%rax
  410c72:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410c79:	48 d3 f8             	sar    %cl,%rax
  410c7c:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410c80:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410c87:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410c8e:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410c95:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410c9c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410ca0:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410ca4:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410ca7:	e8 e4 b5 ff ff       	callq  40c290 <bsW>
  410cac:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410caf:	48 83 c0 14          	add    $0x14,%rax
  410cb3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410cba:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410cc1:	48 d3 e0             	shl    %cl,%rax
  410cc4:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410ccb:	48 d3 f8             	sar    %cl,%rax
  410cce:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410cd2:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410cd9:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410ce0:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410ce7:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410cee:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410cf2:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410cf6:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410cf9:	e8 92 b5 ff ff       	callq  40c290 <bsW>
  410cfe:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410d01:	48 83 c0 15          	add    $0x15,%rax
  410d05:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410d0c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410d13:	48 d3 e0             	shl    %cl,%rax
  410d16:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410d1d:	48 d3 f8             	sar    %cl,%rax
  410d20:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410d24:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410d2b:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410d32:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410d39:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410d40:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410d44:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410d48:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410d4b:	e8 40 b5 ff ff       	callq  40c290 <bsW>
  410d50:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410d53:	48 83 c0 16          	add    $0x16,%rax
  410d57:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410d5e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410d65:	48 d3 e0             	shl    %cl,%rax
  410d68:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410d6f:	48 d3 f8             	sar    %cl,%rax
  410d72:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410d76:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410d7d:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410d84:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410d8b:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410d92:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410d96:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410d9a:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410d9d:	e8 ee b4 ff ff       	callq  40c290 <bsW>
  410da2:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410da5:	48 83 c0 17          	add    $0x17,%rax
  410da9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410db0:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410db7:	48 d3 e0             	shl    %cl,%rax
  410dba:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410dc1:	48 d3 f8             	sar    %cl,%rax
  410dc4:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410dc8:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410dcf:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410dd6:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410ddd:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410de4:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410de8:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410dec:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410def:	e8 9c b4 ff ff       	callq  40c290 <bsW>
  410df4:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410df7:	48 83 c0 18          	add    $0x18,%rax
  410dfb:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410e02:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410e09:	48 d3 e0             	shl    %cl,%rax
  410e0c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410e13:	48 d3 f8             	sar    %cl,%rax
  410e16:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410e1a:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410e21:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410e28:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410e2f:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410e36:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410e3a:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410e3e:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410e41:	e8 4a b4 ff ff       	callq  40c290 <bsW>
  410e46:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410e49:	48 83 c0 19          	add    $0x19,%rax
  410e4d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410e54:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410e5b:	48 d3 e0             	shl    %cl,%rax
  410e5e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410e65:	48 d3 f8             	sar    %cl,%rax
  410e68:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410e6c:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410e73:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410e7a:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410e81:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410e88:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410e8c:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410e90:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410e93:	e8 f8 b3 ff ff       	callq  40c290 <bsW>
  410e98:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410e9b:	48 83 c0 1a          	add    $0x1a,%rax
  410e9f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410ea6:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410ead:	48 d3 e0             	shl    %cl,%rax
  410eb0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410eb7:	48 d3 f8             	sar    %cl,%rax
  410eba:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410ebe:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410ec5:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410ecc:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410ed3:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410eda:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410ede:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410ee2:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410ee5:	e8 a6 b3 ff ff       	callq  40c290 <bsW>
  410eea:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410eed:	48 83 c0 1b          	add    $0x1b,%rax
  410ef1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410ef8:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410eff:	48 d3 e0             	shl    %cl,%rax
  410f02:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410f09:	48 d3 f8             	sar    %cl,%rax
  410f0c:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410f10:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410f17:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410f1e:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410f25:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410f2c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410f30:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410f34:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410f37:	e8 54 b3 ff ff       	callq  40c290 <bsW>
  410f3c:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410f3f:	48 83 c0 1c          	add    $0x1c,%rax
  410f43:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410f4a:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410f51:	48 d3 e0             	shl    %cl,%rax
  410f54:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410f5b:	48 d3 f8             	sar    %cl,%rax
  410f5e:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410f62:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410f69:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410f70:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410f77:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410f7e:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410f82:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410f86:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410f89:	e8 02 b3 ff ff       	callq  40c290 <bsW>
  410f8e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410f91:	48 83 c0 1d          	add    $0x1d,%rax
  410f95:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410f9c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410fa3:	48 d3 e0             	shl    %cl,%rax
  410fa6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410fad:	48 d3 f8             	sar    %cl,%rax
  410fb0:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  410fb4:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  410fbb:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  410fc2:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  410fc9:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  410fd0:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  410fd4:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  410fd8:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  410fdb:	e8 b0 b2 ff ff       	callq  40c290 <bsW>
  410fe0:	8b 45 bc             	mov    -0x44(%rbp),%eax
  410fe3:	48 83 c0 1e          	add    $0x1e,%rax
  410fe7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410fee:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  410ff5:	48 d3 e0             	shl    %cl,%rax
  410ff8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  410fff:	48 d3 f8             	sar    %cl,%rax
  411002:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  411006:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  41100d:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  411014:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  41101b:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  411022:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  411026:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  41102a:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  41102d:	e8 5e b2 ff ff       	callq  40c290 <bsW>
  411032:	8b 45 bc             	mov    -0x44(%rbp),%eax
  411035:	48 83 c0 1f          	add    $0x1f,%rax
  411039:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411040:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  411047:	48 d3 e0             	shl    %cl,%rax
  41104a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411051:	48 d3 f8             	sar    %cl,%rax
  411054:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  411058:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  41105f:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  411066:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  41106d:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  411074:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  411078:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  41107c:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  41107f:	e8 0c b2 ff ff       	callq  40c290 <bsW>
  411084:	8b 45 bc             	mov    -0x44(%rbp),%eax
  411087:	48 83 c0 20          	add    $0x20,%rax
  41108b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411092:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  411099:	48 d3 e0             	shl    %cl,%rax
  41109c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4110a3:	48 d3 f8             	sar    %cl,%rax
  4110a6:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  4110aa:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  4110b1:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  4110b8:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4110bf:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  4110c6:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4110ca:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  4110ce:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  4110d1:	e8 ba b1 ff ff       	callq  40c290 <bsW>
  4110d6:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4110d9:	48 83 c0 21          	add    $0x21,%rax
  4110dd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4110e4:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  4110eb:	48 d3 e0             	shl    %cl,%rax
  4110ee:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4110f5:	48 d3 f8             	sar    %cl,%rax
  4110f8:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  4110fc:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  411103:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  41110a:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  411111:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  411118:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41111c:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  411120:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  411123:	e8 68 b1 ff ff       	callq  40c290 <bsW>
  411128:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41112b:	48 83 c0 22          	add    $0x22,%rax
  41112f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411136:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  41113d:	48 d3 e0             	shl    %cl,%rax
  411140:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411147:	48 d3 f8             	sar    %cl,%rax
  41114a:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  41114e:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  411155:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  41115c:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  411163:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  41116a:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41116e:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  411172:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  411175:	e8 16 b1 ff ff       	callq  40c290 <bsW>
  41117a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41117d:	48 83 c0 23          	add    $0x23,%rax
  411181:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411188:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  41118f:	48 d3 e0             	shl    %cl,%rax
  411192:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411199:	48 d3 f8             	sar    %cl,%rax
  41119c:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  4111a0:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  4111a7:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  4111ae:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4111b5:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  4111bc:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4111c0:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  4111c4:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  4111c7:	e8 c4 b0 ff ff       	callq  40c290 <bsW>
  4111cc:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4111cf:	48 83 c0 24          	add    $0x24,%rax
  4111d3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4111da:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  4111e1:	48 d3 e0             	shl    %cl,%rax
  4111e4:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4111eb:	48 d3 f8             	sar    %cl,%rax
  4111ee:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  4111f2:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  4111f9:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  411200:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  411207:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  41120e:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  411212:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  411216:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  411219:	e8 72 b0 ff ff       	callq  40c290 <bsW>
  41121e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  411221:	48 83 c0 25          	add    $0x25,%rax
  411225:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41122c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  411233:	48 d3 e0             	shl    %cl,%rax
  411236:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41123d:	48 d3 f8             	sar    %cl,%rax
  411240:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  411244:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  41124b:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  411252:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  411259:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  411260:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  411264:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  411268:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  41126b:	e8 20 b0 ff ff       	callq  40c290 <bsW>
  411270:	8b 45 bc             	mov    -0x44(%rbp),%eax
  411273:	48 83 c0 26          	add    $0x26,%rax
  411277:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41127e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  411285:	48 d3 e0             	shl    %cl,%rax
  411288:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41128f:	48 d3 f8             	sar    %cl,%rax
  411292:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  411296:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  41129d:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  4112a4:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4112ab:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  4112b2:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4112b6:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  4112ba:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  4112bd:	e8 ce af ff ff       	callq  40c290 <bsW>
  4112c2:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4112c5:	48 83 c0 27          	add    $0x27,%rax
  4112c9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4112d0:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  4112d7:	48 d3 e0             	shl    %cl,%rax
  4112da:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4112e1:	48 d3 f8             	sar    %cl,%rax
  4112e4:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  4112e8:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  4112ef:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  4112f6:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4112fd:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  411304:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  411308:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  41130c:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  41130f:	e8 7c af ff ff       	callq  40c290 <bsW>
  411314:	8b 45 bc             	mov    -0x44(%rbp),%eax
  411317:	48 83 c0 28          	add    $0x28,%rax
  41131b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411322:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  411329:	48 d3 e0             	shl    %cl,%rax
  41132c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411333:	48 d3 f8             	sar    %cl,%rax
  411336:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  41133a:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  411341:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  411348:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  41134f:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  411356:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41135a:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  41135e:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  411361:	e8 2a af ff ff       	callq  40c290 <bsW>
  411366:	8b 45 bc             	mov    -0x44(%rbp),%eax
  411369:	48 83 c0 29          	add    $0x29,%rax
  41136d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411374:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  41137b:	48 d3 e0             	shl    %cl,%rax
  41137e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411385:	48 d3 f8             	sar    %cl,%rax
  411388:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  41138c:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  411393:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  41139a:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4113a1:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  4113a8:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4113ac:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  4113b0:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  4113b3:	e8 d8 ae ff ff       	callq  40c290 <bsW>
  4113b8:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4113bb:	48 83 c0 2a          	add    $0x2a,%rax
  4113bf:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4113c6:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  4113cd:	48 d3 e0             	shl    %cl,%rax
  4113d0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4113d7:	48 d3 f8             	sar    %cl,%rax
  4113da:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  4113de:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  4113e5:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  4113ec:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4113f3:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  4113fa:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4113fe:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  411402:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  411405:	e8 86 ae ff ff       	callq  40c290 <bsW>
  41140a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41140d:	48 83 c0 2b          	add    $0x2b,%rax
  411411:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411418:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  41141f:	48 d3 e0             	shl    %cl,%rax
  411422:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411429:	48 d3 f8             	sar    %cl,%rax
  41142c:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  411430:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  411437:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  41143e:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  411445:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  41144c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  411450:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  411454:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  411457:	e8 34 ae ff ff       	callq  40c290 <bsW>
  41145c:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41145f:	48 83 c0 2c          	add    $0x2c,%rax
  411463:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41146a:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  411471:	48 d3 e0             	shl    %cl,%rax
  411474:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41147b:	48 d3 f8             	sar    %cl,%rax
  41147e:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  411482:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  411489:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  411490:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  411497:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  41149e:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4114a2:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  4114a6:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  4114a9:	e8 e2 ad ff ff       	callq  40c290 <bsW>
  4114ae:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4114b1:	48 83 c0 2d          	add    $0x2d,%rax
  4114b5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4114bc:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  4114c3:	48 d3 e0             	shl    %cl,%rax
  4114c6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4114cd:	48 d3 f8             	sar    %cl,%rax
  4114d0:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  4114d4:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  4114db:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  4114e2:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4114e9:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  4114f0:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4114f4:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  4114f8:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  4114fb:	e8 90 ad ff ff       	callq  40c290 <bsW>
  411500:	8b 45 bc             	mov    -0x44(%rbp),%eax
  411503:	48 83 c0 2e          	add    $0x2e,%rax
  411507:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41150e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  411515:	48 d3 e0             	shl    %cl,%rax
  411518:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41151f:	48 d3 f8             	sar    %cl,%rax
  411522:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  411526:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  41152d:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  411534:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  41153b:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  411542:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  411546:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  41154a:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  41154d:	e8 3e ad ff ff       	callq  40c290 <bsW>
  411552:	8b 45 bc             	mov    -0x44(%rbp),%eax
  411555:	48 83 c0 2f          	add    $0x2f,%rax
  411559:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411560:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  411567:	48 d3 e0             	shl    %cl,%rax
  41156a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411571:	48 d3 f8             	sar    %cl,%rax
  411574:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  411578:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  41157f:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  411586:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  41158d:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  411594:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  411598:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  41159c:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  41159f:	e8 ec ac ff ff       	callq  40c290 <bsW>
  4115a4:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4115a7:	48 83 c0 30          	add    $0x30,%rax
  4115ab:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4115b2:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  4115b9:	48 d3 e0             	shl    %cl,%rax
  4115bc:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4115c3:	48 d3 f8             	sar    %cl,%rax
  4115c6:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  4115ca:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  4115d1:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  4115d8:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  4115df:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  4115e6:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  4115ea:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  4115ee:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  4115f1:	e8 9a ac ff ff       	callq  40c290 <bsW>
  4115f6:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4115f9:	48 83 c0 31          	add    $0x31,%rax
  4115fd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411604:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  41160b:	48 d3 e0             	shl    %cl,%rax
  41160e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411615:	48 d3 f8             	sar    %cl,%rax
  411618:	0f b6 04 42          	movzbl (%rdx,%rax,2),%eax
  41161c:	66 89 85 0a ff ff ff 	mov    %ax,-0xf6(%rbp)
  411623:	0f b6 85 0a ff ff ff 	movzbl -0xf6(%rbp),%eax
  41162a:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
  411631:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  411638:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  41163c:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
  411640:	8b 14 82             	mov    (%rdx,%rax,4),%edx
  411643:	e8 48 ac ff ff       	callq  40c290 <bsW>
  411648:	e9 13 ef ff ff       	jmpq   410560 <sendMTFValues+0x41b0>
  41164d:	0f 1f 00             	nopl   (%rax)
  411650:	8b 45 bc             	mov    -0x44(%rbp),%eax
  411653:	eb 58                	jmp    4116ad <sendMTFValues+0x52fd>
  411655:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  41165c:	00 00 00 00 
  411660:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
  411664:	48 63 45 94          	movslq -0x6c(%rbp),%rax
  411668:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  41166c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  411673:	0f b6 0c 4a          	movzbl (%rdx,%rcx,2),%ecx
  411677:	0f b6 84 07 a8 06 00 	movzbl 0x6a8(%rdi,%rax,1),%eax
  41167e:	00 
  41167f:	48 69 d0 02 01 00 00 	imul   $0x102,%rax,%rdx
  411686:	48 01 fa             	add    %rdi,%rdx
  411689:	0f b6 b4 11 4c 93 00 	movzbl 0x934c(%rcx,%rdx,1),%esi
  411690:	00 
  411691:	48 69 c0 08 04 00 00 	imul   $0x408,%rax,%rax
  411698:	48 01 f8             	add    %rdi,%rax
  41169b:	8b 94 88 58 99 00 00 	mov    0x9958(%rax,%rcx,4),%edx
  4116a2:	e8 e9 ab ff ff       	callq  40c290 <bsW>
  4116a7:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  4116aa:	48 ff c0             	inc    %rax
  4116ad:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  4116b0:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
  4116b4:	48 63 4d b8          	movslq -0x48(%rbp),%rcx
  4116b8:	48 39 c8             	cmp    %rcx,%rax
  4116bb:	7e a3                	jle    411660 <sendMTFValues+0x52b0>
  4116bd:	e9 9e ee ff ff       	jmpq   410560 <sendMTFValues+0x41b0>
  4116c2:	8b 45 94             	mov    -0x6c(%rbp),%eax
  4116c5:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  4116c8:	48 39 c8             	cmp    %rcx,%rax
  4116cb:	74 0c                	je     4116d9 <sendMTFValues+0x5329>
  4116cd:	48 c7 c7 bf 0b 00 00 	mov    $0xbbf,%rdi
  4116d4:	e8 a7 63 ff ff       	callq  407a80 <BZ2_bz__AssertH__fail>
  4116d9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4116dd:	48 63 80 90 02 00 00 	movslq 0x290(%rax),%rax
  4116e4:	48 83 f8 03          	cmp    $0x3,%rax
  4116e8:	7c 26                	jl     411710 <sendMTFValues+0x5360>
  4116ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4116ee:	8b 50 74             	mov    0x74(%rax),%edx
  4116f1:	8b 45 8c             	mov    -0x74(%rbp),%eax
  4116f4:	48 8b 3d d5 72 01 00 	mov    0x172d5(%rip),%rdi        # 4289d0 <stderr>
  4116fb:	48 29 c2             	sub    %rax,%rdx
  4116fe:	48 be 93 7e 42 00 00 	movabs $0x427e93,%rsi
  411705:	00 00 00 
  411708:	48 31 c0             	xor    %rax,%rax
  41170b:	e8 e8 85 00 00       	callq  419cf8 <fprintf>
  411710:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
  411717:	5b                   	pop    %rbx
  411718:	41 5c                	pop    %r12
  41171a:	41 5d                	pop    %r13
  41171c:	41 5e                	pop    %r14
  41171e:	41 5f                	pop    %r15
  411720:	5d                   	pop    %rbp
  411721:	c3                   	retq   
  411722:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  411729:	1f 84 00 00 00 00 00 

0000000000411730 <bsFinishWrite>:
  411730:	55                   	push   %rbp
  411731:	48 89 e5             	mov    %rsp,%rbp
  411734:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  411738:	eb 57                	jmp    411791 <bsFinishWrite+0x61>
  41173a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  411740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411744:	0f b6 88 83 02 00 00 	movzbl 0x283(%rax),%ecx
  41174b:	48 63 50 74          	movslq 0x74(%rax),%rdx
  41174f:	48 8b 40 50          	mov    0x50(%rax),%rax
  411753:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  411756:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41175a:	8b 48 74             	mov    0x74(%rax),%ecx
  41175d:	48 ff c1             	inc    %rcx
  411760:	89 48 74             	mov    %ecx,0x74(%rax)
  411763:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411767:	8b 90 80 02 00 00    	mov    0x280(%rax),%edx
  41176d:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  411774:	48 d3 e2             	shl    %cl,%rdx
  411777:	89 90 80 02 00 00    	mov    %edx,0x280(%rax)
  41177d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411781:	8b 88 84 02 00 00    	mov    0x284(%rax),%ecx
  411787:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  41178b:	89 88 84 02 00 00    	mov    %ecx,0x284(%rax)
  411791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411795:	48 63 80 84 02 00 00 	movslq 0x284(%rax),%rax
  41179c:	48 85 c0             	test   %rax,%rax
  41179f:	7f 9f                	jg     411740 <bsFinishWrite+0x10>
  4117a1:	5d                   	pop    %rbp
  4117a2:	c3                   	retq   
  4117a3:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4117aa:	84 00 00 00 00 00 

00000000004117b0 <makeMaps_e>:
  4117b0:	55                   	push   %rbp
  4117b1:	48 89 e5             	mov    %rsp,%rbp
  4117b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4117b8:	48 31 c0             	xor    %rax,%rax
  4117bb:	89 47 7c             	mov    %eax,0x7c(%rdi)
  4117be:	eb 06                	jmp    4117c6 <makeMaps_e+0x16>
  4117c0:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4117c3:	48 ff c0             	inc    %rax
  4117c6:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4117c9:	48 63 45 f4          	movslq -0xc(%rbp),%rax
  4117cd:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  4117d3:	7f 37                	jg     41180c <makeMaps_e+0x5c>
  4117d5:	48 63 45 f4          	movslq -0xc(%rbp),%rax
  4117d9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  4117dd:	0f b6 84 01 80 00 00 	movzbl 0x80(%rcx,%rax,1),%eax
  4117e4:	00 
  4117e5:	48 85 c0             	test   %rax,%rax
  4117e8:	74 d6                	je     4117c0 <makeMaps_e+0x10>
  4117ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4117ee:	0f b6 48 7c          	movzbl 0x7c(%rax),%ecx
  4117f2:	48 63 55 f4          	movslq -0xc(%rbp),%rdx
  4117f6:	88 8c 10 80 01 00 00 	mov    %cl,0x180(%rax,%rdx,1)
  4117fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411801:	8b 48 7c             	mov    0x7c(%rax),%ecx
  411804:	48 ff c1             	inc    %rcx
  411807:	89 48 7c             	mov    %ecx,0x7c(%rax)
  41180a:	eb b4                	jmp    4117c0 <makeMaps_e+0x10>
  41180c:	5d                   	pop    %rbp
  41180d:	c3                   	retq   
  41180e:	66 90                	xchg   %ax,%ax

0000000000411810 <generateMTFValues1>:
  411810:	55                   	push   %rbp
  411811:	48 89 e5             	mov    %rsp,%rbp
  411814:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  41181b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41181f:	89 75 f4             	mov    %esi,-0xc(%rbp)
  411822:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  411826:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  41182a:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  41182e:	48 31 c0             	xor    %rax,%rax
  411831:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  411837:	eb 28                	jmp    411861 <generateMTFValues1+0x51>
  411839:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  411840:	48 63 8d cc fe ff ff 	movslq -0x134(%rbp),%rcx
  411847:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41184b:	89 84 8a a0 02 00 00 	mov    %eax,0x2a0(%rdx,%rcx,4)
  411852:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  411858:	48 ff c1             	inc    %rcx
  41185b:	89 8d cc fe ff ff    	mov    %ecx,-0x134(%rbp)
  411861:	48 63 8d cc fe ff ff 	movslq -0x134(%rbp),%rcx
  411868:	48 63 55 f4          	movslq -0xc(%rbp),%rdx
  41186c:	48 39 d1             	cmp    %rdx,%rcx
  41186f:	7e cf                	jle    411840 <generateMTFValues1+0x30>
  411871:	48 31 c0             	xor    %rax,%rax
  411874:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  41187a:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  411880:	eb 25                	jmp    4118a7 <generateMTFValues1+0x97>
  411882:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  411889:	1f 84 00 00 00 00 00 
  411890:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
  411896:	48 63 8d cc fe ff ff 	movslq -0x134(%rbp),%rcx
  41189d:	88 8c 0d d0 fe ff ff 	mov    %cl,-0x130(%rbp,%rcx,1)
  4118a4:	48 ff c0             	inc    %rax
  4118a7:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  4118ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4118b1:	48 63 8d cc fe ff ff 	movslq -0x134(%rbp),%rcx
  4118b8:	48 63 40 7c          	movslq 0x7c(%rax),%rax
  4118bc:	48 39 c1             	cmp    %rax,%rcx
  4118bf:	7c cf                	jl     411890 <generateMTFValues1+0x80>
  4118c1:	48 31 d2             	xor    %rdx,%rdx
  4118c4:	89 95 cc fe ff ff    	mov    %edx,-0x134(%rbp)
  4118ca:	49 c7 c2 01 00 00 00 	mov    $0x1,%r10
  4118d1:	48 b8 00 00 00 80 00 	movabs $0x80000000,%rax
  4118d8:	00 00 00 
  4118db:	4c 8d 85 d1 fe ff ff 	lea    -0x12f(%rbp),%r8
  4118e2:	4c 8d 8d d0 fe ff ff 	lea    -0x130(%rbp),%r9
  4118e9:	eb 14                	jmp    4118ff <generateMTFValues1+0xef>
  4118eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4118f0:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  4118f6:	48 ff c1             	inc    %rcx
  4118f9:	89 8d cc fe ff ff    	mov    %ecx,-0x134(%rbp)
  4118ff:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  411903:	48 63 bd cc fe ff ff 	movslq -0x134(%rbp),%rdi
  41190a:	48 63 49 6c          	movslq 0x6c(%rcx),%rcx
  41190e:	48 39 cf             	cmp    %rcx,%rdi
  411911:	0f 8d 96 02 00 00    	jge    411bad <generateMTFValues1+0x39d>
  411917:	48 63 8d cc fe ff ff 	movslq -0x134(%rbp),%rcx
  41191e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  411922:	8b 34 8f             	mov    (%rdi,%rcx,4),%esi
  411925:	48 ff ce             	dec    %rsi
  411928:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41192f:	48 89 f7             	mov    %rsi,%rdi
  411932:	48 d3 e7             	shl    %cl,%rdi
  411935:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41193c:	48 d3 ff             	sar    %cl,%rdi
  41193f:	48 85 ff             	test   %rdi,%rdi
  411942:	89 b5 c8 fe ff ff    	mov    %esi,-0x138(%rbp)
  411948:	79 16                	jns    411960 <generateMTFValues1+0x150>
  41194a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41194e:	8b 49 6c             	mov    0x6c(%rcx),%ecx
  411951:	8b b5 c8 fe ff ff    	mov    -0x138(%rbp),%esi
  411957:	48 01 ce             	add    %rcx,%rsi
  41195a:	89 b5 c8 fe ff ff    	mov    %esi,-0x138(%rbp)
  411960:	48 63 8d c8 fe ff ff 	movslq -0x138(%rbp),%rcx
  411967:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  41196b:	0f b6 0c 0e          	movzbl (%rsi,%rcx,1),%ecx
  41196f:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  411973:	0f b6 8c 0e 80 01 00 	movzbl 0x180(%rsi,%rcx,1),%ecx
  41197a:	00 
  41197b:	88 8d bf fe ff ff    	mov    %cl,-0x141(%rbp)
  411981:	0f b6 8d d0 fe ff ff 	movzbl -0x130(%rbp),%ecx
  411988:	0f b6 b5 bf fe ff ff 	movzbl -0x141(%rbp),%esi
  41198f:	48 39 f1             	cmp    %rsi,%rcx
  411992:	75 1c                	jne    4119b0 <generateMTFValues1+0x1a0>
  411994:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  41199a:	48 ff c1             	inc    %rcx
  41199d:	89 8d c4 fe ff ff    	mov    %ecx,-0x13c(%rbp)
  4119a3:	e9 48 ff ff ff       	jmpq   4118f0 <generateMTFValues1+0xe0>
  4119a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4119af:	00 
  4119b0:	48 63 8d c4 fe ff ff 	movslq -0x13c(%rbp),%rcx
  4119b7:	48 85 c9             	test   %rcx,%rcx
  4119ba:	0f 8e f8 00 00 00    	jle    411ab8 <generateMTFValues1+0x2a8>
  4119c0:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  4119c6:	48 ff c9             	dec    %rcx
  4119c9:	89 8d c4 fe ff ff    	mov    %ecx,-0x13c(%rbp)
  4119cf:	eb 4f                	jmp    411a20 <generateMTFValues1+0x210>
  4119d1:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4119d8:	0f 1f 84 00 00 00 00 
  4119df:	00 
  4119e0:	8b b5 c4 fe ff ff    	mov    -0x13c(%rbp),%esi
  4119e6:	48 8d 7e fe          	lea    -0x2(%rsi),%rdi
  4119ea:	48 21 c7             	and    %rax,%rdi
  4119ed:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  4119f4:	48 d3 ef             	shr    %cl,%rdi
  4119f7:	48 8d 74 3e fe       	lea    -0x2(%rsi,%rdi,1),%rsi
  4119fc:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411a03:	48 d3 e6             	shl    %cl,%rsi
  411a06:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411a0d:	48 d3 fe             	sar    %cl,%rsi
  411a10:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  411a17:	48 d3 ee             	shr    %cl,%rsi
  411a1a:	89 b5 c4 fe ff ff    	mov    %esi,-0x13c(%rbp)
  411a20:	0f b6 8d c4 fe ff ff 	movzbl -0x13c(%rbp),%ecx
  411a27:	48 f7 c1 01 00 00 00 	test   $0x1,%rcx
  411a2e:	74 40                	je     411a70 <generateMTFValues1+0x260>
  411a30:	48 63 8d c0 fe ff ff 	movslq -0x140(%rbp),%rcx
  411a37:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  411a3b:	66 44 89 14 4e       	mov    %r10w,(%rsi,%rcx,2)
  411a40:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  411a46:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  411a4a:	48 ff c1             	inc    %rcx
  411a4d:	89 8d c0 fe ff ff    	mov    %ecx,-0x140(%rbp)
  411a53:	8b 8e a4 02 00 00    	mov    0x2a4(%rsi),%ecx
  411a59:	48 ff c1             	inc    %rcx
  411a5c:	89 8e a4 02 00 00    	mov    %ecx,0x2a4(%rsi)
  411a62:	eb 3d                	jmp    411aa1 <generateMTFValues1+0x291>
  411a64:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  411a6b:	00 00 00 00 00 
  411a70:	48 63 8d c0 fe ff ff 	movslq -0x140(%rbp),%rcx
  411a77:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  411a7b:	66 89 14 4e          	mov    %dx,(%rsi,%rcx,2)
  411a7f:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  411a85:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  411a89:	48 ff c1             	inc    %rcx
  411a8c:	89 8d c0 fe ff ff    	mov    %ecx,-0x140(%rbp)
  411a92:	8b 8e a0 02 00 00    	mov    0x2a0(%rsi),%ecx
  411a98:	48 ff c1             	inc    %rcx
  411a9b:	89 8e a0 02 00 00    	mov    %ecx,0x2a0(%rsi)
  411aa1:	48 63 8d c4 fe ff ff 	movslq -0x13c(%rbp),%rcx
  411aa8:	48 83 f9 02          	cmp    $0x2,%rcx
  411aac:	0f 8d 2e ff ff ff    	jge    4119e0 <generateMTFValues1+0x1d0>
  411ab2:	89 95 c4 fe ff ff    	mov    %edx,-0x13c(%rbp)
  411ab8:	0f b6 8d d1 fe ff ff 	movzbl -0x12f(%rbp),%ecx
  411abf:	0f b6 b5 d0 fe ff ff 	movzbl -0x130(%rbp),%esi
  411ac6:	0f b6 bd bf fe ff ff 	movzbl -0x141(%rbp),%edi
  411acd:	88 8d be fe ff ff    	mov    %cl,-0x142(%rbp)
  411ad3:	40 88 b5 d1 fe ff ff 	mov    %sil,-0x12f(%rbp)
  411ada:	4c 89 85 b0 fe ff ff 	mov    %r8,-0x150(%rbp)
  411ae1:	40 88 bd af fe ff ff 	mov    %dil,-0x151(%rbp)
  411ae8:	eb 3b                	jmp    411b25 <generateMTFValues1+0x315>
  411aea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  411af0:	48 ff 85 b0 fe ff ff 	incq   -0x150(%rbp)
  411af7:	0f b6 8d be fe ff ff 	movzbl -0x142(%rbp),%ecx
  411afe:	48 8b b5 b0 fe ff ff 	mov    -0x150(%rbp),%rsi
  411b05:	88 8d ae fe ff ff    	mov    %cl,-0x152(%rbp)
  411b0b:	0f b6 0e             	movzbl (%rsi),%ecx
  411b0e:	0f b6 b5 ae fe ff ff 	movzbl -0x152(%rbp),%esi
  411b15:	48 8b bd b0 fe ff ff 	mov    -0x150(%rbp),%rdi
  411b1c:	88 8d be fe ff ff    	mov    %cl,-0x142(%rbp)
  411b22:	40 88 37             	mov    %sil,(%rdi)
  411b25:	0f b6 8d af fe ff ff 	movzbl -0x151(%rbp),%ecx
  411b2c:	0f b6 b5 be fe ff ff 	movzbl -0x142(%rbp),%esi
  411b33:	48 39 f1             	cmp    %rsi,%rcx
  411b36:	75 b8                	jne    411af0 <generateMTFValues1+0x2e0>
  411b38:	0f b6 8d be fe ff ff 	movzbl -0x142(%rbp),%ecx
  411b3f:	88 8d d0 fe ff ff    	mov    %cl,-0x130(%rbp)
  411b45:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  411b4c:	4c 29 c9             	sub    %r9,%rcx
  411b4f:	89 8d c8 fe ff ff    	mov    %ecx,-0x138(%rbp)
  411b55:	48 63 b5 c0 fe ff ff 	movslq -0x140(%rbp),%rsi
  411b5c:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  411b60:	48 ff c1             	inc    %rcx
  411b63:	66 89 0c 77          	mov    %cx,(%rdi,%rsi,2)
  411b67:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  411b6d:	48 ff c1             	inc    %rcx
  411b70:	89 8d c0 fe ff ff    	mov    %ecx,-0x140(%rbp)
  411b76:	8b b5 c8 fe ff ff    	mov    -0x138(%rbp),%esi
  411b7c:	48 ff c6             	inc    %rsi
  411b7f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411b86:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  411b8a:	48 d3 e6             	shl    %cl,%rsi
  411b8d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411b94:	48 d3 fe             	sar    %cl,%rsi
  411b97:	8b 8c b7 a0 02 00 00 	mov    0x2a0(%rdi,%rsi,4),%ecx
  411b9e:	48 ff c1             	inc    %rcx
  411ba1:	89 8c b7 a0 02 00 00 	mov    %ecx,0x2a0(%rdi,%rsi,4)
  411ba8:	e9 43 fd ff ff       	jmpq   4118f0 <generateMTFValues1+0xe0>
  411bad:	48 63 8d c4 fe ff ff 	movslq -0x13c(%rbp),%rcx
  411bb4:	48 85 c9             	test   %rcx,%rcx
  411bb7:	0f 8e fe 00 00 00    	jle    411cbb <generateMTFValues1+0x4ab>
  411bbd:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  411bc3:	48 ff c9             	dec    %rcx
  411bc6:	89 8d c4 fe ff ff    	mov    %ecx,-0x13c(%rbp)
  411bcc:	49 c7 c0 01 00 00 00 	mov    $0x1,%r8
  411bd3:	48 31 f6             	xor    %rsi,%rsi
  411bd6:	eb 48                	jmp    411c20 <generateMTFValues1+0x410>
  411bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  411bdf:	00 
  411be0:	8b bd c4 fe ff ff    	mov    -0x13c(%rbp),%edi
  411be6:	48 8d 57 fe          	lea    -0x2(%rdi),%rdx
  411bea:	48 21 c2             	and    %rax,%rdx
  411bed:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  411bf4:	48 d3 ea             	shr    %cl,%rdx
  411bf7:	48 8d 54 17 fe       	lea    -0x2(%rdi,%rdx,1),%rdx
  411bfc:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411c03:	48 d3 e2             	shl    %cl,%rdx
  411c06:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  411c0d:	48 d3 fa             	sar    %cl,%rdx
  411c10:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  411c17:	48 d3 ea             	shr    %cl,%rdx
  411c1a:	89 95 c4 fe ff ff    	mov    %edx,-0x13c(%rbp)
  411c20:	0f b6 8d c4 fe ff ff 	movzbl -0x13c(%rbp),%ecx
  411c27:	48 f7 c1 01 00 00 00 	test   $0x1,%rcx
  411c2e:	74 40                	je     411c70 <generateMTFValues1+0x460>
  411c30:	48 63 8d c0 fe ff ff 	movslq -0x140(%rbp),%rcx
  411c37:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  411c3b:	66 44 89 04 4f       	mov    %r8w,(%rdi,%rcx,2)
  411c40:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  411c46:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  411c4a:	48 ff c1             	inc    %rcx
  411c4d:	89 8d c0 fe ff ff    	mov    %ecx,-0x140(%rbp)
  411c53:	8b 8f a4 02 00 00    	mov    0x2a4(%rdi),%ecx
  411c59:	48 ff c1             	inc    %rcx
  411c5c:	89 8f a4 02 00 00    	mov    %ecx,0x2a4(%rdi)
  411c62:	eb 3d                	jmp    411ca1 <generateMTFValues1+0x491>
  411c64:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  411c6b:	00 00 00 00 00 
  411c70:	48 63 8d c0 fe ff ff 	movslq -0x140(%rbp),%rcx
  411c77:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  411c7b:	66 89 34 4f          	mov    %si,(%rdi,%rcx,2)
  411c7f:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  411c85:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  411c89:	48 ff c1             	inc    %rcx
  411c8c:	89 8d c0 fe ff ff    	mov    %ecx,-0x140(%rbp)
  411c92:	8b 8f a0 02 00 00    	mov    0x2a0(%rdi),%ecx
  411c98:	48 ff c1             	inc    %rcx
  411c9b:	89 8f a0 02 00 00    	mov    %ecx,0x2a0(%rdi)
  411ca1:	48 63 8d c4 fe ff ff 	movslq -0x13c(%rbp),%rcx
  411ca8:	48 83 f9 02          	cmp    $0x2,%rcx
  411cac:	0f 8d 2e ff ff ff    	jge    411be0 <generateMTFValues1+0x3d0>
  411cb2:	48 31 c0             	xor    %rax,%rax
  411cb5:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  411cbb:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  411cbf:	48 63 8d c0 fe ff ff 	movslq -0x140(%rbp),%rcx
  411cc6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  411cca:	66 89 04 4a          	mov    %ax,(%rdx,%rcx,2)
  411cce:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  411cd4:	48 63 4d f4          	movslq -0xc(%rbp),%rcx
  411cd8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  411cdc:	48 ff c0             	inc    %rax
  411cdf:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  411ce5:	8b 84 8a a0 02 00 00 	mov    0x2a0(%rdx,%rcx,4),%eax
  411cec:	48 ff c0             	inc    %rax
  411cef:	89 84 8a a0 02 00 00 	mov    %eax,0x2a0(%rdx,%rcx,4)
  411cf6:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
  411cfc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  411d00:	89 81 9c 02 00 00    	mov    %eax,0x29c(%rcx)
  411d06:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
  411d0d:	5d                   	pop    %rbp
  411d0e:	c3                   	retq   
  411d0f:	90                   	nop

0000000000411d10 <BZ2_decompress>:
  411d10:	55                   	push   %rbp
  411d11:	48 89 e5             	mov    %rsp,%rbp
  411d14:	41 57                	push   %r15
  411d16:	41 56                	push   %r14
  411d18:	41 54                	push   %r12
  411d1a:	53                   	push   %rbx
  411d1b:	48 81 ec 80 01 00 00 	sub    $0x180,%rsp
  411d22:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  411d26:	48 8b 07             	mov    (%rdi),%rax
  411d29:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411d2d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  411d31:	8b 41 08             	mov    0x8(%rcx),%eax
  411d34:	48 83 f8 0a          	cmp    $0xa,%rax
  411d38:	0f 85 02 01 00 00    	jne    411e40 <BZ2_decompress+0x130>
  411d3e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411d42:	48 31 c0             	xor    %rax,%rax
  411d45:	89 81 24 fa 00 00    	mov    %eax,0xfa24(%rcx)
  411d4b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411d4f:	89 81 28 fa 00 00    	mov    %eax,0xfa28(%rcx)
  411d55:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411d59:	89 81 2c fa 00 00    	mov    %eax,0xfa2c(%rcx)
  411d5f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411d63:	89 81 30 fa 00 00    	mov    %eax,0xfa30(%rcx)
  411d69:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411d6d:	89 81 34 fa 00 00    	mov    %eax,0xfa34(%rcx)
  411d73:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411d77:	89 81 38 fa 00 00    	mov    %eax,0xfa38(%rcx)
  411d7d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411d81:	89 81 3c fa 00 00    	mov    %eax,0xfa3c(%rcx)
  411d87:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411d8b:	89 81 40 fa 00 00    	mov    %eax,0xfa40(%rcx)
  411d91:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411d95:	89 81 44 fa 00 00    	mov    %eax,0xfa44(%rcx)
  411d9b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411d9f:	89 81 48 fa 00 00    	mov    %eax,0xfa48(%rcx)
  411da5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411da9:	89 81 4c fa 00 00    	mov    %eax,0xfa4c(%rcx)
  411daf:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411db3:	89 81 50 fa 00 00    	mov    %eax,0xfa50(%rcx)
  411db9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411dbd:	89 81 54 fa 00 00    	mov    %eax,0xfa54(%rcx)
  411dc3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411dc7:	89 81 58 fa 00 00    	mov    %eax,0xfa58(%rcx)
  411dcd:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411dd1:	89 81 5c fa 00 00    	mov    %eax,0xfa5c(%rcx)
  411dd7:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411ddb:	89 81 60 fa 00 00    	mov    %eax,0xfa60(%rcx)
  411de1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411de5:	89 81 64 fa 00 00    	mov    %eax,0xfa64(%rcx)
  411deb:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411def:	89 81 68 fa 00 00    	mov    %eax,0xfa68(%rcx)
  411df5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411df9:	89 81 6c fa 00 00    	mov    %eax,0xfa6c(%rcx)
  411dff:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411e03:	89 81 70 fa 00 00    	mov    %eax,0xfa70(%rcx)
  411e09:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411e0d:	89 81 74 fa 00 00    	mov    %eax,0xfa74(%rcx)
  411e13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411e17:	48 c7 80 78 fa 00 00 	movq   $0x0,0xfa78(%rax)
  411e1e:	00 00 00 00 
  411e22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411e26:	48 c7 80 80 fa 00 00 	movq   $0x0,0xfa80(%rax)
  411e2d:	00 00 00 00 
  411e31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411e35:	48 c7 80 88 fa 00 00 	movq   $0x0,0xfa88(%rax)
  411e3c:	00 00 00 00 
  411e40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411e44:	8b 80 24 fa 00 00    	mov    0xfa24(%rax),%eax
  411e4a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411e4e:	89 45 bc             	mov    %eax,-0x44(%rbp)
  411e51:	8b 81 28 fa 00 00    	mov    0xfa28(%rcx),%eax
  411e57:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411e5b:	89 45 b8             	mov    %eax,-0x48(%rbp)
  411e5e:	8b 81 2c fa 00 00    	mov    0xfa2c(%rcx),%eax
  411e64:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411e68:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  411e6b:	8b 81 30 fa 00 00    	mov    0xfa30(%rcx),%eax
  411e71:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411e75:	89 45 b0             	mov    %eax,-0x50(%rbp)
  411e78:	8b 81 34 fa 00 00    	mov    0xfa34(%rcx),%eax
  411e7e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411e82:	89 45 ac             	mov    %eax,-0x54(%rbp)
  411e85:	8b 81 38 fa 00 00    	mov    0xfa38(%rcx),%eax
  411e8b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411e8f:	89 45 a8             	mov    %eax,-0x58(%rbp)
  411e92:	8b 81 3c fa 00 00    	mov    0xfa3c(%rcx),%eax
  411e98:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411e9c:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  411e9f:	8b 81 40 fa 00 00    	mov    0xfa40(%rcx),%eax
  411ea5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411ea9:	89 45 a0             	mov    %eax,-0x60(%rbp)
  411eac:	8b 81 44 fa 00 00    	mov    0xfa44(%rcx),%eax
  411eb2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411eb6:	89 45 9c             	mov    %eax,-0x64(%rbp)
  411eb9:	8b 81 48 fa 00 00    	mov    0xfa48(%rcx),%eax
  411ebf:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411ec3:	89 45 98             	mov    %eax,-0x68(%rbp)
  411ec6:	8b 81 4c fa 00 00    	mov    0xfa4c(%rcx),%eax
  411ecc:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411ed0:	89 45 94             	mov    %eax,-0x6c(%rbp)
  411ed3:	8b 81 50 fa 00 00    	mov    0xfa50(%rcx),%eax
  411ed9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411edd:	89 45 90             	mov    %eax,-0x70(%rbp)
  411ee0:	8b 81 54 fa 00 00    	mov    0xfa54(%rcx),%eax
  411ee6:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411eea:	89 45 8c             	mov    %eax,-0x74(%rbp)
  411eed:	8b 81 58 fa 00 00    	mov    0xfa58(%rcx),%eax
  411ef3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411ef7:	89 45 88             	mov    %eax,-0x78(%rbp)
  411efa:	8b 81 5c fa 00 00    	mov    0xfa5c(%rcx),%eax
  411f00:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411f04:	89 45 84             	mov    %eax,-0x7c(%rbp)
  411f07:	8b 81 60 fa 00 00    	mov    0xfa60(%rcx),%eax
  411f0d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411f11:	89 45 80             	mov    %eax,-0x80(%rbp)
  411f14:	8b 81 64 fa 00 00    	mov    0xfa64(%rcx),%eax
  411f1a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411f1e:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  411f24:	8b 81 68 fa 00 00    	mov    0xfa68(%rcx),%eax
  411f2a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411f2e:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
  411f34:	8b 81 6c fa 00 00    	mov    0xfa6c(%rcx),%eax
  411f3a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411f3e:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  411f44:	8b 81 70 fa 00 00    	mov    0xfa70(%rcx),%eax
  411f4a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411f4e:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  411f54:	8b 81 74 fa 00 00    	mov    0xfa74(%rcx),%eax
  411f5a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411f5e:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  411f64:	48 8b 81 78 fa 00 00 	mov    0xfa78(%rcx),%rax
  411f6b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411f6f:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  411f76:	48 8b 81 80 fa 00 00 	mov    0xfa80(%rcx),%rax
  411f7d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411f81:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  411f88:	48 8b 81 88 fa 00 00 	mov    0xfa88(%rcx),%rax
  411f8f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411f93:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  411f9a:	48 31 c0             	xor    %rax,%rax
  411f9d:	89 45 d0             	mov    %eax,-0x30(%rbp)
  411fa0:	8b 41 08             	mov    0x8(%rcx),%eax
  411fa3:	48 83 c0 f6          	add    $0xfffffffffffffff6,%rax
  411fa7:	49 be ff ff ff ff 00 	movabs $0xffffffff,%r14
  411fae:	00 00 00 
  411fb1:	4c 21 f0             	and    %r14,%rax
  411fb4:	48 83 f8 28          	cmp    $0x28,%rax
  411fb8:	76 1d                	jbe    411fd7 <BZ2_decompress+0x2c7>
  411fba:	48 c7 c7 a1 0f 00 00 	mov    $0xfa1,%rdi
  411fc1:	e8 ba 5a ff ff       	callq  407a80 <BZ2_bz__AssertH__fail>
  411fc6:	48 c7 c7 a2 0f 00 00 	mov    $0xfa2,%rdi
  411fcd:	e8 ae 5a ff ff       	callq  407a80 <BZ2_bz__AssertH__fail>
  411fd2:	e9 63 1d 00 00       	jmpq   413d3a <BZ2_decompress+0x202a>
  411fd7:	ff 24 c5 a0 7e 42 00 	jmpq   *0x427ea0(,%rax,8)
  411fde:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411fe2:	48 c7 c1 0a 00 00 00 	mov    $0xa,%rcx
  411fe9:	89 48 08             	mov    %ecx,0x8(%rax)
  411fec:	eb 10                	jmp    411ffe <BZ2_decompress+0x2ee>
  411fee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411ff2:	48 8b 00             	mov    (%rax),%rax
  411ff5:	8b 48 10             	mov    0x10(%rax),%ecx
  411ff8:	48 ff c1             	inc    %rcx
  411ffb:	89 48 10             	mov    %ecx,0x10(%rax)
  411ffe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412002:	48 63 40 24          	movslq 0x24(%rax),%rax
  412006:	48 83 f8 07          	cmp    $0x7,%rax
  41200a:	0f 8f 83 00 00 00    	jg     412093 <BZ2_decompress+0x383>
  412010:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412014:	48 8b 00             	mov    (%rax),%rax
  412017:	8b 40 08             	mov    0x8(%rax),%eax
  41201a:	48 85 c0             	test   %rax,%rax
  41201d:	0f 84 02 1d 00 00    	je     413d25 <BZ2_decompress+0x2015>
  412023:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412027:	48 8b 08             	mov    (%rax),%rcx
  41202a:	48 8b 09             	mov    (%rcx),%rcx
  41202d:	8b 50 20             	mov    0x20(%rax),%edx
  412030:	0f b6 31             	movzbl (%rcx),%esi
  412033:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41203a:	48 d3 e2             	shl    %cl,%rdx
  41203d:	48 09 d6             	or     %rdx,%rsi
  412040:	89 70 20             	mov    %esi,0x20(%rax)
  412043:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412047:	8b 48 24             	mov    0x24(%rax),%ecx
  41204a:	48 83 c1 08          	add    $0x8,%rcx
  41204e:	89 48 24             	mov    %ecx,0x24(%rax)
  412051:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412055:	48 8b 00             	mov    (%rax),%rax
  412058:	48 ff 00             	incq   (%rax)
  41205b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41205f:	48 8b 00             	mov    (%rax),%rax
  412062:	8b 48 08             	mov    0x8(%rax),%ecx
  412065:	48 ff c9             	dec    %rcx
  412068:	89 48 08             	mov    %ecx,0x8(%rax)
  41206b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41206f:	48 8b 00             	mov    (%rax),%rax
  412072:	8b 48 0c             	mov    0xc(%rax),%ecx
  412075:	48 ff c1             	inc    %rcx
  412078:	89 48 0c             	mov    %ecx,0xc(%rax)
  41207b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41207f:	48 8b 00             	mov    (%rax),%rax
  412082:	8b 40 0c             	mov    0xc(%rax),%eax
  412085:	48 85 c0             	test   %rax,%rax
  412088:	0f 85 70 ff ff ff    	jne    411ffe <BZ2_decompress+0x2ee>
  41208e:	e9 5b ff ff ff       	jmpq   411fee <BZ2_decompress+0x2de>
  412093:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412097:	8b 48 24             	mov    0x24(%rax),%ecx
  41209a:	8b 40 20             	mov    0x20(%rax),%eax
  41209d:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  4120a1:	4c 21 f1             	and    %r14,%rcx
  4120a4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4120a8:	48 d3 e8             	shr    %cl,%rax
  4120ab:	48 25 ff 00 00 00    	and    $0xff,%rax
  4120b1:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  4120b7:	8b 42 24             	mov    0x24(%rdx),%eax
  4120ba:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  4120be:	89 42 24             	mov    %eax,0x24(%rdx)
  4120c1:	0f b6 85 4c ff ff ff 	movzbl -0xb4(%rbp),%eax
  4120c8:	88 45 d7             	mov    %al,-0x29(%rbp)
  4120cb:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  4120cf:	48 83 f8 42          	cmp    $0x42,%rax
  4120d3:	0f 85 02 03 00 00    	jne    4123db <BZ2_decompress+0x6cb>
  4120d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4120dd:	48 c7 c1 0b 00 00 00 	mov    $0xb,%rcx
  4120e4:	89 48 08             	mov    %ecx,0x8(%rax)
  4120e7:	eb 10                	jmp    4120f9 <BZ2_decompress+0x3e9>
  4120e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4120ed:	48 8b 00             	mov    (%rax),%rax
  4120f0:	8b 48 10             	mov    0x10(%rax),%ecx
  4120f3:	48 ff c1             	inc    %rcx
  4120f6:	89 48 10             	mov    %ecx,0x10(%rax)
  4120f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4120fd:	48 63 40 24          	movslq 0x24(%rax),%rax
  412101:	48 83 f8 07          	cmp    $0x7,%rax
  412105:	0f 8f 83 00 00 00    	jg     41218e <BZ2_decompress+0x47e>
  41210b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41210f:	48 8b 00             	mov    (%rax),%rax
  412112:	8b 40 08             	mov    0x8(%rax),%eax
  412115:	48 85 c0             	test   %rax,%rax
  412118:	0f 84 07 1c 00 00    	je     413d25 <BZ2_decompress+0x2015>
  41211e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412122:	48 8b 08             	mov    (%rax),%rcx
  412125:	48 8b 09             	mov    (%rcx),%rcx
  412128:	8b 50 20             	mov    0x20(%rax),%edx
  41212b:	0f b6 31             	movzbl (%rcx),%esi
  41212e:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412135:	48 d3 e2             	shl    %cl,%rdx
  412138:	48 09 d6             	or     %rdx,%rsi
  41213b:	89 70 20             	mov    %esi,0x20(%rax)
  41213e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412142:	8b 48 24             	mov    0x24(%rax),%ecx
  412145:	48 83 c1 08          	add    $0x8,%rcx
  412149:	89 48 24             	mov    %ecx,0x24(%rax)
  41214c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412150:	48 8b 00             	mov    (%rax),%rax
  412153:	48 ff 00             	incq   (%rax)
  412156:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41215a:	48 8b 00             	mov    (%rax),%rax
  41215d:	8b 48 08             	mov    0x8(%rax),%ecx
  412160:	48 ff c9             	dec    %rcx
  412163:	89 48 08             	mov    %ecx,0x8(%rax)
  412166:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41216a:	48 8b 00             	mov    (%rax),%rax
  41216d:	8b 48 0c             	mov    0xc(%rax),%ecx
  412170:	48 ff c1             	inc    %rcx
  412173:	89 48 0c             	mov    %ecx,0xc(%rax)
  412176:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41217a:	48 8b 00             	mov    (%rax),%rax
  41217d:	8b 40 0c             	mov    0xc(%rax),%eax
  412180:	48 85 c0             	test   %rax,%rax
  412183:	0f 85 70 ff ff ff    	jne    4120f9 <BZ2_decompress+0x3e9>
  412189:	e9 5b ff ff ff       	jmpq   4120e9 <BZ2_decompress+0x3d9>
  41218e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412192:	8b 48 24             	mov    0x24(%rax),%ecx
  412195:	8b 40 20             	mov    0x20(%rax),%eax
  412198:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  41219c:	4c 21 f1             	and    %r14,%rcx
  41219f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4121a3:	48 d3 e8             	shr    %cl,%rax
  4121a6:	48 25 ff 00 00 00    	and    $0xff,%rax
  4121ac:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
  4121b2:	8b 42 24             	mov    0x24(%rdx),%eax
  4121b5:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  4121b9:	89 42 24             	mov    %eax,0x24(%rdx)
  4121bc:	0f b6 85 48 ff ff ff 	movzbl -0xb8(%rbp),%eax
  4121c3:	88 45 d7             	mov    %al,-0x29(%rbp)
  4121c6:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  4121ca:	48 83 f8 5a          	cmp    $0x5a,%rax
  4121ce:	0f 85 07 02 00 00    	jne    4123db <BZ2_decompress+0x6cb>
  4121d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4121d8:	48 c7 c1 0c 00 00 00 	mov    $0xc,%rcx
  4121df:	89 48 08             	mov    %ecx,0x8(%rax)
  4121e2:	eb 10                	jmp    4121f4 <BZ2_decompress+0x4e4>
  4121e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4121e8:	48 8b 00             	mov    (%rax),%rax
  4121eb:	8b 48 10             	mov    0x10(%rax),%ecx
  4121ee:	48 ff c1             	inc    %rcx
  4121f1:	89 48 10             	mov    %ecx,0x10(%rax)
  4121f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4121f8:	48 63 40 24          	movslq 0x24(%rax),%rax
  4121fc:	48 83 f8 07          	cmp    $0x7,%rax
  412200:	0f 8f 83 00 00 00    	jg     412289 <BZ2_decompress+0x579>
  412206:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41220a:	48 8b 00             	mov    (%rax),%rax
  41220d:	8b 40 08             	mov    0x8(%rax),%eax
  412210:	48 85 c0             	test   %rax,%rax
  412213:	0f 84 0c 1b 00 00    	je     413d25 <BZ2_decompress+0x2015>
  412219:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41221d:	48 8b 08             	mov    (%rax),%rcx
  412220:	48 8b 09             	mov    (%rcx),%rcx
  412223:	8b 50 20             	mov    0x20(%rax),%edx
  412226:	0f b6 31             	movzbl (%rcx),%esi
  412229:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412230:	48 d3 e2             	shl    %cl,%rdx
  412233:	48 09 d6             	or     %rdx,%rsi
  412236:	89 70 20             	mov    %esi,0x20(%rax)
  412239:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41223d:	8b 48 24             	mov    0x24(%rax),%ecx
  412240:	48 83 c1 08          	add    $0x8,%rcx
  412244:	89 48 24             	mov    %ecx,0x24(%rax)
  412247:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41224b:	48 8b 00             	mov    (%rax),%rax
  41224e:	48 ff 00             	incq   (%rax)
  412251:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412255:	48 8b 00             	mov    (%rax),%rax
  412258:	8b 48 08             	mov    0x8(%rax),%ecx
  41225b:	48 ff c9             	dec    %rcx
  41225e:	89 48 08             	mov    %ecx,0x8(%rax)
  412261:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412265:	48 8b 00             	mov    (%rax),%rax
  412268:	8b 48 0c             	mov    0xc(%rax),%ecx
  41226b:	48 ff c1             	inc    %rcx
  41226e:	89 48 0c             	mov    %ecx,0xc(%rax)
  412271:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412275:	48 8b 00             	mov    (%rax),%rax
  412278:	8b 40 0c             	mov    0xc(%rax),%eax
  41227b:	48 85 c0             	test   %rax,%rax
  41227e:	0f 85 70 ff ff ff    	jne    4121f4 <BZ2_decompress+0x4e4>
  412284:	e9 5b ff ff ff       	jmpq   4121e4 <BZ2_decompress+0x4d4>
  412289:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41228d:	8b 48 24             	mov    0x24(%rax),%ecx
  412290:	8b 40 20             	mov    0x20(%rax),%eax
  412293:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  412297:	4c 21 f1             	and    %r14,%rcx
  41229a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41229e:	48 d3 e8             	shr    %cl,%rax
  4122a1:	48 25 ff 00 00 00    	and    $0xff,%rax
  4122a7:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
  4122ad:	8b 42 24             	mov    0x24(%rdx),%eax
  4122b0:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  4122b4:	89 42 24             	mov    %eax,0x24(%rdx)
  4122b7:	0f b6 85 44 ff ff ff 	movzbl -0xbc(%rbp),%eax
  4122be:	88 45 d7             	mov    %al,-0x29(%rbp)
  4122c1:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  4122c5:	48 83 f8 68          	cmp    $0x68,%rax
  4122c9:	0f 85 0c 01 00 00    	jne    4123db <BZ2_decompress+0x6cb>
  4122cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4122d3:	48 c7 c1 0d 00 00 00 	mov    $0xd,%rcx
  4122da:	89 48 08             	mov    %ecx,0x8(%rax)
  4122dd:	eb 10                	jmp    4122ef <BZ2_decompress+0x5df>
  4122df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4122e3:	48 8b 00             	mov    (%rax),%rax
  4122e6:	8b 48 10             	mov    0x10(%rax),%ecx
  4122e9:	48 ff c1             	inc    %rcx
  4122ec:	89 48 10             	mov    %ecx,0x10(%rax)
  4122ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4122f3:	48 63 40 24          	movslq 0x24(%rax),%rax
  4122f7:	48 83 f8 07          	cmp    $0x7,%rax
  4122fb:	0f 8f 83 00 00 00    	jg     412384 <BZ2_decompress+0x674>
  412301:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412305:	48 8b 00             	mov    (%rax),%rax
  412308:	8b 40 08             	mov    0x8(%rax),%eax
  41230b:	48 85 c0             	test   %rax,%rax
  41230e:	0f 84 11 1a 00 00    	je     413d25 <BZ2_decompress+0x2015>
  412314:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412318:	48 8b 08             	mov    (%rax),%rcx
  41231b:	48 8b 09             	mov    (%rcx),%rcx
  41231e:	8b 50 20             	mov    0x20(%rax),%edx
  412321:	0f b6 31             	movzbl (%rcx),%esi
  412324:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41232b:	48 d3 e2             	shl    %cl,%rdx
  41232e:	48 09 d6             	or     %rdx,%rsi
  412331:	89 70 20             	mov    %esi,0x20(%rax)
  412334:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412338:	8b 48 24             	mov    0x24(%rax),%ecx
  41233b:	48 83 c1 08          	add    $0x8,%rcx
  41233f:	89 48 24             	mov    %ecx,0x24(%rax)
  412342:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412346:	48 8b 00             	mov    (%rax),%rax
  412349:	48 ff 00             	incq   (%rax)
  41234c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412350:	48 8b 00             	mov    (%rax),%rax
  412353:	8b 48 08             	mov    0x8(%rax),%ecx
  412356:	48 ff c9             	dec    %rcx
  412359:	89 48 08             	mov    %ecx,0x8(%rax)
  41235c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412360:	48 8b 00             	mov    (%rax),%rax
  412363:	8b 48 0c             	mov    0xc(%rax),%ecx
  412366:	48 ff c1             	inc    %rcx
  412369:	89 48 0c             	mov    %ecx,0xc(%rax)
  41236c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412370:	48 8b 00             	mov    (%rax),%rax
  412373:	8b 40 0c             	mov    0xc(%rax),%eax
  412376:	48 85 c0             	test   %rax,%rax
  412379:	0f 85 70 ff ff ff    	jne    4122ef <BZ2_decompress+0x5df>
  41237f:	e9 5b ff ff ff       	jmpq   4122df <BZ2_decompress+0x5cf>
  412384:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412388:	8b 48 24             	mov    0x24(%rax),%ecx
  41238b:	8b 40 20             	mov    0x20(%rax),%eax
  41238e:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  412392:	4c 21 f1             	and    %r14,%rcx
  412395:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  412399:	48 d3 e8             	shr    %cl,%rax
  41239c:	48 25 ff 00 00 00    	and    $0xff,%rax
  4123a2:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  4123a8:	8b 42 24             	mov    0x24(%rdx),%eax
  4123ab:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  4123af:	89 42 24             	mov    %eax,0x24(%rdx)
  4123b2:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
  4123b8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4123bc:	89 41 28             	mov    %eax,0x28(%rcx)
  4123bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4123c3:	48 63 40 28          	movslq 0x28(%rax),%rax
  4123c7:	48 83 f8 31          	cmp    $0x31,%rax
  4123cb:	7c 0e                	jl     4123db <BZ2_decompress+0x6cb>
  4123cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4123d1:	48 63 40 28          	movslq 0x28(%rax),%rax
  4123d5:	48 83 f8 3a          	cmp    $0x3a,%rax
  4123d9:	7c 12                	jl     4123ed <BZ2_decompress+0x6dd>
  4123db:	48 b8 fb ff ff ff 00 	movabs $0xfffffffb,%rax
  4123e2:	00 00 00 
  4123e5:	89 45 d0             	mov    %eax,-0x30(%rbp)
  4123e8:	e9 4d 19 00 00       	jmpq   413d3a <BZ2_decompress+0x202a>
  4123ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4123f1:	8b 48 28             	mov    0x28(%rax),%ecx
  4123f4:	48 83 c1 d0          	add    $0xffffffffffffffd0,%rcx
  4123f8:	89 48 28             	mov    %ecx,0x28(%rax)
  4123fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4123ff:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
  412403:	48 85 c0             	test   %rax,%rax
  412406:	0f 84 a6 00 00 00    	je     4124b2 <BZ2_decompress+0x7a2>
  41240c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412410:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
  412414:	8b 40 28             	mov    0x28(%rax),%eax
  412417:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
  41241b:	48 69 f0 a0 86 01 00 	imul   $0x186a0,%rax,%rsi
  412422:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  412429:	48 d3 e6             	shl    %cl,%rsi
  41242c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  412433:	48 d3 fe             	sar    %cl,%rsi
  412436:	48 01 f6             	add    %rsi,%rsi
  412439:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  412440:	ff 53 38             	callq  *0x38(%rbx)
  412443:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  412447:	48 89 81 58 0c 00 00 	mov    %rax,0xc58(%rcx)
  41244e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412452:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
  412456:	8b 40 28             	mov    0x28(%rax),%eax
  412459:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
  41245d:	48 69 f0 a0 86 01 00 	imul   $0x186a0,%rax,%rsi
  412464:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41246b:	48 d3 e6             	shl    %cl,%rsi
  41246e:	48 c7 c1 21 00 00 00 	mov    $0x21,%rcx
  412475:	48 d3 fe             	sar    %cl,%rsi
  412478:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  41247f:	ff 53 38             	callq  *0x38(%rbx)
  412482:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  412486:	48 89 81 60 0c 00 00 	mov    %rax,0xc60(%rcx)
  41248d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412491:	48 83 b8 58 0c 00 00 	cmpq   $0x0,0xc58(%rax)
  412498:	00 
  412499:	0f 84 77 18 00 00    	je     413d16 <BZ2_decompress+0x2006>
  41249f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4124a3:	48 83 b8 60 0c 00 00 	cmpq   $0x0,0xc60(%rax)
  4124aa:	00 
  4124ab:	75 60                	jne    41250d <BZ2_decompress+0x7fd>
  4124ad:	e9 64 18 00 00       	jmpq   413d16 <BZ2_decompress+0x2006>
  4124b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4124b6:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
  4124ba:	8b 40 28             	mov    0x28(%rax),%eax
  4124bd:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
  4124c1:	48 69 f0 a0 86 01 00 	imul   $0x186a0,%rax,%rsi
  4124c8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4124cf:	48 d3 e6             	shl    %cl,%rsi
  4124d2:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4124d9:	48 d3 fe             	sar    %cl,%rsi
  4124dc:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  4124e3:	48 d3 e6             	shl    %cl,%rsi
  4124e6:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  4124ed:	ff 53 38             	callq  *0x38(%rbx)
  4124f0:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4124f4:	48 89 81 50 0c 00 00 	mov    %rax,0xc50(%rcx)
  4124fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4124ff:	48 83 b8 50 0c 00 00 	cmpq   $0x0,0xc50(%rax)
  412506:	00 
  412507:	0f 84 09 18 00 00    	je     413d16 <BZ2_decompress+0x2006>
  41250d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412511:	48 c7 c1 0e 00 00 00 	mov    $0xe,%rcx
  412518:	89 48 08             	mov    %ecx,0x8(%rax)
  41251b:	eb 10                	jmp    41252d <BZ2_decompress+0x81d>
  41251d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412521:	48 8b 00             	mov    (%rax),%rax
  412524:	8b 48 10             	mov    0x10(%rax),%ecx
  412527:	48 ff c1             	inc    %rcx
  41252a:	89 48 10             	mov    %ecx,0x10(%rax)
  41252d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412531:	48 63 40 24          	movslq 0x24(%rax),%rax
  412535:	48 83 f8 07          	cmp    $0x7,%rax
  412539:	0f 8f 83 00 00 00    	jg     4125c2 <BZ2_decompress+0x8b2>
  41253f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412543:	48 8b 00             	mov    (%rax),%rax
  412546:	8b 40 08             	mov    0x8(%rax),%eax
  412549:	48 85 c0             	test   %rax,%rax
  41254c:	0f 84 d3 17 00 00    	je     413d25 <BZ2_decompress+0x2015>
  412552:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412556:	48 8b 08             	mov    (%rax),%rcx
  412559:	48 8b 09             	mov    (%rcx),%rcx
  41255c:	8b 50 20             	mov    0x20(%rax),%edx
  41255f:	0f b6 31             	movzbl (%rcx),%esi
  412562:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412569:	48 d3 e2             	shl    %cl,%rdx
  41256c:	48 09 d6             	or     %rdx,%rsi
  41256f:	89 70 20             	mov    %esi,0x20(%rax)
  412572:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412576:	8b 48 24             	mov    0x24(%rax),%ecx
  412579:	48 83 c1 08          	add    $0x8,%rcx
  41257d:	89 48 24             	mov    %ecx,0x24(%rax)
  412580:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412584:	48 8b 00             	mov    (%rax),%rax
  412587:	48 ff 00             	incq   (%rax)
  41258a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41258e:	48 8b 00             	mov    (%rax),%rax
  412591:	8b 48 08             	mov    0x8(%rax),%ecx
  412594:	48 ff c9             	dec    %rcx
  412597:	89 48 08             	mov    %ecx,0x8(%rax)
  41259a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41259e:	48 8b 00             	mov    (%rax),%rax
  4125a1:	8b 48 0c             	mov    0xc(%rax),%ecx
  4125a4:	48 ff c1             	inc    %rcx
  4125a7:	89 48 0c             	mov    %ecx,0xc(%rax)
  4125aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4125ae:	48 8b 00             	mov    (%rax),%rax
  4125b1:	8b 40 0c             	mov    0xc(%rax),%eax
  4125b4:	48 85 c0             	test   %rax,%rax
  4125b7:	0f 85 70 ff ff ff    	jne    41252d <BZ2_decompress+0x81d>
  4125bd:	e9 5b ff ff ff       	jmpq   41251d <BZ2_decompress+0x80d>
  4125c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4125c6:	8b 48 24             	mov    0x24(%rax),%ecx
  4125c9:	8b 40 20             	mov    0x20(%rax),%eax
  4125cc:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  4125d0:	4c 21 f1             	and    %r14,%rcx
  4125d3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4125d7:	48 d3 e8             	shr    %cl,%rax
  4125da:	48 25 ff 00 00 00    	and    $0xff,%rax
  4125e0:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  4125e6:	8b 42 24             	mov    0x24(%rdx),%eax
  4125e9:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  4125ed:	89 42 24             	mov    %eax,0x24(%rdx)
  4125f0:	0f b6 85 3c ff ff ff 	movzbl -0xc4(%rbp),%eax
  4125f7:	48 83 f8 17          	cmp    $0x17,%rax
  4125fb:	88 45 d7             	mov    %al,-0x29(%rbp)
  4125fe:	0f 85 4b 09 00 00    	jne    412f4f <BZ2_decompress+0x123f>
  412604:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412608:	48 c7 c1 2a 00 00 00 	mov    $0x2a,%rcx
  41260f:	89 48 08             	mov    %ecx,0x8(%rax)
  412612:	eb 10                	jmp    412624 <BZ2_decompress+0x914>
  412614:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412618:	48 8b 00             	mov    (%rax),%rax
  41261b:	8b 48 10             	mov    0x10(%rax),%ecx
  41261e:	48 ff c1             	inc    %rcx
  412621:	89 48 10             	mov    %ecx,0x10(%rax)
  412624:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412628:	48 63 40 24          	movslq 0x24(%rax),%rax
  41262c:	48 83 f8 07          	cmp    $0x7,%rax
  412630:	0f 8f 83 00 00 00    	jg     4126b9 <BZ2_decompress+0x9a9>
  412636:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41263a:	48 8b 00             	mov    (%rax),%rax
  41263d:	8b 40 08             	mov    0x8(%rax),%eax
  412640:	48 85 c0             	test   %rax,%rax
  412643:	0f 84 dc 16 00 00    	je     413d25 <BZ2_decompress+0x2015>
  412649:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41264d:	48 8b 08             	mov    (%rax),%rcx
  412650:	48 8b 09             	mov    (%rcx),%rcx
  412653:	8b 50 20             	mov    0x20(%rax),%edx
  412656:	0f b6 31             	movzbl (%rcx),%esi
  412659:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412660:	48 d3 e2             	shl    %cl,%rdx
  412663:	48 09 d6             	or     %rdx,%rsi
  412666:	89 70 20             	mov    %esi,0x20(%rax)
  412669:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41266d:	8b 48 24             	mov    0x24(%rax),%ecx
  412670:	48 83 c1 08          	add    $0x8,%rcx
  412674:	89 48 24             	mov    %ecx,0x24(%rax)
  412677:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41267b:	48 8b 00             	mov    (%rax),%rax
  41267e:	48 ff 00             	incq   (%rax)
  412681:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412685:	48 8b 00             	mov    (%rax),%rax
  412688:	8b 48 08             	mov    0x8(%rax),%ecx
  41268b:	48 ff c9             	dec    %rcx
  41268e:	89 48 08             	mov    %ecx,0x8(%rax)
  412691:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412695:	48 8b 00             	mov    (%rax),%rax
  412698:	8b 48 0c             	mov    0xc(%rax),%ecx
  41269b:	48 ff c1             	inc    %rcx
  41269e:	89 48 0c             	mov    %ecx,0xc(%rax)
  4126a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4126a5:	48 8b 00             	mov    (%rax),%rax
  4126a8:	8b 40 0c             	mov    0xc(%rax),%eax
  4126ab:	48 85 c0             	test   %rax,%rax
  4126ae:	0f 85 70 ff ff ff    	jne    412624 <BZ2_decompress+0x914>
  4126b4:	e9 5b ff ff ff       	jmpq   412614 <BZ2_decompress+0x904>
  4126b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4126bd:	8b 48 24             	mov    0x24(%rax),%ecx
  4126c0:	8b 40 20             	mov    0x20(%rax),%eax
  4126c3:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  4126c7:	4c 21 f1             	and    %r14,%rcx
  4126ca:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4126ce:	48 d3 e8             	shr    %cl,%rax
  4126d1:	48 25 ff 00 00 00    	and    $0xff,%rax
  4126d7:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
  4126dd:	8b 42 24             	mov    0x24(%rdx),%eax
  4126e0:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  4126e4:	89 42 24             	mov    %eax,0x24(%rdx)
  4126e7:	0f b6 85 94 fe ff ff 	movzbl -0x16c(%rbp),%eax
  4126ee:	88 45 d7             	mov    %al,-0x29(%rbp)
  4126f1:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  4126f5:	48 83 f8 72          	cmp    $0x72,%rax
  4126f9:	0f 85 2e 16 00 00    	jne    413d2d <BZ2_decompress+0x201d>
  4126ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412703:	48 c7 c1 2b 00 00 00 	mov    $0x2b,%rcx
  41270a:	89 48 08             	mov    %ecx,0x8(%rax)
  41270d:	eb 10                	jmp    41271f <BZ2_decompress+0xa0f>
  41270f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412713:	48 8b 00             	mov    (%rax),%rax
  412716:	8b 48 10             	mov    0x10(%rax),%ecx
  412719:	48 ff c1             	inc    %rcx
  41271c:	89 48 10             	mov    %ecx,0x10(%rax)
  41271f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412723:	48 63 40 24          	movslq 0x24(%rax),%rax
  412727:	48 83 f8 07          	cmp    $0x7,%rax
  41272b:	0f 8f 83 00 00 00    	jg     4127b4 <BZ2_decompress+0xaa4>
  412731:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412735:	48 8b 00             	mov    (%rax),%rax
  412738:	8b 40 08             	mov    0x8(%rax),%eax
  41273b:	48 85 c0             	test   %rax,%rax
  41273e:	0f 84 e1 15 00 00    	je     413d25 <BZ2_decompress+0x2015>
  412744:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412748:	48 8b 08             	mov    (%rax),%rcx
  41274b:	48 8b 09             	mov    (%rcx),%rcx
  41274e:	8b 50 20             	mov    0x20(%rax),%edx
  412751:	0f b6 31             	movzbl (%rcx),%esi
  412754:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41275b:	48 d3 e2             	shl    %cl,%rdx
  41275e:	48 09 d6             	or     %rdx,%rsi
  412761:	89 70 20             	mov    %esi,0x20(%rax)
  412764:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412768:	8b 48 24             	mov    0x24(%rax),%ecx
  41276b:	48 83 c1 08          	add    $0x8,%rcx
  41276f:	89 48 24             	mov    %ecx,0x24(%rax)
  412772:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412776:	48 8b 00             	mov    (%rax),%rax
  412779:	48 ff 00             	incq   (%rax)
  41277c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412780:	48 8b 00             	mov    (%rax),%rax
  412783:	8b 48 08             	mov    0x8(%rax),%ecx
  412786:	48 ff c9             	dec    %rcx
  412789:	89 48 08             	mov    %ecx,0x8(%rax)
  41278c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412790:	48 8b 00             	mov    (%rax),%rax
  412793:	8b 48 0c             	mov    0xc(%rax),%ecx
  412796:	48 ff c1             	inc    %rcx
  412799:	89 48 0c             	mov    %ecx,0xc(%rax)
  41279c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4127a0:	48 8b 00             	mov    (%rax),%rax
  4127a3:	8b 40 0c             	mov    0xc(%rax),%eax
  4127a6:	48 85 c0             	test   %rax,%rax
  4127a9:	0f 85 70 ff ff ff    	jne    41271f <BZ2_decompress+0xa0f>
  4127af:	e9 5b ff ff ff       	jmpq   41270f <BZ2_decompress+0x9ff>
  4127b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4127b8:	8b 48 24             	mov    0x24(%rax),%ecx
  4127bb:	8b 40 20             	mov    0x20(%rax),%eax
  4127be:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  4127c2:	4c 21 f1             	and    %r14,%rcx
  4127c5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4127c9:	48 d3 e8             	shr    %cl,%rax
  4127cc:	48 25 ff 00 00 00    	and    $0xff,%rax
  4127d2:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
  4127d8:	8b 42 24             	mov    0x24(%rdx),%eax
  4127db:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  4127df:	89 42 24             	mov    %eax,0x24(%rdx)
  4127e2:	0f b6 85 90 fe ff ff 	movzbl -0x170(%rbp),%eax
  4127e9:	88 45 d7             	mov    %al,-0x29(%rbp)
  4127ec:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  4127f0:	48 83 f8 45          	cmp    $0x45,%rax
  4127f4:	0f 85 33 15 00 00    	jne    413d2d <BZ2_decompress+0x201d>
  4127fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4127fe:	48 c7 c1 2c 00 00 00 	mov    $0x2c,%rcx
  412805:	89 48 08             	mov    %ecx,0x8(%rax)
  412808:	eb 10                	jmp    41281a <BZ2_decompress+0xb0a>
  41280a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41280e:	48 8b 00             	mov    (%rax),%rax
  412811:	8b 48 10             	mov    0x10(%rax),%ecx
  412814:	48 ff c1             	inc    %rcx
  412817:	89 48 10             	mov    %ecx,0x10(%rax)
  41281a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41281e:	48 63 40 24          	movslq 0x24(%rax),%rax
  412822:	48 83 f8 07          	cmp    $0x7,%rax
  412826:	0f 8f 83 00 00 00    	jg     4128af <BZ2_decompress+0xb9f>
  41282c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412830:	48 8b 00             	mov    (%rax),%rax
  412833:	8b 40 08             	mov    0x8(%rax),%eax
  412836:	48 85 c0             	test   %rax,%rax
  412839:	0f 84 e6 14 00 00    	je     413d25 <BZ2_decompress+0x2015>
  41283f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412843:	48 8b 08             	mov    (%rax),%rcx
  412846:	48 8b 09             	mov    (%rcx),%rcx
  412849:	8b 50 20             	mov    0x20(%rax),%edx
  41284c:	0f b6 31             	movzbl (%rcx),%esi
  41284f:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412856:	48 d3 e2             	shl    %cl,%rdx
  412859:	48 09 d6             	or     %rdx,%rsi
  41285c:	89 70 20             	mov    %esi,0x20(%rax)
  41285f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412863:	8b 48 24             	mov    0x24(%rax),%ecx
  412866:	48 83 c1 08          	add    $0x8,%rcx
  41286a:	89 48 24             	mov    %ecx,0x24(%rax)
  41286d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412871:	48 8b 00             	mov    (%rax),%rax
  412874:	48 ff 00             	incq   (%rax)
  412877:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41287b:	48 8b 00             	mov    (%rax),%rax
  41287e:	8b 48 08             	mov    0x8(%rax),%ecx
  412881:	48 ff c9             	dec    %rcx
  412884:	89 48 08             	mov    %ecx,0x8(%rax)
  412887:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41288b:	48 8b 00             	mov    (%rax),%rax
  41288e:	8b 48 0c             	mov    0xc(%rax),%ecx
  412891:	48 ff c1             	inc    %rcx
  412894:	89 48 0c             	mov    %ecx,0xc(%rax)
  412897:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41289b:	48 8b 00             	mov    (%rax),%rax
  41289e:	8b 40 0c             	mov    0xc(%rax),%eax
  4128a1:	48 85 c0             	test   %rax,%rax
  4128a4:	0f 85 70 ff ff ff    	jne    41281a <BZ2_decompress+0xb0a>
  4128aa:	e9 5b ff ff ff       	jmpq   41280a <BZ2_decompress+0xafa>
  4128af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4128b3:	8b 48 24             	mov    0x24(%rax),%ecx
  4128b6:	8b 40 20             	mov    0x20(%rax),%eax
  4128b9:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  4128bd:	4c 21 f1             	and    %r14,%rcx
  4128c0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4128c4:	48 d3 e8             	shr    %cl,%rax
  4128c7:	48 25 ff 00 00 00    	and    $0xff,%rax
  4128cd:	89 85 8c fe ff ff    	mov    %eax,-0x174(%rbp)
  4128d3:	8b 42 24             	mov    0x24(%rdx),%eax
  4128d6:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  4128da:	89 42 24             	mov    %eax,0x24(%rdx)
  4128dd:	0f b6 85 8c fe ff ff 	movzbl -0x174(%rbp),%eax
  4128e4:	88 45 d7             	mov    %al,-0x29(%rbp)
  4128e7:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  4128eb:	48 83 f8 38          	cmp    $0x38,%rax
  4128ef:	0f 85 38 14 00 00    	jne    413d2d <BZ2_decompress+0x201d>
  4128f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4128f9:	48 c7 c1 2d 00 00 00 	mov    $0x2d,%rcx
  412900:	89 48 08             	mov    %ecx,0x8(%rax)
  412903:	eb 10                	jmp    412915 <BZ2_decompress+0xc05>
  412905:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412909:	48 8b 00             	mov    (%rax),%rax
  41290c:	8b 48 10             	mov    0x10(%rax),%ecx
  41290f:	48 ff c1             	inc    %rcx
  412912:	89 48 10             	mov    %ecx,0x10(%rax)
  412915:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412919:	48 63 40 24          	movslq 0x24(%rax),%rax
  41291d:	48 83 f8 07          	cmp    $0x7,%rax
  412921:	0f 8f 83 00 00 00    	jg     4129aa <BZ2_decompress+0xc9a>
  412927:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41292b:	48 8b 00             	mov    (%rax),%rax
  41292e:	8b 40 08             	mov    0x8(%rax),%eax
  412931:	48 85 c0             	test   %rax,%rax
  412934:	0f 84 eb 13 00 00    	je     413d25 <BZ2_decompress+0x2015>
  41293a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41293e:	48 8b 08             	mov    (%rax),%rcx
  412941:	48 8b 09             	mov    (%rcx),%rcx
  412944:	8b 50 20             	mov    0x20(%rax),%edx
  412947:	0f b6 31             	movzbl (%rcx),%esi
  41294a:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412951:	48 d3 e2             	shl    %cl,%rdx
  412954:	48 09 d6             	or     %rdx,%rsi
  412957:	89 70 20             	mov    %esi,0x20(%rax)
  41295a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41295e:	8b 48 24             	mov    0x24(%rax),%ecx
  412961:	48 83 c1 08          	add    $0x8,%rcx
  412965:	89 48 24             	mov    %ecx,0x24(%rax)
  412968:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41296c:	48 8b 00             	mov    (%rax),%rax
  41296f:	48 ff 00             	incq   (%rax)
  412972:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412976:	48 8b 00             	mov    (%rax),%rax
  412979:	8b 48 08             	mov    0x8(%rax),%ecx
  41297c:	48 ff c9             	dec    %rcx
  41297f:	89 48 08             	mov    %ecx,0x8(%rax)
  412982:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412986:	48 8b 00             	mov    (%rax),%rax
  412989:	8b 48 0c             	mov    0xc(%rax),%ecx
  41298c:	48 ff c1             	inc    %rcx
  41298f:	89 48 0c             	mov    %ecx,0xc(%rax)
  412992:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412996:	48 8b 00             	mov    (%rax),%rax
  412999:	8b 40 0c             	mov    0xc(%rax),%eax
  41299c:	48 85 c0             	test   %rax,%rax
  41299f:	0f 85 70 ff ff ff    	jne    412915 <BZ2_decompress+0xc05>
  4129a5:	e9 5b ff ff ff       	jmpq   412905 <BZ2_decompress+0xbf5>
  4129aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4129ae:	8b 48 24             	mov    0x24(%rax),%ecx
  4129b1:	8b 40 20             	mov    0x20(%rax),%eax
  4129b4:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  4129b8:	4c 21 f1             	and    %r14,%rcx
  4129bb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4129bf:	48 d3 e8             	shr    %cl,%rax
  4129c2:	48 25 ff 00 00 00    	and    $0xff,%rax
  4129c8:	89 85 88 fe ff ff    	mov    %eax,-0x178(%rbp)
  4129ce:	8b 42 24             	mov    0x24(%rdx),%eax
  4129d1:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  4129d5:	89 42 24             	mov    %eax,0x24(%rdx)
  4129d8:	0f b6 85 88 fe ff ff 	movzbl -0x178(%rbp),%eax
  4129df:	88 45 d7             	mov    %al,-0x29(%rbp)
  4129e2:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  4129e6:	48 83 f8 50          	cmp    $0x50,%rax
  4129ea:	0f 85 3d 13 00 00    	jne    413d2d <BZ2_decompress+0x201d>
  4129f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4129f4:	48 c7 c1 2e 00 00 00 	mov    $0x2e,%rcx
  4129fb:	89 48 08             	mov    %ecx,0x8(%rax)
  4129fe:	eb 10                	jmp    412a10 <BZ2_decompress+0xd00>
  412a00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412a04:	48 8b 00             	mov    (%rax),%rax
  412a07:	8b 48 10             	mov    0x10(%rax),%ecx
  412a0a:	48 ff c1             	inc    %rcx
  412a0d:	89 48 10             	mov    %ecx,0x10(%rax)
  412a10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412a14:	48 63 40 24          	movslq 0x24(%rax),%rax
  412a18:	48 83 f8 07          	cmp    $0x7,%rax
  412a1c:	0f 8f 83 00 00 00    	jg     412aa5 <BZ2_decompress+0xd95>
  412a22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412a26:	48 8b 00             	mov    (%rax),%rax
  412a29:	8b 40 08             	mov    0x8(%rax),%eax
  412a2c:	48 85 c0             	test   %rax,%rax
  412a2f:	0f 84 f0 12 00 00    	je     413d25 <BZ2_decompress+0x2015>
  412a35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412a39:	48 8b 08             	mov    (%rax),%rcx
  412a3c:	48 8b 09             	mov    (%rcx),%rcx
  412a3f:	8b 50 20             	mov    0x20(%rax),%edx
  412a42:	0f b6 31             	movzbl (%rcx),%esi
  412a45:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412a4c:	48 d3 e2             	shl    %cl,%rdx
  412a4f:	48 09 d6             	or     %rdx,%rsi
  412a52:	89 70 20             	mov    %esi,0x20(%rax)
  412a55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412a59:	8b 48 24             	mov    0x24(%rax),%ecx
  412a5c:	48 83 c1 08          	add    $0x8,%rcx
  412a60:	89 48 24             	mov    %ecx,0x24(%rax)
  412a63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412a67:	48 8b 00             	mov    (%rax),%rax
  412a6a:	48 ff 00             	incq   (%rax)
  412a6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412a71:	48 8b 00             	mov    (%rax),%rax
  412a74:	8b 48 08             	mov    0x8(%rax),%ecx
  412a77:	48 ff c9             	dec    %rcx
  412a7a:	89 48 08             	mov    %ecx,0x8(%rax)
  412a7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412a81:	48 8b 00             	mov    (%rax),%rax
  412a84:	8b 48 0c             	mov    0xc(%rax),%ecx
  412a87:	48 ff c1             	inc    %rcx
  412a8a:	89 48 0c             	mov    %ecx,0xc(%rax)
  412a8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412a91:	48 8b 00             	mov    (%rax),%rax
  412a94:	8b 40 0c             	mov    0xc(%rax),%eax
  412a97:	48 85 c0             	test   %rax,%rax
  412a9a:	0f 85 70 ff ff ff    	jne    412a10 <BZ2_decompress+0xd00>
  412aa0:	e9 5b ff ff ff       	jmpq   412a00 <BZ2_decompress+0xcf0>
  412aa5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412aa9:	8b 48 24             	mov    0x24(%rax),%ecx
  412aac:	8b 40 20             	mov    0x20(%rax),%eax
  412aaf:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  412ab3:	4c 21 f1             	and    %r14,%rcx
  412ab6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  412aba:	48 d3 e8             	shr    %cl,%rax
  412abd:	48 25 ff 00 00 00    	and    $0xff,%rax
  412ac3:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
  412ac9:	8b 42 24             	mov    0x24(%rdx),%eax
  412acc:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  412ad0:	89 42 24             	mov    %eax,0x24(%rdx)
  412ad3:	0f b6 85 84 fe ff ff 	movzbl -0x17c(%rbp),%eax
  412ada:	88 45 d7             	mov    %al,-0x29(%rbp)
  412add:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  412ae1:	48 3d 90 00 00 00    	cmp    $0x90,%rax
  412ae7:	0f 85 40 12 00 00    	jne    413d2d <BZ2_decompress+0x201d>
  412aed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412af1:	48 31 c9             	xor    %rcx,%rcx
  412af4:	89 88 6c 0c 00 00    	mov    %ecx,0xc6c(%rax)
  412afa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412afe:	48 c7 c1 2f 00 00 00 	mov    $0x2f,%rcx
  412b05:	89 48 08             	mov    %ecx,0x8(%rax)
  412b08:	eb 10                	jmp    412b1a <BZ2_decompress+0xe0a>
  412b0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412b0e:	48 8b 00             	mov    (%rax),%rax
  412b11:	8b 48 10             	mov    0x10(%rax),%ecx
  412b14:	48 ff c1             	inc    %rcx
  412b17:	89 48 10             	mov    %ecx,0x10(%rax)
  412b1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412b1e:	48 63 40 24          	movslq 0x24(%rax),%rax
  412b22:	48 83 f8 07          	cmp    $0x7,%rax
  412b26:	0f 8f 83 00 00 00    	jg     412baf <BZ2_decompress+0xe9f>
  412b2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412b30:	48 8b 00             	mov    (%rax),%rax
  412b33:	8b 40 08             	mov    0x8(%rax),%eax
  412b36:	48 85 c0             	test   %rax,%rax
  412b39:	0f 84 e6 11 00 00    	je     413d25 <BZ2_decompress+0x2015>
  412b3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412b43:	48 8b 08             	mov    (%rax),%rcx
  412b46:	48 8b 09             	mov    (%rcx),%rcx
  412b49:	8b 50 20             	mov    0x20(%rax),%edx
  412b4c:	0f b6 31             	movzbl (%rcx),%esi
  412b4f:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412b56:	48 d3 e2             	shl    %cl,%rdx
  412b59:	48 09 d6             	or     %rdx,%rsi
  412b5c:	89 70 20             	mov    %esi,0x20(%rax)
  412b5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412b63:	8b 48 24             	mov    0x24(%rax),%ecx
  412b66:	48 83 c1 08          	add    $0x8,%rcx
  412b6a:	89 48 24             	mov    %ecx,0x24(%rax)
  412b6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412b71:	48 8b 00             	mov    (%rax),%rax
  412b74:	48 ff 00             	incq   (%rax)
  412b77:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412b7b:	48 8b 00             	mov    (%rax),%rax
  412b7e:	8b 48 08             	mov    0x8(%rax),%ecx
  412b81:	48 ff c9             	dec    %rcx
  412b84:	89 48 08             	mov    %ecx,0x8(%rax)
  412b87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412b8b:	48 8b 00             	mov    (%rax),%rax
  412b8e:	8b 48 0c             	mov    0xc(%rax),%ecx
  412b91:	48 ff c1             	inc    %rcx
  412b94:	89 48 0c             	mov    %ecx,0xc(%rax)
  412b97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412b9b:	48 8b 00             	mov    (%rax),%rax
  412b9e:	8b 40 0c             	mov    0xc(%rax),%eax
  412ba1:	48 85 c0             	test   %rax,%rax
  412ba4:	0f 85 70 ff ff ff    	jne    412b1a <BZ2_decompress+0xe0a>
  412baa:	e9 5b ff ff ff       	jmpq   412b0a <BZ2_decompress+0xdfa>
  412baf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412bb3:	8b 48 24             	mov    0x24(%rax),%ecx
  412bb6:	8b 40 20             	mov    0x20(%rax),%eax
  412bb9:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  412bbd:	4c 21 f1             	and    %r14,%rcx
  412bc0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  412bc4:	48 d3 e8             	shr    %cl,%rax
  412bc7:	48 25 ff 00 00 00    	and    $0xff,%rax
  412bcd:	89 85 80 fe ff ff    	mov    %eax,-0x180(%rbp)
  412bd3:	8b 42 24             	mov    0x24(%rdx),%eax
  412bd6:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  412bda:	89 42 24             	mov    %eax,0x24(%rdx)
  412bdd:	0f b6 85 80 fe ff ff 	movzbl -0x180(%rbp),%eax
  412be4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  412be8:	88 45 d7             	mov    %al,-0x29(%rbp)
  412beb:	8b 82 6c 0c 00 00    	mov    0xc6c(%rdx),%eax
  412bf1:	0f b6 75 d7          	movzbl -0x29(%rbp),%esi
  412bf5:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412bfc:	48 d3 e0             	shl    %cl,%rax
  412bff:	48 09 c6             	or     %rax,%rsi
  412c02:	89 b2 6c 0c 00 00    	mov    %esi,0xc6c(%rdx)
  412c08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c0c:	48 c7 c1 30 00 00 00 	mov    $0x30,%rcx
  412c13:	89 48 08             	mov    %ecx,0x8(%rax)
  412c16:	eb 10                	jmp    412c28 <BZ2_decompress+0xf18>
  412c18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c1c:	48 8b 00             	mov    (%rax),%rax
  412c1f:	8b 48 10             	mov    0x10(%rax),%ecx
  412c22:	48 ff c1             	inc    %rcx
  412c25:	89 48 10             	mov    %ecx,0x10(%rax)
  412c28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c2c:	48 63 40 24          	movslq 0x24(%rax),%rax
  412c30:	48 83 f8 07          	cmp    $0x7,%rax
  412c34:	0f 8f 83 00 00 00    	jg     412cbd <BZ2_decompress+0xfad>
  412c3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c3e:	48 8b 00             	mov    (%rax),%rax
  412c41:	8b 40 08             	mov    0x8(%rax),%eax
  412c44:	48 85 c0             	test   %rax,%rax
  412c47:	0f 84 d8 10 00 00    	je     413d25 <BZ2_decompress+0x2015>
  412c4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c51:	48 8b 08             	mov    (%rax),%rcx
  412c54:	48 8b 09             	mov    (%rcx),%rcx
  412c57:	8b 50 20             	mov    0x20(%rax),%edx
  412c5a:	0f b6 31             	movzbl (%rcx),%esi
  412c5d:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412c64:	48 d3 e2             	shl    %cl,%rdx
  412c67:	48 09 d6             	or     %rdx,%rsi
  412c6a:	89 70 20             	mov    %esi,0x20(%rax)
  412c6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c71:	8b 48 24             	mov    0x24(%rax),%ecx
  412c74:	48 83 c1 08          	add    $0x8,%rcx
  412c78:	89 48 24             	mov    %ecx,0x24(%rax)
  412c7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c7f:	48 8b 00             	mov    (%rax),%rax
  412c82:	48 ff 00             	incq   (%rax)
  412c85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c89:	48 8b 00             	mov    (%rax),%rax
  412c8c:	8b 48 08             	mov    0x8(%rax),%ecx
  412c8f:	48 ff c9             	dec    %rcx
  412c92:	89 48 08             	mov    %ecx,0x8(%rax)
  412c95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c99:	48 8b 00             	mov    (%rax),%rax
  412c9c:	8b 48 0c             	mov    0xc(%rax),%ecx
  412c9f:	48 ff c1             	inc    %rcx
  412ca2:	89 48 0c             	mov    %ecx,0xc(%rax)
  412ca5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412ca9:	48 8b 00             	mov    (%rax),%rax
  412cac:	8b 40 0c             	mov    0xc(%rax),%eax
  412caf:	48 85 c0             	test   %rax,%rax
  412cb2:	0f 85 70 ff ff ff    	jne    412c28 <BZ2_decompress+0xf18>
  412cb8:	e9 5b ff ff ff       	jmpq   412c18 <BZ2_decompress+0xf08>
  412cbd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412cc1:	8b 48 24             	mov    0x24(%rax),%ecx
  412cc4:	8b 40 20             	mov    0x20(%rax),%eax
  412cc7:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  412ccb:	4c 21 f1             	and    %r14,%rcx
  412cce:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  412cd2:	48 d3 e8             	shr    %cl,%rax
  412cd5:	48 25 ff 00 00 00    	and    $0xff,%rax
  412cdb:	89 85 7c fe ff ff    	mov    %eax,-0x184(%rbp)
  412ce1:	8b 42 24             	mov    0x24(%rdx),%eax
  412ce4:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  412ce8:	89 42 24             	mov    %eax,0x24(%rdx)
  412ceb:	0f b6 85 7c fe ff ff 	movzbl -0x184(%rbp),%eax
  412cf2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  412cf6:	88 45 d7             	mov    %al,-0x29(%rbp)
  412cf9:	8b 82 6c 0c 00 00    	mov    0xc6c(%rdx),%eax
  412cff:	0f b6 75 d7          	movzbl -0x29(%rbp),%esi
  412d03:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412d0a:	48 d3 e0             	shl    %cl,%rax
  412d0d:	48 09 c6             	or     %rax,%rsi
  412d10:	89 b2 6c 0c 00 00    	mov    %esi,0xc6c(%rdx)
  412d16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412d1a:	48 c7 c1 31 00 00 00 	mov    $0x31,%rcx
  412d21:	89 48 08             	mov    %ecx,0x8(%rax)
  412d24:	eb 10                	jmp    412d36 <BZ2_decompress+0x1026>
  412d26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412d2a:	48 8b 00             	mov    (%rax),%rax
  412d2d:	8b 48 10             	mov    0x10(%rax),%ecx
  412d30:	48 ff c1             	inc    %rcx
  412d33:	89 48 10             	mov    %ecx,0x10(%rax)
  412d36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412d3a:	48 63 40 24          	movslq 0x24(%rax),%rax
  412d3e:	48 83 f8 07          	cmp    $0x7,%rax
  412d42:	0f 8f 83 00 00 00    	jg     412dcb <BZ2_decompress+0x10bb>
  412d48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412d4c:	48 8b 00             	mov    (%rax),%rax
  412d4f:	8b 40 08             	mov    0x8(%rax),%eax
  412d52:	48 85 c0             	test   %rax,%rax
  412d55:	0f 84 ca 0f 00 00    	je     413d25 <BZ2_decompress+0x2015>
  412d5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412d5f:	48 8b 08             	mov    (%rax),%rcx
  412d62:	48 8b 09             	mov    (%rcx),%rcx
  412d65:	8b 50 20             	mov    0x20(%rax),%edx
  412d68:	0f b6 31             	movzbl (%rcx),%esi
  412d6b:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412d72:	48 d3 e2             	shl    %cl,%rdx
  412d75:	48 09 d6             	or     %rdx,%rsi
  412d78:	89 70 20             	mov    %esi,0x20(%rax)
  412d7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412d7f:	8b 48 24             	mov    0x24(%rax),%ecx
  412d82:	48 83 c1 08          	add    $0x8,%rcx
  412d86:	89 48 24             	mov    %ecx,0x24(%rax)
  412d89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412d8d:	48 8b 00             	mov    (%rax),%rax
  412d90:	48 ff 00             	incq   (%rax)
  412d93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412d97:	48 8b 00             	mov    (%rax),%rax
  412d9a:	8b 48 08             	mov    0x8(%rax),%ecx
  412d9d:	48 ff c9             	dec    %rcx
  412da0:	89 48 08             	mov    %ecx,0x8(%rax)
  412da3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412da7:	48 8b 00             	mov    (%rax),%rax
  412daa:	8b 48 0c             	mov    0xc(%rax),%ecx
  412dad:	48 ff c1             	inc    %rcx
  412db0:	89 48 0c             	mov    %ecx,0xc(%rax)
  412db3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412db7:	48 8b 00             	mov    (%rax),%rax
  412dba:	8b 40 0c             	mov    0xc(%rax),%eax
  412dbd:	48 85 c0             	test   %rax,%rax
  412dc0:	0f 85 70 ff ff ff    	jne    412d36 <BZ2_decompress+0x1026>
  412dc6:	e9 5b ff ff ff       	jmpq   412d26 <BZ2_decompress+0x1016>
  412dcb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412dcf:	8b 48 24             	mov    0x24(%rax),%ecx
  412dd2:	8b 40 20             	mov    0x20(%rax),%eax
  412dd5:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  412dd9:	4c 21 f1             	and    %r14,%rcx
  412ddc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  412de0:	48 d3 e8             	shr    %cl,%rax
  412de3:	48 25 ff 00 00 00    	and    $0xff,%rax
  412de9:	89 85 78 fe ff ff    	mov    %eax,-0x188(%rbp)
  412def:	8b 42 24             	mov    0x24(%rdx),%eax
  412df2:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  412df6:	89 42 24             	mov    %eax,0x24(%rdx)
  412df9:	0f b6 85 78 fe ff ff 	movzbl -0x188(%rbp),%eax
  412e00:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  412e04:	88 45 d7             	mov    %al,-0x29(%rbp)
  412e07:	8b 82 6c 0c 00 00    	mov    0xc6c(%rdx),%eax
  412e0d:	0f b6 75 d7          	movzbl -0x29(%rbp),%esi
  412e11:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412e18:	48 d3 e0             	shl    %cl,%rax
  412e1b:	48 09 c6             	or     %rax,%rsi
  412e1e:	89 b2 6c 0c 00 00    	mov    %esi,0xc6c(%rdx)
  412e24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412e28:	48 c7 c1 32 00 00 00 	mov    $0x32,%rcx
  412e2f:	89 48 08             	mov    %ecx,0x8(%rax)
  412e32:	eb 10                	jmp    412e44 <BZ2_decompress+0x1134>
  412e34:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412e38:	48 8b 00             	mov    (%rax),%rax
  412e3b:	8b 48 10             	mov    0x10(%rax),%ecx
  412e3e:	48 ff c1             	inc    %rcx
  412e41:	89 48 10             	mov    %ecx,0x10(%rax)
  412e44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412e48:	48 63 40 24          	movslq 0x24(%rax),%rax
  412e4c:	48 83 f8 07          	cmp    $0x7,%rax
  412e50:	0f 8f 83 00 00 00    	jg     412ed9 <BZ2_decompress+0x11c9>
  412e56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412e5a:	48 8b 00             	mov    (%rax),%rax
  412e5d:	8b 40 08             	mov    0x8(%rax),%eax
  412e60:	48 85 c0             	test   %rax,%rax
  412e63:	0f 84 bc 0e 00 00    	je     413d25 <BZ2_decompress+0x2015>
  412e69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412e6d:	48 8b 08             	mov    (%rax),%rcx
  412e70:	48 8b 09             	mov    (%rcx),%rcx
  412e73:	8b 50 20             	mov    0x20(%rax),%edx
  412e76:	0f b6 31             	movzbl (%rcx),%esi
  412e79:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412e80:	48 d3 e2             	shl    %cl,%rdx
  412e83:	48 09 d6             	or     %rdx,%rsi
  412e86:	89 70 20             	mov    %esi,0x20(%rax)
  412e89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412e8d:	8b 48 24             	mov    0x24(%rax),%ecx
  412e90:	48 83 c1 08          	add    $0x8,%rcx
  412e94:	89 48 24             	mov    %ecx,0x24(%rax)
  412e97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412e9b:	48 8b 00             	mov    (%rax),%rax
  412e9e:	48 ff 00             	incq   (%rax)
  412ea1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412ea5:	48 8b 00             	mov    (%rax),%rax
  412ea8:	8b 48 08             	mov    0x8(%rax),%ecx
  412eab:	48 ff c9             	dec    %rcx
  412eae:	89 48 08             	mov    %ecx,0x8(%rax)
  412eb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412eb5:	48 8b 00             	mov    (%rax),%rax
  412eb8:	8b 48 0c             	mov    0xc(%rax),%ecx
  412ebb:	48 ff c1             	inc    %rcx
  412ebe:	89 48 0c             	mov    %ecx,0xc(%rax)
  412ec1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412ec5:	48 8b 00             	mov    (%rax),%rax
  412ec8:	8b 40 0c             	mov    0xc(%rax),%eax
  412ecb:	48 85 c0             	test   %rax,%rax
  412ece:	0f 85 70 ff ff ff    	jne    412e44 <BZ2_decompress+0x1134>
  412ed4:	e9 5b ff ff ff       	jmpq   412e34 <BZ2_decompress+0x1124>
  412ed9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412edd:	8b 48 24             	mov    0x24(%rax),%ecx
  412ee0:	8b 40 20             	mov    0x20(%rax),%eax
  412ee3:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  412ee7:	4c 21 f1             	and    %r14,%rcx
  412eea:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  412eee:	48 d3 e8             	shr    %cl,%rax
  412ef1:	48 25 ff 00 00 00    	and    $0xff,%rax
  412ef7:	89 85 74 fe ff ff    	mov    %eax,-0x18c(%rbp)
  412efd:	8b 42 24             	mov    0x24(%rdx),%eax
  412f00:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  412f04:	89 42 24             	mov    %eax,0x24(%rdx)
  412f07:	0f b6 85 74 fe ff ff 	movzbl -0x18c(%rbp),%eax
  412f0e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  412f12:	88 45 d7             	mov    %al,-0x29(%rbp)
  412f15:	8b 82 6c 0c 00 00    	mov    0xc6c(%rdx),%eax
  412f1b:	0f b6 75 d7          	movzbl -0x29(%rbp),%esi
  412f1f:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412f26:	48 d3 e0             	shl    %cl,%rax
  412f29:	48 09 c6             	or     %rax,%rsi
  412f2c:	89 b2 6c 0c 00 00    	mov    %esi,0xc6c(%rdx)
  412f32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412f36:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  412f3d:	89 48 08             	mov    %ecx,0x8(%rax)
  412f40:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
  412f47:	89 45 d0             	mov    %eax,-0x30(%rbp)
  412f4a:	e9 eb 0d 00 00       	jmpq   413d3a <BZ2_decompress+0x202a>
  412f4f:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  412f53:	48 83 f8 31          	cmp    $0x31,%rax
  412f57:	0f 85 d0 0d 00 00    	jne    413d2d <BZ2_decompress+0x201d>
  412f5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412f61:	48 c7 c1 0f 00 00 00 	mov    $0xf,%rcx
  412f68:	89 48 08             	mov    %ecx,0x8(%rax)
  412f6b:	eb 10                	jmp    412f7d <BZ2_decompress+0x126d>
  412f6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412f71:	48 8b 00             	mov    (%rax),%rax
  412f74:	8b 48 10             	mov    0x10(%rax),%ecx
  412f77:	48 ff c1             	inc    %rcx
  412f7a:	89 48 10             	mov    %ecx,0x10(%rax)
  412f7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412f81:	48 63 40 24          	movslq 0x24(%rax),%rax
  412f85:	48 83 f8 07          	cmp    $0x7,%rax
  412f89:	0f 8f 83 00 00 00    	jg     413012 <BZ2_decompress+0x1302>
  412f8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412f93:	48 8b 00             	mov    (%rax),%rax
  412f96:	8b 40 08             	mov    0x8(%rax),%eax
  412f99:	48 85 c0             	test   %rax,%rax
  412f9c:	0f 84 83 0d 00 00    	je     413d25 <BZ2_decompress+0x2015>
  412fa2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412fa6:	48 8b 08             	mov    (%rax),%rcx
  412fa9:	48 8b 09             	mov    (%rcx),%rcx
  412fac:	8b 50 20             	mov    0x20(%rax),%edx
  412faf:	0f b6 31             	movzbl (%rcx),%esi
  412fb2:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  412fb9:	48 d3 e2             	shl    %cl,%rdx
  412fbc:	48 09 d6             	or     %rdx,%rsi
  412fbf:	89 70 20             	mov    %esi,0x20(%rax)
  412fc2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412fc6:	8b 48 24             	mov    0x24(%rax),%ecx
  412fc9:	48 83 c1 08          	add    $0x8,%rcx
  412fcd:	89 48 24             	mov    %ecx,0x24(%rax)
  412fd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412fd4:	48 8b 00             	mov    (%rax),%rax
  412fd7:	48 ff 00             	incq   (%rax)
  412fda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412fde:	48 8b 00             	mov    (%rax),%rax
  412fe1:	8b 48 08             	mov    0x8(%rax),%ecx
  412fe4:	48 ff c9             	dec    %rcx
  412fe7:	89 48 08             	mov    %ecx,0x8(%rax)
  412fea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412fee:	48 8b 00             	mov    (%rax),%rax
  412ff1:	8b 48 0c             	mov    0xc(%rax),%ecx
  412ff4:	48 ff c1             	inc    %rcx
  412ff7:	89 48 0c             	mov    %ecx,0xc(%rax)
  412ffa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412ffe:	48 8b 00             	mov    (%rax),%rax
  413001:	8b 40 0c             	mov    0xc(%rax),%eax
  413004:	48 85 c0             	test   %rax,%rax
  413007:	0f 85 70 ff ff ff    	jne    412f7d <BZ2_decompress+0x126d>
  41300d:	e9 5b ff ff ff       	jmpq   412f6d <BZ2_decompress+0x125d>
  413012:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413016:	8b 48 24             	mov    0x24(%rax),%ecx
  413019:	8b 40 20             	mov    0x20(%rax),%eax
  41301c:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  413020:	4c 21 f1             	and    %r14,%rcx
  413023:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413027:	48 d3 e8             	shr    %cl,%rax
  41302a:	48 25 ff 00 00 00    	and    $0xff,%rax
  413030:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
  413036:	8b 42 24             	mov    0x24(%rdx),%eax
  413039:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  41303d:	89 42 24             	mov    %eax,0x24(%rdx)
  413040:	0f b6 85 38 ff ff ff 	movzbl -0xc8(%rbp),%eax
  413047:	88 45 d7             	mov    %al,-0x29(%rbp)
  41304a:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  41304e:	48 83 f8 41          	cmp    $0x41,%rax
  413052:	0f 85 d5 0c 00 00    	jne    413d2d <BZ2_decompress+0x201d>
  413058:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41305c:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  413063:	89 48 08             	mov    %ecx,0x8(%rax)
  413066:	eb 10                	jmp    413078 <BZ2_decompress+0x1368>
  413068:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41306c:	48 8b 00             	mov    (%rax),%rax
  41306f:	8b 48 10             	mov    0x10(%rax),%ecx
  413072:	48 ff c1             	inc    %rcx
  413075:	89 48 10             	mov    %ecx,0x10(%rax)
  413078:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41307c:	48 63 40 24          	movslq 0x24(%rax),%rax
  413080:	48 83 f8 07          	cmp    $0x7,%rax
  413084:	0f 8f 83 00 00 00    	jg     41310d <BZ2_decompress+0x13fd>
  41308a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41308e:	48 8b 00             	mov    (%rax),%rax
  413091:	8b 40 08             	mov    0x8(%rax),%eax
  413094:	48 85 c0             	test   %rax,%rax
  413097:	0f 84 88 0c 00 00    	je     413d25 <BZ2_decompress+0x2015>
  41309d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4130a1:	48 8b 08             	mov    (%rax),%rcx
  4130a4:	48 8b 09             	mov    (%rcx),%rcx
  4130a7:	8b 50 20             	mov    0x20(%rax),%edx
  4130aa:	0f b6 31             	movzbl (%rcx),%esi
  4130ad:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4130b4:	48 d3 e2             	shl    %cl,%rdx
  4130b7:	48 09 d6             	or     %rdx,%rsi
  4130ba:	89 70 20             	mov    %esi,0x20(%rax)
  4130bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4130c1:	8b 48 24             	mov    0x24(%rax),%ecx
  4130c4:	48 83 c1 08          	add    $0x8,%rcx
  4130c8:	89 48 24             	mov    %ecx,0x24(%rax)
  4130cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4130cf:	48 8b 00             	mov    (%rax),%rax
  4130d2:	48 ff 00             	incq   (%rax)
  4130d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4130d9:	48 8b 00             	mov    (%rax),%rax
  4130dc:	8b 48 08             	mov    0x8(%rax),%ecx
  4130df:	48 ff c9             	dec    %rcx
  4130e2:	89 48 08             	mov    %ecx,0x8(%rax)
  4130e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4130e9:	48 8b 00             	mov    (%rax),%rax
  4130ec:	8b 48 0c             	mov    0xc(%rax),%ecx
  4130ef:	48 ff c1             	inc    %rcx
  4130f2:	89 48 0c             	mov    %ecx,0xc(%rax)
  4130f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4130f9:	48 8b 00             	mov    (%rax),%rax
  4130fc:	8b 40 0c             	mov    0xc(%rax),%eax
  4130ff:	48 85 c0             	test   %rax,%rax
  413102:	0f 85 70 ff ff ff    	jne    413078 <BZ2_decompress+0x1368>
  413108:	e9 5b ff ff ff       	jmpq   413068 <BZ2_decompress+0x1358>
  41310d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413111:	8b 48 24             	mov    0x24(%rax),%ecx
  413114:	8b 40 20             	mov    0x20(%rax),%eax
  413117:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  41311b:	4c 21 f1             	and    %r14,%rcx
  41311e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413122:	48 d3 e8             	shr    %cl,%rax
  413125:	48 25 ff 00 00 00    	and    $0xff,%rax
  41312b:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
  413131:	8b 42 24             	mov    0x24(%rdx),%eax
  413134:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  413138:	89 42 24             	mov    %eax,0x24(%rdx)
  41313b:	0f b6 85 34 ff ff ff 	movzbl -0xcc(%rbp),%eax
  413142:	88 45 d7             	mov    %al,-0x29(%rbp)
  413145:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  413149:	48 83 f8 59          	cmp    $0x59,%rax
  41314d:	0f 85 da 0b 00 00    	jne    413d2d <BZ2_decompress+0x201d>
  413153:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413157:	48 c7 c1 11 00 00 00 	mov    $0x11,%rcx
  41315e:	89 48 08             	mov    %ecx,0x8(%rax)
  413161:	eb 10                	jmp    413173 <BZ2_decompress+0x1463>
  413163:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413167:	48 8b 00             	mov    (%rax),%rax
  41316a:	8b 48 10             	mov    0x10(%rax),%ecx
  41316d:	48 ff c1             	inc    %rcx
  413170:	89 48 10             	mov    %ecx,0x10(%rax)
  413173:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413177:	48 63 40 24          	movslq 0x24(%rax),%rax
  41317b:	48 83 f8 07          	cmp    $0x7,%rax
  41317f:	0f 8f 83 00 00 00    	jg     413208 <BZ2_decompress+0x14f8>
  413185:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413189:	48 8b 00             	mov    (%rax),%rax
  41318c:	8b 40 08             	mov    0x8(%rax),%eax
  41318f:	48 85 c0             	test   %rax,%rax
  413192:	0f 84 8d 0b 00 00    	je     413d25 <BZ2_decompress+0x2015>
  413198:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41319c:	48 8b 08             	mov    (%rax),%rcx
  41319f:	48 8b 09             	mov    (%rcx),%rcx
  4131a2:	8b 50 20             	mov    0x20(%rax),%edx
  4131a5:	0f b6 31             	movzbl (%rcx),%esi
  4131a8:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4131af:	48 d3 e2             	shl    %cl,%rdx
  4131b2:	48 09 d6             	or     %rdx,%rsi
  4131b5:	89 70 20             	mov    %esi,0x20(%rax)
  4131b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4131bc:	8b 48 24             	mov    0x24(%rax),%ecx
  4131bf:	48 83 c1 08          	add    $0x8,%rcx
  4131c3:	89 48 24             	mov    %ecx,0x24(%rax)
  4131c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4131ca:	48 8b 00             	mov    (%rax),%rax
  4131cd:	48 ff 00             	incq   (%rax)
  4131d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4131d4:	48 8b 00             	mov    (%rax),%rax
  4131d7:	8b 48 08             	mov    0x8(%rax),%ecx
  4131da:	48 ff c9             	dec    %rcx
  4131dd:	89 48 08             	mov    %ecx,0x8(%rax)
  4131e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4131e4:	48 8b 00             	mov    (%rax),%rax
  4131e7:	8b 48 0c             	mov    0xc(%rax),%ecx
  4131ea:	48 ff c1             	inc    %rcx
  4131ed:	89 48 0c             	mov    %ecx,0xc(%rax)
  4131f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4131f4:	48 8b 00             	mov    (%rax),%rax
  4131f7:	8b 40 0c             	mov    0xc(%rax),%eax
  4131fa:	48 85 c0             	test   %rax,%rax
  4131fd:	0f 85 70 ff ff ff    	jne    413173 <BZ2_decompress+0x1463>
  413203:	e9 5b ff ff ff       	jmpq   413163 <BZ2_decompress+0x1453>
  413208:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41320c:	8b 48 24             	mov    0x24(%rax),%ecx
  41320f:	8b 40 20             	mov    0x20(%rax),%eax
  413212:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  413216:	4c 21 f1             	and    %r14,%rcx
  413219:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41321d:	48 d3 e8             	shr    %cl,%rax
  413220:	48 25 ff 00 00 00    	and    $0xff,%rax
  413226:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
  41322c:	8b 42 24             	mov    0x24(%rdx),%eax
  41322f:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  413233:	89 42 24             	mov    %eax,0x24(%rdx)
  413236:	0f b6 85 30 ff ff ff 	movzbl -0xd0(%rbp),%eax
  41323d:	88 45 d7             	mov    %al,-0x29(%rbp)
  413240:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  413244:	48 83 f8 26          	cmp    $0x26,%rax
  413248:	0f 85 df 0a 00 00    	jne    413d2d <BZ2_decompress+0x201d>
  41324e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413252:	48 c7 c1 12 00 00 00 	mov    $0x12,%rcx
  413259:	89 48 08             	mov    %ecx,0x8(%rax)
  41325c:	eb 10                	jmp    41326e <BZ2_decompress+0x155e>
  41325e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413262:	48 8b 00             	mov    (%rax),%rax
  413265:	8b 48 10             	mov    0x10(%rax),%ecx
  413268:	48 ff c1             	inc    %rcx
  41326b:	89 48 10             	mov    %ecx,0x10(%rax)
  41326e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413272:	48 63 40 24          	movslq 0x24(%rax),%rax
  413276:	48 83 f8 07          	cmp    $0x7,%rax
  41327a:	0f 8f 83 00 00 00    	jg     413303 <BZ2_decompress+0x15f3>
  413280:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413284:	48 8b 00             	mov    (%rax),%rax
  413287:	8b 40 08             	mov    0x8(%rax),%eax
  41328a:	48 85 c0             	test   %rax,%rax
  41328d:	0f 84 92 0a 00 00    	je     413d25 <BZ2_decompress+0x2015>
  413293:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413297:	48 8b 08             	mov    (%rax),%rcx
  41329a:	48 8b 09             	mov    (%rcx),%rcx
  41329d:	8b 50 20             	mov    0x20(%rax),%edx
  4132a0:	0f b6 31             	movzbl (%rcx),%esi
  4132a3:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4132aa:	48 d3 e2             	shl    %cl,%rdx
  4132ad:	48 09 d6             	or     %rdx,%rsi
  4132b0:	89 70 20             	mov    %esi,0x20(%rax)
  4132b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4132b7:	8b 48 24             	mov    0x24(%rax),%ecx
  4132ba:	48 83 c1 08          	add    $0x8,%rcx
  4132be:	89 48 24             	mov    %ecx,0x24(%rax)
  4132c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4132c5:	48 8b 00             	mov    (%rax),%rax
  4132c8:	48 ff 00             	incq   (%rax)
  4132cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4132cf:	48 8b 00             	mov    (%rax),%rax
  4132d2:	8b 48 08             	mov    0x8(%rax),%ecx
  4132d5:	48 ff c9             	dec    %rcx
  4132d8:	89 48 08             	mov    %ecx,0x8(%rax)
  4132db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4132df:	48 8b 00             	mov    (%rax),%rax
  4132e2:	8b 48 0c             	mov    0xc(%rax),%ecx
  4132e5:	48 ff c1             	inc    %rcx
  4132e8:	89 48 0c             	mov    %ecx,0xc(%rax)
  4132eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4132ef:	48 8b 00             	mov    (%rax),%rax
  4132f2:	8b 40 0c             	mov    0xc(%rax),%eax
  4132f5:	48 85 c0             	test   %rax,%rax
  4132f8:	0f 85 70 ff ff ff    	jne    41326e <BZ2_decompress+0x155e>
  4132fe:	e9 5b ff ff ff       	jmpq   41325e <BZ2_decompress+0x154e>
  413303:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413307:	8b 48 24             	mov    0x24(%rax),%ecx
  41330a:	8b 40 20             	mov    0x20(%rax),%eax
  41330d:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  413311:	4c 21 f1             	and    %r14,%rcx
  413314:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413318:	48 d3 e8             	shr    %cl,%rax
  41331b:	48 25 ff 00 00 00    	and    $0xff,%rax
  413321:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
  413327:	8b 42 24             	mov    0x24(%rdx),%eax
  41332a:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  41332e:	89 42 24             	mov    %eax,0x24(%rdx)
  413331:	0f b6 85 2c ff ff ff 	movzbl -0xd4(%rbp),%eax
  413338:	88 45 d7             	mov    %al,-0x29(%rbp)
  41333b:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  41333f:	48 83 f8 53          	cmp    $0x53,%rax
  413343:	0f 85 e4 09 00 00    	jne    413d2d <BZ2_decompress+0x201d>
  413349:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41334d:	48 c7 c1 13 00 00 00 	mov    $0x13,%rcx
  413354:	89 48 08             	mov    %ecx,0x8(%rax)
  413357:	eb 10                	jmp    413369 <BZ2_decompress+0x1659>
  413359:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41335d:	48 8b 00             	mov    (%rax),%rax
  413360:	8b 48 10             	mov    0x10(%rax),%ecx
  413363:	48 ff c1             	inc    %rcx
  413366:	89 48 10             	mov    %ecx,0x10(%rax)
  413369:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41336d:	48 63 40 24          	movslq 0x24(%rax),%rax
  413371:	48 83 f8 07          	cmp    $0x7,%rax
  413375:	0f 8f 83 00 00 00    	jg     4133fe <BZ2_decompress+0x16ee>
  41337b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41337f:	48 8b 00             	mov    (%rax),%rax
  413382:	8b 40 08             	mov    0x8(%rax),%eax
  413385:	48 85 c0             	test   %rax,%rax
  413388:	0f 84 97 09 00 00    	je     413d25 <BZ2_decompress+0x2015>
  41338e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413392:	48 8b 08             	mov    (%rax),%rcx
  413395:	48 8b 09             	mov    (%rcx),%rcx
  413398:	8b 50 20             	mov    0x20(%rax),%edx
  41339b:	0f b6 31             	movzbl (%rcx),%esi
  41339e:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4133a5:	48 d3 e2             	shl    %cl,%rdx
  4133a8:	48 09 d6             	or     %rdx,%rsi
  4133ab:	89 70 20             	mov    %esi,0x20(%rax)
  4133ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4133b2:	8b 48 24             	mov    0x24(%rax),%ecx
  4133b5:	48 83 c1 08          	add    $0x8,%rcx
  4133b9:	89 48 24             	mov    %ecx,0x24(%rax)
  4133bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4133c0:	48 8b 00             	mov    (%rax),%rax
  4133c3:	48 ff 00             	incq   (%rax)
  4133c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4133ca:	48 8b 00             	mov    (%rax),%rax
  4133cd:	8b 48 08             	mov    0x8(%rax),%ecx
  4133d0:	48 ff c9             	dec    %rcx
  4133d3:	89 48 08             	mov    %ecx,0x8(%rax)
  4133d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4133da:	48 8b 00             	mov    (%rax),%rax
  4133dd:	8b 48 0c             	mov    0xc(%rax),%ecx
  4133e0:	48 ff c1             	inc    %rcx
  4133e3:	89 48 0c             	mov    %ecx,0xc(%rax)
  4133e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4133ea:	48 8b 00             	mov    (%rax),%rax
  4133ed:	8b 40 0c             	mov    0xc(%rax),%eax
  4133f0:	48 85 c0             	test   %rax,%rax
  4133f3:	0f 85 70 ff ff ff    	jne    413369 <BZ2_decompress+0x1659>
  4133f9:	e9 5b ff ff ff       	jmpq   413359 <BZ2_decompress+0x1649>
  4133fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413402:	8b 48 24             	mov    0x24(%rax),%ecx
  413405:	8b 40 20             	mov    0x20(%rax),%eax
  413408:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  41340c:	4c 21 f1             	and    %r14,%rcx
  41340f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413413:	48 d3 e8             	shr    %cl,%rax
  413416:	48 25 ff 00 00 00    	and    $0xff,%rax
  41341c:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
  413422:	8b 42 24             	mov    0x24(%rdx),%eax
  413425:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  413429:	89 42 24             	mov    %eax,0x24(%rdx)
  41342c:	0f b6 85 28 ff ff ff 	movzbl -0xd8(%rbp),%eax
  413433:	88 45 d7             	mov    %al,-0x29(%rbp)
  413436:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  41343a:	48 83 f8 59          	cmp    $0x59,%rax
  41343e:	0f 85 e9 08 00 00    	jne    413d2d <BZ2_decompress+0x201d>
  413444:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413448:	8b 48 30             	mov    0x30(%rax),%ecx
  41344b:	48 ff c1             	inc    %rcx
  41344e:	89 48 30             	mov    %ecx,0x30(%rax)
  413451:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413455:	48 63 40 34          	movslq 0x34(%rax),%rax
  413459:	48 83 f8 02          	cmp    $0x2,%rax
  41345d:	7c 20                	jl     41347f <BZ2_decompress+0x176f>
  41345f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413463:	48 8b 3d 66 55 01 00 	mov    0x15566(%rip),%rdi        # 4289d0 <stderr>
  41346a:	8b 50 30             	mov    0x30(%rax),%edx
  41346d:	48 be e8 7f 42 00 00 	movabs $0x427fe8,%rsi
  413474:	00 00 00 
  413477:	48 31 c0             	xor    %rax,%rax
  41347a:	e8 79 68 00 00       	callq  419cf8 <fprintf>
  41347f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413483:	48 31 c9             	xor    %rcx,%rcx
  413486:	89 88 68 0c 00 00    	mov    %ecx,0xc68(%rax)
  41348c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413490:	48 c7 c1 14 00 00 00 	mov    $0x14,%rcx
  413497:	89 48 08             	mov    %ecx,0x8(%rax)
  41349a:	eb 10                	jmp    4134ac <BZ2_decompress+0x179c>
  41349c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4134a0:	48 8b 00             	mov    (%rax),%rax
  4134a3:	8b 48 10             	mov    0x10(%rax),%ecx
  4134a6:	48 ff c1             	inc    %rcx
  4134a9:	89 48 10             	mov    %ecx,0x10(%rax)
  4134ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4134b0:	48 63 40 24          	movslq 0x24(%rax),%rax
  4134b4:	48 83 f8 07          	cmp    $0x7,%rax
  4134b8:	0f 8f 83 00 00 00    	jg     413541 <BZ2_decompress+0x1831>
  4134be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4134c2:	48 8b 00             	mov    (%rax),%rax
  4134c5:	8b 40 08             	mov    0x8(%rax),%eax
  4134c8:	48 85 c0             	test   %rax,%rax
  4134cb:	0f 84 54 08 00 00    	je     413d25 <BZ2_decompress+0x2015>
  4134d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4134d5:	48 8b 08             	mov    (%rax),%rcx
  4134d8:	48 8b 09             	mov    (%rcx),%rcx
  4134db:	8b 50 20             	mov    0x20(%rax),%edx
  4134de:	0f b6 31             	movzbl (%rcx),%esi
  4134e1:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4134e8:	48 d3 e2             	shl    %cl,%rdx
  4134eb:	48 09 d6             	or     %rdx,%rsi
  4134ee:	89 70 20             	mov    %esi,0x20(%rax)
  4134f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4134f5:	8b 48 24             	mov    0x24(%rax),%ecx
  4134f8:	48 83 c1 08          	add    $0x8,%rcx
  4134fc:	89 48 24             	mov    %ecx,0x24(%rax)
  4134ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413503:	48 8b 00             	mov    (%rax),%rax
  413506:	48 ff 00             	incq   (%rax)
  413509:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41350d:	48 8b 00             	mov    (%rax),%rax
  413510:	8b 48 08             	mov    0x8(%rax),%ecx
  413513:	48 ff c9             	dec    %rcx
  413516:	89 48 08             	mov    %ecx,0x8(%rax)
  413519:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41351d:	48 8b 00             	mov    (%rax),%rax
  413520:	8b 48 0c             	mov    0xc(%rax),%ecx
  413523:	48 ff c1             	inc    %rcx
  413526:	89 48 0c             	mov    %ecx,0xc(%rax)
  413529:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41352d:	48 8b 00             	mov    (%rax),%rax
  413530:	8b 40 0c             	mov    0xc(%rax),%eax
  413533:	48 85 c0             	test   %rax,%rax
  413536:	0f 85 70 ff ff ff    	jne    4134ac <BZ2_decompress+0x179c>
  41353c:	e9 5b ff ff ff       	jmpq   41349c <BZ2_decompress+0x178c>
  413541:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413545:	8b 48 24             	mov    0x24(%rax),%ecx
  413548:	8b 40 20             	mov    0x20(%rax),%eax
  41354b:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  41354f:	4c 21 f1             	and    %r14,%rcx
  413552:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413556:	48 d3 e8             	shr    %cl,%rax
  413559:	48 25 ff 00 00 00    	and    $0xff,%rax
  41355f:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  413565:	8b 42 24             	mov    0x24(%rdx),%eax
  413568:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  41356c:	89 42 24             	mov    %eax,0x24(%rdx)
  41356f:	0f b6 85 24 ff ff ff 	movzbl -0xdc(%rbp),%eax
  413576:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41357a:	88 45 d7             	mov    %al,-0x29(%rbp)
  41357d:	8b 82 68 0c 00 00    	mov    0xc68(%rdx),%eax
  413583:	0f b6 75 d7          	movzbl -0x29(%rbp),%esi
  413587:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41358e:	48 d3 e0             	shl    %cl,%rax
  413591:	48 09 c6             	or     %rax,%rsi
  413594:	89 b2 68 0c 00 00    	mov    %esi,0xc68(%rdx)
  41359a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41359e:	48 c7 c1 15 00 00 00 	mov    $0x15,%rcx
  4135a5:	89 48 08             	mov    %ecx,0x8(%rax)
  4135a8:	eb 10                	jmp    4135ba <BZ2_decompress+0x18aa>
  4135aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4135ae:	48 8b 00             	mov    (%rax),%rax
  4135b1:	8b 48 10             	mov    0x10(%rax),%ecx
  4135b4:	48 ff c1             	inc    %rcx
  4135b7:	89 48 10             	mov    %ecx,0x10(%rax)
  4135ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4135be:	48 63 40 24          	movslq 0x24(%rax),%rax
  4135c2:	48 83 f8 07          	cmp    $0x7,%rax
  4135c6:	0f 8f 83 00 00 00    	jg     41364f <BZ2_decompress+0x193f>
  4135cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4135d0:	48 8b 00             	mov    (%rax),%rax
  4135d3:	8b 40 08             	mov    0x8(%rax),%eax
  4135d6:	48 85 c0             	test   %rax,%rax
  4135d9:	0f 84 46 07 00 00    	je     413d25 <BZ2_decompress+0x2015>
  4135df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4135e3:	48 8b 08             	mov    (%rax),%rcx
  4135e6:	48 8b 09             	mov    (%rcx),%rcx
  4135e9:	8b 50 20             	mov    0x20(%rax),%edx
  4135ec:	0f b6 31             	movzbl (%rcx),%esi
  4135ef:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4135f6:	48 d3 e2             	shl    %cl,%rdx
  4135f9:	48 09 d6             	or     %rdx,%rsi
  4135fc:	89 70 20             	mov    %esi,0x20(%rax)
  4135ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413603:	8b 48 24             	mov    0x24(%rax),%ecx
  413606:	48 83 c1 08          	add    $0x8,%rcx
  41360a:	89 48 24             	mov    %ecx,0x24(%rax)
  41360d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413611:	48 8b 00             	mov    (%rax),%rax
  413614:	48 ff 00             	incq   (%rax)
  413617:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41361b:	48 8b 00             	mov    (%rax),%rax
  41361e:	8b 48 08             	mov    0x8(%rax),%ecx
  413621:	48 ff c9             	dec    %rcx
  413624:	89 48 08             	mov    %ecx,0x8(%rax)
  413627:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41362b:	48 8b 00             	mov    (%rax),%rax
  41362e:	8b 48 0c             	mov    0xc(%rax),%ecx
  413631:	48 ff c1             	inc    %rcx
  413634:	89 48 0c             	mov    %ecx,0xc(%rax)
  413637:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41363b:	48 8b 00             	mov    (%rax),%rax
  41363e:	8b 40 0c             	mov    0xc(%rax),%eax
  413641:	48 85 c0             	test   %rax,%rax
  413644:	0f 85 70 ff ff ff    	jne    4135ba <BZ2_decompress+0x18aa>
  41364a:	e9 5b ff ff ff       	jmpq   4135aa <BZ2_decompress+0x189a>
  41364f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413653:	8b 48 24             	mov    0x24(%rax),%ecx
  413656:	8b 40 20             	mov    0x20(%rax),%eax
  413659:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  41365d:	4c 21 f1             	and    %r14,%rcx
  413660:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413664:	48 d3 e8             	shr    %cl,%rax
  413667:	48 25 ff 00 00 00    	and    $0xff,%rax
  41366d:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
  413673:	8b 42 24             	mov    0x24(%rdx),%eax
  413676:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  41367a:	89 42 24             	mov    %eax,0x24(%rdx)
  41367d:	0f b6 85 20 ff ff ff 	movzbl -0xe0(%rbp),%eax
  413684:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413688:	88 45 d7             	mov    %al,-0x29(%rbp)
  41368b:	8b 82 68 0c 00 00    	mov    0xc68(%rdx),%eax
  413691:	0f b6 75 d7          	movzbl -0x29(%rbp),%esi
  413695:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41369c:	48 d3 e0             	shl    %cl,%rax
  41369f:	48 09 c6             	or     %rax,%rsi
  4136a2:	89 b2 68 0c 00 00    	mov    %esi,0xc68(%rdx)
  4136a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4136ac:	48 c7 c1 16 00 00 00 	mov    $0x16,%rcx
  4136b3:	89 48 08             	mov    %ecx,0x8(%rax)
  4136b6:	eb 10                	jmp    4136c8 <BZ2_decompress+0x19b8>
  4136b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4136bc:	48 8b 00             	mov    (%rax),%rax
  4136bf:	8b 48 10             	mov    0x10(%rax),%ecx
  4136c2:	48 ff c1             	inc    %rcx
  4136c5:	89 48 10             	mov    %ecx,0x10(%rax)
  4136c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4136cc:	48 63 40 24          	movslq 0x24(%rax),%rax
  4136d0:	48 83 f8 07          	cmp    $0x7,%rax
  4136d4:	0f 8f 83 00 00 00    	jg     41375d <BZ2_decompress+0x1a4d>
  4136da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4136de:	48 8b 00             	mov    (%rax),%rax
  4136e1:	8b 40 08             	mov    0x8(%rax),%eax
  4136e4:	48 85 c0             	test   %rax,%rax
  4136e7:	0f 84 38 06 00 00    	je     413d25 <BZ2_decompress+0x2015>
  4136ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4136f1:	48 8b 08             	mov    (%rax),%rcx
  4136f4:	48 8b 09             	mov    (%rcx),%rcx
  4136f7:	8b 50 20             	mov    0x20(%rax),%edx
  4136fa:	0f b6 31             	movzbl (%rcx),%esi
  4136fd:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  413704:	48 d3 e2             	shl    %cl,%rdx
  413707:	48 09 d6             	or     %rdx,%rsi
  41370a:	89 70 20             	mov    %esi,0x20(%rax)
  41370d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413711:	8b 48 24             	mov    0x24(%rax),%ecx
  413714:	48 83 c1 08          	add    $0x8,%rcx
  413718:	89 48 24             	mov    %ecx,0x24(%rax)
  41371b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41371f:	48 8b 00             	mov    (%rax),%rax
  413722:	48 ff 00             	incq   (%rax)
  413725:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413729:	48 8b 00             	mov    (%rax),%rax
  41372c:	8b 48 08             	mov    0x8(%rax),%ecx
  41372f:	48 ff c9             	dec    %rcx
  413732:	89 48 08             	mov    %ecx,0x8(%rax)
  413735:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413739:	48 8b 00             	mov    (%rax),%rax
  41373c:	8b 48 0c             	mov    0xc(%rax),%ecx
  41373f:	48 ff c1             	inc    %rcx
  413742:	89 48 0c             	mov    %ecx,0xc(%rax)
  413745:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413749:	48 8b 00             	mov    (%rax),%rax
  41374c:	8b 40 0c             	mov    0xc(%rax),%eax
  41374f:	48 85 c0             	test   %rax,%rax
  413752:	0f 85 70 ff ff ff    	jne    4136c8 <BZ2_decompress+0x19b8>
  413758:	e9 5b ff ff ff       	jmpq   4136b8 <BZ2_decompress+0x19a8>
  41375d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413761:	8b 48 24             	mov    0x24(%rax),%ecx
  413764:	8b 40 20             	mov    0x20(%rax),%eax
  413767:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  41376b:	4c 21 f1             	and    %r14,%rcx
  41376e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413772:	48 d3 e8             	shr    %cl,%rax
  413775:	48 25 ff 00 00 00    	and    $0xff,%rax
  41377b:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
  413781:	8b 42 24             	mov    0x24(%rdx),%eax
  413784:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  413788:	89 42 24             	mov    %eax,0x24(%rdx)
  41378b:	0f b6 85 1c ff ff ff 	movzbl -0xe4(%rbp),%eax
  413792:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413796:	88 45 d7             	mov    %al,-0x29(%rbp)
  413799:	8b 82 68 0c 00 00    	mov    0xc68(%rdx),%eax
  41379f:	0f b6 75 d7          	movzbl -0x29(%rbp),%esi
  4137a3:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4137aa:	48 d3 e0             	shl    %cl,%rax
  4137ad:	48 09 c6             	or     %rax,%rsi
  4137b0:	89 b2 68 0c 00 00    	mov    %esi,0xc68(%rdx)
  4137b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4137ba:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  4137c1:	89 48 08             	mov    %ecx,0x8(%rax)
  4137c4:	eb 10                	jmp    4137d6 <BZ2_decompress+0x1ac6>
  4137c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4137ca:	48 8b 00             	mov    (%rax),%rax
  4137cd:	8b 48 10             	mov    0x10(%rax),%ecx
  4137d0:	48 ff c1             	inc    %rcx
  4137d3:	89 48 10             	mov    %ecx,0x10(%rax)
  4137d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4137da:	48 63 40 24          	movslq 0x24(%rax),%rax
  4137de:	48 83 f8 07          	cmp    $0x7,%rax
  4137e2:	0f 8f 83 00 00 00    	jg     41386b <BZ2_decompress+0x1b5b>
  4137e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4137ec:	48 8b 00             	mov    (%rax),%rax
  4137ef:	8b 40 08             	mov    0x8(%rax),%eax
  4137f2:	48 85 c0             	test   %rax,%rax
  4137f5:	0f 84 2a 05 00 00    	je     413d25 <BZ2_decompress+0x2015>
  4137fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4137ff:	48 8b 08             	mov    (%rax),%rcx
  413802:	48 8b 09             	mov    (%rcx),%rcx
  413805:	8b 50 20             	mov    0x20(%rax),%edx
  413808:	0f b6 31             	movzbl (%rcx),%esi
  41380b:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  413812:	48 d3 e2             	shl    %cl,%rdx
  413815:	48 09 d6             	or     %rdx,%rsi
  413818:	89 70 20             	mov    %esi,0x20(%rax)
  41381b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41381f:	8b 48 24             	mov    0x24(%rax),%ecx
  413822:	48 83 c1 08          	add    $0x8,%rcx
  413826:	89 48 24             	mov    %ecx,0x24(%rax)
  413829:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41382d:	48 8b 00             	mov    (%rax),%rax
  413830:	48 ff 00             	incq   (%rax)
  413833:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413837:	48 8b 00             	mov    (%rax),%rax
  41383a:	8b 48 08             	mov    0x8(%rax),%ecx
  41383d:	48 ff c9             	dec    %rcx
  413840:	89 48 08             	mov    %ecx,0x8(%rax)
  413843:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413847:	48 8b 00             	mov    (%rax),%rax
  41384a:	8b 48 0c             	mov    0xc(%rax),%ecx
  41384d:	48 ff c1             	inc    %rcx
  413850:	89 48 0c             	mov    %ecx,0xc(%rax)
  413853:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413857:	48 8b 00             	mov    (%rax),%rax
  41385a:	8b 40 0c             	mov    0xc(%rax),%eax
  41385d:	48 85 c0             	test   %rax,%rax
  413860:	0f 85 70 ff ff ff    	jne    4137d6 <BZ2_decompress+0x1ac6>
  413866:	e9 5b ff ff ff       	jmpq   4137c6 <BZ2_decompress+0x1ab6>
  41386b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41386f:	8b 48 24             	mov    0x24(%rax),%ecx
  413872:	8b 40 20             	mov    0x20(%rax),%eax
  413875:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  413879:	4c 21 f1             	and    %r14,%rcx
  41387c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413880:	48 d3 e8             	shr    %cl,%rax
  413883:	48 25 ff 00 00 00    	and    $0xff,%rax
  413889:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
  41388f:	8b 42 24             	mov    0x24(%rdx),%eax
  413892:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  413896:	89 42 24             	mov    %eax,0x24(%rdx)
  413899:	0f b6 85 18 ff ff ff 	movzbl -0xe8(%rbp),%eax
  4138a0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4138a4:	88 45 d7             	mov    %al,-0x29(%rbp)
  4138a7:	8b 82 68 0c 00 00    	mov    0xc68(%rdx),%eax
  4138ad:	0f b6 75 d7          	movzbl -0x29(%rbp),%esi
  4138b1:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4138b8:	48 d3 e0             	shl    %cl,%rax
  4138bb:	48 09 c6             	or     %rax,%rsi
  4138be:	89 b2 68 0c 00 00    	mov    %esi,0xc68(%rdx)
  4138c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4138c8:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  4138cf:	89 48 08             	mov    %ecx,0x8(%rax)
  4138d2:	eb 10                	jmp    4138e4 <BZ2_decompress+0x1bd4>
  4138d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4138d8:	48 8b 00             	mov    (%rax),%rax
  4138db:	8b 48 10             	mov    0x10(%rax),%ecx
  4138de:	48 ff c1             	inc    %rcx
  4138e1:	89 48 10             	mov    %ecx,0x10(%rax)
  4138e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4138e8:	48 63 40 24          	movslq 0x24(%rax),%rax
  4138ec:	48 85 c0             	test   %rax,%rax
  4138ef:	0f 8f 83 00 00 00    	jg     413978 <BZ2_decompress+0x1c68>
  4138f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4138f9:	48 8b 00             	mov    (%rax),%rax
  4138fc:	8b 40 08             	mov    0x8(%rax),%eax
  4138ff:	48 85 c0             	test   %rax,%rax
  413902:	0f 84 1d 04 00 00    	je     413d25 <BZ2_decompress+0x2015>
  413908:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41390c:	48 8b 08             	mov    (%rax),%rcx
  41390f:	48 8b 09             	mov    (%rcx),%rcx
  413912:	8b 50 20             	mov    0x20(%rax),%edx
  413915:	0f b6 31             	movzbl (%rcx),%esi
  413918:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41391f:	48 d3 e2             	shl    %cl,%rdx
  413922:	48 09 d6             	or     %rdx,%rsi
  413925:	89 70 20             	mov    %esi,0x20(%rax)
  413928:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41392c:	8b 48 24             	mov    0x24(%rax),%ecx
  41392f:	48 83 c1 08          	add    $0x8,%rcx
  413933:	89 48 24             	mov    %ecx,0x24(%rax)
  413936:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41393a:	48 8b 00             	mov    (%rax),%rax
  41393d:	48 ff 00             	incq   (%rax)
  413940:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413944:	48 8b 00             	mov    (%rax),%rax
  413947:	8b 48 08             	mov    0x8(%rax),%ecx
  41394a:	48 ff c9             	dec    %rcx
  41394d:	89 48 08             	mov    %ecx,0x8(%rax)
  413950:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413954:	48 8b 00             	mov    (%rax),%rax
  413957:	8b 48 0c             	mov    0xc(%rax),%ecx
  41395a:	48 ff c1             	inc    %rcx
  41395d:	89 48 0c             	mov    %ecx,0xc(%rax)
  413960:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413964:	48 8b 00             	mov    (%rax),%rax
  413967:	8b 40 0c             	mov    0xc(%rax),%eax
  41396a:	48 85 c0             	test   %rax,%rax
  41396d:	0f 85 71 ff ff ff    	jne    4138e4 <BZ2_decompress+0x1bd4>
  413973:	e9 5c ff ff ff       	jmpq   4138d4 <BZ2_decompress+0x1bc4>
  413978:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41397c:	8b 48 24             	mov    0x24(%rax),%ecx
  41397f:	8b 40 20             	mov    0x20(%rax),%eax
  413982:	48 ff c9             	dec    %rcx
  413985:	4c 21 f1             	and    %r14,%rcx
  413988:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41398c:	48 d3 e8             	shr    %cl,%rax
  41398f:	48 83 e0 01          	and    $0x1,%rax
  413993:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
  413999:	8b 42 24             	mov    0x24(%rdx),%eax
  41399c:	48 ff c8             	dec    %rax
  41399f:	89 42 24             	mov    %eax,0x24(%rdx)
  4139a2:	0f b6 85 14 ff ff ff 	movzbl -0xec(%rbp),%eax
  4139a9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4139ad:	88 41 14             	mov    %al,0x14(%rcx)
  4139b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4139b4:	48 31 c9             	xor    %rcx,%rcx
  4139b7:	89 48 38             	mov    %ecx,0x38(%rax)
  4139ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4139be:	48 c7 c1 19 00 00 00 	mov    $0x19,%rcx
  4139c5:	89 48 08             	mov    %ecx,0x8(%rax)
  4139c8:	eb 10                	jmp    4139da <BZ2_decompress+0x1cca>
  4139ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4139ce:	48 8b 00             	mov    (%rax),%rax
  4139d1:	8b 48 10             	mov    0x10(%rax),%ecx
  4139d4:	48 ff c1             	inc    %rcx
  4139d7:	89 48 10             	mov    %ecx,0x10(%rax)
  4139da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4139de:	48 63 40 24          	movslq 0x24(%rax),%rax
  4139e2:	48 83 f8 07          	cmp    $0x7,%rax
  4139e6:	0f 8f 83 00 00 00    	jg     413a6f <BZ2_decompress+0x1d5f>
  4139ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4139f0:	48 8b 00             	mov    (%rax),%rax
  4139f3:	8b 40 08             	mov    0x8(%rax),%eax
  4139f6:	48 85 c0             	test   %rax,%rax
  4139f9:	0f 84 26 03 00 00    	je     413d25 <BZ2_decompress+0x2015>
  4139ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413a03:	48 8b 08             	mov    (%rax),%rcx
  413a06:	48 8b 09             	mov    (%rcx),%rcx
  413a09:	8b 50 20             	mov    0x20(%rax),%edx
  413a0c:	0f b6 31             	movzbl (%rcx),%esi
  413a0f:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  413a16:	48 d3 e2             	shl    %cl,%rdx
  413a19:	48 09 d6             	or     %rdx,%rsi
  413a1c:	89 70 20             	mov    %esi,0x20(%rax)
  413a1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413a23:	8b 48 24             	mov    0x24(%rax),%ecx
  413a26:	48 83 c1 08          	add    $0x8,%rcx
  413a2a:	89 48 24             	mov    %ecx,0x24(%rax)
  413a2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413a31:	48 8b 00             	mov    (%rax),%rax
  413a34:	48 ff 00             	incq   (%rax)
  413a37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413a3b:	48 8b 00             	mov    (%rax),%rax
  413a3e:	8b 48 08             	mov    0x8(%rax),%ecx
  413a41:	48 ff c9             	dec    %rcx
  413a44:	89 48 08             	mov    %ecx,0x8(%rax)
  413a47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413a4b:	48 8b 00             	mov    (%rax),%rax
  413a4e:	8b 48 0c             	mov    0xc(%rax),%ecx
  413a51:	48 ff c1             	inc    %rcx
  413a54:	89 48 0c             	mov    %ecx,0xc(%rax)
  413a57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413a5b:	48 8b 00             	mov    (%rax),%rax
  413a5e:	8b 40 0c             	mov    0xc(%rax),%eax
  413a61:	48 85 c0             	test   %rax,%rax
  413a64:	0f 85 70 ff ff ff    	jne    4139da <BZ2_decompress+0x1cca>
  413a6a:	e9 5b ff ff ff       	jmpq   4139ca <BZ2_decompress+0x1cba>
  413a6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413a73:	8b 48 24             	mov    0x24(%rax),%ecx
  413a76:	8b 40 20             	mov    0x20(%rax),%eax
  413a79:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  413a7d:	4c 21 f1             	and    %r14,%rcx
  413a80:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413a84:	48 d3 e8             	shr    %cl,%rax
  413a87:	48 25 ff 00 00 00    	and    $0xff,%rax
  413a8d:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%rbp)
  413a93:	8b 42 24             	mov    0x24(%rdx),%eax
  413a96:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  413a9a:	89 42 24             	mov    %eax,0x24(%rdx)
  413a9d:	0f b6 85 10 ff ff ff 	movzbl -0xf0(%rbp),%eax
  413aa4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413aa8:	88 45 d7             	mov    %al,-0x29(%rbp)
  413aab:	8b 42 38             	mov    0x38(%rdx),%eax
  413aae:	0f b6 75 d7          	movzbl -0x29(%rbp),%esi
  413ab2:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  413ab9:	48 d3 e0             	shl    %cl,%rax
  413abc:	48 09 c6             	or     %rax,%rsi
  413abf:	89 72 38             	mov    %esi,0x38(%rdx)
  413ac2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413ac6:	48 c7 c1 1a 00 00 00 	mov    $0x1a,%rcx
  413acd:	89 48 08             	mov    %ecx,0x8(%rax)
  413ad0:	eb 10                	jmp    413ae2 <BZ2_decompress+0x1dd2>
  413ad2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413ad6:	48 8b 00             	mov    (%rax),%rax
  413ad9:	8b 48 10             	mov    0x10(%rax),%ecx
  413adc:	48 ff c1             	inc    %rcx
  413adf:	89 48 10             	mov    %ecx,0x10(%rax)
  413ae2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413ae6:	48 63 40 24          	movslq 0x24(%rax),%rax
  413aea:	48 83 f8 07          	cmp    $0x7,%rax
  413aee:	0f 8f 83 00 00 00    	jg     413b77 <BZ2_decompress+0x1e67>
  413af4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413af8:	48 8b 00             	mov    (%rax),%rax
  413afb:	8b 40 08             	mov    0x8(%rax),%eax
  413afe:	48 85 c0             	test   %rax,%rax
  413b01:	0f 84 1e 02 00 00    	je     413d25 <BZ2_decompress+0x2015>
  413b07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413b0b:	48 8b 08             	mov    (%rax),%rcx
  413b0e:	48 8b 09             	mov    (%rcx),%rcx
  413b11:	8b 50 20             	mov    0x20(%rax),%edx
  413b14:	0f b6 31             	movzbl (%rcx),%esi
  413b17:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  413b1e:	48 d3 e2             	shl    %cl,%rdx
  413b21:	48 09 d6             	or     %rdx,%rsi
  413b24:	89 70 20             	mov    %esi,0x20(%rax)
  413b27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413b2b:	8b 48 24             	mov    0x24(%rax),%ecx
  413b2e:	48 83 c1 08          	add    $0x8,%rcx
  413b32:	89 48 24             	mov    %ecx,0x24(%rax)
  413b35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413b39:	48 8b 00             	mov    (%rax),%rax
  413b3c:	48 ff 00             	incq   (%rax)
  413b3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413b43:	48 8b 00             	mov    (%rax),%rax
  413b46:	8b 48 08             	mov    0x8(%rax),%ecx
  413b49:	48 ff c9             	dec    %rcx
  413b4c:	89 48 08             	mov    %ecx,0x8(%rax)
  413b4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413b53:	48 8b 00             	mov    (%rax),%rax
  413b56:	8b 48 0c             	mov    0xc(%rax),%ecx
  413b59:	48 ff c1             	inc    %rcx
  413b5c:	89 48 0c             	mov    %ecx,0xc(%rax)
  413b5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413b63:	48 8b 00             	mov    (%rax),%rax
  413b66:	8b 40 0c             	mov    0xc(%rax),%eax
  413b69:	48 85 c0             	test   %rax,%rax
  413b6c:	0f 85 70 ff ff ff    	jne    413ae2 <BZ2_decompress+0x1dd2>
  413b72:	e9 5b ff ff ff       	jmpq   413ad2 <BZ2_decompress+0x1dc2>
  413b77:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413b7b:	8b 48 24             	mov    0x24(%rax),%ecx
  413b7e:	8b 40 20             	mov    0x20(%rax),%eax
  413b81:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  413b85:	4c 21 f1             	and    %r14,%rcx
  413b88:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413b8c:	48 d3 e8             	shr    %cl,%rax
  413b8f:	48 25 ff 00 00 00    	and    $0xff,%rax
  413b95:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
  413b9b:	8b 42 24             	mov    0x24(%rdx),%eax
  413b9e:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  413ba2:	89 42 24             	mov    %eax,0x24(%rdx)
  413ba5:	0f b6 85 0c ff ff ff 	movzbl -0xf4(%rbp),%eax
  413bac:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413bb0:	88 45 d7             	mov    %al,-0x29(%rbp)
  413bb3:	8b 42 38             	mov    0x38(%rdx),%eax
  413bb6:	0f b6 75 d7          	movzbl -0x29(%rbp),%esi
  413bba:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  413bc1:	48 d3 e0             	shl    %cl,%rax
  413bc4:	48 09 c6             	or     %rax,%rsi
  413bc7:	89 72 38             	mov    %esi,0x38(%rdx)
  413bca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413bce:	48 c7 c1 1b 00 00 00 	mov    $0x1b,%rcx
  413bd5:	89 48 08             	mov    %ecx,0x8(%rax)
  413bd8:	eb 10                	jmp    413bea <BZ2_decompress+0x1eda>
  413bda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413bde:	48 8b 00             	mov    (%rax),%rax
  413be1:	8b 48 10             	mov    0x10(%rax),%ecx
  413be4:	48 ff c1             	inc    %rcx
  413be7:	89 48 10             	mov    %ecx,0x10(%rax)
  413bea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413bee:	48 63 40 24          	movslq 0x24(%rax),%rax
  413bf2:	48 83 f8 07          	cmp    $0x7,%rax
  413bf6:	0f 8f 83 00 00 00    	jg     413c7f <BZ2_decompress+0x1f6f>
  413bfc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413c00:	48 8b 00             	mov    (%rax),%rax
  413c03:	8b 40 08             	mov    0x8(%rax),%eax
  413c06:	48 85 c0             	test   %rax,%rax
  413c09:	0f 84 16 01 00 00    	je     413d25 <BZ2_decompress+0x2015>
  413c0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413c13:	48 8b 08             	mov    (%rax),%rcx
  413c16:	48 8b 09             	mov    (%rcx),%rcx
  413c19:	8b 50 20             	mov    0x20(%rax),%edx
  413c1c:	0f b6 31             	movzbl (%rcx),%esi
  413c1f:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  413c26:	48 d3 e2             	shl    %cl,%rdx
  413c29:	48 09 d6             	or     %rdx,%rsi
  413c2c:	89 70 20             	mov    %esi,0x20(%rax)
  413c2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413c33:	8b 48 24             	mov    0x24(%rax),%ecx
  413c36:	48 83 c1 08          	add    $0x8,%rcx
  413c3a:	89 48 24             	mov    %ecx,0x24(%rax)
  413c3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413c41:	48 8b 00             	mov    (%rax),%rax
  413c44:	48 ff 00             	incq   (%rax)
  413c47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413c4b:	48 8b 00             	mov    (%rax),%rax
  413c4e:	8b 48 08             	mov    0x8(%rax),%ecx
  413c51:	48 ff c9             	dec    %rcx
  413c54:	89 48 08             	mov    %ecx,0x8(%rax)
  413c57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413c5b:	48 8b 00             	mov    (%rax),%rax
  413c5e:	8b 48 0c             	mov    0xc(%rax),%ecx
  413c61:	48 ff c1             	inc    %rcx
  413c64:	89 48 0c             	mov    %ecx,0xc(%rax)
  413c67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413c6b:	48 8b 00             	mov    (%rax),%rax
  413c6e:	8b 40 0c             	mov    0xc(%rax),%eax
  413c71:	48 85 c0             	test   %rax,%rax
  413c74:	0f 85 70 ff ff ff    	jne    413bea <BZ2_decompress+0x1eda>
  413c7a:	e9 5b ff ff ff       	jmpq   413bda <BZ2_decompress+0x1eca>
  413c7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413c83:	8b 48 24             	mov    0x24(%rax),%ecx
  413c86:	8b 40 20             	mov    0x20(%rax),%eax
  413c89:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
  413c8d:	4c 21 f1             	and    %r14,%rcx
  413c90:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413c94:	48 d3 e8             	shr    %cl,%rax
  413c97:	48 25 ff 00 00 00    	and    $0xff,%rax
  413c9d:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
  413ca3:	8b 42 24             	mov    0x24(%rdx),%eax
  413ca6:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
  413caa:	89 42 24             	mov    %eax,0x24(%rdx)
  413cad:	0f b6 85 08 ff ff ff 	movzbl -0xf8(%rbp),%eax
  413cb4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413cb8:	88 45 d7             	mov    %al,-0x29(%rbp)
  413cbb:	8b 42 38             	mov    0x38(%rdx),%eax
  413cbe:	0f b6 75 d7          	movzbl -0x29(%rbp),%esi
  413cc2:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  413cc9:	48 d3 e0             	shl    %cl,%rax
  413ccc:	48 09 c6             	or     %rax,%rsi
  413ccf:	89 72 38             	mov    %esi,0x38(%rdx)
  413cd2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413cd6:	48 63 40 38          	movslq 0x38(%rax),%rax
  413cda:	48 85 c0             	test   %rax,%rax
  413cdd:	78 4e                	js     413d2d <BZ2_decompress+0x201d>
  413cdf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413ce3:	8b 48 28             	mov    0x28(%rax),%ecx
  413ce6:	48 63 40 38          	movslq 0x38(%rax),%rax
  413cea:	48 69 d1 a0 86 01 00 	imul   $0x186a0,%rcx,%rdx
  413cf1:	48 83 ca 0a          	or     $0xa,%rdx
  413cf5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  413cfc:	48 d3 e2             	shl    %cl,%rdx
  413cff:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  413d06:	48 d3 fa             	sar    %cl,%rdx
  413d09:	48 39 d0             	cmp    %rdx,%rax
  413d0c:	7f 1f                	jg     413d2d <BZ2_decompress+0x201d>
  413d0e:	48 31 c0             	xor    %rax,%rax
  413d11:	e9 8d 01 00 00       	jmpq   413ea3 <BZ2_decompress+0x2193>
  413d16:	48 b8 fd ff ff ff 00 	movabs $0xfffffffd,%rax
  413d1d:	00 00 00 
  413d20:	89 45 d0             	mov    %eax,-0x30(%rbp)
  413d23:	eb 15                	jmp    413d3a <BZ2_decompress+0x202a>
  413d25:	48 31 c0             	xor    %rax,%rax
  413d28:	89 45 d0             	mov    %eax,-0x30(%rbp)
  413d2b:	eb 0d                	jmp    413d3a <BZ2_decompress+0x202a>
  413d2d:	48 b8 fc ff ff ff 00 	movabs $0xfffffffc,%rax
  413d34:	00 00 00 
  413d37:	89 45 d0             	mov    %eax,-0x30(%rbp)
  413d3a:	8b 45 bc             	mov    -0x44(%rbp),%eax
  413d3d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413d41:	89 81 24 fa 00 00    	mov    %eax,0xfa24(%rcx)
  413d47:	8b 45 b8             	mov    -0x48(%rbp),%eax
  413d4a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413d4e:	89 81 28 fa 00 00    	mov    %eax,0xfa28(%rcx)
  413d54:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  413d57:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413d5b:	89 81 2c fa 00 00    	mov    %eax,0xfa2c(%rcx)
  413d61:	8b 45 b0             	mov    -0x50(%rbp),%eax
  413d64:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413d68:	89 81 30 fa 00 00    	mov    %eax,0xfa30(%rcx)
  413d6e:	8b 45 ac             	mov    -0x54(%rbp),%eax
  413d71:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413d75:	89 81 34 fa 00 00    	mov    %eax,0xfa34(%rcx)
  413d7b:	8b 45 a8             	mov    -0x58(%rbp),%eax
  413d7e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413d82:	89 81 38 fa 00 00    	mov    %eax,0xfa38(%rcx)
  413d88:	8b 45 a4             	mov    -0x5c(%rbp),%eax
  413d8b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413d8f:	89 81 3c fa 00 00    	mov    %eax,0xfa3c(%rcx)
  413d95:	8b 45 a0             	mov    -0x60(%rbp),%eax
  413d98:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413d9c:	89 81 40 fa 00 00    	mov    %eax,0xfa40(%rcx)
  413da2:	8b 45 9c             	mov    -0x64(%rbp),%eax
  413da5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413da9:	89 81 44 fa 00 00    	mov    %eax,0xfa44(%rcx)
  413daf:	8b 45 98             	mov    -0x68(%rbp),%eax
  413db2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413db6:	89 81 48 fa 00 00    	mov    %eax,0xfa48(%rcx)
  413dbc:	8b 45 94             	mov    -0x6c(%rbp),%eax
  413dbf:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413dc3:	89 81 4c fa 00 00    	mov    %eax,0xfa4c(%rcx)
  413dc9:	8b 45 90             	mov    -0x70(%rbp),%eax
  413dcc:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413dd0:	89 81 50 fa 00 00    	mov    %eax,0xfa50(%rcx)
  413dd6:	8b 45 8c             	mov    -0x74(%rbp),%eax
  413dd9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413ddd:	89 81 54 fa 00 00    	mov    %eax,0xfa54(%rcx)
  413de3:	8b 45 88             	mov    -0x78(%rbp),%eax
  413de6:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413dea:	89 81 58 fa 00 00    	mov    %eax,0xfa58(%rcx)
  413df0:	8b 45 84             	mov    -0x7c(%rbp),%eax
  413df3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413df7:	89 81 5c fa 00 00    	mov    %eax,0xfa5c(%rcx)
  413dfd:	8b 45 80             	mov    -0x80(%rbp),%eax
  413e00:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413e04:	89 81 60 fa 00 00    	mov    %eax,0xfa60(%rcx)
  413e0a:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  413e10:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413e14:	89 81 64 fa 00 00    	mov    %eax,0xfa64(%rcx)
  413e1a:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
  413e20:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413e24:	89 81 68 fa 00 00    	mov    %eax,0xfa68(%rcx)
  413e2a:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
  413e30:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413e34:	89 81 6c fa 00 00    	mov    %eax,0xfa6c(%rcx)
  413e3a:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
  413e40:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413e44:	89 81 70 fa 00 00    	mov    %eax,0xfa70(%rcx)
  413e4a:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  413e50:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413e54:	89 81 74 fa 00 00    	mov    %eax,0xfa74(%rcx)
  413e5a:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  413e61:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413e65:	48 89 81 78 fa 00 00 	mov    %rax,0xfa78(%rcx)
  413e6c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  413e73:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413e77:	48 89 81 80 fa 00 00 	mov    %rax,0xfa80(%rcx)
  413e7e:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  413e85:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413e89:	48 89 81 88 fa 00 00 	mov    %rax,0xfa88(%rcx)
  413e90:	8b 45 d0             	mov    -0x30(%rbp),%eax
  413e93:	48 81 c4 80 01 00 00 	add    $0x180,%rsp
  413e9a:	5b                   	pop    %rbx
  413e9b:	41 5c                	pop    %r12
  413e9d:	41 5e                	pop    %r14
  413e9f:	41 5f                	pop    %r15
  413ea1:	5d                   	pop    %rbp
  413ea2:	c3                   	retq   
  413ea3:	89 45 bc             	mov    %eax,-0x44(%rbp)
  413ea6:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  413eaa:	48 83 f8 0f          	cmp    $0xf,%rax
  413eae:	0f 8f 20 01 00 00    	jg     413fd4 <BZ2_decompress+0x22c4>
  413eb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413eb8:	48 c7 c1 1c 00 00 00 	mov    $0x1c,%rcx
  413ebf:	89 48 08             	mov    %ecx,0x8(%rax)
  413ec2:	eb 10                	jmp    413ed4 <BZ2_decompress+0x21c4>
  413ec4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413ec8:	48 8b 00             	mov    (%rax),%rax
  413ecb:	8b 48 10             	mov    0x10(%rax),%ecx
  413ece:	48 ff c1             	inc    %rcx
  413ed1:	89 48 10             	mov    %ecx,0x10(%rax)
  413ed4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413ed8:	48 63 40 24          	movslq 0x24(%rax),%rax
  413edc:	48 85 c0             	test   %rax,%rax
  413edf:	0f 8f 83 00 00 00    	jg     413f68 <BZ2_decompress+0x2258>
  413ee5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413ee9:	48 8b 00             	mov    (%rax),%rax
  413eec:	8b 40 08             	mov    0x8(%rax),%eax
  413eef:	48 85 c0             	test   %rax,%rax
  413ef2:	0f 84 2d fe ff ff    	je     413d25 <BZ2_decompress+0x2015>
  413ef8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413efc:	48 8b 08             	mov    (%rax),%rcx
  413eff:	48 8b 09             	mov    (%rcx),%rcx
  413f02:	8b 50 20             	mov    0x20(%rax),%edx
  413f05:	0f b6 31             	movzbl (%rcx),%esi
  413f08:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  413f0f:	48 d3 e2             	shl    %cl,%rdx
  413f12:	48 09 d6             	or     %rdx,%rsi
  413f15:	89 70 20             	mov    %esi,0x20(%rax)
  413f18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413f1c:	8b 48 24             	mov    0x24(%rax),%ecx
  413f1f:	48 83 c1 08          	add    $0x8,%rcx
  413f23:	89 48 24             	mov    %ecx,0x24(%rax)
  413f26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413f2a:	48 8b 00             	mov    (%rax),%rax
  413f2d:	48 ff 00             	incq   (%rax)
  413f30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413f34:	48 8b 00             	mov    (%rax),%rax
  413f37:	8b 48 08             	mov    0x8(%rax),%ecx
  413f3a:	48 ff c9             	dec    %rcx
  413f3d:	89 48 08             	mov    %ecx,0x8(%rax)
  413f40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413f44:	48 8b 00             	mov    (%rax),%rax
  413f47:	8b 48 0c             	mov    0xc(%rax),%ecx
  413f4a:	48 ff c1             	inc    %rcx
  413f4d:	89 48 0c             	mov    %ecx,0xc(%rax)
  413f50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413f54:	48 8b 00             	mov    (%rax),%rax
  413f57:	8b 40 0c             	mov    0xc(%rax),%eax
  413f5a:	48 85 c0             	test   %rax,%rax
  413f5d:	0f 85 71 ff ff ff    	jne    413ed4 <BZ2_decompress+0x21c4>
  413f63:	e9 5c ff ff ff       	jmpq   413ec4 <BZ2_decompress+0x21b4>
  413f68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413f6c:	8b 48 24             	mov    0x24(%rax),%ecx
  413f6f:	8b 40 20             	mov    0x20(%rax),%eax
  413f72:	48 ff c9             	dec    %rcx
  413f75:	4c 21 f1             	and    %r14,%rcx
  413f78:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413f7c:	48 d3 e8             	shr    %cl,%rax
  413f7f:	48 83 e0 01          	and    $0x1,%rax
  413f83:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
  413f89:	8b 42 24             	mov    0x24(%rdx),%eax
  413f8c:	48 ff c8             	dec    %rax
  413f8f:	89 42 24             	mov    %eax,0x24(%rdx)
  413f92:	0f b6 85 04 ff ff ff 	movzbl -0xfc(%rbp),%eax
  413f99:	88 45 d7             	mov    %al,-0x29(%rbp)
  413f9c:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  413fa0:	48 83 f8 01          	cmp    $0x1,%rax
  413fa4:	75 11                	jne    413fb7 <BZ2_decompress+0x22a7>
  413fa6:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  413faa:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413fae:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  413fb5:	eb 0b                	jmp    413fc2 <BZ2_decompress+0x22b2>
  413fb7:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  413fbb:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  413fbf:	48 31 d2             	xor    %rdx,%rdx
  413fc2:	88 94 01 7c 0d 00 00 	mov    %dl,0xd7c(%rcx,%rax,1)
  413fc9:	8b 45 bc             	mov    -0x44(%rbp),%eax
  413fcc:	48 ff c0             	inc    %rax
  413fcf:	e9 cf fe ff ff       	jmpq   413ea3 <BZ2_decompress+0x2193>
  413fd4:	48 31 c0             	xor    %rax,%rax
  413fd7:	89 45 bc             	mov    %eax,-0x44(%rbp)
  413fda:	eb 18                	jmp    413ff4 <BZ2_decompress+0x22e4>
  413fdc:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  413fe0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  413fe4:	88 84 0a 7c 0c 00 00 	mov    %al,0xc7c(%rdx,%rcx,1)
  413feb:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  413fee:	48 ff c1             	inc    %rcx
  413ff1:	89 4d bc             	mov    %ecx,-0x44(%rbp)
  413ff4:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  413ff8:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
  413fff:	7e db                	jle    413fdc <BZ2_decompress+0x22cc>
  414001:	48 31 c0             	xor    %rax,%rax
  414004:	89 45 bc             	mov    %eax,-0x44(%rbp)
  414007:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  41400b:	48 83 f8 0f          	cmp    $0xf,%rax
  41400f:	7f 21                	jg     414032 <BZ2_decompress+0x2322>
  414011:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  414015:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  414019:	0f b6 84 01 7c 0d 00 	movzbl 0xd7c(%rcx,%rax,1),%eax
  414020:	00 
  414021:	48 85 c0             	test   %rax,%rax
  414024:	0f 84 ca 05 00 00    	je     4145f4 <BZ2_decompress+0x28e4>
  41402a:	48 31 c0             	xor    %rax,%rax
  41402d:	e9 7b 04 00 00       	jmpq   4144ad <BZ2_decompress+0x279d>
  414032:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  414036:	e8 d5 23 00 00       	callq  416410 <makeMaps_d>
  41403b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41403f:	8b 80 78 0c 00 00    	mov    0xc78(%rax),%eax
  414045:	48 85 c0             	test   %rax,%rax
  414048:	0f 84 df fc ff ff    	je     413d2d <BZ2_decompress+0x201d>
  41404e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414052:	8b 80 78 0c 00 00    	mov    0xc78(%rax),%eax
  414058:	48 83 c0 02          	add    $0x2,%rax
  41405c:	89 45 b0             	mov    %eax,-0x50(%rbp)
  41405f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414063:	48 c7 c1 1e 00 00 00 	mov    $0x1e,%rcx
  41406a:	89 48 08             	mov    %ecx,0x8(%rax)
  41406d:	eb 10                	jmp    41407f <BZ2_decompress+0x236f>
  41406f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414073:	48 8b 00             	mov    (%rax),%rax
  414076:	8b 48 10             	mov    0x10(%rax),%ecx
  414079:	48 ff c1             	inc    %rcx
  41407c:	89 48 10             	mov    %ecx,0x10(%rax)
  41407f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414083:	48 63 40 24          	movslq 0x24(%rax),%rax
  414087:	48 83 f8 02          	cmp    $0x2,%rax
  41408b:	0f 8f 83 00 00 00    	jg     414114 <BZ2_decompress+0x2404>
  414091:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414095:	48 8b 00             	mov    (%rax),%rax
  414098:	8b 40 08             	mov    0x8(%rax),%eax
  41409b:	48 85 c0             	test   %rax,%rax
  41409e:	0f 84 81 fc ff ff    	je     413d25 <BZ2_decompress+0x2015>
  4140a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4140a8:	48 8b 08             	mov    (%rax),%rcx
  4140ab:	48 8b 09             	mov    (%rcx),%rcx
  4140ae:	8b 50 20             	mov    0x20(%rax),%edx
  4140b1:	0f b6 31             	movzbl (%rcx),%esi
  4140b4:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4140bb:	48 d3 e2             	shl    %cl,%rdx
  4140be:	48 09 d6             	or     %rdx,%rsi
  4140c1:	89 70 20             	mov    %esi,0x20(%rax)
  4140c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4140c8:	8b 48 24             	mov    0x24(%rax),%ecx
  4140cb:	48 83 c1 08          	add    $0x8,%rcx
  4140cf:	89 48 24             	mov    %ecx,0x24(%rax)
  4140d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4140d6:	48 8b 00             	mov    (%rax),%rax
  4140d9:	48 ff 00             	incq   (%rax)
  4140dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4140e0:	48 8b 00             	mov    (%rax),%rax
  4140e3:	8b 48 08             	mov    0x8(%rax),%ecx
  4140e6:	48 ff c9             	dec    %rcx
  4140e9:	89 48 08             	mov    %ecx,0x8(%rax)
  4140ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4140f0:	48 8b 00             	mov    (%rax),%rax
  4140f3:	8b 48 0c             	mov    0xc(%rax),%ecx
  4140f6:	48 ff c1             	inc    %rcx
  4140f9:	89 48 0c             	mov    %ecx,0xc(%rax)
  4140fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414100:	48 8b 00             	mov    (%rax),%rax
  414103:	8b 40 0c             	mov    0xc(%rax),%eax
  414106:	48 85 c0             	test   %rax,%rax
  414109:	0f 85 70 ff ff ff    	jne    41407f <BZ2_decompress+0x236f>
  41410f:	e9 5b ff ff ff       	jmpq   41406f <BZ2_decompress+0x235f>
  414114:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414118:	8b 48 24             	mov    0x24(%rax),%ecx
  41411b:	8b 40 20             	mov    0x20(%rax),%eax
  41411e:	48 83 c1 fd          	add    $0xfffffffffffffffd,%rcx
  414122:	4c 21 f1             	and    %r14,%rcx
  414125:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  414129:	48 d3 e8             	shr    %cl,%rax
  41412c:	48 83 e0 07          	and    $0x7,%rax
  414130:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
  414136:	8b 42 24             	mov    0x24(%rdx),%eax
  414139:	48 83 c0 fd          	add    $0xfffffffffffffffd,%rax
  41413d:	89 42 24             	mov    %eax,0x24(%rdx)
  414140:	48 63 85 fc fe ff ff 	movslq -0x104(%rbp),%rax
  414147:	48 83 f8 02          	cmp    $0x2,%rax
  41414b:	89 45 ac             	mov    %eax,-0x54(%rbp)
  41414e:	0f 8c d9 fb ff ff    	jl     413d2d <BZ2_decompress+0x201d>
  414154:	48 63 45 ac          	movslq -0x54(%rbp),%rax
  414158:	48 83 f8 07          	cmp    $0x7,%rax
  41415c:	0f 8d cb fb ff ff    	jge    413d2d <BZ2_decompress+0x201d>
  414162:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414166:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41416d:	89 48 08             	mov    %ecx,0x8(%rax)
  414170:	eb 10                	jmp    414182 <BZ2_decompress+0x2472>
  414172:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414176:	48 8b 00             	mov    (%rax),%rax
  414179:	8b 48 10             	mov    0x10(%rax),%ecx
  41417c:	48 ff c1             	inc    %rcx
  41417f:	89 48 10             	mov    %ecx,0x10(%rax)
  414182:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414186:	48 63 40 24          	movslq 0x24(%rax),%rax
  41418a:	48 83 f8 0e          	cmp    $0xe,%rax
  41418e:	0f 8f 83 00 00 00    	jg     414217 <BZ2_decompress+0x2507>
  414194:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414198:	48 8b 00             	mov    (%rax),%rax
  41419b:	8b 40 08             	mov    0x8(%rax),%eax
  41419e:	48 85 c0             	test   %rax,%rax
  4141a1:	0f 84 7e fb ff ff    	je     413d25 <BZ2_decompress+0x2015>
  4141a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4141ab:	48 8b 08             	mov    (%rax),%rcx
  4141ae:	48 8b 09             	mov    (%rcx),%rcx
  4141b1:	8b 50 20             	mov    0x20(%rax),%edx
  4141b4:	0f b6 31             	movzbl (%rcx),%esi
  4141b7:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4141be:	48 d3 e2             	shl    %cl,%rdx
  4141c1:	48 09 d6             	or     %rdx,%rsi
  4141c4:	89 70 20             	mov    %esi,0x20(%rax)
  4141c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4141cb:	8b 48 24             	mov    0x24(%rax),%ecx
  4141ce:	48 83 c1 08          	add    $0x8,%rcx
  4141d2:	89 48 24             	mov    %ecx,0x24(%rax)
  4141d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4141d9:	48 8b 00             	mov    (%rax),%rax
  4141dc:	48 ff 00             	incq   (%rax)
  4141df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4141e3:	48 8b 00             	mov    (%rax),%rax
  4141e6:	8b 48 08             	mov    0x8(%rax),%ecx
  4141e9:	48 ff c9             	dec    %rcx
  4141ec:	89 48 08             	mov    %ecx,0x8(%rax)
  4141ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4141f3:	48 8b 00             	mov    (%rax),%rax
  4141f6:	8b 48 0c             	mov    0xc(%rax),%ecx
  4141f9:	48 ff c1             	inc    %rcx
  4141fc:	89 48 0c             	mov    %ecx,0xc(%rax)
  4141ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414203:	48 8b 00             	mov    (%rax),%rax
  414206:	8b 40 0c             	mov    0xc(%rax),%eax
  414209:	48 85 c0             	test   %rax,%rax
  41420c:	0f 85 70 ff ff ff    	jne    414182 <BZ2_decompress+0x2472>
  414212:	e9 5b ff ff ff       	jmpq   414172 <BZ2_decompress+0x2462>
  414217:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41421b:	8b 48 24             	mov    0x24(%rax),%ecx
  41421e:	8b 40 20             	mov    0x20(%rax),%eax
  414221:	48 83 c1 f1          	add    $0xfffffffffffffff1,%rcx
  414225:	4c 21 f1             	and    %r14,%rcx
  414228:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41422c:	48 d3 e8             	shr    %cl,%rax
  41422f:	48 25 ff 7f 00 00    	and    $0x7fff,%rax
  414235:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%rbp)
  41423b:	8b 42 24             	mov    0x24(%rdx),%eax
  41423e:	48 83 c0 f1          	add    $0xfffffffffffffff1,%rax
  414242:	89 42 24             	mov    %eax,0x24(%rdx)
  414245:	48 63 85 f8 fe ff ff 	movslq -0x108(%rbp),%rax
  41424c:	48 85 c0             	test   %rax,%rax
  41424f:	89 45 a8             	mov    %eax,-0x58(%rbp)
  414252:	0f 8e d5 fa ff ff    	jle    413d2d <BZ2_decompress+0x201d>
  414258:	48 31 c0             	xor    %rax,%rax
  41425b:	89 45 bc             	mov    %eax,-0x44(%rbp)
  41425e:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  414262:	48 63 4d a8          	movslq -0x58(%rbp),%rcx
  414266:	48 39 c8             	cmp    %rcx,%rax
  414269:	0f 8d 34 01 00 00    	jge    4143a3 <BZ2_decompress+0x2693>
  41426f:	48 31 c0             	xor    %rax,%rax
  414272:	89 45 b8             	mov    %eax,-0x48(%rbp)
  414275:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414279:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  414280:	89 48 08             	mov    %ecx,0x8(%rax)
  414283:	eb 1b                	jmp    4142a0 <BZ2_decompress+0x2590>
  414285:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  41428c:	00 00 00 00 
  414290:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414294:	48 8b 00             	mov    (%rax),%rax
  414297:	8b 48 10             	mov    0x10(%rax),%ecx
  41429a:	48 ff c1             	inc    %rcx
  41429d:	89 48 10             	mov    %ecx,0x10(%rax)
  4142a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4142a4:	48 63 40 24          	movslq 0x24(%rax),%rax
  4142a8:	48 85 c0             	test   %rax,%rax
  4142ab:	0f 8f 83 00 00 00    	jg     414334 <BZ2_decompress+0x2624>
  4142b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4142b5:	48 8b 00             	mov    (%rax),%rax
  4142b8:	8b 40 08             	mov    0x8(%rax),%eax
  4142bb:	48 85 c0             	test   %rax,%rax
  4142be:	0f 84 61 fa ff ff    	je     413d25 <BZ2_decompress+0x2015>
  4142c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4142c8:	48 8b 08             	mov    (%rax),%rcx
  4142cb:	48 8b 09             	mov    (%rcx),%rcx
  4142ce:	8b 50 20             	mov    0x20(%rax),%edx
  4142d1:	0f b6 31             	movzbl (%rcx),%esi
  4142d4:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4142db:	48 d3 e2             	shl    %cl,%rdx
  4142de:	48 09 d6             	or     %rdx,%rsi
  4142e1:	89 70 20             	mov    %esi,0x20(%rax)
  4142e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4142e8:	8b 48 24             	mov    0x24(%rax),%ecx
  4142eb:	48 83 c1 08          	add    $0x8,%rcx
  4142ef:	89 48 24             	mov    %ecx,0x24(%rax)
  4142f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4142f6:	48 8b 00             	mov    (%rax),%rax
  4142f9:	48 ff 00             	incq   (%rax)
  4142fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414300:	48 8b 00             	mov    (%rax),%rax
  414303:	8b 48 08             	mov    0x8(%rax),%ecx
  414306:	48 ff c9             	dec    %rcx
  414309:	89 48 08             	mov    %ecx,0x8(%rax)
  41430c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414310:	48 8b 00             	mov    (%rax),%rax
  414313:	8b 48 0c             	mov    0xc(%rax),%ecx
  414316:	48 ff c1             	inc    %rcx
  414319:	89 48 0c             	mov    %ecx,0xc(%rax)
  41431c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414320:	48 8b 00             	mov    (%rax),%rax
  414323:	8b 40 0c             	mov    0xc(%rax),%eax
  414326:	48 85 c0             	test   %rax,%rax
  414329:	0f 85 71 ff ff ff    	jne    4142a0 <BZ2_decompress+0x2590>
  41432f:	e9 5c ff ff ff       	jmpq   414290 <BZ2_decompress+0x2580>
  414334:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414338:	8b 48 24             	mov    0x24(%rax),%ecx
  41433b:	8b 40 20             	mov    0x20(%rax),%eax
  41433e:	48 ff c9             	dec    %rcx
  414341:	4c 21 f1             	and    %r14,%rcx
  414344:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  414348:	48 d3 e8             	shr    %cl,%rax
  41434b:	48 83 e0 01          	and    $0x1,%rax
  41434f:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%rbp)
  414355:	8b 42 24             	mov    0x24(%rdx),%eax
  414358:	48 ff c8             	dec    %rax
  41435b:	89 42 24             	mov    %eax,0x24(%rdx)
  41435e:	0f b6 85 f4 fe ff ff 	movzbl -0x10c(%rbp),%eax
  414365:	48 85 c0             	test   %rax,%rax
  414368:	88 45 d7             	mov    %al,-0x29(%rbp)
  41436b:	0f 84 1e 01 00 00    	je     41448f <BZ2_decompress+0x277f>
  414371:	8b 45 b8             	mov    -0x48(%rbp),%eax
  414374:	48 ff c0             	inc    %rax
  414377:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41437e:	48 89 c2             	mov    %rax,%rdx
  414381:	48 d3 e2             	shl    %cl,%rdx
  414384:	48 63 75 ac          	movslq -0x54(%rbp),%rsi
  414388:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41438f:	48 d3 fa             	sar    %cl,%rdx
  414392:	89 45 b8             	mov    %eax,-0x48(%rbp)
  414395:	48 39 f2             	cmp    %rsi,%rdx
  414398:	0f 8c d7 fe ff ff    	jl     414275 <BZ2_decompress+0x2565>
  41439e:	e9 8a f9 ff ff       	jmpq   413d2d <BZ2_decompress+0x201d>
  4143a3:	48 31 c0             	xor    %rax,%rax
  4143a6:	eb 18                	jmp    4143c0 <BZ2_decompress+0x26b0>
  4143a8:	0f b6 85 ec fe ff ff 	movzbl -0x114(%rbp),%eax
  4143af:	0f b6 8d ec fe ff ff 	movzbl -0x114(%rbp),%ecx
  4143b6:	88 8c 0d ee fe ff ff 	mov    %cl,-0x112(%rbp,%rcx,1)
  4143bd:	48 ff c0             	inc    %rax
  4143c0:	88 85 ec fe ff ff    	mov    %al,-0x114(%rbp)
  4143c6:	0f b6 85 ec fe ff ff 	movzbl -0x114(%rbp),%eax
  4143cd:	48 63 4d ac          	movslq -0x54(%rbp),%rcx
  4143d1:	48 39 c8             	cmp    %rcx,%rax
  4143d4:	7c d2                	jl     4143a8 <BZ2_decompress+0x2698>
  4143d6:	48 31 c0             	xor    %rax,%rax
  4143d9:	eb 29                	jmp    414404 <BZ2_decompress+0x26f4>
  4143db:	0f b6 85 ed fe ff ff 	movzbl -0x113(%rbp),%eax
  4143e2:	0f b6 8d ed fe ff ff 	movzbl -0x113(%rbp),%ecx
  4143e9:	48 63 55 bc          	movslq -0x44(%rbp),%rdx
  4143ed:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  4143f1:	88 85 ee fe ff ff    	mov    %al,-0x112(%rbp)
  4143f7:	88 8c 16 cc 1e 00 00 	mov    %cl,0x1ecc(%rsi,%rdx,1)
  4143fe:	8b 45 bc             	mov    -0x44(%rbp),%eax
  414401:	48 ff c0             	inc    %rax
  414404:	89 45 bc             	mov    %eax,-0x44(%rbp)
  414407:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  41440b:	48 63 4d a8          	movslq -0x58(%rbp),%rcx
  41440f:	48 39 c8             	cmp    %rcx,%rax
  414412:	7d 73                	jge    414487 <BZ2_decompress+0x2777>
  414414:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  414418:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41441c:	0f b6 84 01 1e 65 00 	movzbl 0x651e(%rcx,%rax,1),%eax
  414423:	00 
  414424:	88 85 ec fe ff ff    	mov    %al,-0x114(%rbp)
  41442a:	0f b6 85 ec fe ff ff 	movzbl -0x114(%rbp),%eax
  414431:	0f b6 84 05 ee fe ff 	movzbl -0x112(%rbp,%rax,1),%eax
  414438:	ff 
  414439:	88 85 ed fe ff ff    	mov    %al,-0x113(%rbp)
  41443f:	eb 35                	jmp    414476 <BZ2_decompress+0x2766>
  414441:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  414448:	0f 1f 84 00 00 00 00 
  41444f:	00 
  414450:	0f b6 85 ec fe ff ff 	movzbl -0x114(%rbp),%eax
  414457:	0f b6 8d ec fe ff ff 	movzbl -0x114(%rbp),%ecx
  41445e:	0f b6 94 05 ed fe ff 	movzbl -0x113(%rbp,%rax,1),%edx
  414465:	ff 
  414466:	88 94 05 ee fe ff ff 	mov    %dl,-0x112(%rbp,%rax,1)
  41446d:	48 ff c9             	dec    %rcx
  414470:	88 8d ec fe ff ff    	mov    %cl,-0x114(%rbp)
  414476:	0f b6 85 ec fe ff ff 	movzbl -0x114(%rbp),%eax
  41447d:	48 85 c0             	test   %rax,%rax
  414480:	7f ce                	jg     414450 <BZ2_decompress+0x2740>
  414482:	e9 54 ff ff ff       	jmpq   4143db <BZ2_decompress+0x26cb>
  414487:	48 31 c0             	xor    %rax,%rax
  41448a:	e9 70 01 00 00       	jmpq   4145ff <BZ2_decompress+0x28ef>
  41448f:	0f b6 45 b8          	movzbl -0x48(%rbp),%eax
  414493:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  414497:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41449b:	88 84 0a 1e 65 00 00 	mov    %al,0x651e(%rdx,%rcx,1)
  4144a2:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4144a5:	48 ff c0             	inc    %rax
  4144a8:	e9 ae fd ff ff       	jmpq   41425b <BZ2_decompress+0x254b>
  4144ad:	89 45 b8             	mov    %eax,-0x48(%rbp)
  4144b0:	48 63 45 b8          	movslq -0x48(%rbp),%rax
  4144b4:	48 83 f8 0f          	cmp    $0xf,%rax
  4144b8:	0f 8f 36 01 00 00    	jg     4145f4 <BZ2_decompress+0x28e4>
  4144be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4144c2:	48 c7 c1 1d 00 00 00 	mov    $0x1d,%rcx
  4144c9:	89 48 08             	mov    %ecx,0x8(%rax)
  4144cc:	eb 10                	jmp    4144de <BZ2_decompress+0x27ce>
  4144ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4144d2:	48 8b 00             	mov    (%rax),%rax
  4144d5:	8b 48 10             	mov    0x10(%rax),%ecx
  4144d8:	48 ff c1             	inc    %rcx
  4144db:	89 48 10             	mov    %ecx,0x10(%rax)
  4144de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4144e2:	48 63 40 24          	movslq 0x24(%rax),%rax
  4144e6:	48 85 c0             	test   %rax,%rax
  4144e9:	0f 8f 83 00 00 00    	jg     414572 <BZ2_decompress+0x2862>
  4144ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4144f3:	48 8b 00             	mov    (%rax),%rax
  4144f6:	8b 40 08             	mov    0x8(%rax),%eax
  4144f9:	48 85 c0             	test   %rax,%rax
  4144fc:	0f 84 23 f8 ff ff    	je     413d25 <BZ2_decompress+0x2015>
  414502:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414506:	48 8b 08             	mov    (%rax),%rcx
  414509:	48 8b 09             	mov    (%rcx),%rcx
  41450c:	8b 50 20             	mov    0x20(%rax),%edx
  41450f:	0f b6 31             	movzbl (%rcx),%esi
  414512:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  414519:	48 d3 e2             	shl    %cl,%rdx
  41451c:	48 09 d6             	or     %rdx,%rsi
  41451f:	89 70 20             	mov    %esi,0x20(%rax)
  414522:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414526:	8b 48 24             	mov    0x24(%rax),%ecx
  414529:	48 83 c1 08          	add    $0x8,%rcx
  41452d:	89 48 24             	mov    %ecx,0x24(%rax)
  414530:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414534:	48 8b 00             	mov    (%rax),%rax
  414537:	48 ff 00             	incq   (%rax)
  41453a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41453e:	48 8b 00             	mov    (%rax),%rax
  414541:	8b 48 08             	mov    0x8(%rax),%ecx
  414544:	48 ff c9             	dec    %rcx
  414547:	89 48 08             	mov    %ecx,0x8(%rax)
  41454a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41454e:	48 8b 00             	mov    (%rax),%rax
  414551:	8b 48 0c             	mov    0xc(%rax),%ecx
  414554:	48 ff c1             	inc    %rcx
  414557:	89 48 0c             	mov    %ecx,0xc(%rax)
  41455a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41455e:	48 8b 00             	mov    (%rax),%rax
  414561:	8b 40 0c             	mov    0xc(%rax),%eax
  414564:	48 85 c0             	test   %rax,%rax
  414567:	0f 85 71 ff ff ff    	jne    4144de <BZ2_decompress+0x27ce>
  41456d:	e9 5c ff ff ff       	jmpq   4144ce <BZ2_decompress+0x27be>
  414572:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414576:	8b 48 24             	mov    0x24(%rax),%ecx
  414579:	8b 40 20             	mov    0x20(%rax),%eax
  41457c:	48 ff c9             	dec    %rcx
  41457f:	4c 21 f1             	and    %r14,%rcx
  414582:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  414586:	48 d3 e8             	shr    %cl,%rax
  414589:	48 83 e0 01          	and    $0x1,%rax
  41458d:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
  414593:	8b 42 24             	mov    0x24(%rdx),%eax
  414596:	48 ff c8             	dec    %rax
  414599:	89 42 24             	mov    %eax,0x24(%rdx)
  41459c:	0f b6 85 00 ff ff ff 	movzbl -0x100(%rbp),%eax
  4145a3:	88 45 d7             	mov    %al,-0x29(%rbp)
  4145a6:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  4145aa:	48 83 f8 01          	cmp    $0x1,%rax
  4145ae:	75 39                	jne    4145e9 <BZ2_decompress+0x28d9>
  4145b0:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4145b3:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  4145ba:	48 d3 e0             	shl    %cl,%rax
  4145bd:	8b 55 b8             	mov    -0x48(%rbp),%edx
  4145c0:	48 01 c2             	add    %rax,%rdx
  4145c3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4145ca:	48 d3 e2             	shl    %cl,%rdx
  4145cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4145d1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4145d8:	48 d3 fa             	sar    %cl,%rdx
  4145db:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  4145e2:	88 8c 10 7c 0c 00 00 	mov    %cl,0xc7c(%rax,%rdx,1)
  4145e9:	8b 45 b8             	mov    -0x48(%rbp),%eax
  4145ec:	48 ff c0             	inc    %rax
  4145ef:	e9 b9 fe ff ff       	jmpq   4144ad <BZ2_decompress+0x279d>
  4145f4:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4145f7:	48 ff c0             	inc    %rax
  4145fa:	e9 05 fa ff ff       	jmpq   414004 <BZ2_decompress+0x22f4>
  4145ff:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  414602:	48 63 45 b4          	movslq -0x4c(%rbp),%rax
  414606:	48 63 4d ac          	movslq -0x54(%rbp),%rcx
  41460a:	48 39 c8             	cmp    %rcx,%rax
  41460d:	0f 8d f2 00 00 00    	jge    414705 <BZ2_decompress+0x29f5>
  414613:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414617:	48 c7 c1 21 00 00 00 	mov    $0x21,%rcx
  41461e:	89 48 08             	mov    %ecx,0x8(%rax)
  414621:	eb 10                	jmp    414633 <BZ2_decompress+0x2923>
  414623:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414627:	48 8b 00             	mov    (%rax),%rax
  41462a:	8b 48 10             	mov    0x10(%rax),%ecx
  41462d:	48 ff c1             	inc    %rcx
  414630:	89 48 10             	mov    %ecx,0x10(%rax)
  414633:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414637:	48 63 40 24          	movslq 0x24(%rax),%rax
  41463b:	48 83 f8 04          	cmp    $0x4,%rax
  41463f:	0f 8f 83 00 00 00    	jg     4146c8 <BZ2_decompress+0x29b8>
  414645:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414649:	48 8b 00             	mov    (%rax),%rax
  41464c:	8b 40 08             	mov    0x8(%rax),%eax
  41464f:	48 85 c0             	test   %rax,%rax
  414652:	0f 84 cd f6 ff ff    	je     413d25 <BZ2_decompress+0x2015>
  414658:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41465c:	48 8b 08             	mov    (%rax),%rcx
  41465f:	48 8b 09             	mov    (%rcx),%rcx
  414662:	8b 50 20             	mov    0x20(%rax),%edx
  414665:	0f b6 31             	movzbl (%rcx),%esi
  414668:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41466f:	48 d3 e2             	shl    %cl,%rdx
  414672:	48 09 d6             	or     %rdx,%rsi
  414675:	89 70 20             	mov    %esi,0x20(%rax)
  414678:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41467c:	8b 48 24             	mov    0x24(%rax),%ecx
  41467f:	48 83 c1 08          	add    $0x8,%rcx
  414683:	89 48 24             	mov    %ecx,0x24(%rax)
  414686:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41468a:	48 8b 00             	mov    (%rax),%rax
  41468d:	48 ff 00             	incq   (%rax)
  414690:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414694:	48 8b 00             	mov    (%rax),%rax
  414697:	8b 48 08             	mov    0x8(%rax),%ecx
  41469a:	48 ff c9             	dec    %rcx
  41469d:	89 48 08             	mov    %ecx,0x8(%rax)
  4146a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4146a4:	48 8b 00             	mov    (%rax),%rax
  4146a7:	8b 48 0c             	mov    0xc(%rax),%ecx
  4146aa:	48 ff c1             	inc    %rcx
  4146ad:	89 48 0c             	mov    %ecx,0xc(%rax)
  4146b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4146b4:	48 8b 00             	mov    (%rax),%rax
  4146b7:	8b 40 0c             	mov    0xc(%rax),%eax
  4146ba:	48 85 c0             	test   %rax,%rax
  4146bd:	0f 85 70 ff ff ff    	jne    414633 <BZ2_decompress+0x2923>
  4146c3:	e9 5b ff ff ff       	jmpq   414623 <BZ2_decompress+0x2913>
  4146c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4146cc:	8b 48 24             	mov    0x24(%rax),%ecx
  4146cf:	8b 40 20             	mov    0x20(%rax),%eax
  4146d2:	48 83 c1 fb          	add    $0xfffffffffffffffb,%rcx
  4146d6:	4c 21 f1             	and    %r14,%rcx
  4146d9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4146dd:	48 d3 e8             	shr    %cl,%rax
  4146e0:	48 83 e0 1f          	and    $0x1f,%rax
  4146e4:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%rbp)
  4146ea:	8b 42 24             	mov    0x24(%rdx),%eax
  4146ed:	48 83 c0 fb          	add    $0xfffffffffffffffb,%rax
  4146f1:	89 42 24             	mov    %eax,0x24(%rdx)
  4146f4:	8b 85 e8 fe ff ff    	mov    -0x118(%rbp),%eax
  4146fa:	89 45 84             	mov    %eax,-0x7c(%rbp)
  4146fd:	48 31 c0             	xor    %rax,%rax
  414700:	e9 50 04 00 00       	jmpq   414b55 <BZ2_decompress+0x2e45>
  414705:	4d 31 e4             	xor    %r12,%r12
  414708:	44 89 65 b4          	mov    %r12d,-0x4c(%rbp)
  41470c:	49 c7 c7 20 00 00 00 	mov    $0x20,%r15
  414713:	eb 65                	jmp    41477a <BZ2_decompress+0x2a6a>
  414715:	48 63 45 b4          	movslq -0x4c(%rbp),%rax
  414719:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41471d:	48 69 d0 08 04 00 00 	imul   $0x408,%rax,%rdx
  414724:	48 8d bc 11 7c b1 00 	lea    0xb17c(%rcx,%rdx,1),%rdi
  41472b:	00 
  41472c:	48 8d b4 11 ac c9 00 	lea    0xc9ac(%rcx,%rdx,1),%rsi
  414733:	00 
  414734:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
  414738:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
  41473c:	8b 5d b0             	mov    -0x50(%rbp),%ebx
  41473f:	48 8d 94 11 dc e1 00 	lea    0xe1dc(%rcx,%rdx,1),%rdx
  414746:	00 
  414747:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  41474e:	48 8d 8c 01 70 ab 00 	lea    0xab70(%rcx,%rax,1),%rcx
  414755:	00 
  414756:	48 89 1c 24          	mov    %rbx,(%rsp)
  41475a:	e8 11 25 00 00       	callq  416c70 <BZ2_hbCreateDecodeTables>
  41475f:	8b 45 cc             	mov    -0x34(%rbp),%eax
  414762:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  414766:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41476a:	89 84 8a 0c fa 00 00 	mov    %eax,0xfa0c(%rdx,%rcx,4)
  414771:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  414774:	48 ff c0             	inc    %rax
  414777:	89 45 b4             	mov    %eax,-0x4c(%rbp)
  41477a:	48 63 45 b4          	movslq -0x4c(%rbp),%rax
  41477e:	48 63 4d ac          	movslq -0x54(%rbp),%rcx
  414782:	48 39 c8             	cmp    %rcx,%rax
  414785:	0f 8d c8 00 00 00    	jge    414853 <BZ2_decompress+0x2b43>
  41478b:	44 89 7d cc          	mov    %r15d,-0x34(%rbp)
  41478f:	44 89 65 c8          	mov    %r12d,-0x38(%rbp)
  414793:	44 89 65 bc          	mov    %r12d,-0x44(%rbp)
  414797:	eb 10                	jmp    4147a9 <BZ2_decompress+0x2a99>
  414799:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4147a0:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4147a3:	48 ff c0             	inc    %rax
  4147a6:	89 45 bc             	mov    %eax,-0x44(%rbp)
  4147a9:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  4147ad:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  4147b1:	48 39 c8             	cmp    %rcx,%rax
  4147b4:	0f 8d 5b ff ff ff    	jge    414715 <BZ2_decompress+0x2a05>
  4147ba:	48 63 45 b4          	movslq -0x4c(%rbp),%rax
  4147be:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4147c2:	48 63 55 bc          	movslq -0x44(%rbp),%rdx
  4147c6:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  4147cd:	48 01 c8             	add    %rcx,%rax
  4147d0:	0f b6 84 02 70 ab 00 	movzbl 0xab70(%rdx,%rax,1),%eax
  4147d7:	00 
  4147d8:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  4147dc:	48 39 c8             	cmp    %rcx,%rax
  4147df:	7e 21                	jle    414802 <BZ2_decompress+0x2af2>
  4147e1:	48 63 45 b4          	movslq -0x4c(%rbp),%rax
  4147e5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4147e9:	48 63 55 bc          	movslq -0x44(%rbp),%rdx
  4147ed:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  4147f4:	48 01 c8             	add    %rcx,%rax
  4147f7:	0f b6 84 02 70 ab 00 	movzbl 0xab70(%rdx,%rax,1),%eax
  4147fe:	00 
  4147ff:	89 45 c8             	mov    %eax,-0x38(%rbp)
  414802:	48 63 45 b4          	movslq -0x4c(%rbp),%rax
  414806:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41480a:	48 63 55 bc          	movslq -0x44(%rbp),%rdx
  41480e:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  414815:	48 01 c8             	add    %rcx,%rax
  414818:	0f b6 84 02 70 ab 00 	movzbl 0xab70(%rdx,%rax,1),%eax
  41481f:	00 
  414820:	48 63 4d cc          	movslq -0x34(%rbp),%rcx
  414824:	48 39 c8             	cmp    %rcx,%rax
  414827:	0f 8d 73 ff ff ff    	jge    4147a0 <BZ2_decompress+0x2a90>
  41482d:	48 63 45 b4          	movslq -0x4c(%rbp),%rax
  414831:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  414835:	48 63 55 bc          	movslq -0x44(%rbp),%rdx
  414839:	48 69 c0 02 01 00 00 	imul   $0x102,%rax,%rax
  414840:	48 01 c8             	add    %rcx,%rax
  414843:	0f b6 84 02 70 ab 00 	movzbl 0xab70(%rdx,%rax,1),%eax
  41484a:	00 
  41484b:	89 45 cc             	mov    %eax,-0x34(%rbp)
  41484e:	e9 4d ff ff ff       	jmpq   4147a0 <BZ2_decompress+0x2a90>
  414853:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414857:	8b 80 78 0c 00 00    	mov    0xc78(%rax),%eax
  41485d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  414861:	48 ff c0             	inc    %rax
  414864:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  414867:	8b 41 28             	mov    0x28(%rcx),%eax
  41486a:	48 69 c0 a0 86 01 00 	imul   $0x186a0,%rax,%rax
  414871:	89 45 94             	mov    %eax,-0x6c(%rbp)
  414874:	44 89 75 a0          	mov    %r14d,-0x60(%rbp)
  414878:	48 31 c0             	xor    %rax,%rax
  41487b:	89 45 9c             	mov    %eax,-0x64(%rbp)
  41487e:	89 45 bc             	mov    %eax,-0x44(%rbp)
  414881:	eb 15                	jmp    414898 <BZ2_decompress+0x2b88>
  414883:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  414887:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41488b:	89 44 8a 44          	mov    %eax,0x44(%rdx,%rcx,4)
  41488f:	8b 4d bc             	mov    -0x44(%rbp),%ecx
  414892:	48 ff c1             	inc    %rcx
  414895:	89 4d bc             	mov    %ecx,-0x44(%rbp)
  414898:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  41489c:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
  4148a3:	7e de                	jle    414883 <BZ2_decompress+0x2b73>
  4148a5:	48 c7 c0 ff 0f 00 00 	mov    $0xfff,%rax
  4148ac:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
  4148b2:	48 c7 c0 0f 00 00 00 	mov    $0xf,%rax
  4148b9:	89 85 dc fe ff ff    	mov    %eax,-0x124(%rbp)
  4148bf:	eb 2a                	jmp    4148eb <BZ2_decompress+0x2bdb>
  4148c1:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  4148c7:	48 63 95 dc fe ff ff 	movslq -0x124(%rbp),%rdx
  4148ce:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  4148d2:	48 ff c1             	inc    %rcx
  4148d5:	89 8c 96 8c 1e 00 00 	mov    %ecx,0x1e8c(%rsi,%rdx,4)
  4148dc:	8b 8d dc fe ff ff    	mov    -0x124(%rbp),%ecx
  4148e2:	48 ff c9             	dec    %rcx
  4148e5:	89 8d dc fe ff ff    	mov    %ecx,-0x124(%rbp)
  4148eb:	48 63 8d dc fe ff ff 	movslq -0x124(%rbp),%rcx
  4148f2:	48 85 c9             	test   %rcx,%rcx
  4148f5:	78 64                	js     41495b <BZ2_decompress+0x2c4b>
  4148f7:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
  4148fd:	eb 4b                	jmp    41494a <BZ2_decompress+0x2c3a>
  4148ff:	90                   	nop
  414900:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  414906:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  41490d:	8b b5 d8 fe ff ff    	mov    -0x128(%rbp),%esi
  414913:	48 63 bd d4 fe ff ff 	movslq -0x12c(%rbp),%rdi
  41491a:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
  41491e:	48 d3 e2             	shl    %cl,%rdx
  414921:	48 01 d6             	add    %rdx,%rsi
  414924:	40 88 b4 3b 8c 0e 00 	mov    %sil,0xe8c(%rbx,%rdi,1)
  41492b:	00 
  41492c:	8b 8d d4 fe ff ff    	mov    -0x12c(%rbp),%ecx
  414932:	8b 95 d8 fe ff ff    	mov    -0x128(%rbp),%edx
  414938:	48 ff c9             	dec    %rcx
  41493b:	89 8d d4 fe ff ff    	mov    %ecx,-0x12c(%rbp)
  414941:	48 ff ca             	dec    %rdx
  414944:	89 95 d8 fe ff ff    	mov    %edx,-0x128(%rbp)
  41494a:	48 63 8d d8 fe ff ff 	movslq -0x128(%rbp),%rcx
  414951:	48 85 c9             	test   %rcx,%rcx
  414954:	79 aa                	jns    414900 <BZ2_decompress+0x2bf0>
  414956:	e9 66 ff ff ff       	jmpq   4148c1 <BZ2_decompress+0x2bb1>
  41495b:	8b 45 9c             	mov    -0x64(%rbp),%eax
  41495e:	48 31 c9             	xor    %rcx,%rcx
  414961:	89 4d 90             	mov    %ecx,-0x70(%rbp)
  414964:	48 85 c0             	test   %rax,%rax
  414967:	0f 85 c8 00 00 00    	jne    414a35 <BZ2_decompress+0x2d25>
  41496d:	8b 45 a0             	mov    -0x60(%rbp),%eax
  414970:	48 ff c0             	inc    %rax
  414973:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41497a:	48 89 c2             	mov    %rax,%rdx
  41497d:	48 d3 e2             	shl    %cl,%rdx
  414980:	48 63 75 a8          	movslq -0x58(%rbp),%rsi
  414984:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41498b:	48 d3 fa             	sar    %cl,%rdx
  41498e:	89 45 a0             	mov    %eax,-0x60(%rbp)
  414991:	48 39 f2             	cmp    %rsi,%rdx
  414994:	0f 8d 93 f3 ff ff    	jge    413d2d <BZ2_decompress+0x201d>
  41499a:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  41499e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4149a2:	48 c7 c2 32 00 00 00 	mov    $0x32,%rdx
  4149a9:	89 55 9c             	mov    %edx,-0x64(%rbp)
  4149ac:	0f b6 84 01 cc 1e 00 	movzbl 0x1ecc(%rcx,%rax,1),%eax
  4149b3:	00 
  4149b4:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  4149ba:	48 63 85 70 ff ff ff 	movslq -0x90(%rbp),%rax
  4149c1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4149c5:	8b 84 81 0c fa 00 00 	mov    0xfa0c(%rcx,%rax,4),%eax
  4149cc:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  4149d2:	48 63 85 70 ff ff ff 	movslq -0x90(%rbp),%rax
  4149d9:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4149dd:	48 69 c0 08 04 00 00 	imul   $0x408,%rax,%rax
  4149e4:	48 8d 84 01 7c b1 00 	lea    0xb17c(%rcx,%rax,1),%rax
  4149eb:	00 
  4149ec:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  4149f3:	48 63 85 70 ff ff ff 	movslq -0x90(%rbp),%rax
  4149fa:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4149fe:	48 69 c0 08 04 00 00 	imul   $0x408,%rax,%rax
  414a05:	48 63 95 70 ff ff ff 	movslq -0x90(%rbp),%rdx
  414a0c:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  414a10:	48 8d 84 01 dc e1 00 	lea    0xe1dc(%rcx,%rax,1),%rax
  414a17:	00 
  414a18:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  414a1f:	48 69 c2 08 04 00 00 	imul   $0x408,%rdx,%rax
  414a26:	48 8d 84 06 ac c9 00 	lea    0xc9ac(%rsi,%rax,1),%rax
  414a2d:	00 
  414a2e:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  414a35:	8b 45 9c             	mov    -0x64(%rbp),%eax
  414a38:	8b 8d 6c ff ff ff    	mov    -0x94(%rbp),%ecx
  414a3e:	48 ff c8             	dec    %rax
  414a41:	89 45 9c             	mov    %eax,-0x64(%rbp)
  414a44:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
  414a4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414a4e:	48 c7 c1 24 00 00 00 	mov    $0x24,%rcx
  414a55:	89 48 08             	mov    %ecx,0x8(%rax)
  414a58:	eb 10                	jmp    414a6a <BZ2_decompress+0x2d5a>
  414a5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414a5e:	48 8b 00             	mov    (%rax),%rax
  414a61:	8b 48 10             	mov    0x10(%rax),%ecx
  414a64:	48 ff c1             	inc    %rcx
  414a67:	89 48 10             	mov    %ecx,0x10(%rax)
  414a6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414a6e:	48 63 40 24          	movslq 0x24(%rax),%rax
  414a72:	48 63 8d 7c ff ff ff 	movslq -0x84(%rbp),%rcx
  414a79:	48 39 c8             	cmp    %rcx,%rax
  414a7c:	0f 8d 83 00 00 00    	jge    414b05 <BZ2_decompress+0x2df5>
  414a82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414a86:	48 8b 00             	mov    (%rax),%rax
  414a89:	8b 40 08             	mov    0x8(%rax),%eax
  414a8c:	48 85 c0             	test   %rax,%rax
  414a8f:	0f 84 90 f2 ff ff    	je     413d25 <BZ2_decompress+0x2015>
  414a95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414a99:	48 8b 08             	mov    (%rax),%rcx
  414a9c:	48 8b 09             	mov    (%rcx),%rcx
  414a9f:	8b 50 20             	mov    0x20(%rax),%edx
  414aa2:	0f b6 31             	movzbl (%rcx),%esi
  414aa5:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  414aac:	48 d3 e2             	shl    %cl,%rdx
  414aaf:	48 09 d6             	or     %rdx,%rsi
  414ab2:	89 70 20             	mov    %esi,0x20(%rax)
  414ab5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414ab9:	8b 48 24             	mov    0x24(%rax),%ecx
  414abc:	48 83 c1 08          	add    $0x8,%rcx
  414ac0:	89 48 24             	mov    %ecx,0x24(%rax)
  414ac3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414ac7:	48 8b 00             	mov    (%rax),%rax
  414aca:	48 ff 00             	incq   (%rax)
  414acd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414ad1:	48 8b 00             	mov    (%rax),%rax
  414ad4:	8b 48 08             	mov    0x8(%rax),%ecx
  414ad7:	48 ff c9             	dec    %rcx
  414ada:	89 48 08             	mov    %ecx,0x8(%rax)
  414add:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414ae1:	48 8b 00             	mov    (%rax),%rax
  414ae4:	8b 48 0c             	mov    0xc(%rax),%ecx
  414ae7:	48 ff c1             	inc    %rcx
  414aea:	89 48 0c             	mov    %ecx,0xc(%rax)
  414aed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414af1:	48 8b 00             	mov    (%rax),%rax
  414af4:	8b 40 0c             	mov    0xc(%rax),%eax
  414af7:	48 85 c0             	test   %rax,%rax
  414afa:	0f 85 6a ff ff ff    	jne    414a6a <BZ2_decompress+0x2d5a>
  414b00:	e9 55 ff ff ff       	jmpq   414a5a <BZ2_decompress+0x2d4a>
  414b05:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  414b09:	8b 4a 24             	mov    0x24(%rdx),%ecx
  414b0c:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  414b12:	8b 52 20             	mov    0x20(%rdx),%edx
  414b15:	48 29 c1             	sub    %rax,%rcx
  414b18:	4c 21 f1             	and    %r14,%rcx
  414b1b:	48 d3 ea             	shr    %cl,%rdx
  414b1e:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  414b25:	48 89 c1             	mov    %rax,%rcx
  414b28:	48 d3 e6             	shl    %cl,%rsi
  414b2b:	48 ff ce             	dec    %rsi
  414b2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b32:	48 21 d6             	and    %rdx,%rsi
  414b35:	89 b5 d0 fe ff ff    	mov    %esi,-0x130(%rbp)
  414b3b:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
  414b41:	8b 50 24             	mov    0x24(%rax),%edx
  414b44:	48 29 ca             	sub    %rcx,%rdx
  414b47:	89 50 24             	mov    %edx,0x24(%rax)
  414b4a:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
  414b50:	e9 60 02 00 00       	jmpq   414db5 <BZ2_decompress+0x30a5>
  414b55:	89 45 bc             	mov    %eax,-0x44(%rbp)
  414b58:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  414b5c:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  414b60:	48 39 c8             	cmp    %rcx,%rax
  414b63:	7c 0b                	jl     414b70 <BZ2_decompress+0x2e60>
  414b65:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  414b68:	48 ff c0             	inc    %rax
  414b6b:	e9 8f fa ff ff       	jmpq   4145ff <BZ2_decompress+0x28ef>
  414b70:	48 63 45 84          	movslq -0x7c(%rbp),%rax
  414b74:	48 85 c0             	test   %rax,%rax
  414b77:	0f 8e b0 f1 ff ff    	jle    413d2d <BZ2_decompress+0x201d>
  414b7d:	48 63 45 84          	movslq -0x7c(%rbp),%rax
  414b81:	48 83 f8 15          	cmp    $0x15,%rax
  414b85:	0f 8d a2 f1 ff ff    	jge    413d2d <BZ2_decompress+0x201d>
  414b8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b8f:	48 c7 c1 22 00 00 00 	mov    $0x22,%rcx
  414b96:	89 48 08             	mov    %ecx,0x8(%rax)
  414b99:	eb 10                	jmp    414bab <BZ2_decompress+0x2e9b>
  414b9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b9f:	48 8b 00             	mov    (%rax),%rax
  414ba2:	8b 48 10             	mov    0x10(%rax),%ecx
  414ba5:	48 ff c1             	inc    %rcx
  414ba8:	89 48 10             	mov    %ecx,0x10(%rax)
  414bab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414baf:	48 63 40 24          	movslq 0x24(%rax),%rax
  414bb3:	48 85 c0             	test   %rax,%rax
  414bb6:	0f 8f 83 00 00 00    	jg     414c3f <BZ2_decompress+0x2f2f>
  414bbc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414bc0:	48 8b 00             	mov    (%rax),%rax
  414bc3:	8b 40 08             	mov    0x8(%rax),%eax
  414bc6:	48 85 c0             	test   %rax,%rax
  414bc9:	0f 84 56 f1 ff ff    	je     413d25 <BZ2_decompress+0x2015>
  414bcf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414bd3:	48 8b 08             	mov    (%rax),%rcx
  414bd6:	48 8b 09             	mov    (%rcx),%rcx
  414bd9:	8b 50 20             	mov    0x20(%rax),%edx
  414bdc:	0f b6 31             	movzbl (%rcx),%esi
  414bdf:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  414be6:	48 d3 e2             	shl    %cl,%rdx
  414be9:	48 09 d6             	or     %rdx,%rsi
  414bec:	89 70 20             	mov    %esi,0x20(%rax)
  414bef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414bf3:	8b 48 24             	mov    0x24(%rax),%ecx
  414bf6:	48 83 c1 08          	add    $0x8,%rcx
  414bfa:	89 48 24             	mov    %ecx,0x24(%rax)
  414bfd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414c01:	48 8b 00             	mov    (%rax),%rax
  414c04:	48 ff 00             	incq   (%rax)
  414c07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414c0b:	48 8b 00             	mov    (%rax),%rax
  414c0e:	8b 48 08             	mov    0x8(%rax),%ecx
  414c11:	48 ff c9             	dec    %rcx
  414c14:	89 48 08             	mov    %ecx,0x8(%rax)
  414c17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414c1b:	48 8b 00             	mov    (%rax),%rax
  414c1e:	8b 48 0c             	mov    0xc(%rax),%ecx
  414c21:	48 ff c1             	inc    %rcx
  414c24:	89 48 0c             	mov    %ecx,0xc(%rax)
  414c27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414c2b:	48 8b 00             	mov    (%rax),%rax
  414c2e:	8b 40 0c             	mov    0xc(%rax),%eax
  414c31:	48 85 c0             	test   %rax,%rax
  414c34:	0f 85 71 ff ff ff    	jne    414bab <BZ2_decompress+0x2e9b>
  414c3a:	e9 5c ff ff ff       	jmpq   414b9b <BZ2_decompress+0x2e8b>
  414c3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414c43:	8b 48 24             	mov    0x24(%rax),%ecx
  414c46:	8b 40 20             	mov    0x20(%rax),%eax
  414c49:	48 ff c9             	dec    %rcx
  414c4c:	4c 21 f1             	and    %r14,%rcx
  414c4f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  414c53:	48 d3 e8             	shr    %cl,%rax
  414c56:	48 83 e0 01          	and    $0x1,%rax
  414c5a:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%rbp)
  414c60:	8b 42 24             	mov    0x24(%rdx),%eax
  414c63:	48 ff c8             	dec    %rax
  414c66:	89 42 24             	mov    %eax,0x24(%rdx)
  414c69:	0f b6 85 e4 fe ff ff 	movzbl -0x11c(%rbp),%eax
  414c70:	48 85 c0             	test   %rax,%rax
  414c73:	88 45 d7             	mov    %al,-0x29(%rbp)
  414c76:	0f 84 0d 01 00 00    	je     414d89 <BZ2_decompress+0x3079>
  414c7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414c80:	48 c7 c1 23 00 00 00 	mov    $0x23,%rcx
  414c87:	89 48 08             	mov    %ecx,0x8(%rax)
  414c8a:	eb 10                	jmp    414c9c <BZ2_decompress+0x2f8c>
  414c8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414c90:	48 8b 00             	mov    (%rax),%rax
  414c93:	8b 48 10             	mov    0x10(%rax),%ecx
  414c96:	48 ff c1             	inc    %rcx
  414c99:	89 48 10             	mov    %ecx,0x10(%rax)
  414c9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414ca0:	48 63 40 24          	movslq 0x24(%rax),%rax
  414ca4:	48 85 c0             	test   %rax,%rax
  414ca7:	0f 8f 83 00 00 00    	jg     414d30 <BZ2_decompress+0x3020>
  414cad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414cb1:	48 8b 00             	mov    (%rax),%rax
  414cb4:	8b 40 08             	mov    0x8(%rax),%eax
  414cb7:	48 85 c0             	test   %rax,%rax
  414cba:	0f 84 65 f0 ff ff    	je     413d25 <BZ2_decompress+0x2015>
  414cc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414cc4:	48 8b 08             	mov    (%rax),%rcx
  414cc7:	48 8b 09             	mov    (%rcx),%rcx
  414cca:	8b 50 20             	mov    0x20(%rax),%edx
  414ccd:	0f b6 31             	movzbl (%rcx),%esi
  414cd0:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  414cd7:	48 d3 e2             	shl    %cl,%rdx
  414cda:	48 09 d6             	or     %rdx,%rsi
  414cdd:	89 70 20             	mov    %esi,0x20(%rax)
  414ce0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414ce4:	8b 48 24             	mov    0x24(%rax),%ecx
  414ce7:	48 83 c1 08          	add    $0x8,%rcx
  414ceb:	89 48 24             	mov    %ecx,0x24(%rax)
  414cee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414cf2:	48 8b 00             	mov    (%rax),%rax
  414cf5:	48 ff 00             	incq   (%rax)
  414cf8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414cfc:	48 8b 00             	mov    (%rax),%rax
  414cff:	8b 48 08             	mov    0x8(%rax),%ecx
  414d02:	48 ff c9             	dec    %rcx
  414d05:	89 48 08             	mov    %ecx,0x8(%rax)
  414d08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414d0c:	48 8b 00             	mov    (%rax),%rax
  414d0f:	8b 48 0c             	mov    0xc(%rax),%ecx
  414d12:	48 ff c1             	inc    %rcx
  414d15:	89 48 0c             	mov    %ecx,0xc(%rax)
  414d18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414d1c:	48 8b 00             	mov    (%rax),%rax
  414d1f:	8b 40 0c             	mov    0xc(%rax),%eax
  414d22:	48 85 c0             	test   %rax,%rax
  414d25:	0f 85 71 ff ff ff    	jne    414c9c <BZ2_decompress+0x2f8c>
  414d2b:	e9 5c ff ff ff       	jmpq   414c8c <BZ2_decompress+0x2f7c>
  414d30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414d34:	8b 48 24             	mov    0x24(%rax),%ecx
  414d37:	8b 40 20             	mov    0x20(%rax),%eax
  414d3a:	48 ff c9             	dec    %rcx
  414d3d:	4c 21 f1             	and    %r14,%rcx
  414d40:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  414d44:	48 d3 e8             	shr    %cl,%rax
  414d47:	48 83 e0 01          	and    $0x1,%rax
  414d4b:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%rbp)
  414d51:	8b 42 24             	mov    0x24(%rdx),%eax
  414d54:	48 ff c8             	dec    %rax
  414d57:	89 42 24             	mov    %eax,0x24(%rdx)
  414d5a:	0f b6 85 e0 fe ff ff 	movzbl -0x120(%rbp),%eax
  414d61:	88 45 d7             	mov    %al,-0x29(%rbp)
  414d64:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  414d68:	48 85 c0             	test   %rax,%rax
  414d6b:	74 0e                	je     414d7b <BZ2_decompress+0x306b>
  414d6d:	8b 45 84             	mov    -0x7c(%rbp),%eax
  414d70:	48 ff c8             	dec    %rax
  414d73:	89 45 84             	mov    %eax,-0x7c(%rbp)
  414d76:	e9 f5 fd ff ff       	jmpq   414b70 <BZ2_decompress+0x2e60>
  414d7b:	8b 45 84             	mov    -0x7c(%rbp),%eax
  414d7e:	48 ff c0             	inc    %rax
  414d81:	89 45 84             	mov    %eax,-0x7c(%rbp)
  414d84:	e9 e7 fd ff ff       	jmpq   414b70 <BZ2_decompress+0x2e60>
  414d89:	0f b6 45 84          	movzbl -0x7c(%rbp),%eax
  414d8d:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  414d91:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  414d95:	48 63 75 bc          	movslq -0x44(%rbp),%rsi
  414d99:	48 69 c9 02 01 00 00 	imul   $0x102,%rcx,%rcx
  414da0:	48 01 d1             	add    %rdx,%rcx
  414da3:	88 84 0e 70 ab 00 00 	mov    %al,0xab70(%rsi,%rcx,1)
  414daa:	8b 45 bc             	mov    -0x44(%rbp),%eax
  414dad:	48 ff c0             	inc    %rax
  414db0:	e9 a0 fd ff ff       	jmpq   414b55 <BZ2_decompress+0x2e45>
  414db5:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
  414dbb:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  414dc2:	48 83 f8 15          	cmp    $0x15,%rax
  414dc6:	0f 8d 61 ef ff ff    	jge    413d2d <BZ2_decompress+0x201d>
  414dcc:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  414dd3:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  414dda:	48 63 95 78 ff ff ff 	movslq -0x88(%rbp),%rdx
  414de1:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
  414de5:	48 39 c2             	cmp    %rax,%rdx
  414de8:	0f 8e 0a 01 00 00    	jle    414ef8 <BZ2_decompress+0x31e8>
  414dee:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  414df4:	48 ff c0             	inc    %rax
  414df7:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  414dfd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414e01:	48 c7 c1 25 00 00 00 	mov    $0x25,%rcx
  414e08:	89 48 08             	mov    %ecx,0x8(%rax)
  414e0b:	eb 10                	jmp    414e1d <BZ2_decompress+0x310d>
  414e0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414e11:	48 8b 00             	mov    (%rax),%rax
  414e14:	8b 48 10             	mov    0x10(%rax),%ecx
  414e17:	48 ff c1             	inc    %rcx
  414e1a:	89 48 10             	mov    %ecx,0x10(%rax)
  414e1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414e21:	48 63 40 24          	movslq 0x24(%rax),%rax
  414e25:	48 85 c0             	test   %rax,%rax
  414e28:	0f 8f 83 00 00 00    	jg     414eb1 <BZ2_decompress+0x31a1>
  414e2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414e32:	48 8b 00             	mov    (%rax),%rax
  414e35:	8b 40 08             	mov    0x8(%rax),%eax
  414e38:	48 85 c0             	test   %rax,%rax
  414e3b:	0f 84 e4 ee ff ff    	je     413d25 <BZ2_decompress+0x2015>
  414e41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414e45:	48 8b 08             	mov    (%rax),%rcx
  414e48:	48 8b 09             	mov    (%rcx),%rcx
  414e4b:	8b 50 20             	mov    0x20(%rax),%edx
  414e4e:	0f b6 31             	movzbl (%rcx),%esi
  414e51:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  414e58:	48 d3 e2             	shl    %cl,%rdx
  414e5b:	48 09 d6             	or     %rdx,%rsi
  414e5e:	89 70 20             	mov    %esi,0x20(%rax)
  414e61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414e65:	8b 48 24             	mov    0x24(%rax),%ecx
  414e68:	48 83 c1 08          	add    $0x8,%rcx
  414e6c:	89 48 24             	mov    %ecx,0x24(%rax)
  414e6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414e73:	48 8b 00             	mov    (%rax),%rax
  414e76:	48 ff 00             	incq   (%rax)
  414e79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414e7d:	48 8b 00             	mov    (%rax),%rax
  414e80:	8b 48 08             	mov    0x8(%rax),%ecx
  414e83:	48 ff c9             	dec    %rcx
  414e86:	89 48 08             	mov    %ecx,0x8(%rax)
  414e89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414e8d:	48 8b 00             	mov    (%rax),%rax
  414e90:	8b 48 0c             	mov    0xc(%rax),%ecx
  414e93:	48 ff c1             	inc    %rcx
  414e96:	89 48 0c             	mov    %ecx,0xc(%rax)
  414e99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414e9d:	48 8b 00             	mov    (%rax),%rax
  414ea0:	8b 40 0c             	mov    0xc(%rax),%eax
  414ea3:	48 85 c0             	test   %rax,%rax
  414ea6:	0f 85 71 ff ff ff    	jne    414e1d <BZ2_decompress+0x310d>
  414eac:	e9 5c ff ff ff       	jmpq   414e0d <BZ2_decompress+0x30fd>
  414eb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414eb5:	8b 48 24             	mov    0x24(%rax),%ecx
  414eb8:	8b 40 20             	mov    0x20(%rax),%eax
  414ebb:	48 ff c9             	dec    %rcx
  414ebe:	4c 21 f1             	and    %r14,%rcx
  414ec1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  414ec5:	48 d3 e8             	shr    %cl,%rax
  414ec8:	48 83 e0 01          	and    $0x1,%rax
  414ecc:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
  414ed2:	8b 42 24             	mov    0x24(%rdx),%eax
  414ed5:	48 ff c8             	dec    %rax
  414ed8:	89 42 24             	mov    %eax,0x24(%rdx)
  414edb:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
  414ee1:	8b 8d cc fe ff ff    	mov    -0x134(%rbp),%ecx
  414ee7:	89 8d 74 ff ff ff    	mov    %ecx,-0x8c(%rbp)
  414eed:	48 01 c0             	add    %rax,%rax
  414ef0:	48 09 c8             	or     %rcx,%rax
  414ef3:	e9 bd fe ff ff       	jmpq   414db5 <BZ2_decompress+0x30a5>
  414ef8:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  414eff:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  414f06:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
  414f0c:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  414f0f:	48 29 c2             	sub    %rax,%rdx
  414f12:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  414f19:	48 d3 e2             	shl    %cl,%rdx
  414f1c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  414f23:	48 d3 fa             	sar    %cl,%rdx
  414f26:	48 85 d2             	test   %rdx,%rdx
  414f29:	0f 88 fe ed ff ff    	js     413d2d <BZ2_decompress+0x201d>
  414f2f:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  414f36:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  414f3d:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
  414f43:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  414f46:	48 29 c2             	sub    %rax,%rdx
  414f49:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  414f50:	48 d3 e2             	shl    %cl,%rdx
  414f53:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  414f5a:	48 d3 fa             	sar    %cl,%rdx
  414f5d:	48 81 fa 02 01 00 00 	cmp    $0x102,%rdx
  414f64:	0f 8d c3 ed ff ff    	jge    413d2d <BZ2_decompress+0x201d>
  414f6a:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  414f71:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  414f78:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
  414f7e:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  414f81:	48 29 c2             	sub    %rax,%rdx
  414f84:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  414f8b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  414f92:	48 d3 e2             	shl    %cl,%rdx
  414f95:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  414f9c:	48 d3 fa             	sar    %cl,%rdx
  414f9f:	8b 04 90             	mov    (%rax,%rdx,4),%eax
  414fa2:	89 45 98             	mov    %eax,-0x68(%rbp)
  414fa5:	8b 45 98             	mov    -0x68(%rbp),%eax
  414fa8:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
  414fab:	48 39 c8             	cmp    %rcx,%rax
  414fae:	0f 85 27 01 00 00    	jne    4150db <BZ2_decompress+0x33cb>
  414fb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414fb8:	48 63 40 38          	movslq 0x38(%rax),%rax
  414fbc:	48 85 c0             	test   %rax,%rax
  414fbf:	0f 88 68 ed ff ff    	js     413d2d <BZ2_decompress+0x201d>
  414fc5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414fc9:	48 63 40 38          	movslq 0x38(%rax),%rax
  414fcd:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  414fd1:	48 39 c8             	cmp    %rcx,%rax
  414fd4:	0f 8d 53 ed ff ff    	jge    413d2d <BZ2_decompress+0x201d>
  414fda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414fde:	48 31 c9             	xor    %rcx,%rcx
  414fe1:	89 88 48 04 00 00    	mov    %ecx,0x448(%rax)
  414fe7:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  414fee:	eb 31                	jmp    415021 <BZ2_decompress+0x3311>
  414ff0:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  414ff4:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  414ff8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  414fff:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  415003:	48 d3 e2             	shl    %cl,%rdx
  415006:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41500d:	48 d3 fa             	sar    %cl,%rdx
  415010:	8b 4c 96 44          	mov    0x44(%rsi,%rdx,4),%ecx
  415014:	89 8c 86 48 04 00 00 	mov    %ecx,0x448(%rsi,%rax,4)
  41501b:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41501e:	48 ff c0             	inc    %rax
  415021:	89 45 bc             	mov    %eax,-0x44(%rbp)
  415024:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  415028:	48 3d 00 01 00 00    	cmp    $0x100,%rax
  41502e:	7e c0                	jle    414ff0 <BZ2_decompress+0x32e0>
  415030:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  415037:	eb 3e                	jmp    415077 <BZ2_decompress+0x3367>
  415039:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  41503d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  415041:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  415048:	48 d3 e2             	shl    %cl,%rdx
  41504b:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  41504f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  415056:	48 d3 fa             	sar    %cl,%rdx
  415059:	8b 8c 96 48 04 00 00 	mov    0x448(%rsi,%rdx,4),%ecx
  415060:	8b 94 86 48 04 00 00 	mov    0x448(%rsi,%rax,4),%edx
  415067:	48 01 ca             	add    %rcx,%rdx
  41506a:	89 94 86 48 04 00 00 	mov    %edx,0x448(%rsi,%rax,4)
  415071:	8b 45 bc             	mov    -0x44(%rbp),%eax
  415074:	48 ff c0             	inc    %rax
  415077:	89 45 bc             	mov    %eax,-0x44(%rbp)
  41507a:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  41507e:	48 3d 00 01 00 00    	cmp    $0x100,%rax
  415084:	7e b3                	jle    415039 <BZ2_decompress+0x3329>
  415086:	48 31 c0             	xor    %rax,%rax
  415089:	eb 06                	jmp    415091 <BZ2_decompress+0x3381>
  41508b:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41508e:	48 ff c0             	inc    %rax
  415091:	89 45 bc             	mov    %eax,-0x44(%rbp)
  415094:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  415098:	48 3d 00 01 00 00    	cmp    $0x100,%rax
  41509e:	0f 8f b8 00 00 00    	jg     41515c <BZ2_decompress+0x344c>
  4150a4:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  4150a8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4150ac:	48 63 84 81 48 04 00 	movslq 0x448(%rcx,%rax,4),%rax
  4150b3:	00 
  4150b4:	48 85 c0             	test   %rax,%rax
  4150b7:	0f 88 70 ec ff ff    	js     413d2d <BZ2_decompress+0x201d>
  4150bd:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  4150c1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4150c5:	48 63 84 81 48 04 00 	movslq 0x448(%rcx,%rax,4),%rax
  4150cc:	00 
  4150cd:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  4150d1:	48 39 c8             	cmp    %rcx,%rax
  4150d4:	7e b5                	jle    41508b <BZ2_decompress+0x337b>
  4150d6:	e9 52 ec ff ff       	jmpq   413d2d <BZ2_decompress+0x201d>
  4150db:	8b 45 98             	mov    -0x68(%rbp),%eax
  4150de:	48 85 c0             	test   %rax,%rax
  4150e1:	74 09                	je     4150ec <BZ2_decompress+0x33dc>
  4150e3:	8b 45 98             	mov    -0x68(%rbp),%eax
  4150e6:	48 83 f8 01          	cmp    $0x1,%rax
  4150ea:	75 13                	jne    4150ff <BZ2_decompress+0x33ef>
  4150ec:	44 89 75 8c          	mov    %r14d,-0x74(%rbp)
  4150f0:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4150f7:	89 45 88             	mov    %eax,-0x78(%rbp)
  4150fa:	e9 97 0c 00 00       	jmpq   415d96 <BZ2_decompress+0x4086>
  4150ff:	48 63 45 90          	movslq -0x70(%rbp),%rax
  415103:	48 63 4d 94          	movslq -0x6c(%rbp),%rcx
  415107:	48 39 c8             	cmp    %rcx,%rax
  41510a:	0f 8d 1d ec ff ff    	jge    413d2d <BZ2_decompress+0x201d>
  415110:	8b 45 98             	mov    -0x68(%rbp),%eax
  415113:	48 ff c8             	dec    %rax
  415116:	48 89 c1             	mov    %rax,%rcx
  415119:	4c 21 f1             	and    %r14,%rcx
  41511c:	48 83 f9 0f          	cmp    $0xf,%rcx
  415120:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%rbp)
  415126:	0f 87 a0 00 00 00    	ja     4151cc <BZ2_decompress+0x34bc>
  41512c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415130:	8b 80 8c 1e 00 00    	mov    0x1e8c(%rax),%eax
  415136:	8b 8d a8 fe ff ff    	mov    -0x158(%rbp),%ecx
  41513c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  415140:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
  415146:	48 01 c1             	add    %rax,%rcx
  415149:	4c 21 f1             	and    %r14,%rcx
  41514c:	0f b6 84 0a 8c 0e 00 	movzbl 0xe8c(%rdx,%rcx,1),%eax
  415153:	00 
  415154:	88 45 d7             	mov    %al,-0x29(%rbp)
  415157:	e9 59 01 00 00       	jmpq   4152b5 <BZ2_decompress+0x35a5>
  41515c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415160:	48 31 c9             	xor    %rcx,%rcx
  415163:	89 48 10             	mov    %ecx,0x10(%rax)
  415166:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41516a:	88 48 0c             	mov    %cl,0xc(%rax)
  41516d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415171:	44 89 b0 70 0c 00 00 	mov    %r14d,0xc70(%rax)
  415178:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41517c:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  415183:	89 48 08             	mov    %ecx,0x8(%rax)
  415186:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41518a:	48 63 40 34          	movslq 0x34(%rax),%rax
  41518e:	48 83 f8 02          	cmp    $0x2,%rax
  415192:	7c 1f                	jl     4151b3 <BZ2_decompress+0x34a3>
  415194:	48 8b 0d 35 38 01 00 	mov    0x13835(%rip),%rcx        # 4289d0 <stderr>
  41519b:	48 ba fc 7f 42 00 00 	movabs $0x427ffc,%rdx
  4151a2:	00 00 00 
  4151a5:	48 31 c0             	xor    %rax,%rax
  4151a8:	48 89 cf             	mov    %rcx,%rdi
  4151ab:	48 89 d6             	mov    %rdx,%rsi
  4151ae:	e8 45 4b 00 00       	callq  419cf8 <fprintf>
  4151b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4151b7:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
  4151bb:	48 85 c0             	test   %rax,%rax
  4151be:	0f 84 06 01 00 00    	je     4152ca <BZ2_decompress+0x35ba>
  4151c4:	48 31 c0             	xor    %rax,%rax
  4151c7:	e9 22 01 00 00       	jmpq   4152ee <BZ2_decompress+0x35de>
  4151cc:	8b 85 a8 fe ff ff    	mov    -0x158(%rbp),%eax
  4151d2:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  4151d9:	48 d3 e8             	shr    %cl,%rax
  4151dc:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%rbp)
  4151e2:	8b 85 a8 fe ff ff    	mov    -0x158(%rbp),%eax
  4151e8:	48 63 8d b0 fe ff ff 	movslq -0x150(%rbp),%rcx
  4151ef:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4151f3:	48 83 e0 0f          	and    $0xf,%rax
  4151f7:	89 85 ac fe ff ff    	mov    %eax,-0x154(%rbp)
  4151fd:	8b 8c 8a 8c 1e 00 00 	mov    0x1e8c(%rdx,%rcx,4),%ecx
  415204:	48 01 c1             	add    %rax,%rcx
  415207:	89 8d b4 fe ff ff    	mov    %ecx,-0x14c(%rbp)
  41520d:	48 63 85 b4 fe ff ff 	movslq -0x14c(%rbp),%rax
  415214:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415218:	0f b6 84 01 8c 0e 00 	movzbl 0xe8c(%rcx,%rax,1),%eax
  41521f:	00 
  415220:	88 45 d7             	mov    %al,-0x29(%rbp)
  415223:	e9 06 01 00 00       	jmpq   41532e <BZ2_decompress+0x361e>
  415228:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
  41522e:	8b 8d a8 fe ff ff    	mov    -0x158(%rbp),%ecx
  415234:	48 01 c1             	add    %rax,%rcx
  415237:	89 8d a4 fe ff ff    	mov    %ecx,-0x15c(%rbp)
  41523d:	48 63 85 a4 fe ff ff 	movslq -0x15c(%rbp),%rax
  415244:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415248:	0f b6 94 01 8b 0e 00 	movzbl 0xe8b(%rcx,%rax,1),%edx
  41524f:	00 
  415250:	88 94 01 8c 0e 00 00 	mov    %dl,0xe8c(%rcx,%rax,1)
  415257:	48 63 85 a4 fe ff ff 	movslq -0x15c(%rbp),%rax
  41525e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415262:	0f b6 94 01 8a 0e 00 	movzbl 0xe8a(%rcx,%rax,1),%edx
  415269:	00 
  41526a:	88 94 01 8b 0e 00 00 	mov    %dl,0xe8b(%rcx,%rax,1)
  415271:	48 63 85 a4 fe ff ff 	movslq -0x15c(%rbp),%rax
  415278:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41527c:	0f b6 94 01 89 0e 00 	movzbl 0xe89(%rcx,%rax,1),%edx
  415283:	00 
  415284:	88 94 01 8a 0e 00 00 	mov    %dl,0xe8a(%rcx,%rax,1)
  41528b:	48 63 85 a4 fe ff ff 	movslq -0x15c(%rbp),%rax
  415292:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415296:	0f b6 94 01 88 0e 00 	movzbl 0xe88(%rcx,%rax,1),%edx
  41529d:	00 
  41529e:	88 94 01 89 0e 00 00 	mov    %dl,0xe89(%rcx,%rax,1)
  4152a5:	8b 85 a8 fe ff ff    	mov    -0x158(%rbp),%eax
  4152ab:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
  4152af:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%rbp)
  4152b5:	8b 85 a8 fe ff ff    	mov    -0x158(%rbp),%eax
  4152bb:	48 83 f8 04          	cmp    $0x4,%rax
  4152bf:	0f 83 63 ff ff ff    	jae    415228 <BZ2_decompress+0x3518>
  4152c5:	e9 e2 00 00 00       	jmpq   4153ac <BZ2_decompress+0x369c>
  4152ca:	48 31 c0             	xor    %rax,%rax
  4152cd:	e9 62 01 00 00       	jmpq   415434 <BZ2_decompress+0x3724>
  4152d2:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  4152d6:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4152da:	8b 94 81 48 04 00 00 	mov    0x448(%rcx,%rax,4),%edx
  4152e1:	89 94 81 4c 08 00 00 	mov    %edx,0x84c(%rcx,%rax,4)
  4152e8:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4152eb:	48 ff c0             	inc    %rax
  4152ee:	89 45 bc             	mov    %eax,-0x44(%rbp)
  4152f1:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  4152f5:	48 3d 00 01 00 00    	cmp    $0x100,%rax
  4152fb:	7e d5                	jle    4152d2 <BZ2_decompress+0x35c2>
  4152fd:	48 31 c0             	xor    %rax,%rax
  415300:	e9 5d 02 00 00       	jmpq   415562 <BZ2_decompress+0x3852>
  415305:	48 63 85 b4 fe ff ff 	movslq -0x14c(%rbp),%rax
  41530c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415310:	0f b6 94 01 8b 0e 00 	movzbl 0xe8b(%rcx,%rax,1),%edx
  415317:	00 
  415318:	88 94 01 8c 0e 00 00 	mov    %dl,0xe8c(%rcx,%rax,1)
  41531f:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
  415325:	48 ff c8             	dec    %rax
  415328:	89 85 b4 fe ff ff    	mov    %eax,-0x14c(%rbp)
  41532e:	48 63 85 b0 fe ff ff 	movslq -0x150(%rbp),%rax
  415335:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415339:	48 63 95 b4 fe ff ff 	movslq -0x14c(%rbp),%rdx
  415340:	48 63 84 81 8c 1e 00 	movslq 0x1e8c(%rcx,%rax,4),%rax
  415347:	00 
  415348:	48 39 c2             	cmp    %rax,%rdx
  41534b:	7f b8                	jg     415305 <BZ2_decompress+0x35f5>
  41534d:	48 63 85 b0 fe ff ff 	movslq -0x150(%rbp),%rax
  415354:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415358:	8b 94 81 8c 1e 00 00 	mov    0x1e8c(%rcx,%rax,4),%edx
  41535f:	48 ff c2             	inc    %rdx
  415362:	89 94 81 8c 1e 00 00 	mov    %edx,0x1e8c(%rcx,%rax,4)
  415369:	e9 4f 03 00 00       	jmpq   4156bd <BZ2_decompress+0x39ad>
  41536e:	8b 85 b4 fe ff ff    	mov    -0x14c(%rbp),%eax
  415374:	8b 8d a8 fe ff ff    	mov    -0x158(%rbp),%ecx
  41537a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41537e:	48 8d 74 08 ff       	lea    -0x1(%rax,%rcx,1),%rsi
  415383:	4c 21 f6             	and    %r14,%rsi
  415386:	0f b6 b4 32 8c 0e 00 	movzbl 0xe8c(%rdx,%rsi,1),%esi
  41538d:	00 
  41538e:	48 8d 04 08          	lea    (%rax,%rcx,1),%rax
  415392:	4c 21 f0             	and    %r14,%rax
  415395:	40 88 b4 02 8c 0e 00 	mov    %sil,0xe8c(%rdx,%rax,1)
  41539c:	00 
  41539d:	8b 85 a8 fe ff ff    	mov    -0x158(%rbp),%eax
  4153a3:	48 ff c8             	dec    %rax
  4153a6:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%rbp)
  4153ac:	8b 85 a8 fe ff ff    	mov    -0x158(%rbp),%eax
  4153b2:	48 85 c0             	test   %rax,%rax
  4153b5:	75 b7                	jne    41536e <BZ2_decompress+0x365e>
  4153b7:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  4153bb:	48 63 8d b4 fe ff ff 	movslq -0x14c(%rbp),%rcx
  4153c2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4153c6:	88 84 0a 8c 0e 00 00 	mov    %al,0xe8c(%rdx,%rcx,1)
  4153cd:	e9 60 07 00 00       	jmpq   415b32 <BZ2_decompress+0x3e22>
  4153d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4153d6:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  4153da:	48 8b 80 50 0c 00 00 	mov    0xc50(%rax),%rax
  4153e1:	0f b6 04 88          	movzbl (%rax,%rcx,4),%eax
  4153e5:	88 45 d7             	mov    %al,-0x29(%rbp)
  4153e8:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  4153ec:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4153f0:	48 63 84 81 48 04 00 	movslq 0x448(%rcx,%rax,4),%rax
  4153f7:	00 
  4153f8:	48 8b 91 50 0c 00 00 	mov    0xc50(%rcx),%rdx
  4153ff:	8b 75 bc             	mov    -0x44(%rbp),%esi
  415402:	8b 3c 82             	mov    (%rdx,%rax,4),%edi
  415405:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41540c:	48 d3 e6             	shl    %cl,%rsi
  41540f:	48 09 f7             	or     %rsi,%rdi
  415412:	89 3c 82             	mov    %edi,(%rdx,%rax,4)
  415415:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  415419:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41541d:	8b 94 81 48 04 00 00 	mov    0x448(%rcx,%rax,4),%edx
  415424:	48 ff c2             	inc    %rdx
  415427:	89 94 81 48 04 00 00 	mov    %edx,0x448(%rcx,%rax,4)
  41542e:	8b 45 bc             	mov    -0x44(%rbp),%eax
  415431:	48 ff c0             	inc    %rax
  415434:	89 45 bc             	mov    %eax,-0x44(%rbp)
  415437:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  41543b:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  41543f:	48 39 c8             	cmp    %rcx,%rax
  415442:	7c 8e                	jl     4153d2 <BZ2_decompress+0x36c2>
  415444:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415448:	48 63 48 38          	movslq 0x38(%rax),%rcx
  41544c:	48 8b 90 50 0c 00 00 	mov    0xc50(%rax),%rdx
  415453:	8b 14 8a             	mov    (%rdx,%rcx,4),%edx
  415456:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41545d:	48 d3 ea             	shr    %cl,%rdx
  415460:	89 50 3c             	mov    %edx,0x3c(%rax)
  415463:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415467:	48 31 c0             	xor    %rax,%rax
  41546a:	89 81 44 04 00 00    	mov    %eax,0x444(%rcx)
  415470:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415474:	0f b6 49 14          	movzbl 0x14(%rcx),%ecx
  415478:	48 85 c9             	test   %rcx,%rcx
  41547b:	0f 84 a7 02 00 00    	je     415728 <BZ2_decompress+0x3a18>
  415481:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415485:	89 41 18             	mov    %eax,0x18(%rcx)
  415488:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41548c:	89 41 1c             	mov    %eax,0x1c(%rcx)
  41548f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415493:	8b 48 3c             	mov    0x3c(%rax),%ecx
  415496:	48 8b 90 50 0c 00 00 	mov    0xc50(%rax),%rdx
  41549d:	8b 0c 8a             	mov    (%rdx,%rcx,4),%ecx
  4154a0:	89 48 3c             	mov    %ecx,0x3c(%rax)
  4154a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4154a7:	0f b6 48 3c          	movzbl 0x3c(%rax),%ecx
  4154ab:	89 48 40             	mov    %ecx,0x40(%rax)
  4154ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4154b2:	8b 50 3c             	mov    0x3c(%rax),%edx
  4154b5:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4154bc:	48 d3 ea             	shr    %cl,%rdx
  4154bf:	89 50 3c             	mov    %edx,0x3c(%rax)
  4154c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4154c6:	8b 88 44 04 00 00    	mov    0x444(%rax),%ecx
  4154cc:	48 ff c1             	inc    %rcx
  4154cf:	89 88 44 04 00 00    	mov    %ecx,0x444(%rax)
  4154d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4154d9:	8b 40 18             	mov    0x18(%rax),%eax
  4154dc:	48 85 c0             	test   %rax,%rax
  4154df:	75 38                	jne    415519 <BZ2_decompress+0x3809>
  4154e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4154e5:	48 63 48 1c          	movslq 0x1c(%rax),%rcx
  4154e9:	8b 0c 8d d0 ac 62 00 	mov    0x62acd0(,%rcx,4),%ecx
  4154f0:	89 48 18             	mov    %ecx,0x18(%rax)
  4154f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4154f7:	8b 48 1c             	mov    0x1c(%rax),%ecx
  4154fa:	48 ff c1             	inc    %rcx
  4154fd:	89 48 1c             	mov    %ecx,0x1c(%rax)
  415500:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415504:	8b 40 1c             	mov    0x1c(%rax),%eax
  415507:	48 3d 00 02 00 00    	cmp    $0x200,%rax
  41550d:	75 0a                	jne    415519 <BZ2_decompress+0x3809>
  41550f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415513:	48 31 c9             	xor    %rcx,%rcx
  415516:	89 48 1c             	mov    %ecx,0x1c(%rax)
  415519:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41551d:	8b 48 18             	mov    0x18(%rax),%ecx
  415520:	48 ff c9             	dec    %rcx
  415523:	89 48 18             	mov    %ecx,0x18(%rax)
  415526:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41552a:	8b 40 18             	mov    0x18(%rax),%eax
  41552d:	48 83 f8 01          	cmp    $0x1,%rax
  415531:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  415538:	0f 85 a0 04 00 00    	jne    4159de <BZ2_decompress+0x3cce>
  41553e:	e9 9e 04 00 00       	jmpq   4159e1 <BZ2_decompress+0x3cd1>
  415543:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  415547:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41554b:	8b 94 81 4c 08 00 00 	mov    0x84c(%rcx,%rax,4),%edx
  415552:	48 ff c2             	inc    %rdx
  415555:	89 94 81 4c 08 00 00 	mov    %edx,0x84c(%rcx,%rax,4)
  41555c:	8b 45 bc             	mov    -0x44(%rbp),%eax
  41555f:	48 ff c0             	inc    %rax
  415562:	89 45 bc             	mov    %eax,-0x44(%rbp)
  415565:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  415569:	48 63 4d 90          	movslq -0x70(%rbp),%rcx
  41556d:	48 39 c8             	cmp    %rcx,%rax
  415570:	0f 8d ea 01 00 00    	jge    415760 <BZ2_decompress+0x3a50>
  415576:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41557a:	48 63 4d bc          	movslq -0x44(%rbp),%rcx
  41557e:	48 8b 80 58 0c 00 00 	mov    0xc58(%rax),%rax
  415585:	0f b6 04 48          	movzbl (%rax,%rcx,2),%eax
  415589:	88 45 d7             	mov    %al,-0x29(%rbp)
  41558c:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  415590:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415594:	0f b6 84 81 4c 08 00 	movzbl 0x84c(%rcx,%rax,4),%eax
  41559b:	00 
  41559c:	48 63 55 bc          	movslq -0x44(%rbp),%rdx
  4155a0:	48 8b 89 58 0c 00 00 	mov    0xc58(%rcx),%rcx
  4155a7:	66 89 04 51          	mov    %ax,(%rcx,%rdx,2)
  4155ab:	0f b6 45 bc          	movzbl -0x44(%rbp),%eax
  4155af:	48 a9 01 00 00 00    	test   $0x1,%rax
  4155b5:	75 3b                	jne    4155f2 <BZ2_decompress+0x38e2>
  4155b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4155bb:	48 63 55 bc          	movslq -0x44(%rbp),%rdx
  4155bf:	48 8b b0 60 0c 00 00 	mov    0xc60(%rax),%rsi
  4155c6:	0f b6 7d d7          	movzbl -0x29(%rbp),%edi
  4155ca:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  4155d1:	48 d3 fa             	sar    %cl,%rdx
  4155d4:	0f b6 0c 16          	movzbl (%rsi,%rdx,1),%ecx
  4155d8:	0f b6 84 b8 4e 08 00 	movzbl 0x84e(%rax,%rdi,4),%eax
  4155df:	00 
  4155e0:	48 81 e1 f0 00 00 00 	and    $0xf0,%rcx
  4155e7:	48 09 c8             	or     %rcx,%rax
  4155ea:	88 04 16             	mov    %al,(%rsi,%rdx,1)
  4155ed:	e9 51 ff ff ff       	jmpq   415543 <BZ2_decompress+0x3833>
  4155f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4155f6:	48 63 55 bc          	movslq -0x44(%rbp),%rdx
  4155fa:	0f b6 75 d7          	movzbl -0x29(%rbp),%esi
  4155fe:	48 8b b8 60 0c 00 00 	mov    0xc60(%rax),%rdi
  415605:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  41560c:	48 d3 fa             	sar    %cl,%rdx
  41560f:	8b 84 b0 4c 08 00 00 	mov    0x84c(%rax,%rsi,4),%eax
  415616:	0f b6 34 17          	movzbl (%rdi,%rdx,1),%esi
  41561a:	48 83 e6 0f          	and    $0xf,%rsi
  41561e:	48 c7 c1 0c 00 00 00 	mov    $0xc,%rcx
  415625:	48 d3 e8             	shr    %cl,%rax
  415628:	48 25 f0 00 00 00    	and    $0xf0,%rax
  41562e:	48 09 f0             	or     %rsi,%rax
  415631:	88 04 17             	mov    %al,(%rdi,%rdx,1)
  415634:	e9 0a ff ff ff       	jmpq   415543 <BZ2_decompress+0x3833>
  415639:	48 63 85 b0 fe ff ff 	movslq -0x150(%rbp),%rax
  415640:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415644:	8b 94 81 8c 1e 00 00 	mov    0x1e8c(%rcx,%rax,4),%edx
  41564b:	48 ff ca             	dec    %rdx
  41564e:	89 94 81 8c 1e 00 00 	mov    %edx,0x1e8c(%rcx,%rax,4)
  415655:	48 63 85 b0 fe ff ff 	movslq -0x150(%rbp),%rax
  41565c:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  415660:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  415667:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  41566b:	48 d3 e2             	shl    %cl,%rdx
  41566e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  415675:	48 d3 fa             	sar    %cl,%rdx
  415678:	8b 94 96 8c 1e 00 00 	mov    0x1e8c(%rsi,%rdx,4),%edx
  41567f:	48 83 c2 10          	add    $0x10,%rdx
  415683:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41568a:	48 d3 e2             	shl    %cl,%rdx
  41568d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  415694:	48 d3 fa             	sar    %cl,%rdx
  415697:	0f b6 8c 32 8b 0e 00 	movzbl 0xe8b(%rdx,%rsi,1),%ecx
  41569e:	00 
  41569f:	48 63 84 86 8c 1e 00 	movslq 0x1e8c(%rsi,%rax,4),%rax
  4156a6:	00 
  4156a7:	88 8c 06 8c 0e 00 00 	mov    %cl,0xe8c(%rsi,%rax,1)
  4156ae:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
  4156b4:	48 ff c8             	dec    %rax
  4156b7:	89 85 b0 fe ff ff    	mov    %eax,-0x150(%rbp)
  4156bd:	48 63 85 b0 fe ff ff 	movslq -0x150(%rbp),%rax
  4156c4:	48 85 c0             	test   %rax,%rax
  4156c7:	0f 8f 6c ff ff ff    	jg     415639 <BZ2_decompress+0x3929>
  4156cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4156d1:	8b 88 8c 1e 00 00    	mov    0x1e8c(%rax),%ecx
  4156d7:	48 ff c9             	dec    %rcx
  4156da:	89 88 8c 1e 00 00    	mov    %ecx,0x1e8c(%rax)
  4156e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4156e4:	0f b6 4d d7          	movzbl -0x29(%rbp),%ecx
  4156e8:	48 63 90 8c 1e 00 00 	movslq 0x1e8c(%rax),%rdx
  4156ef:	88 8c 10 8c 0e 00 00 	mov    %cl,0xe8c(%rax,%rdx,1)
  4156f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4156fa:	8b 80 8c 1e 00 00    	mov    0x1e8c(%rax),%eax
  415700:	48 85 c0             	test   %rax,%rax
  415703:	0f 85 29 04 00 00    	jne    415b32 <BZ2_decompress+0x3e22>
  415709:	48 c7 c0 ff 0f 00 00 	mov    $0xfff,%rax
  415710:	89 85 b8 fe ff ff    	mov    %eax,-0x148(%rbp)
  415716:	48 c7 c0 0f 00 00 00 	mov    $0xf,%rax
  41571d:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  415723:	e9 f5 02 00 00       	jmpq   415a1d <BZ2_decompress+0x3d0d>
  415728:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41572c:	8b 48 3c             	mov    0x3c(%rax),%ecx
  41572f:	48 8b 90 50 0c 00 00 	mov    0xc50(%rax),%rdx
  415736:	8b 0c 8a             	mov    (%rdx,%rcx,4),%ecx
  415739:	89 48 3c             	mov    %ecx,0x3c(%rax)
  41573c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415740:	0f b6 48 3c          	movzbl 0x3c(%rax),%ecx
  415744:	89 48 40             	mov    %ecx,0x40(%rax)
  415747:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41574b:	8b 50 3c             	mov    0x3c(%rax),%edx
  41574e:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  415755:	48 d3 ea             	shr    %cl,%rdx
  415758:	89 50 3c             	mov    %edx,0x3c(%rax)
  41575b:	e9 ba 03 00 00       	jmpq   415b1a <BZ2_decompress+0x3e0a>
  415760:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415764:	48 63 40 38          	movslq 0x38(%rax),%rax
  415768:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41576c:	89 45 bc             	mov    %eax,-0x44(%rbp)
  41576f:	48 8b 91 58 0c 00 00 	mov    0xc58(%rcx),%rdx
  415776:	48 8b b1 60 0c 00 00 	mov    0xc60(%rcx),%rsi
  41577d:	0f b6 14 42          	movzbl (%rdx,%rax,2),%edx
  415781:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  415788:	48 89 c7             	mov    %rax,%rdi
  41578b:	48 d3 ff             	sar    %cl,%rdi
  41578e:	0f b6 34 3e          	movzbl (%rsi,%rdi,1),%esi
  415792:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  415799:	48 d3 e0             	shl    %cl,%rax
  41579c:	48 83 e0 04          	and    $0x4,%rax
  4157a0:	48 89 c1             	mov    %rax,%rcx
  4157a3:	48 d3 ee             	shr    %cl,%rsi
  4157a6:	48 83 e6 0f          	and    $0xf,%rsi
  4157aa:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  4157b1:	48 d3 e6             	shl    %cl,%rsi
  4157b4:	48 09 d6             	or     %rdx,%rsi
  4157b7:	89 75 b8             	mov    %esi,-0x48(%rbp)
  4157ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4157be:	48 63 55 b8          	movslq -0x48(%rbp),%rdx
  4157c2:	48 8b 88 58 0c 00 00 	mov    0xc58(%rax),%rcx
  4157c9:	48 8b 80 60 0c 00 00 	mov    0xc60(%rax),%rax
  4157d0:	0f b6 34 51          	movzbl (%rcx,%rdx,2),%esi
  4157d4:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  4157db:	48 89 d7             	mov    %rdx,%rdi
  4157de:	48 d3 ff             	sar    %cl,%rdi
  4157e1:	0f b6 04 38          	movzbl (%rax,%rdi,1),%eax
  4157e5:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  4157ec:	48 d3 e2             	shl    %cl,%rdx
  4157ef:	48 83 e2 04          	and    $0x4,%rdx
  4157f3:	48 89 d1             	mov    %rdx,%rcx
  4157f6:	48 d3 e8             	shr    %cl,%rax
  4157f9:	48 83 e0 0f          	and    $0xf,%rax
  4157fd:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  415804:	48 d3 e0             	shl    %cl,%rax
  415807:	48 09 f0             	or     %rsi,%rax
  41580a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41580e:	89 85 98 fe ff ff    	mov    %eax,-0x168(%rbp)
  415814:	0f b6 45 bc          	movzbl -0x44(%rbp),%eax
  415818:	48 63 55 b8          	movslq -0x48(%rbp),%rdx
  41581c:	48 8b 89 58 0c 00 00 	mov    0xc58(%rcx),%rcx
  415823:	66 89 04 51          	mov    %ax,(%rcx,%rdx,2)
  415827:	0f b6 45 b8          	movzbl -0x48(%rbp),%eax
  41582b:	48 a9 01 00 00 00    	test   $0x1,%rax
  415831:	75 2d                	jne    415860 <BZ2_decompress+0x3b50>
  415833:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415837:	48 63 55 b8          	movslq -0x48(%rbp),%rdx
  41583b:	48 8b 80 60 0c 00 00 	mov    0xc60(%rax),%rax
  415842:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  415849:	48 d3 fa             	sar    %cl,%rdx
  41584c:	0f b6 0c 10          	movzbl (%rax,%rdx,1),%ecx
  415850:	0f b6 75 be          	movzbl -0x42(%rbp),%esi
  415854:	48 81 e1 f0 00 00 00 	and    $0xf0,%rcx
  41585b:	48 09 ce             	or     %rcx,%rsi
  41585e:	eb 38                	jmp    415898 <BZ2_decompress+0x3b88>
  415860:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415864:	48 63 55 b8          	movslq -0x48(%rbp),%rdx
  415868:	48 8b 80 60 0c 00 00 	mov    0xc60(%rax),%rax
  41586f:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  415876:	48 d3 fa             	sar    %cl,%rdx
  415879:	8b 75 bc             	mov    -0x44(%rbp),%esi
  41587c:	0f b6 3c 10          	movzbl (%rax,%rdx,1),%edi
  415880:	48 83 e7 0f          	and    $0xf,%rdi
  415884:	48 c7 c1 0c 00 00 00 	mov    $0xc,%rcx
  41588b:	48 d3 ee             	shr    %cl,%rsi
  41588e:	48 81 e6 f0 00 00 00 	and    $0xf0,%rsi
  415895:	48 09 fe             	or     %rdi,%rsi
  415898:	40 88 34 10          	mov    %sil,(%rax,%rdx,1)
  41589c:	8b 45 b8             	mov    -0x48(%rbp),%eax
  41589f:	8b 8d 98 fe ff ff    	mov    -0x168(%rbp),%ecx
  4158a5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4158a9:	89 45 bc             	mov    %eax,-0x44(%rbp)
  4158ac:	89 4d b8             	mov    %ecx,-0x48(%rbp)
  4158af:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4158b2:	8b 4a 38             	mov    0x38(%rdx),%ecx
  4158b5:	48 39 c8             	cmp    %rcx,%rax
  4158b8:	0f 85 fc fe ff ff    	jne    4157ba <BZ2_decompress+0x3aaa>
  4158be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4158c2:	8b 48 38             	mov    0x38(%rax),%ecx
  4158c5:	89 48 3c             	mov    %ecx,0x3c(%rax)
  4158c8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4158cc:	48 31 c0             	xor    %rax,%rax
  4158cf:	89 81 44 04 00 00    	mov    %eax,0x444(%rcx)
  4158d5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4158d9:	0f b6 49 14          	movzbl 0x14(%rcx),%ecx
  4158dd:	48 85 c9             	test   %rcx,%rcx
  4158e0:	0f 84 c3 01 00 00    	je     415aa9 <BZ2_decompress+0x3d99>
  4158e6:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4158ea:	89 41 18             	mov    %eax,0x18(%rcx)
  4158ed:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4158f1:	89 41 1c             	mov    %eax,0x1c(%rcx)
  4158f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4158f8:	8b 48 3c             	mov    0x3c(%rax),%ecx
  4158fb:	48 05 48 04 00 00    	add    $0x448,%rax
  415901:	48 89 cf             	mov    %rcx,%rdi
  415904:	48 89 c6             	mov    %rax,%rsi
  415907:	e8 e4 2c ff ff       	callq  4085f0 <BZ2_indexIntoF>
  41590c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415910:	89 41 40             	mov    %eax,0x40(%rcx)
  415913:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415917:	8b 50 3c             	mov    0x3c(%rax),%edx
  41591a:	48 8b 88 58 0c 00 00 	mov    0xc58(%rax),%rcx
  415921:	48 8b b0 60 0c 00 00 	mov    0xc60(%rax),%rsi
  415928:	0f b6 3c 51          	movzbl (%rcx,%rdx,2),%edi
  41592c:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  415933:	48 89 d3             	mov    %rdx,%rbx
  415936:	48 d3 eb             	shr    %cl,%rbx
  415939:	0f b6 34 1e          	movzbl (%rsi,%rbx,1),%esi
  41593d:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  415944:	48 d3 e2             	shl    %cl,%rdx
  415947:	48 83 e2 04          	and    $0x4,%rdx
  41594b:	48 89 d1             	mov    %rdx,%rcx
  41594e:	48 d3 ee             	shr    %cl,%rsi
  415951:	48 83 e6 0f          	and    $0xf,%rsi
  415955:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  41595c:	48 d3 e6             	shl    %cl,%rsi
  41595f:	48 09 fe             	or     %rdi,%rsi
  415962:	89 70 3c             	mov    %esi,0x3c(%rax)
  415965:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415969:	8b 88 44 04 00 00    	mov    0x444(%rax),%ecx
  41596f:	48 ff c1             	inc    %rcx
  415972:	89 88 44 04 00 00    	mov    %ecx,0x444(%rax)
  415978:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41597c:	8b 48 18             	mov    0x18(%rax),%ecx
  41597f:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  415986:	48 85 c9             	test   %rcx,%rcx
  415989:	75 39                	jne    4159c4 <BZ2_decompress+0x3cb4>
  41598b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  41598f:	48 63 51 1c          	movslq 0x1c(%rcx),%rdx
  415993:	8b 14 95 d0 ac 62 00 	mov    0x62acd0(,%rdx,4),%edx
  41599a:	89 51 18             	mov    %edx,0x18(%rcx)
  41599d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4159a1:	8b 51 1c             	mov    0x1c(%rcx),%edx
  4159a4:	48 ff c2             	inc    %rdx
  4159a7:	89 51 1c             	mov    %edx,0x1c(%rcx)
  4159aa:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4159ae:	8b 49 1c             	mov    0x1c(%rcx),%ecx
  4159b1:	48 81 f9 00 02 00 00 	cmp    $0x200,%rcx
  4159b8:	75 0a                	jne    4159c4 <BZ2_decompress+0x3cb4>
  4159ba:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4159be:	48 31 d2             	xor    %rdx,%rdx
  4159c1:	89 51 1c             	mov    %edx,0x1c(%rcx)
  4159c4:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4159c8:	8b 51 18             	mov    0x18(%rcx),%edx
  4159cb:	48 ff ca             	dec    %rdx
  4159ce:	89 51 18             	mov    %edx,0x18(%rcx)
  4159d1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4159d5:	8b 49 18             	mov    0x18(%rcx),%ecx
  4159d8:	48 83 f9 01          	cmp    $0x1,%rcx
  4159dc:	74 03                	je     4159e1 <BZ2_decompress+0x3cd1>
  4159de:	48 31 c0             	xor    %rax,%rax
  4159e1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4159e5:	8b 51 40             	mov    0x40(%rcx),%edx
  4159e8:	48 31 c2             	xor    %rax,%rdx
  4159eb:	89 51 40             	mov    %edx,0x40(%rcx)
  4159ee:	e9 32 e3 ff ff       	jmpq   413d25 <BZ2_decompress+0x2015>
  4159f3:	8b 8d b8 fe ff ff    	mov    -0x148(%rbp),%ecx
  4159f9:	48 63 95 c0 fe ff ff 	movslq -0x140(%rbp),%rdx
  415a00:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  415a04:	48 ff c1             	inc    %rcx
  415a07:	89 8c 96 8c 1e 00 00 	mov    %ecx,0x1e8c(%rsi,%rdx,4)
  415a0e:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
  415a14:	48 ff c9             	dec    %rcx
  415a17:	89 8d c0 fe ff ff    	mov    %ecx,-0x140(%rbp)
  415a1d:	48 63 8d c0 fe ff ff 	movslq -0x140(%rbp),%rcx
  415a24:	48 85 c9             	test   %rcx,%rcx
  415a27:	0f 88 05 01 00 00    	js     415b32 <BZ2_decompress+0x3e22>
  415a2d:	89 85 bc fe ff ff    	mov    %eax,-0x144(%rbp)
  415a33:	eb 63                	jmp    415a98 <BZ2_decompress+0x3d88>
  415a35:	48 63 8d c0 fe ff ff 	movslq -0x140(%rbp),%rcx
  415a3c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  415a40:	8b 8c 8a 8c 1e 00 00 	mov    0x1e8c(%rdx,%rcx,4),%ecx
  415a47:	8b b5 bc fe ff ff    	mov    -0x144(%rbp),%esi
  415a4d:	48 01 ce             	add    %rcx,%rsi
  415a50:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  415a57:	48 d3 e6             	shl    %cl,%rsi
  415a5a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  415a61:	48 d3 fe             	sar    %cl,%rsi
  415a64:	0f b6 8c 32 8c 0e 00 	movzbl 0xe8c(%rdx,%rsi,1),%ecx
  415a6b:	00 
  415a6c:	48 63 b5 b8 fe ff ff 	movslq -0x148(%rbp),%rsi
  415a73:	88 8c 32 8c 0e 00 00 	mov    %cl,0xe8c(%rdx,%rsi,1)
  415a7a:	8b 8d b8 fe ff ff    	mov    -0x148(%rbp),%ecx
  415a80:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
  415a86:	48 ff c9             	dec    %rcx
  415a89:	89 8d b8 fe ff ff    	mov    %ecx,-0x148(%rbp)
  415a8f:	48 ff ca             	dec    %rdx
  415a92:	89 95 bc fe ff ff    	mov    %edx,-0x144(%rbp)
  415a98:	48 63 8d bc fe ff ff 	movslq -0x144(%rbp),%rcx
  415a9f:	48 85 c9             	test   %rcx,%rcx
  415aa2:	79 91                	jns    415a35 <BZ2_decompress+0x3d25>
  415aa4:	e9 4a ff ff ff       	jmpq   4159f3 <BZ2_decompress+0x3ce3>
  415aa9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415aad:	8b 48 3c             	mov    0x3c(%rax),%ecx
  415ab0:	48 05 48 04 00 00    	add    $0x448,%rax
  415ab6:	48 89 cf             	mov    %rcx,%rdi
  415ab9:	48 89 c6             	mov    %rax,%rsi
  415abc:	e8 2f 2b ff ff       	callq  4085f0 <BZ2_indexIntoF>
  415ac1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415ac5:	89 41 40             	mov    %eax,0x40(%rcx)
  415ac8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415acc:	8b 50 3c             	mov    0x3c(%rax),%edx
  415acf:	48 8b 88 58 0c 00 00 	mov    0xc58(%rax),%rcx
  415ad6:	48 8b b0 60 0c 00 00 	mov    0xc60(%rax),%rsi
  415add:	0f b6 3c 51          	movzbl (%rcx,%rdx,2),%edi
  415ae1:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  415ae8:	48 89 d3             	mov    %rdx,%rbx
  415aeb:	48 d3 eb             	shr    %cl,%rbx
  415aee:	0f b6 34 1e          	movzbl (%rsi,%rbx,1),%esi
  415af2:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  415af9:	48 d3 e2             	shl    %cl,%rdx
  415afc:	48 83 e2 04          	and    $0x4,%rdx
  415b00:	48 89 d1             	mov    %rdx,%rcx
  415b03:	48 d3 ee             	shr    %cl,%rsi
  415b06:	48 83 e6 0f          	and    $0xf,%rsi
  415b0a:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  415b11:	48 d3 e6             	shl    %cl,%rsi
  415b14:	48 09 fe             	or     %rdi,%rsi
  415b17:	89 70 3c             	mov    %esi,0x3c(%rax)
  415b1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415b1e:	8b 88 44 04 00 00    	mov    0x444(%rax),%ecx
  415b24:	48 ff c1             	inc    %rcx
  415b27:	89 88 44 04 00 00    	mov    %ecx,0x444(%rax)
  415b2d:	e9 f3 e1 ff ff       	jmpq   413d25 <BZ2_decompress+0x2015>
  415b32:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  415b36:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415b3a:	0f b6 84 01 8c 0d 00 	movzbl 0xd8c(%rcx,%rax,1),%eax
  415b41:	00 
  415b42:	8b 54 81 44          	mov    0x44(%rcx,%rax,4),%edx
  415b46:	48 ff c2             	inc    %rdx
  415b49:	89 54 81 44          	mov    %edx,0x44(%rcx,%rax,4)
  415b4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415b51:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
  415b55:	48 85 c0             	test   %rax,%rax
  415b58:	74 21                	je     415b7b <BZ2_decompress+0x3e6b>
  415b5a:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  415b5e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415b62:	0f b6 84 01 8c 0d 00 	movzbl 0xd8c(%rcx,%rax,1),%eax
  415b69:	00 
  415b6a:	48 63 55 90          	movslq -0x70(%rbp),%rdx
  415b6e:	48 8b 89 58 0c 00 00 	mov    0xc58(%rcx),%rcx
  415b75:	66 89 04 51          	mov    %ax,(%rcx,%rdx,2)
  415b79:	eb 1e                	jmp    415b99 <BZ2_decompress+0x3e89>
  415b7b:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  415b7f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415b83:	0f b6 84 01 8c 0d 00 	movzbl 0xd8c(%rcx,%rax,1),%eax
  415b8a:	00 
  415b8b:	48 63 55 90          	movslq -0x70(%rbp),%rdx
  415b8f:	48 8b 89 50 0c 00 00 	mov    0xc50(%rcx),%rcx
  415b96:	89 04 91             	mov    %eax,(%rcx,%rdx,4)
  415b99:	8b 45 90             	mov    -0x70(%rbp),%eax
  415b9c:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  415b9f:	48 ff c0             	inc    %rax
  415ba2:	89 45 90             	mov    %eax,-0x70(%rbp)
  415ba5:	48 85 c9             	test   %rcx,%rcx
  415ba8:	0f 85 c8 00 00 00    	jne    415c76 <BZ2_decompress+0x3f66>
  415bae:	8b 45 a0             	mov    -0x60(%rbp),%eax
  415bb1:	48 ff c0             	inc    %rax
  415bb4:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  415bbb:	48 89 c2             	mov    %rax,%rdx
  415bbe:	48 d3 e2             	shl    %cl,%rdx
  415bc1:	48 63 75 a8          	movslq -0x58(%rbp),%rsi
  415bc5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  415bcc:	48 d3 fa             	sar    %cl,%rdx
  415bcf:	89 45 a0             	mov    %eax,-0x60(%rbp)
  415bd2:	48 39 f2             	cmp    %rsi,%rdx
  415bd5:	0f 8d 52 e1 ff ff    	jge    413d2d <BZ2_decompress+0x201d>
  415bdb:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  415bdf:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415be3:	48 c7 c2 32 00 00 00 	mov    $0x32,%rdx
  415bea:	89 55 9c             	mov    %edx,-0x64(%rbp)
  415bed:	0f b6 84 01 cc 1e 00 	movzbl 0x1ecc(%rcx,%rax,1),%eax
  415bf4:	00 
  415bf5:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  415bfb:	48 63 85 70 ff ff ff 	movslq -0x90(%rbp),%rax
  415c02:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415c06:	8b 84 81 0c fa 00 00 	mov    0xfa0c(%rcx,%rax,4),%eax
  415c0d:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  415c13:	48 63 85 70 ff ff ff 	movslq -0x90(%rbp),%rax
  415c1a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415c1e:	48 69 c0 08 04 00 00 	imul   $0x408,%rax,%rax
  415c25:	48 8d 84 01 7c b1 00 	lea    0xb17c(%rcx,%rax,1),%rax
  415c2c:	00 
  415c2d:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  415c34:	48 63 85 70 ff ff ff 	movslq -0x90(%rbp),%rax
  415c3b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415c3f:	48 69 c0 08 04 00 00 	imul   $0x408,%rax,%rax
  415c46:	48 63 95 70 ff ff ff 	movslq -0x90(%rbp),%rdx
  415c4d:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  415c51:	48 8d 84 01 dc e1 00 	lea    0xe1dc(%rcx,%rax,1),%rax
  415c58:	00 
  415c59:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  415c60:	48 69 c2 08 04 00 00 	imul   $0x408,%rdx,%rax
  415c67:	48 8d 84 06 ac c9 00 	lea    0xc9ac(%rsi,%rax,1),%rax
  415c6e:	00 
  415c6f:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  415c76:	8b 45 9c             	mov    -0x64(%rbp),%eax
  415c79:	8b 8d 6c ff ff ff    	mov    -0x94(%rbp),%ecx
  415c7f:	48 ff c8             	dec    %rax
  415c82:	89 45 9c             	mov    %eax,-0x64(%rbp)
  415c85:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
  415c8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415c8f:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  415c96:	89 48 08             	mov    %ecx,0x8(%rax)
  415c99:	eb 10                	jmp    415cab <BZ2_decompress+0x3f9b>
  415c9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415c9f:	48 8b 00             	mov    (%rax),%rax
  415ca2:	8b 48 10             	mov    0x10(%rax),%ecx
  415ca5:	48 ff c1             	inc    %rcx
  415ca8:	89 48 10             	mov    %ecx,0x10(%rax)
  415cab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415caf:	48 63 40 24          	movslq 0x24(%rax),%rax
  415cb3:	48 63 8d 7c ff ff ff 	movslq -0x84(%rbp),%rcx
  415cba:	48 39 c8             	cmp    %rcx,%rax
  415cbd:	0f 8d 83 00 00 00    	jge    415d46 <BZ2_decompress+0x4036>
  415cc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415cc7:	48 8b 00             	mov    (%rax),%rax
  415cca:	8b 40 08             	mov    0x8(%rax),%eax
  415ccd:	48 85 c0             	test   %rax,%rax
  415cd0:	0f 84 4f e0 ff ff    	je     413d25 <BZ2_decompress+0x2015>
  415cd6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415cda:	48 8b 08             	mov    (%rax),%rcx
  415cdd:	48 8b 09             	mov    (%rcx),%rcx
  415ce0:	8b 50 20             	mov    0x20(%rax),%edx
  415ce3:	0f b6 31             	movzbl (%rcx),%esi
  415ce6:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  415ced:	48 d3 e2             	shl    %cl,%rdx
  415cf0:	48 09 d6             	or     %rdx,%rsi
  415cf3:	89 70 20             	mov    %esi,0x20(%rax)
  415cf6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415cfa:	8b 48 24             	mov    0x24(%rax),%ecx
  415cfd:	48 83 c1 08          	add    $0x8,%rcx
  415d01:	89 48 24             	mov    %ecx,0x24(%rax)
  415d04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415d08:	48 8b 00             	mov    (%rax),%rax
  415d0b:	48 ff 00             	incq   (%rax)
  415d0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415d12:	48 8b 00             	mov    (%rax),%rax
  415d15:	8b 48 08             	mov    0x8(%rax),%ecx
  415d18:	48 ff c9             	dec    %rcx
  415d1b:	89 48 08             	mov    %ecx,0x8(%rax)
  415d1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415d22:	48 8b 00             	mov    (%rax),%rax
  415d25:	8b 48 0c             	mov    0xc(%rax),%ecx
  415d28:	48 ff c1             	inc    %rcx
  415d2b:	89 48 0c             	mov    %ecx,0xc(%rax)
  415d2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415d32:	48 8b 00             	mov    (%rax),%rax
  415d35:	8b 40 0c             	mov    0xc(%rax),%eax
  415d38:	48 85 c0             	test   %rax,%rax
  415d3b:	0f 85 6a ff ff ff    	jne    415cab <BZ2_decompress+0x3f9b>
  415d41:	e9 55 ff ff ff       	jmpq   415c9b <BZ2_decompress+0x3f8b>
  415d46:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  415d4a:	8b 4a 24             	mov    0x24(%rdx),%ecx
  415d4d:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  415d53:	8b 52 20             	mov    0x20(%rdx),%edx
  415d56:	48 29 c1             	sub    %rax,%rcx
  415d59:	4c 21 f1             	and    %r14,%rcx
  415d5c:	48 d3 ea             	shr    %cl,%rdx
  415d5f:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  415d66:	48 89 c1             	mov    %rax,%rcx
  415d69:	48 d3 e6             	shl    %cl,%rsi
  415d6c:	48 ff ce             	dec    %rsi
  415d6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415d73:	48 21 d6             	and    %rdx,%rsi
  415d76:	89 b5 a0 fe ff ff    	mov    %esi,-0x160(%rbp)
  415d7c:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
  415d82:	8b 50 24             	mov    0x24(%rax),%edx
  415d85:	48 29 ca             	sub    %rcx,%rdx
  415d88:	89 50 24             	mov    %edx,0x24(%rax)
  415d8b:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
  415d91:	e9 2e 05 00 00       	jmpq   4162c4 <BZ2_decompress+0x45b4>
  415d96:	8b 45 98             	mov    -0x68(%rbp),%eax
  415d99:	48 85 c0             	test   %rax,%rax
  415d9c:	74 18                	je     415db6 <BZ2_decompress+0x40a6>
  415d9e:	8b 45 98             	mov    -0x68(%rbp),%eax
  415da1:	48 83 f8 01          	cmp    $0x1,%rax
  415da5:	75 1b                	jne    415dc2 <BZ2_decompress+0x40b2>
  415da7:	8b 45 8c             	mov    -0x74(%rbp),%eax
  415daa:	8b 4d 88             	mov    -0x78(%rbp),%ecx
  415dad:	48 8d 04 48          	lea    (%rax,%rcx,2),%rax
  415db1:	89 45 8c             	mov    %eax,-0x74(%rbp)
  415db4:	eb 0c                	jmp    415dc2 <BZ2_decompress+0x40b2>
  415db6:	8b 45 8c             	mov    -0x74(%rbp),%eax
  415db9:	8b 4d 88             	mov    -0x78(%rbp),%ecx
  415dbc:	48 01 c1             	add    %rax,%rcx
  415dbf:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  415dc2:	8b 45 88             	mov    -0x78(%rbp),%eax
  415dc5:	8b 4d 9c             	mov    -0x64(%rbp),%ecx
  415dc8:	48 01 c0             	add    %rax,%rax
  415dcb:	89 45 88             	mov    %eax,-0x78(%rbp)
  415dce:	48 85 c9             	test   %rcx,%rcx
  415dd1:	0f 85 c8 00 00 00    	jne    415e9f <BZ2_decompress+0x418f>
  415dd7:	8b 45 a0             	mov    -0x60(%rbp),%eax
  415dda:	48 ff c0             	inc    %rax
  415ddd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  415de4:	48 89 c2             	mov    %rax,%rdx
  415de7:	48 d3 e2             	shl    %cl,%rdx
  415dea:	48 63 75 a8          	movslq -0x58(%rbp),%rsi
  415dee:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  415df5:	48 d3 fa             	sar    %cl,%rdx
  415df8:	89 45 a0             	mov    %eax,-0x60(%rbp)
  415dfb:	48 39 f2             	cmp    %rsi,%rdx
  415dfe:	0f 8d 29 df ff ff    	jge    413d2d <BZ2_decompress+0x201d>
  415e04:	48 63 45 a0          	movslq -0x60(%rbp),%rax
  415e08:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415e0c:	48 c7 c2 32 00 00 00 	mov    $0x32,%rdx
  415e13:	89 55 9c             	mov    %edx,-0x64(%rbp)
  415e16:	0f b6 84 01 cc 1e 00 	movzbl 0x1ecc(%rcx,%rax,1),%eax
  415e1d:	00 
  415e1e:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  415e24:	48 63 85 70 ff ff ff 	movslq -0x90(%rbp),%rax
  415e2b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415e2f:	8b 84 81 0c fa 00 00 	mov    0xfa0c(%rcx,%rax,4),%eax
  415e36:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
  415e3c:	48 63 85 70 ff ff ff 	movslq -0x90(%rbp),%rax
  415e43:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415e47:	48 69 c0 08 04 00 00 	imul   $0x408,%rax,%rax
  415e4e:	48 8d 84 01 7c b1 00 	lea    0xb17c(%rcx,%rax,1),%rax
  415e55:	00 
  415e56:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
  415e5d:	48 63 85 70 ff ff ff 	movslq -0x90(%rbp),%rax
  415e64:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  415e68:	48 69 c0 08 04 00 00 	imul   $0x408,%rax,%rax
  415e6f:	48 63 95 70 ff ff ff 	movslq -0x90(%rbp),%rdx
  415e76:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  415e7a:	48 8d 84 01 dc e1 00 	lea    0xe1dc(%rcx,%rax,1),%rax
  415e81:	00 
  415e82:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  415e89:	48 69 c2 08 04 00 00 	imul   $0x408,%rdx,%rax
  415e90:	48 8d 84 06 ac c9 00 	lea    0xc9ac(%rsi,%rax,1),%rax
  415e97:	00 
  415e98:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  415e9f:	8b 45 9c             	mov    -0x64(%rbp),%eax
  415ea2:	8b 8d 6c ff ff ff    	mov    -0x94(%rbp),%ecx
  415ea8:	48 ff c8             	dec    %rax
  415eab:	89 45 9c             	mov    %eax,-0x64(%rbp)
  415eae:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
  415eb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415eb8:	48 c7 c1 26 00 00 00 	mov    $0x26,%rcx
  415ebf:	89 48 08             	mov    %ecx,0x8(%rax)
  415ec2:	eb 10                	jmp    415ed4 <BZ2_decompress+0x41c4>
  415ec4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415ec8:	48 8b 00             	mov    (%rax),%rax
  415ecb:	8b 48 10             	mov    0x10(%rax),%ecx
  415ece:	48 ff c1             	inc    %rcx
  415ed1:	89 48 10             	mov    %ecx,0x10(%rax)
  415ed4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415ed8:	48 63 40 24          	movslq 0x24(%rax),%rax
  415edc:	48 63 8d 7c ff ff ff 	movslq -0x84(%rbp),%rcx
  415ee3:	48 39 c8             	cmp    %rcx,%rax
  415ee6:	0f 8d 83 00 00 00    	jge    415f6f <BZ2_decompress+0x425f>
  415eec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415ef0:	48 8b 00             	mov    (%rax),%rax
  415ef3:	8b 40 08             	mov    0x8(%rax),%eax
  415ef6:	48 85 c0             	test   %rax,%rax
  415ef9:	0f 84 26 de ff ff    	je     413d25 <BZ2_decompress+0x2015>
  415eff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415f03:	48 8b 08             	mov    (%rax),%rcx
  415f06:	48 8b 09             	mov    (%rcx),%rcx
  415f09:	8b 50 20             	mov    0x20(%rax),%edx
  415f0c:	0f b6 31             	movzbl (%rcx),%esi
  415f0f:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  415f16:	48 d3 e2             	shl    %cl,%rdx
  415f19:	48 09 d6             	or     %rdx,%rsi
  415f1c:	89 70 20             	mov    %esi,0x20(%rax)
  415f1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415f23:	8b 48 24             	mov    0x24(%rax),%ecx
  415f26:	48 83 c1 08          	add    $0x8,%rcx
  415f2a:	89 48 24             	mov    %ecx,0x24(%rax)
  415f2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415f31:	48 8b 00             	mov    (%rax),%rax
  415f34:	48 ff 00             	incq   (%rax)
  415f37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415f3b:	48 8b 00             	mov    (%rax),%rax
  415f3e:	8b 48 08             	mov    0x8(%rax),%ecx
  415f41:	48 ff c9             	dec    %rcx
  415f44:	89 48 08             	mov    %ecx,0x8(%rax)
  415f47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415f4b:	48 8b 00             	mov    (%rax),%rax
  415f4e:	8b 48 0c             	mov    0xc(%rax),%ecx
  415f51:	48 ff c1             	inc    %rcx
  415f54:	89 48 0c             	mov    %ecx,0xc(%rax)
  415f57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415f5b:	48 8b 00             	mov    (%rax),%rax
  415f5e:	8b 40 0c             	mov    0xc(%rax),%eax
  415f61:	48 85 c0             	test   %rax,%rax
  415f64:	0f 85 6a ff ff ff    	jne    415ed4 <BZ2_decompress+0x41c4>
  415f6a:	e9 55 ff ff ff       	jmpq   415ec4 <BZ2_decompress+0x41b4>
  415f6f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  415f73:	8b 4a 24             	mov    0x24(%rdx),%ecx
  415f76:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  415f7c:	8b 52 20             	mov    0x20(%rdx),%edx
  415f7f:	48 29 c1             	sub    %rax,%rcx
  415f82:	4c 21 f1             	and    %r14,%rcx
  415f85:	48 d3 ea             	shr    %cl,%rdx
  415f88:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  415f8f:	48 89 c1             	mov    %rax,%rcx
  415f92:	48 d3 e6             	shl    %cl,%rsi
  415f95:	48 ff ce             	dec    %rsi
  415f98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415f9c:	48 21 d6             	and    %rdx,%rsi
  415f9f:	89 b5 c8 fe ff ff    	mov    %esi,-0x138(%rbp)
  415fa5:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
  415fab:	8b 50 24             	mov    0x24(%rax),%edx
  415fae:	48 29 ca             	sub    %rcx,%rdx
  415fb1:	89 50 24             	mov    %edx,0x24(%rax)
  415fb4:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
  415fba:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
  415fc0:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  415fc7:	48 83 f8 15          	cmp    $0x15,%rax
  415fcb:	0f 8d 5c dd ff ff    	jge    413d2d <BZ2_decompress+0x201d>
  415fd1:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  415fd8:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  415fdf:	48 63 95 78 ff ff ff 	movslq -0x88(%rbp),%rdx
  415fe6:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
  415fea:	48 39 c2             	cmp    %rax,%rdx
  415fed:	0f 8f d9 00 00 00    	jg     4160cc <BZ2_decompress+0x43bc>
  415ff3:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  415ffa:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  416001:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
  416007:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  41600a:	48 29 c2             	sub    %rax,%rdx
  41600d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  416014:	48 d3 e2             	shl    %cl,%rdx
  416017:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41601e:	48 d3 fa             	sar    %cl,%rdx
  416021:	48 85 d2             	test   %rdx,%rdx
  416024:	0f 88 03 dd ff ff    	js     413d2d <BZ2_decompress+0x201d>
  41602a:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  416031:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  416038:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
  41603e:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  416041:	48 29 c2             	sub    %rax,%rdx
  416044:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41604b:	48 d3 e2             	shl    %cl,%rdx
  41604e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  416055:	48 d3 fa             	sar    %cl,%rdx
  416058:	48 81 fa 02 01 00 00 	cmp    $0x102,%rdx
  41605f:	0f 8d c8 dc ff ff    	jge    413d2d <BZ2_decompress+0x201d>
  416065:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  41606c:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  416073:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
  416079:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  41607c:	48 29 c2             	sub    %rax,%rdx
  41607f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  416086:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  41608d:	48 d3 e2             	shl    %cl,%rdx
  416090:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  416097:	48 d3 fa             	sar    %cl,%rdx
  41609a:	8b 04 90             	mov    (%rax,%rdx,4),%eax
  41609d:	48 85 c0             	test   %rax,%rax
  4160a0:	89 45 98             	mov    %eax,-0x68(%rbp)
  4160a3:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4160aa:	0f 84 30 01 00 00    	je     4161e0 <BZ2_decompress+0x44d0>
  4160b0:	8b 45 98             	mov    -0x68(%rbp),%eax
  4160b3:	48 83 f8 01          	cmp    $0x1,%rax
  4160b7:	0f 85 19 01 00 00    	jne    4161d6 <BZ2_decompress+0x44c6>
  4160bd:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  4160c4:	00 00 00 
  4160c7:	e9 14 01 00 00       	jmpq   4161e0 <BZ2_decompress+0x44d0>
  4160cc:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  4160d2:	48 ff c0             	inc    %rax
  4160d5:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  4160db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4160df:	48 c7 c1 27 00 00 00 	mov    $0x27,%rcx
  4160e6:	89 48 08             	mov    %ecx,0x8(%rax)
  4160e9:	eb 10                	jmp    4160fb <BZ2_decompress+0x43eb>
  4160eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4160ef:	48 8b 00             	mov    (%rax),%rax
  4160f2:	8b 48 10             	mov    0x10(%rax),%ecx
  4160f5:	48 ff c1             	inc    %rcx
  4160f8:	89 48 10             	mov    %ecx,0x10(%rax)
  4160fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4160ff:	48 63 40 24          	movslq 0x24(%rax),%rax
  416103:	48 85 c0             	test   %rax,%rax
  416106:	0f 8f 83 00 00 00    	jg     41618f <BZ2_decompress+0x447f>
  41610c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416110:	48 8b 00             	mov    (%rax),%rax
  416113:	8b 40 08             	mov    0x8(%rax),%eax
  416116:	48 85 c0             	test   %rax,%rax
  416119:	0f 84 06 dc ff ff    	je     413d25 <BZ2_decompress+0x2015>
  41611f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416123:	48 8b 08             	mov    (%rax),%rcx
  416126:	48 8b 09             	mov    (%rcx),%rcx
  416129:	8b 50 20             	mov    0x20(%rax),%edx
  41612c:	0f b6 31             	movzbl (%rcx),%esi
  41612f:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  416136:	48 d3 e2             	shl    %cl,%rdx
  416139:	48 09 d6             	or     %rdx,%rsi
  41613c:	89 70 20             	mov    %esi,0x20(%rax)
  41613f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416143:	8b 48 24             	mov    0x24(%rax),%ecx
  416146:	48 83 c1 08          	add    $0x8,%rcx
  41614a:	89 48 24             	mov    %ecx,0x24(%rax)
  41614d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416151:	48 8b 00             	mov    (%rax),%rax
  416154:	48 ff 00             	incq   (%rax)
  416157:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41615b:	48 8b 00             	mov    (%rax),%rax
  41615e:	8b 48 08             	mov    0x8(%rax),%ecx
  416161:	48 ff c9             	dec    %rcx
  416164:	89 48 08             	mov    %ecx,0x8(%rax)
  416167:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41616b:	48 8b 00             	mov    (%rax),%rax
  41616e:	8b 48 0c             	mov    0xc(%rax),%ecx
  416171:	48 ff c1             	inc    %rcx
  416174:	89 48 0c             	mov    %ecx,0xc(%rax)
  416177:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41617b:	48 8b 00             	mov    (%rax),%rax
  41617e:	8b 40 0c             	mov    0xc(%rax),%eax
  416181:	48 85 c0             	test   %rax,%rax
  416184:	0f 85 71 ff ff ff    	jne    4160fb <BZ2_decompress+0x43eb>
  41618a:	e9 5c ff ff ff       	jmpq   4160eb <BZ2_decompress+0x43db>
  41618f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416193:	8b 48 24             	mov    0x24(%rax),%ecx
  416196:	8b 40 20             	mov    0x20(%rax),%eax
  416199:	48 ff c9             	dec    %rcx
  41619c:	4c 21 f1             	and    %r14,%rcx
  41619f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4161a3:	48 d3 e8             	shr    %cl,%rax
  4161a6:	48 83 e0 01          	and    $0x1,%rax
  4161aa:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
  4161b0:	8b 42 24             	mov    0x24(%rdx),%eax
  4161b3:	48 ff c8             	dec    %rax
  4161b6:	89 42 24             	mov    %eax,0x24(%rdx)
  4161b9:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
  4161bf:	8b 8d c4 fe ff ff    	mov    -0x13c(%rbp),%ecx
  4161c5:	89 8d 74 ff ff ff    	mov    %ecx,-0x8c(%rbp)
  4161cb:	48 01 c0             	add    %rax,%rax
  4161ce:	48 09 c8             	or     %rcx,%rax
  4161d1:	e9 e4 fd ff ff       	jmpq   415fba <BZ2_decompress+0x42aa>
  4161d6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4161dd:	00 00 00 
  4161e0:	48 85 c0             	test   %rax,%rax
  4161e3:	0f 85 ad fb ff ff    	jne    415d96 <BZ2_decompress+0x4086>
  4161e9:	8b 45 8c             	mov    -0x74(%rbp),%eax
  4161ec:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4161f0:	48 ff c0             	inc    %rax
  4161f3:	89 45 8c             	mov    %eax,-0x74(%rbp)
  4161f6:	48 63 81 8c 1e 00 00 	movslq 0x1e8c(%rcx),%rax
  4161fd:	0f b6 84 01 8c 0e 00 	movzbl 0xe8c(%rcx,%rax,1),%eax
  416204:	00 
  416205:	0f b6 84 01 8c 0d 00 	movzbl 0xd8c(%rcx,%rax,1),%eax
  41620c:	00 
  41620d:	88 45 d7             	mov    %al,-0x29(%rbp)
  416210:	0f b6 45 d7          	movzbl -0x29(%rbp),%eax
  416214:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  416218:	8b 55 8c             	mov    -0x74(%rbp),%edx
  41621b:	8b 74 81 44          	mov    0x44(%rcx,%rax,4),%esi
  41621f:	48 01 d6             	add    %rdx,%rsi
  416222:	89 74 81 44          	mov    %esi,0x44(%rcx,%rax,4)
  416226:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41622a:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
  41622e:	48 85 c0             	test   %rax,%rax
  416231:	75 2b                	jne    41625e <BZ2_decompress+0x454e>
  416233:	eb 70                	jmp    4162a5 <BZ2_decompress+0x4595>
  416235:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416239:	0f b6 4d d7          	movzbl -0x29(%rbp),%ecx
  41623d:	48 63 55 90          	movslq -0x70(%rbp),%rdx
  416241:	48 8b 80 58 0c 00 00 	mov    0xc58(%rax),%rax
  416248:	66 89 0c 50          	mov    %cx,(%rax,%rdx,2)
  41624c:	8b 45 90             	mov    -0x70(%rbp),%eax
  41624f:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  416252:	48 ff c0             	inc    %rax
  416255:	89 45 90             	mov    %eax,-0x70(%rbp)
  416258:	48 ff c9             	dec    %rcx
  41625b:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  41625e:	48 63 45 8c          	movslq -0x74(%rbp),%rax
  416262:	48 85 c0             	test   %rax,%rax
  416265:	0f 8e 3a ed ff ff    	jle    414fa5 <BZ2_decompress+0x3295>
  41626b:	48 63 45 90          	movslq -0x70(%rbp),%rax
  41626f:	48 63 4d 94          	movslq -0x6c(%rbp),%rcx
  416273:	48 39 c8             	cmp    %rcx,%rax
  416276:	7c bd                	jl     416235 <BZ2_decompress+0x4525>
  416278:	e9 b0 da ff ff       	jmpq   413d2d <BZ2_decompress+0x201d>
  41627d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416281:	0f b6 4d d7          	movzbl -0x29(%rbp),%ecx
  416285:	48 63 55 90          	movslq -0x70(%rbp),%rdx
  416289:	48 8b 80 50 0c 00 00 	mov    0xc50(%rax),%rax
  416290:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  416293:	8b 45 90             	mov    -0x70(%rbp),%eax
  416296:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  416299:	48 ff c0             	inc    %rax
  41629c:	89 45 90             	mov    %eax,-0x70(%rbp)
  41629f:	48 ff c9             	dec    %rcx
  4162a2:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
  4162a5:	48 63 45 8c          	movslq -0x74(%rbp),%rax
  4162a9:	48 85 c0             	test   %rax,%rax
  4162ac:	0f 8e f3 ec ff ff    	jle    414fa5 <BZ2_decompress+0x3295>
  4162b2:	48 63 45 90          	movslq -0x70(%rbp),%rax
  4162b6:	48 63 4d 94          	movslq -0x6c(%rbp),%rcx
  4162ba:	48 39 c8             	cmp    %rcx,%rax
  4162bd:	7c be                	jl     41627d <BZ2_decompress+0x456d>
  4162bf:	e9 69 da ff ff       	jmpq   413d2d <BZ2_decompress+0x201d>
  4162c4:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
  4162ca:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  4162d1:	48 83 f8 15          	cmp    $0x15,%rax
  4162d5:	0f 8d 52 da ff ff    	jge    413d2d <BZ2_decompress+0x201d>
  4162db:	48 63 85 7c ff ff ff 	movslq -0x84(%rbp),%rax
  4162e2:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  4162e9:	48 63 95 78 ff ff ff 	movslq -0x88(%rbp),%rdx
  4162f0:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
  4162f4:	48 39 c2             	cmp    %rax,%rdx
  4162f7:	0f 8e fb eb ff ff    	jle    414ef8 <BZ2_decompress+0x31e8>
  4162fd:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  416303:	48 ff c0             	inc    %rax
  416306:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
  41630c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416310:	48 c7 c1 29 00 00 00 	mov    $0x29,%rcx
  416317:	89 48 08             	mov    %ecx,0x8(%rax)
  41631a:	eb 10                	jmp    41632c <BZ2_decompress+0x461c>
  41631c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416320:	48 8b 00             	mov    (%rax),%rax
  416323:	8b 48 10             	mov    0x10(%rax),%ecx
  416326:	48 ff c1             	inc    %rcx
  416329:	89 48 10             	mov    %ecx,0x10(%rax)
  41632c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416330:	48 63 40 24          	movslq 0x24(%rax),%rax
  416334:	48 85 c0             	test   %rax,%rax
  416337:	0f 8f 83 00 00 00    	jg     4163c0 <BZ2_decompress+0x46b0>
  41633d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416341:	48 8b 00             	mov    (%rax),%rax
  416344:	8b 40 08             	mov    0x8(%rax),%eax
  416347:	48 85 c0             	test   %rax,%rax
  41634a:	0f 84 d5 d9 ff ff    	je     413d25 <BZ2_decompress+0x2015>
  416350:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416354:	48 8b 08             	mov    (%rax),%rcx
  416357:	48 8b 09             	mov    (%rcx),%rcx
  41635a:	8b 50 20             	mov    0x20(%rax),%edx
  41635d:	0f b6 31             	movzbl (%rcx),%esi
  416360:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  416367:	48 d3 e2             	shl    %cl,%rdx
  41636a:	48 09 d6             	or     %rdx,%rsi
  41636d:	89 70 20             	mov    %esi,0x20(%rax)
  416370:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416374:	8b 48 24             	mov    0x24(%rax),%ecx
  416377:	48 83 c1 08          	add    $0x8,%rcx
  41637b:	89 48 24             	mov    %ecx,0x24(%rax)
  41637e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416382:	48 8b 00             	mov    (%rax),%rax
  416385:	48 ff 00             	incq   (%rax)
  416388:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41638c:	48 8b 00             	mov    (%rax),%rax
  41638f:	8b 48 08             	mov    0x8(%rax),%ecx
  416392:	48 ff c9             	dec    %rcx
  416395:	89 48 08             	mov    %ecx,0x8(%rax)
  416398:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41639c:	48 8b 00             	mov    (%rax),%rax
  41639f:	8b 48 0c             	mov    0xc(%rax),%ecx
  4163a2:	48 ff c1             	inc    %rcx
  4163a5:	89 48 0c             	mov    %ecx,0xc(%rax)
  4163a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4163ac:	48 8b 00             	mov    (%rax),%rax
  4163af:	8b 40 0c             	mov    0xc(%rax),%eax
  4163b2:	48 85 c0             	test   %rax,%rax
  4163b5:	0f 85 71 ff ff ff    	jne    41632c <BZ2_decompress+0x461c>
  4163bb:	e9 5c ff ff ff       	jmpq   41631c <BZ2_decompress+0x460c>
  4163c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4163c4:	8b 48 24             	mov    0x24(%rax),%ecx
  4163c7:	8b 40 20             	mov    0x20(%rax),%eax
  4163ca:	48 ff c9             	dec    %rcx
  4163cd:	4c 21 f1             	and    %r14,%rcx
  4163d0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4163d4:	48 d3 e8             	shr    %cl,%rax
  4163d7:	48 83 e0 01          	and    $0x1,%rax
  4163db:	89 85 9c fe ff ff    	mov    %eax,-0x164(%rbp)
  4163e1:	8b 42 24             	mov    0x24(%rdx),%eax
  4163e4:	48 ff c8             	dec    %rax
  4163e7:	89 42 24             	mov    %eax,0x24(%rdx)
  4163ea:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
  4163f0:	8b 8d 9c fe ff ff    	mov    -0x164(%rbp),%ecx
  4163f6:	89 8d 74 ff ff ff    	mov    %ecx,-0x8c(%rbp)
  4163fc:	48 01 c0             	add    %rax,%rax
  4163ff:	48 09 c8             	or     %rcx,%rax
  416402:	e9 bd fe ff ff       	jmpq   4162c4 <BZ2_decompress+0x45b4>
  416407:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41640e:	00 00 

0000000000416410 <makeMaps_d>:
  416410:	55                   	push   %rbp
  416411:	48 89 e5             	mov    %rsp,%rbp
  416414:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416418:	48 31 c0             	xor    %rax,%rax
  41641b:	89 87 78 0c 00 00    	mov    %eax,0xc78(%rdi)
  416421:	eb 13                	jmp    416436 <makeMaps_d+0x26>
  416423:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41642a:	84 00 00 00 00 00 
  416430:	8b 45 f4             	mov    -0xc(%rbp),%eax
  416433:	48 ff c0             	inc    %rax
  416436:	89 45 f4             	mov    %eax,-0xc(%rbp)
  416439:	48 63 45 f4          	movslq -0xc(%rbp),%rax
  41643d:	48 3d ff 00 00 00    	cmp    $0xff,%rax
  416443:	7f 40                	jg     416485 <makeMaps_d+0x75>
  416445:	48 63 45 f4          	movslq -0xc(%rbp),%rax
  416449:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  41644d:	0f b6 84 01 7c 0c 00 	movzbl 0xc7c(%rcx,%rax,1),%eax
  416454:	00 
  416455:	48 85 c0             	test   %rax,%rax
  416458:	74 d6                	je     416430 <makeMaps_d+0x20>
  41645a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41645e:	0f b6 4d f4          	movzbl -0xc(%rbp),%ecx
  416462:	48 63 90 78 0c 00 00 	movslq 0xc78(%rax),%rdx
  416469:	88 8c 10 8c 0d 00 00 	mov    %cl,0xd8c(%rax,%rdx,1)
  416470:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416474:	8b 88 78 0c 00 00    	mov    0xc78(%rax),%ecx
  41647a:	48 ff c1             	inc    %rcx
  41647d:	89 88 78 0c 00 00    	mov    %ecx,0xc78(%rax)
  416483:	eb ab                	jmp    416430 <makeMaps_d+0x20>
  416485:	5d                   	pop    %rbp
  416486:	c3                   	retq   
  416487:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41648e:	00 00 

0000000000416490 <BZ2_hbMakeCodeLengths>:
  416490:	55                   	push   %rbp
  416491:	48 89 e5             	mov    %rsp,%rbp
  416494:	41 57                	push   %r15
  416496:	41 56                	push   %r14
  416498:	41 55                	push   %r13
  41649a:	41 54                	push   %r12
  41649c:	53                   	push   %rbx
  41649d:	48 81 ec 98 14 00 00 	sub    $0x1498,%rsp
  4164a4:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
  4164a8:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
  4164ac:	89 55 c4             	mov    %edx,-0x3c(%rbp)
  4164af:	89 4d c0             	mov    %ecx,-0x40(%rbp)
  4164b2:	48 31 c0             	xor    %rax,%rax
  4164b5:	89 45 ac             	mov    %eax,-0x54(%rbp)
  4164b8:	eb 3a                	jmp    4164f4 <BZ2_hbMakeCodeLengths+0x64>
  4164ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4164c0:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4164c7:	48 d3 e0             	shl    %cl,%rax
  4164ca:	8b 55 ac             	mov    -0x54(%rbp),%edx
  4164cd:	48 ff c2             	inc    %rdx
  4164d0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4164d7:	48 d3 e2             	shl    %cl,%rdx
  4164da:	8b 75 ac             	mov    -0x54(%rbp),%esi
  4164dd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4164e4:	48 d3 fa             	sar    %cl,%rdx
  4164e7:	89 84 95 80 f3 ff ff 	mov    %eax,-0xc80(%rbp,%rdx,4)
  4164ee:	48 ff c6             	inc    %rsi
  4164f1:	89 75 ac             	mov    %esi,-0x54(%rbp)
  4164f4:	48 63 45 ac          	movslq -0x54(%rbp),%rax
  4164f8:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  4164fc:	48 39 c8             	cmp    %rcx,%rax
  4164ff:	7d 24                	jge    416525 <BZ2_hbMakeCodeLengths+0x95>
  416501:	48 63 45 ac          	movslq -0x54(%rbp),%rax
  416505:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  416509:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  41650c:	48 85 c0             	test   %rax,%rax
  41650f:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  416516:	74 a8                	je     4164c0 <BZ2_hbMakeCodeLengths+0x30>
  416518:	48 63 45 ac          	movslq -0x54(%rbp),%rax
  41651c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  416520:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  416523:	eb 9b                	jmp    4164c0 <BZ2_hbMakeCodeLengths+0x30>
  416525:	4d 31 ff             	xor    %r15,%r15
  416528:	49 c7 c5 01 00 00 00 	mov    $0x1,%r13
  41652f:	49 bc ff ff ff ff 00 	movabs $0xffffffff,%r12
  416536:	00 00 00 
  416539:	48 bb fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rbx
  416540:	ff ff 7f 
  416543:	49 be 00 ff ff ff 00 	movabs $0xffffff00,%r14
  41654a:	00 00 00 
  41654d:	eb 7e                	jmp    4165cd <BZ2_hbMakeCodeLengths+0x13d>
  41654f:	90                   	nop
  416550:	44 89 6d ac          	mov    %r13d,-0x54(%rbp)
  416554:	eb 6a                	jmp    4165c0 <BZ2_hbMakeCodeLengths+0x130>
  416556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41655d:	00 00 00 
  416560:	48 63 45 ac          	movslq -0x54(%rbp),%rax
  416564:	8b 84 85 80 f3 ff ff 	mov    -0xc80(%rbp,%rax,4),%eax
  41656b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  416572:	48 89 c2             	mov    %rax,%rdx
  416575:	48 d3 e2             	shl    %cl,%rdx
  416578:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  41657f:	48 d3 fa             	sar    %cl,%rdx
  416582:	89 55 a8             	mov    %edx,-0x58(%rbp)
  416585:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41658c:	48 d3 e8             	shr    %cl,%rax
  41658f:	48 01 d0             	add    %rdx,%rax
  416592:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  416599:	48 d3 f8             	sar    %cl,%rax
  41659c:	48 ff c0             	inc    %rax
  41659f:	89 45 a8             	mov    %eax,-0x58(%rbp)
  4165a2:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4165a9:	8b 55 ac             	mov    -0x54(%rbp),%edx
  4165ac:	48 63 75 ac          	movslq -0x54(%rbp),%rsi
  4165b0:	48 d3 e0             	shl    %cl,%rax
  4165b3:	89 84 b5 80 f3 ff ff 	mov    %eax,-0xc80(%rbp,%rsi,4)
  4165ba:	48 ff c2             	inc    %rdx
  4165bd:	89 55 ac             	mov    %edx,-0x54(%rbp)
  4165c0:	48 63 45 ac          	movslq -0x54(%rbp),%rax
  4165c4:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  4165c8:	48 39 c8             	cmp    %rcx,%rax
  4165cb:	7e 93                	jle    416560 <BZ2_hbMakeCodeLengths+0xd0>
  4165cd:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  4165d0:	89 45 bc             	mov    %eax,-0x44(%rbp)
  4165d3:	44 89 7d b8          	mov    %r15d,-0x48(%rbp)
  4165d7:	44 89 bd 90 fb ff ff 	mov    %r15d,-0x470(%rbp)
  4165de:	44 89 bd 80 f3 ff ff 	mov    %r15d,-0xc80(%rbp)
  4165e5:	48 b8 fe ff ff ff 00 	movabs $0xfffffffe,%rax
  4165ec:	00 00 00 
  4165ef:	89 85 70 eb ff ff    	mov    %eax,-0x1490(%rbp)
  4165f5:	44 89 6d ac          	mov    %r13d,-0x54(%rbp)
  4165f9:	eb 22                	jmp    41661d <BZ2_hbMakeCodeLengths+0x18d>
  4165fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  416600:	8b 85 68 eb ff ff    	mov    -0x1498(%rbp),%eax
  416606:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  416609:	48 63 95 6c eb ff ff 	movslq -0x1494(%rbp),%rdx
  416610:	89 84 95 90 fb ff ff 	mov    %eax,-0x470(%rbp,%rdx,4)
  416617:	48 ff c1             	inc    %rcx
  41661a:	89 4d ac             	mov    %ecx,-0x54(%rbp)
  41661d:	48 63 45 ac          	movslq -0x54(%rbp),%rax
  416621:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  416625:	48 39 c8             	cmp    %rcx,%rax
  416628:	0f 8f b2 00 00 00    	jg     4166e0 <BZ2_hbMakeCodeLengths+0x250>
  41662e:	8b 45 b8             	mov    -0x48(%rbp),%eax
  416631:	48 ff c0             	inc    %rax
  416634:	89 45 b8             	mov    %eax,-0x48(%rbp)
  416637:	8b 45 b8             	mov    -0x48(%rbp),%eax
  41663a:	8b 4d ac             	mov    -0x54(%rbp),%ecx
  41663d:	48 63 55 b8          	movslq -0x48(%rbp),%rdx
  416641:	89 85 6c eb ff ff    	mov    %eax,-0x1494(%rbp)
  416647:	48 63 85 6c eb ff ff 	movslq -0x1494(%rbp),%rax
  41664e:	89 8c 95 90 fb ff ff 	mov    %ecx,-0x470(%rbp,%rdx,4)
  416655:	48 63 4d ac          	movslq -0x54(%rbp),%rcx
  416659:	8b 84 85 90 fb ff ff 	mov    -0x470(%rbp,%rax,4),%eax
  416660:	44 89 a4 8d 70 eb ff 	mov    %r12d,-0x1490(%rbp,%rcx,4)
  416667:	ff 
  416668:	89 85 68 eb ff ff    	mov    %eax,-0x1498(%rbp)
  41666e:	eb 32                	jmp    4166a2 <BZ2_hbMakeCodeLengths+0x212>
  416670:	48 63 85 6c eb ff ff 	movslq -0x1494(%rbp),%rax
  416677:	48 89 c1             	mov    %rax,%rcx
  41667a:	48 21 d9             	and    %rbx,%rcx
  41667d:	48 63 95 6c eb ff ff 	movslq -0x1494(%rbp),%rdx
  416684:	8b 8c 4d 90 fb ff ff 	mov    -0x470(%rbp,%rcx,2),%ecx
  41668b:	89 8c 85 90 fb ff ff 	mov    %ecx,-0x470(%rbp,%rax,4)
  416692:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  416699:	48 d3 ea             	shr    %cl,%rdx
  41669c:	89 95 6c eb ff ff    	mov    %edx,-0x1494(%rbp)
  4166a2:	48 63 85 6c eb ff ff 	movslq -0x1494(%rbp),%rax
  4166a9:	48 63 8d 68 eb ff ff 	movslq -0x1498(%rbp),%rcx
  4166b0:	48 21 d8             	and    %rbx,%rax
  4166b3:	48 63 84 45 90 fb ff 	movslq -0x470(%rbp,%rax,2),%rax
  4166ba:	ff 
  4166bb:	48 63 8c 8d 80 f3 ff 	movslq -0xc80(%rbp,%rcx,4),%rcx
  4166c2:	ff 
  4166c3:	48 63 84 85 80 f3 ff 	movslq -0xc80(%rbp,%rax,4),%rax
  4166ca:	ff 
  4166cb:	48 39 c1             	cmp    %rax,%rcx
  4166ce:	7c a0                	jl     416670 <BZ2_hbMakeCodeLengths+0x1e0>
  4166d0:	e9 2b ff ff ff       	jmpq   416600 <BZ2_hbMakeCodeLengths+0x170>
  4166d5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  4166dc:	00 00 00 00 
  4166e0:	48 63 45 b8          	movslq -0x48(%rbp),%rax
  4166e4:	48 3d 04 01 00 00    	cmp    $0x104,%rax
  4166ea:	7c 28                	jl     416714 <BZ2_hbMakeCodeLengths+0x284>
  4166ec:	48 c7 c7 d1 07 00 00 	mov    $0x7d1,%rdi
  4166f3:	e8 88 13 ff ff       	callq  407a80 <BZ2_bz__AssertH__fail>
  4166f8:	eb 1a                	jmp    416714 <BZ2_hbMakeCodeLengths+0x284>
  4166fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  416700:	8b 85 48 eb ff ff    	mov    -0x14b8(%rbp),%eax
  416706:	48 63 8d 4c eb ff ff 	movslq -0x14b4(%rbp),%rcx
  41670d:	89 84 8d 90 fb ff ff 	mov    %eax,-0x470(%rbp,%rcx,4)
  416714:	48 63 45 b8          	movslq -0x48(%rbp),%rax
  416718:	48 83 f8 02          	cmp    $0x2,%rax
  41671c:	0f 8c ce 03 00 00    	jl     416af0 <BZ2_hbMakeCodeLengths+0x660>
  416722:	48 63 45 b8          	movslq -0x48(%rbp),%rax
  416726:	8b 84 85 90 fb ff ff 	mov    -0x470(%rbp,%rax,4),%eax
  41672d:	44 89 ad 64 eb ff ff 	mov    %r13d,-0x149c(%rbp)
  416734:	48 63 8d 64 eb ff ff 	movslq -0x149c(%rbp),%rcx
  41673b:	8b 95 94 fb ff ff    	mov    -0x46c(%rbp),%edx
  416741:	89 85 94 fb ff ff    	mov    %eax,-0x46c(%rbp)
  416747:	8b 45 b8             	mov    -0x48(%rbp),%eax
  41674a:	8b 8c 8d 90 fb ff ff 	mov    -0x470(%rbp,%rcx,4),%ecx
  416751:	89 55 b4             	mov    %edx,-0x4c(%rbp)
  416754:	48 ff c8             	dec    %rax
  416757:	89 45 b8             	mov    %eax,-0x48(%rbp)
  41675a:	89 8d 5c eb ff ff    	mov    %ecx,-0x14a4(%rbp)
  416760:	eb 36                	jmp    416798 <BZ2_hbMakeCodeLengths+0x308>
  416762:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  416769:	1f 84 00 00 00 00 00 
  416770:	48 63 85 60 eb ff ff 	movslq -0x14a0(%rbp),%rax
  416777:	8b 84 85 90 fb ff ff 	mov    -0x470(%rbp,%rax,4),%eax
  41677e:	48 63 8d 64 eb ff ff 	movslq -0x149c(%rbp),%rcx
  416785:	8b 95 60 eb ff ff    	mov    -0x14a0(%rbp),%edx
  41678b:	89 84 8d 90 fb ff ff 	mov    %eax,-0x470(%rbp,%rcx,4)
  416792:	89 95 64 eb ff ff    	mov    %edx,-0x149c(%rbp)
  416798:	8b 85 64 eb ff ff    	mov    -0x149c(%rbp),%eax
  41679e:	48 c7 c1 21 00 00 00 	mov    $0x21,%rcx
  4167a5:	48 89 c2             	mov    %rax,%rdx
  4167a8:	48 d3 e2             	shl    %cl,%rdx
  4167ab:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4167b2:	48 63 75 b8          	movslq -0x48(%rbp),%rsi
  4167b6:	48 d3 fa             	sar    %cl,%rdx
  4167b9:	48 01 c0             	add    %rax,%rax
  4167bc:	89 85 60 eb ff ff    	mov    %eax,-0x14a0(%rbp)
  4167c2:	48 39 f2             	cmp    %rsi,%rdx
  4167c5:	0f 8f 92 00 00 00    	jg     41685d <BZ2_hbMakeCodeLengths+0x3cd>
  4167cb:	48 63 85 60 eb ff ff 	movslq -0x14a0(%rbp),%rax
  4167d2:	48 63 4d b8          	movslq -0x48(%rbp),%rcx
  4167d6:	48 39 c8             	cmp    %rcx,%rax
  4167d9:	7d 53                	jge    41682e <BZ2_hbMakeCodeLengths+0x39e>
  4167db:	48 63 85 60 eb ff ff 	movslq -0x14a0(%rbp),%rax
  4167e2:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4167e6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4167ed:	48 d3 e2             	shl    %cl,%rdx
  4167f0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4167f7:	48 d3 fa             	sar    %cl,%rdx
  4167fa:	48 63 8c 95 90 fb ff 	movslq -0x470(%rbp,%rdx,4),%rcx
  416801:	ff 
  416802:	48 63 84 85 90 fb ff 	movslq -0x470(%rbp,%rax,4),%rax
  416809:	ff 
  41680a:	48 63 8c 8d 80 f3 ff 	movslq -0xc80(%rbp,%rcx,4),%rcx
  416811:	ff 
  416812:	48 63 84 85 80 f3 ff 	movslq -0xc80(%rbp,%rax,4),%rax
  416819:	ff 
  41681a:	48 39 c1             	cmp    %rax,%rcx
  41681d:	7d 0f                	jge    41682e <BZ2_hbMakeCodeLengths+0x39e>
  41681f:	8b 85 60 eb ff ff    	mov    -0x14a0(%rbp),%eax
  416825:	48 ff c0             	inc    %rax
  416828:	89 85 60 eb ff ff    	mov    %eax,-0x14a0(%rbp)
  41682e:	48 63 85 60 eb ff ff 	movslq -0x14a0(%rbp),%rax
  416835:	48 63 8d 5c eb ff ff 	movslq -0x14a4(%rbp),%rcx
  41683c:	48 63 84 85 90 fb ff 	movslq -0x470(%rbp,%rax,4),%rax
  416843:	ff 
  416844:	48 63 8c 8d 80 f3 ff 	movslq -0xc80(%rbp,%rcx,4),%rcx
  41684b:	ff 
  41684c:	48 63 84 85 80 f3 ff 	movslq -0xc80(%rbp,%rax,4),%rax
  416853:	ff 
  416854:	48 39 c1             	cmp    %rax,%rcx
  416857:	0f 8d 13 ff ff ff    	jge    416770 <BZ2_hbMakeCodeLengths+0x2e0>
  41685d:	8b 85 5c eb ff ff    	mov    -0x14a4(%rbp),%eax
  416863:	48 63 8d 64 eb ff ff 	movslq -0x149c(%rbp),%rcx
  41686a:	48 63 55 b8          	movslq -0x48(%rbp),%rdx
  41686e:	89 84 8d 90 fb ff ff 	mov    %eax,-0x470(%rbp,%rcx,4)
  416875:	8b 84 95 90 fb ff ff 	mov    -0x470(%rbp,%rdx,4),%eax
  41687c:	44 89 ad 58 eb ff ff 	mov    %r13d,-0x14a8(%rbp)
  416883:	48 63 8d 58 eb ff ff 	movslq -0x14a8(%rbp),%rcx
  41688a:	8b 95 94 fb ff ff    	mov    -0x46c(%rbp),%edx
  416890:	89 85 94 fb ff ff    	mov    %eax,-0x46c(%rbp)
  416896:	8b 45 b8             	mov    -0x48(%rbp),%eax
  416899:	8b 8c 8d 90 fb ff ff 	mov    -0x470(%rbp,%rcx,4),%ecx
  4168a0:	89 55 b0             	mov    %edx,-0x50(%rbp)
  4168a3:	48 ff c8             	dec    %rax
  4168a6:	89 45 b8             	mov    %eax,-0x48(%rbp)
  4168a9:	89 8d 50 eb ff ff    	mov    %ecx,-0x14b0(%rbp)
  4168af:	eb 37                	jmp    4168e8 <BZ2_hbMakeCodeLengths+0x458>
  4168b1:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4168b8:	0f 1f 84 00 00 00 00 
  4168bf:	00 
  4168c0:	48 63 85 54 eb ff ff 	movslq -0x14ac(%rbp),%rax
  4168c7:	8b 84 85 90 fb ff ff 	mov    -0x470(%rbp,%rax,4),%eax
  4168ce:	48 63 8d 58 eb ff ff 	movslq -0x14a8(%rbp),%rcx
  4168d5:	8b 95 54 eb ff ff    	mov    -0x14ac(%rbp),%edx
  4168db:	89 84 8d 90 fb ff ff 	mov    %eax,-0x470(%rbp,%rcx,4)
  4168e2:	89 95 58 eb ff ff    	mov    %edx,-0x14a8(%rbp)
  4168e8:	8b 85 58 eb ff ff    	mov    -0x14a8(%rbp),%eax
  4168ee:	48 c7 c1 21 00 00 00 	mov    $0x21,%rcx
  4168f5:	48 89 c2             	mov    %rax,%rdx
  4168f8:	48 d3 e2             	shl    %cl,%rdx
  4168fb:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  416902:	48 63 75 b8          	movslq -0x48(%rbp),%rsi
  416906:	48 d3 fa             	sar    %cl,%rdx
  416909:	48 01 c0             	add    %rax,%rax
  41690c:	89 85 54 eb ff ff    	mov    %eax,-0x14ac(%rbp)
  416912:	48 39 f2             	cmp    %rsi,%rdx
  416915:	0f 8f 92 00 00 00    	jg     4169ad <BZ2_hbMakeCodeLengths+0x51d>
  41691b:	48 63 85 54 eb ff ff 	movslq -0x14ac(%rbp),%rax
  416922:	48 63 4d b8          	movslq -0x48(%rbp),%rcx
  416926:	48 39 c8             	cmp    %rcx,%rax
  416929:	7d 53                	jge    41697e <BZ2_hbMakeCodeLengths+0x4ee>
  41692b:	48 63 85 54 eb ff ff 	movslq -0x14ac(%rbp),%rax
  416932:	48 8d 50 01          	lea    0x1(%rax),%rdx
  416936:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41693d:	48 d3 e2             	shl    %cl,%rdx
  416940:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  416947:	48 d3 fa             	sar    %cl,%rdx
  41694a:	48 63 8c 95 90 fb ff 	movslq -0x470(%rbp,%rdx,4),%rcx
  416951:	ff 
  416952:	48 63 84 85 90 fb ff 	movslq -0x470(%rbp,%rax,4),%rax
  416959:	ff 
  41695a:	48 63 8c 8d 80 f3 ff 	movslq -0xc80(%rbp,%rcx,4),%rcx
  416961:	ff 
  416962:	48 63 84 85 80 f3 ff 	movslq -0xc80(%rbp,%rax,4),%rax
  416969:	ff 
  41696a:	48 39 c1             	cmp    %rax,%rcx
  41696d:	7d 0f                	jge    41697e <BZ2_hbMakeCodeLengths+0x4ee>
  41696f:	8b 85 54 eb ff ff    	mov    -0x14ac(%rbp),%eax
  416975:	48 ff c0             	inc    %rax
  416978:	89 85 54 eb ff ff    	mov    %eax,-0x14ac(%rbp)
  41697e:	48 63 85 54 eb ff ff 	movslq -0x14ac(%rbp),%rax
  416985:	48 63 8d 50 eb ff ff 	movslq -0x14b0(%rbp),%rcx
  41698c:	48 63 84 85 90 fb ff 	movslq -0x470(%rbp,%rax,4),%rax
  416993:	ff 
  416994:	48 63 8c 8d 80 f3 ff 	movslq -0xc80(%rbp,%rcx,4),%rcx
  41699b:	ff 
  41699c:	48 63 84 85 80 f3 ff 	movslq -0xc80(%rbp,%rax,4),%rax
  4169a3:	ff 
  4169a4:	48 39 c1             	cmp    %rax,%rcx
  4169a7:	0f 8d 13 ff ff ff    	jge    4168c0 <BZ2_hbMakeCodeLengths+0x430>
  4169ad:	8b 85 50 eb ff ff    	mov    -0x14b0(%rbp),%eax
  4169b3:	48 63 8d 58 eb ff ff 	movslq -0x14a8(%rbp),%rcx
  4169ba:	89 84 8d 90 fb ff ff 	mov    %eax,-0x470(%rbp,%rcx,4)
  4169c1:	8b 45 bc             	mov    -0x44(%rbp),%eax
  4169c4:	48 ff c0             	inc    %rax
  4169c7:	89 45 bc             	mov    %eax,-0x44(%rbp)
  4169ca:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  4169ce:	48 63 55 b4          	movslq -0x4c(%rbp),%rdx
  4169d2:	48 63 75 b0          	movslq -0x50(%rbp),%rsi
  4169d6:	89 84 8d 70 eb ff ff 	mov    %eax,-0x1490(%rbp,%rcx,4)
  4169dd:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  4169e1:	8b 94 95 80 f3 ff ff 	mov    -0xc80(%rbp,%rdx,4),%edx
  4169e8:	8b b4 b5 80 f3 ff ff 	mov    -0xc80(%rbp,%rsi,4),%esi
  4169ef:	89 84 8d 70 eb ff ff 	mov    %eax,-0x1490(%rbp,%rcx,4)
  4169f6:	48 89 d1             	mov    %rdx,%rcx
  4169f9:	4c 21 f1             	and    %r14,%rcx
  4169fc:	48 89 f0             	mov    %rsi,%rax
  4169ff:	4c 21 f0             	and    %r14,%rax
  416a02:	48 01 c8             	add    %rcx,%rax
  416a05:	48 81 e2 ff 00 00 00 	and    $0xff,%rdx
  416a0c:	48 81 e6 ff 00 00 00 	and    $0xff,%rsi
  416a13:	48 39 f2             	cmp    %rsi,%rdx
  416a16:	7e 08                	jle    416a20 <BZ2_hbMakeCodeLengths+0x590>
  416a18:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
  416a1c:	eb 06                	jmp    416a24 <BZ2_hbMakeCodeLengths+0x594>
  416a1e:	66 90                	xchg   %ax,%ax
  416a20:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
  416a24:	0f b6 8c 8d 80 f3 ff 	movzbl -0xc80(%rbp,%rcx,4),%ecx
  416a2b:	ff 
  416a2c:	8b 55 b8             	mov    -0x48(%rbp),%edx
  416a2f:	48 ff c2             	inc    %rdx
  416a32:	89 55 b8             	mov    %edx,-0x48(%rbp)
  416a35:	8b 55 b8             	mov    -0x48(%rbp),%edx
  416a38:	48 ff c1             	inc    %rcx
  416a3b:	8b 75 bc             	mov    -0x44(%rbp),%esi
  416a3e:	48 63 7d b8          	movslq -0x48(%rbp),%rdi
  416a42:	89 95 4c eb ff ff    	mov    %edx,-0x14b4(%rbp)
  416a48:	48 63 95 4c eb ff ff 	movslq -0x14b4(%rbp),%rdx
  416a4f:	89 b4 bd 90 fb ff ff 	mov    %esi,-0x470(%rbp,%rdi,4)
  416a56:	48 63 75 bc          	movslq -0x44(%rbp),%rsi
  416a5a:	48 63 7d bc          	movslq -0x44(%rbp),%rdi
  416a5e:	8b 94 95 90 fb ff ff 	mov    -0x470(%rbp,%rdx,4),%edx
  416a65:	48 09 c8             	or     %rcx,%rax
  416a68:	89 84 b5 80 f3 ff ff 	mov    %eax,-0xc80(%rbp,%rsi,4)
  416a6f:	44 89 a4 bd 70 eb ff 	mov    %r12d,-0x1490(%rbp,%rdi,4)
  416a76:	ff 
  416a77:	89 95 48 eb ff ff    	mov    %edx,-0x14b8(%rbp)
  416a7d:	eb 33                	jmp    416ab2 <BZ2_hbMakeCodeLengths+0x622>
  416a7f:	90                   	nop
  416a80:	48 63 85 4c eb ff ff 	movslq -0x14b4(%rbp),%rax
  416a87:	48 89 c1             	mov    %rax,%rcx
  416a8a:	48 21 d9             	and    %rbx,%rcx
  416a8d:	48 63 95 4c eb ff ff 	movslq -0x14b4(%rbp),%rdx
  416a94:	8b 8c 4d 90 fb ff ff 	mov    -0x470(%rbp,%rcx,2),%ecx
  416a9b:	89 8c 85 90 fb ff ff 	mov    %ecx,-0x470(%rbp,%rax,4)
  416aa2:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  416aa9:	48 d3 ea             	shr    %cl,%rdx
  416aac:	89 95 4c eb ff ff    	mov    %edx,-0x14b4(%rbp)
  416ab2:	48 63 85 4c eb ff ff 	movslq -0x14b4(%rbp),%rax
  416ab9:	48 63 8d 48 eb ff ff 	movslq -0x14b8(%rbp),%rcx
  416ac0:	48 21 d8             	and    %rbx,%rax
  416ac3:	48 63 84 45 90 fb ff 	movslq -0x470(%rbp,%rax,2),%rax
  416aca:	ff 
  416acb:	48 63 8c 8d 80 f3 ff 	movslq -0xc80(%rbp,%rcx,4),%rcx
  416ad2:	ff 
  416ad3:	48 63 84 85 80 f3 ff 	movslq -0xc80(%rbp,%rax,4),%rax
  416ada:	ff 
  416adb:	48 39 c1             	cmp    %rax,%rcx
  416ade:	7c a0                	jl     416a80 <BZ2_hbMakeCodeLengths+0x5f0>
  416ae0:	e9 1b fc ff ff       	jmpq   416700 <BZ2_hbMakeCodeLengths+0x270>
  416ae5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  416aec:	00 00 00 00 
  416af0:	48 63 45 bc          	movslq -0x44(%rbp),%rax
  416af4:	48 3d 04 02 00 00    	cmp    $0x204,%rax
  416afa:	7c 0c                	jl     416b08 <BZ2_hbMakeCodeLengths+0x678>
  416afc:	48 c7 c7 d2 07 00 00 	mov    $0x7d2,%rdi
  416b03:	e8 78 0f ff ff       	callq  407a80 <BZ2_bz__AssertH__fail>
  416b08:	44 88 7d a3          	mov    %r15b,-0x5d(%rbp)
  416b0c:	44 89 6d ac          	mov    %r13d,-0x54(%rbp)
  416b10:	eb 17                	jmp    416b29 <BZ2_hbMakeCodeLengths+0x699>
  416b12:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  416b19:	1f 84 00 00 00 00 00 
  416b20:	8b 45 ac             	mov    -0x54(%rbp),%eax
  416b23:	48 ff c0             	inc    %rax
  416b26:	89 45 ac             	mov    %eax,-0x54(%rbp)
  416b29:	48 63 45 ac          	movslq -0x54(%rbp),%rax
  416b2d:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
  416b31:	48 39 c8             	cmp    %rcx,%rax
  416b34:	7f 6a                	jg     416ba0 <BZ2_hbMakeCodeLengths+0x710>
  416b36:	8b 45 ac             	mov    -0x54(%rbp),%eax
  416b39:	44 89 7d a8          	mov    %r15d,-0x58(%rbp)
  416b3d:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  416b40:	eb 25                	jmp    416b67 <BZ2_hbMakeCodeLengths+0x6d7>
  416b42:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  416b49:	1f 84 00 00 00 00 00 
  416b50:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  416b54:	8b 4d a8             	mov    -0x58(%rbp),%ecx
  416b57:	8b 84 85 70 eb ff ff 	mov    -0x1490(%rbp,%rax,4),%eax
  416b5e:	89 45 a4             	mov    %eax,-0x5c(%rbp)
  416b61:	48 ff c1             	inc    %rcx
  416b64:	89 4d a8             	mov    %ecx,-0x58(%rbp)
  416b67:	48 63 45 a4          	movslq -0x5c(%rbp),%rax
  416b6b:	48 63 84 85 70 eb ff 	movslq -0x1490(%rbp,%rax,4),%rax
  416b72:	ff 
  416b73:	48 85 c0             	test   %rax,%rax
  416b76:	79 d8                	jns    416b50 <BZ2_hbMakeCodeLengths+0x6c0>
  416b78:	0f b6 45 a8          	movzbl -0x58(%rbp),%eax
  416b7c:	48 63 4d ac          	movslq -0x54(%rbp),%rcx
  416b80:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  416b84:	88 44 11 ff          	mov    %al,-0x1(%rcx,%rdx,1)
  416b88:	48 63 45 a8          	movslq -0x58(%rbp),%rax
  416b8c:	48 63 4d c0          	movslq -0x40(%rbp),%rcx
  416b90:	48 39 c8             	cmp    %rcx,%rax
  416b93:	7e 8b                	jle    416b20 <BZ2_hbMakeCodeLengths+0x690>
  416b95:	44 88 6d a3          	mov    %r13b,-0x5d(%rbp)
  416b99:	eb 85                	jmp    416b20 <BZ2_hbMakeCodeLengths+0x690>
  416b9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  416ba0:	0f b6 45 a3          	movzbl -0x5d(%rbp),%eax
  416ba4:	48 85 c0             	test   %rax,%rax
  416ba7:	0f 85 a3 f9 ff ff    	jne    416550 <BZ2_hbMakeCodeLengths+0xc0>
  416bad:	48 81 c4 98 14 00 00 	add    $0x1498,%rsp
  416bb4:	5b                   	pop    %rbx
  416bb5:	41 5c                	pop    %r12
  416bb7:	41 5d                	pop    %r13
  416bb9:	41 5e                	pop    %r14
  416bbb:	41 5f                	pop    %r15
  416bbd:	5d                   	pop    %rbp
  416bbe:	c3                   	retq   
  416bbf:	90                   	nop

0000000000416bc0 <BZ2_hbAssignCodes>:
  416bc0:	55                   	push   %rbp
  416bc1:	48 89 e5             	mov    %rsp,%rbp
  416bc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416bc8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  416bcc:	89 55 ec             	mov    %edx,-0x14(%rbp)
  416bcf:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  416bd2:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  416bd5:	44 89 45 e4          	mov    %r8d,-0x1c(%rbp)
  416bd9:	48 31 c0             	xor    %rax,%rax
  416bdc:	89 45 dc             	mov    %eax,-0x24(%rbp)
  416bdf:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  416be2:	eb 1e                	jmp    416c02 <BZ2_hbAssignCodes+0x42>
  416be4:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  416beb:	00 00 00 00 00 
  416bf0:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  416bf3:	8b 55 e0             	mov    -0x20(%rbp),%edx
  416bf6:	48 01 c9             	add    %rcx,%rcx
  416bf9:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  416bfc:	48 ff c2             	inc    %rdx
  416bff:	89 55 e0             	mov    %edx,-0x20(%rbp)
  416c02:	48 63 4d e0          	movslq -0x20(%rbp),%rcx
  416c06:	48 63 55 e8          	movslq -0x18(%rbp),%rdx
  416c0a:	48 39 d1             	cmp    %rdx,%rcx
  416c0d:	7f 54                	jg     416c63 <BZ2_hbAssignCodes+0xa3>
  416c0f:	89 45 d8             	mov    %eax,-0x28(%rbp)
  416c12:	eb 15                	jmp    416c29 <BZ2_hbAssignCodes+0x69>
  416c14:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  416c1b:	00 00 00 00 00 
  416c20:	8b 4d d8             	mov    -0x28(%rbp),%ecx
  416c23:	48 ff c1             	inc    %rcx
  416c26:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  416c29:	48 63 4d d8          	movslq -0x28(%rbp),%rcx
  416c2d:	48 63 55 e4          	movslq -0x1c(%rbp),%rdx
  416c31:	48 39 d1             	cmp    %rdx,%rcx
  416c34:	7d ba                	jge    416bf0 <BZ2_hbAssignCodes+0x30>
  416c36:	48 63 4d d8          	movslq -0x28(%rbp),%rcx
  416c3a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  416c3e:	0f b6 0c 0a          	movzbl (%rdx,%rcx,1),%ecx
  416c42:	8b 55 e0             	mov    -0x20(%rbp),%edx
  416c45:	48 39 d1             	cmp    %rdx,%rcx
  416c48:	75 d6                	jne    416c20 <BZ2_hbAssignCodes+0x60>
  416c4a:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  416c4d:	48 63 55 d8          	movslq -0x28(%rbp),%rdx
  416c51:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  416c55:	89 0c 96             	mov    %ecx,(%rsi,%rdx,4)
  416c58:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  416c5b:	48 ff c1             	inc    %rcx
  416c5e:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  416c61:	eb bd                	jmp    416c20 <BZ2_hbAssignCodes+0x60>
  416c63:	5d                   	pop    %rbp
  416c64:	c3                   	retq   
  416c65:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  416c6c:	00 00 00 00 

0000000000416c70 <BZ2_hbCreateDecodeTables>:
  416c70:	55                   	push   %rbp
  416c71:	48 89 e5             	mov    %rsp,%rbp
  416c74:	48 8b 45 10          	mov    0x10(%rbp),%rax
  416c78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416c7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  416c80:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  416c84:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  416c88:	44 89 45 dc          	mov    %r8d,-0x24(%rbp)
  416c8c:	44 89 4d d8          	mov    %r9d,-0x28(%rbp)
  416c90:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  416c93:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  416c96:	48 31 c0             	xor    %rax,%rax
  416c99:	89 45 d0             	mov    %eax,-0x30(%rbp)
  416c9c:	eb 08                	jmp    416ca6 <BZ2_hbCreateDecodeTables+0x36>
  416c9e:	66 90                	xchg   %ax,%ax
  416ca0:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  416ca3:	48 ff c1             	inc    %rcx
  416ca6:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  416ca9:	48 63 4d cc          	movslq -0x34(%rbp),%rcx
  416cad:	48 63 55 d8          	movslq -0x28(%rbp),%rdx
  416cb1:	48 39 d1             	cmp    %rdx,%rcx
  416cb4:	7f 4d                	jg     416d03 <BZ2_hbCreateDecodeTables+0x93>
  416cb6:	89 45 c8             	mov    %eax,-0x38(%rbp)
  416cb9:	eb 0e                	jmp    416cc9 <BZ2_hbCreateDecodeTables+0x59>
  416cbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  416cc0:	8b 4d c8             	mov    -0x38(%rbp),%ecx
  416cc3:	48 ff c1             	inc    %rcx
  416cc6:	89 4d c8             	mov    %ecx,-0x38(%rbp)
  416cc9:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  416ccd:	48 63 55 d4          	movslq -0x2c(%rbp),%rdx
  416cd1:	48 39 d1             	cmp    %rdx,%rcx
  416cd4:	7d ca                	jge    416ca0 <BZ2_hbCreateDecodeTables+0x30>
  416cd6:	48 63 4d c8          	movslq -0x38(%rbp),%rcx
  416cda:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  416cde:	0f b6 0c 0a          	movzbl (%rdx,%rcx,1),%ecx
  416ce2:	8b 55 cc             	mov    -0x34(%rbp),%edx
  416ce5:	48 39 d1             	cmp    %rdx,%rcx
  416ce8:	75 d6                	jne    416cc0 <BZ2_hbCreateDecodeTables+0x50>
  416cea:	8b 4d c8             	mov    -0x38(%rbp),%ecx
  416ced:	48 63 55 d0          	movslq -0x30(%rbp),%rdx
  416cf1:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  416cf5:	89 0c 96             	mov    %ecx,(%rsi,%rdx,4)
  416cf8:	8b 4d d0             	mov    -0x30(%rbp),%ecx
  416cfb:	48 ff c1             	inc    %rcx
  416cfe:	89 4d d0             	mov    %ecx,-0x30(%rbp)
  416d01:	eb bd                	jmp    416cc0 <BZ2_hbCreateDecodeTables+0x50>
  416d03:	48 31 c0             	xor    %rax,%rax
  416d06:	89 45 cc             	mov    %eax,-0x34(%rbp)
  416d09:	eb 19                	jmp    416d24 <BZ2_hbCreateDecodeTables+0xb4>
  416d0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  416d10:	48 63 4d cc          	movslq -0x34(%rbp),%rcx
  416d14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  416d18:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  416d1b:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  416d1e:	48 ff c1             	inc    %rcx
  416d21:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  416d24:	48 63 4d cc          	movslq -0x34(%rbp),%rcx
  416d28:	48 83 f9 16          	cmp    $0x16,%rcx
  416d2c:	7e e2                	jle    416d10 <BZ2_hbCreateDecodeTables+0xa0>
  416d2e:	48 31 c0             	xor    %rax,%rax
  416d31:	eb 2e                	jmp    416d61 <BZ2_hbCreateDecodeTables+0xf1>
  416d33:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  416d3a:	84 00 00 00 00 00 
  416d40:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  416d44:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  416d48:	0f b6 04 01          	movzbl (%rcx,%rax,1),%eax
  416d4c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  416d50:	8b 54 81 04          	mov    0x4(%rcx,%rax,4),%edx
  416d54:	48 ff c2             	inc    %rdx
  416d57:	89 54 81 04          	mov    %edx,0x4(%rcx,%rax,4)
  416d5b:	8b 45 cc             	mov    -0x34(%rbp),%eax
  416d5e:	48 ff c0             	inc    %rax
  416d61:	89 45 cc             	mov    %eax,-0x34(%rbp)
  416d64:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  416d68:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
  416d6c:	48 39 c8             	cmp    %rcx,%rax
  416d6f:	7c cf                	jl     416d40 <BZ2_hbCreateDecodeTables+0xd0>
  416d71:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  416d78:	eb 38                	jmp    416db2 <BZ2_hbCreateDecodeTables+0x142>
  416d7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  416d80:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  416d84:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  416d88:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  416d8f:	48 d3 e2             	shl    %cl,%rdx
  416d92:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  416d96:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  416d9d:	48 d3 fa             	sar    %cl,%rdx
  416da0:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
  416da3:	8b 14 86             	mov    (%rsi,%rax,4),%edx
  416da6:	48 01 ca             	add    %rcx,%rdx
  416da9:	89 14 86             	mov    %edx,(%rsi,%rax,4)
  416dac:	8b 45 cc             	mov    -0x34(%rbp),%eax
  416daf:	48 ff c0             	inc    %rax
  416db2:	89 45 cc             	mov    %eax,-0x34(%rbp)
  416db5:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  416db9:	48 83 f8 16          	cmp    $0x16,%rax
  416dbd:	7e c1                	jle    416d80 <BZ2_hbCreateDecodeTables+0x110>
  416dbf:	48 31 c0             	xor    %rax,%rax
  416dc2:	89 45 cc             	mov    %eax,-0x34(%rbp)
  416dc5:	eb 1d                	jmp    416de4 <BZ2_hbCreateDecodeTables+0x174>
  416dc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  416dce:	00 00 
  416dd0:	48 63 4d cc          	movslq -0x34(%rbp),%rcx
  416dd4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  416dd8:	89 04 8a             	mov    %eax,(%rdx,%rcx,4)
  416ddb:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  416dde:	48 ff c1             	inc    %rcx
  416de1:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  416de4:	48 63 4d cc          	movslq -0x34(%rbp),%rcx
  416de8:	48 83 f9 16          	cmp    $0x16,%rcx
  416dec:	7e e2                	jle    416dd0 <BZ2_hbCreateDecodeTables+0x160>
  416dee:	8b 45 dc             	mov    -0x24(%rbp),%eax
  416df1:	48 31 c9             	xor    %rcx,%rcx
  416df4:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  416df7:	89 45 cc             	mov    %eax,-0x34(%rbp)
  416dfa:	eb 59                	jmp    416e55 <BZ2_hbCreateDecodeTables+0x1e5>
  416dfc:	0f 1f 40 00          	nopl   0x0(%rax)
  416e00:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  416e04:	48 8d 50 01          	lea    0x1(%rax),%rdx
  416e08:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  416e0f:	48 d3 e2             	shl    %cl,%rdx
  416e12:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  416e16:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  416e1d:	48 d3 fa             	sar    %cl,%rdx
  416e20:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
  416e23:	8b 04 86             	mov    (%rsi,%rax,4),%eax
  416e26:	48 29 c1             	sub    %rax,%rcx
  416e29:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  416e2c:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
  416e30:	48 63 75 cc          	movslq -0x34(%rbp),%rsi
  416e34:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  416e38:	89 55 c4             	mov    %edx,-0x3c(%rbp)
  416e3b:	48 8d 44 08 ff       	lea    -0x1(%rax,%rcx,1),%rax
  416e40:	89 04 b7             	mov    %eax,(%rdi,%rsi,4)
  416e43:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  416e46:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  416e49:	48 01 c0             	add    %rax,%rax
  416e4c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  416e4f:	48 ff c1             	inc    %rcx
  416e52:	89 4d cc             	mov    %ecx,-0x34(%rbp)
  416e55:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  416e59:	48 63 4d d8          	movslq -0x28(%rbp),%rcx
  416e5d:	48 39 c8             	cmp    %rcx,%rax
  416e60:	7e 9e                	jle    416e00 <BZ2_hbCreateDecodeTables+0x190>
  416e62:	8b 45 dc             	mov    -0x24(%rbp),%eax
  416e65:	eb 41                	jmp    416ea8 <BZ2_hbCreateDecodeTables+0x238>
  416e67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  416e6e:	00 00 
  416e70:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  416e74:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  416e78:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  416e7f:	48 d3 e2             	shl    %cl,%rdx
  416e82:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  416e86:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  416e8a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  416e91:	48 d3 fa             	sar    %cl,%rdx
  416e94:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
  416e97:	8b 14 87             	mov    (%rdi,%rax,4),%edx
  416e9a:	48 8d 4c 09 02       	lea    0x2(%rcx,%rcx,1),%rcx
  416e9f:	48 29 d1             	sub    %rdx,%rcx
  416ea2:	89 0c 87             	mov    %ecx,(%rdi,%rax,4)
  416ea5:	8b 45 cc             	mov    -0x34(%rbp),%eax
  416ea8:	48 ff c0             	inc    %rax
  416eab:	89 45 cc             	mov    %eax,-0x34(%rbp)
  416eae:	48 63 45 cc          	movslq -0x34(%rbp),%rax
  416eb2:	48 63 4d d8          	movslq -0x28(%rbp),%rcx
  416eb6:	48 39 c8             	cmp    %rcx,%rax
  416eb9:	7e b5                	jle    416e70 <BZ2_hbCreateDecodeTables+0x200>
  416ebb:	5d                   	pop    %rbp
  416ebc:	c3                   	retq   
  416ebd:	0f 1f 00             	nopl   (%rax)

0000000000416ec0 <ran>:
  416ec0:	55                   	push   %rbp
  416ec1:	48 89 e5             	mov    %rsp,%rbp
  416ec4:	48 83 ec 20          	sub    $0x20,%rsp
  416ec8:	48 be 79 fb e3 1f af 	movabs $0x41a705af1fe3fb79,%rsi
  416ecf:	05 a7 41 
  416ed2:	48 89 f0             	mov    %rsi,%rax
  416ed5:	48 f7 2d b4 68 21 00 	imulq  0x2168b4(%rip)        # 62d790 <seedi>
  416edc:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  416ee3:	48 89 d0             	mov    %rdx,%rax
  416ee6:	48 d3 e8             	shr    %cl,%rax
  416ee9:	48 c7 c1 0f 00 00 00 	mov    $0xf,%rcx
  416ef0:	48 d3 fa             	sar    %cl,%rdx
  416ef3:	48 8b 3d 96 68 21 00 	mov    0x216896(%rip),%rdi        # 62d790 <seedi>
  416efa:	48 01 c2             	add    %rax,%rdx
  416efd:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  416f01:	48 89 f8             	mov    %rdi,%rax
  416f04:	48 f7 ee             	imul   %rsi
  416f07:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  416f0e:	48 89 d0             	mov    %rdx,%rax
  416f11:	48 d3 e8             	shr    %cl,%rax
  416f14:	48 c7 c1 0f 00 00 00 	mov    $0xf,%rcx
  416f1b:	48 d3 fa             	sar    %cl,%rdx
  416f1e:	48 01 c2             	add    %rax,%rdx
  416f21:	48 69 c2 1d f3 01 00 	imul   $0x1f31d,%rdx,%rax
  416f28:	48 29 c7             	sub    %rax,%rdi
  416f2b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416f2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416f33:	48 69 cf a7 41 00 00 	imul   $0x41a7,%rdi,%rcx
  416f3a:	48 69 c0 14 0b 00 00 	imul   $0xb14,%rax,%rax
  416f41:	48 29 c1             	sub    %rax,%rcx
  416f44:	48 85 c9             	test   %rcx,%rcx
  416f47:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  416f4b:	7e 06                	jle    416f53 <ran+0x93>
  416f4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416f51:	eb 0a                	jmp    416f5d <ran+0x9d>
  416f53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416f57:	48 05 ff ff ff 7f    	add    $0x7fffffff,%rax
  416f5d:	48 89 05 2c 68 21 00 	mov    %rax,0x21682c(%rip)        # 62d790 <seedi>
  416f64:	48 8b 3d 25 68 21 00 	mov    0x216825(%rip),%rdi        # 62d790 <seedi>
  416f6b:	e8 00 74 00 00       	callq  41e370 <int64_to_float64>
  416f70:	48 be 00 00 c0 ff ff 	movabs $0x41dfffffffc00000,%rsi
  416f77:	ff df 41 
  416f7a:	48 89 c7             	mov    %rax,%rdi
  416f7d:	e8 fe cd 00 00       	callq  423d80 <float64_div>
  416f82:	48 83 c4 20          	add    $0x20,%rsp
  416f86:	5d                   	pop    %rbp
  416f87:	c3                   	retq   
  416f88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  416f8f:	00 

0000000000416f90 <spec_init>:
  416f90:	55                   	push   %rbp
  416f91:	48 89 e5             	mov    %rsp,%rbp
  416f94:	53                   	push   %rbx
  416f95:	48 83 ec 18          	sub    $0x18,%rsp
  416f99:	48 63 05 30 45 21 00 	movslq 0x214530(%rip),%rax        # 62b4d0 <dbglvl>
  416fa0:	48 83 f8 04          	cmp    $0x4,%rax
  416fa4:	7c 12                	jl     416fb8 <spec_init+0x28>
  416fa6:	48 bf 03 80 42 00 00 	movabs $0x428003,%rdi
  416fad:	00 00 00 
  416fb0:	48 31 c0             	xor    %rax,%rax
  416fb3:	e8 b0 30 00 00       	callq  41a068 <printf>
  416fb8:	48 31 db             	xor    %rbx,%rbx
  416fbb:	89 5d f4             	mov    %ebx,-0xc(%rbp)
  416fbe:	eb 09                	jmp    416fc9 <spec_init+0x39>
  416fc0:	8b 45 f4             	mov    -0xc(%rbp),%eax
  416fc3:	48 ff c0             	inc    %rax
  416fc6:	89 45 f4             	mov    %eax,-0xc(%rbp)
  416fc9:	48 63 45 f4          	movslq -0xc(%rbp),%rax
  416fcd:	48 83 f8 02          	cmp    $0x2,%rax
  416fd1:	0f 8f de 00 00 00    	jg     4170b5 <spec_init+0x125>
  416fd7:	48 63 45 f4          	movslq -0xc(%rbp),%rax
  416fdb:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  416fdf:	48 63 4d f4          	movslq -0xc(%rbp),%rcx
  416fe3:	8b 04 c5 a0 d7 62 00 	mov    0x62d7a0(,%rax,8),%eax
  416fea:	89 45 ec             	mov    %eax,-0x14(%rbp)
  416fed:	48 8d 04 49          	lea    (%rcx,%rcx,2),%rax
  416ff1:	48 c7 04 c5 b0 d7 62 	movq   $0x0,0x62d7b0(,%rax,8)
  416ff8:	00 00 00 00 00 
  416ffd:	48 c7 04 c5 a8 d7 62 	movq   $0x0,0x62d7a8(,%rax,8)
  417004:	00 00 00 00 00 
  417009:	48 c7 04 c5 a0 d7 62 	movq   $0x0,0x62d7a0(,%rax,8)
  417010:	00 00 00 00 00 
  417015:	8b 45 ec             	mov    -0x14(%rbp),%eax
  417018:	48 63 4d f4          	movslq -0xc(%rbp),%rcx
  41701c:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
  417020:	8b 7d ec             	mov    -0x14(%rbp),%edi
  417023:	89 04 cd a0 d7 62 00 	mov    %eax,0x62d7a0(,%rcx,8)
  41702a:	48 81 c7 00 00 10 00 	add    $0x100000,%rdi
  417031:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  417038:	48 d3 e7             	shl    %cl,%rdi
  41703b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  417042:	48 d3 ff             	sar    %cl,%rdi
  417045:	e8 46 1b 00 00       	callq  418b90 <malloc>
  41704a:	48 63 4d f4          	movslq -0xc(%rbp),%rcx
  41704e:	48 63 55 f4          	movslq -0xc(%rbp),%rdx
  417052:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
  417056:	48 89 04 cd b0 d7 62 	mov    %rax,0x62d7b0(,%rcx,8)
  41705d:	00 
  41705e:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
  417062:	48 83 3c c5 b0 d7 62 	cmpq   $0x0,0x62d7b0(,%rax,8)
  417069:	00 00 
  41706b:	74 52                	je     4170bf <spec_init+0x12f>
  41706d:	89 5d f0             	mov    %ebx,-0x10(%rbp)
  417070:	eb 31                	jmp    4170a3 <spec_init+0x113>
  417072:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  417079:	1f 84 00 00 00 00 00 
  417080:	48 63 45 f4          	movslq -0xc(%rbp),%rax
  417084:	48 63 4d f0          	movslq -0x10(%rbp),%rcx
  417088:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  41708c:	48 8b 04 c5 b0 d7 62 	mov    0x62d7b0(,%rax,8),%rax
  417093:	00 
  417094:	88 1c 08             	mov    %bl,(%rax,%rcx,1)
  417097:	8b 45 f0             	mov    -0x10(%rbp),%eax
  41709a:	48 05 00 04 00 00    	add    $0x400,%rax
  4170a0:	89 45 f0             	mov    %eax,-0x10(%rbp)
  4170a3:	48 63 45 f0          	movslq -0x10(%rbp),%rax
  4170a7:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  4170ab:	48 39 c8             	cmp    %rcx,%rax
  4170ae:	7c d0                	jl     417080 <spec_init+0xf0>
  4170b0:	e9 0b ff ff ff       	jmpq   416fc0 <spec_init+0x30>
  4170b5:	48 31 c0             	xor    %rax,%rax
  4170b8:	48 83 c4 18          	add    $0x18,%rsp
  4170bc:	5b                   	pop    %rbx
  4170bd:	5d                   	pop    %rbp
  4170be:	c3                   	retq   
  4170bf:	48 b9 0e 80 42 00 00 	movabs $0x42800e,%rcx
  4170c6:	00 00 00 
  4170c9:	48 31 c0             	xor    %rax,%rax
  4170cc:	48 89 cf             	mov    %rcx,%rdi
  4170cf:	e8 94 2f 00 00       	callq  41a068 <printf>
  4170d4:	48 31 ff             	xor    %rdi,%rdi
  4170d7:	e8 75 0f 00 00       	callq  418051 <exit>
  4170dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004170e0 <spec_random_load>:
  4170e0:	55                   	push   %rbp
  4170e1:	48 89 e5             	mov    %rsp,%rbp
  4170e4:	41 57                	push   %r15
  4170e6:	41 56                	push   %r14
  4170e8:	53                   	push   %rbx
  4170e9:	48 81 ec 18 00 40 00 	sub    $0x400018,%rsp
  4170f0:	48 63 05 d9 43 21 00 	movslq 0x2143d9(%rip),%rax        # 62b4d0 <dbglvl>
  4170f7:	89 7d e4             	mov    %edi,-0x1c(%rbp)
  4170fa:	48 83 f8 05          	cmp    $0x5,%rax
  4170fe:	7c 12                	jl     417112 <spec_random_load+0x32>
  417100:	48 bf 32 80 42 00 00 	movabs $0x428032,%rdi
  417107:	00 00 00 
  41710a:	48 31 c0             	xor    %rax,%rax
  41710d:	e8 56 2f 00 00       	callq  41a068 <printf>
  417112:	4d 31 ff             	xor    %r15,%r15
  417115:	44 89 7d e0          	mov    %r15d,-0x20(%rbp)
  417119:	49 be 43 80 42 00 00 	movabs $0x428043,%r14
  417120:	00 00 00 
  417123:	48 bb 00 00 00 00 00 	movabs $0x4070000000000000,%rbx
  41712a:	00 70 40 
  41712d:	eb 0a                	jmp    417139 <spec_random_load+0x59>
  41712f:	90                   	nop
  417130:	8b 45 e0             	mov    -0x20(%rbp),%eax
  417133:	48 ff c0             	inc    %rax
  417136:	89 45 e0             	mov    %eax,-0x20(%rbp)
  417139:	48 63 45 e0          	movslq -0x20(%rbp),%rax
  41713d:	48 83 f8 1f          	cmp    $0x1f,%rax
  417141:	7f 7c                	jg     4171bf <spec_random_load+0xdf>
  417143:	48 63 05 86 43 21 00 	movslq 0x214386(%rip),%rax        # 62b4d0 <dbglvl>
  41714a:	48 83 f8 06          	cmp    $0x6,%rax
  41714e:	7c 0e                	jl     41715e <spec_random_load+0x7e>
  417150:	8b 75 e0             	mov    -0x20(%rbp),%esi
  417153:	48 31 c0             	xor    %rax,%rax
  417156:	4c 89 f7             	mov    %r14,%rdi
  417159:	e8 0a 2f 00 00       	callq  41a068 <printf>
  41715e:	44 89 7d dc          	mov    %r15d,-0x24(%rbp)
  417162:	eb 4a                	jmp    4171ae <spec_random_load+0xce>
  417164:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41716b:	00 00 00 00 00 
  417170:	e8 4b fd ff ff       	callq  416ec0 <ran>
  417175:	48 89 c7             	mov    %rax,%rdi
  417178:	48 89 de             	mov    %rbx,%rsi
  41717b:	e8 70 c3 00 00       	callq  4234f0 <float64_mul>
  417180:	48 89 c7             	mov    %rax,%rdi
  417183:	e8 a8 ae 00 00       	callq  422030 <float64_to_int64>
  417188:	48 63 55 e0          	movslq -0x20(%rbp),%rdx
  41718c:	48 c7 c1 11 00 00 00 	mov    $0x11,%rcx
  417193:	48 d3 e2             	shl    %cl,%rdx
  417196:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  417199:	48 63 75 dc          	movslq -0x24(%rbp),%rsi
  41719d:	48 8d 94 15 d0 ff bf 	lea    -0x400030(%rbp,%rdx,1),%rdx
  4171a4:	ff 
  4171a5:	88 04 16             	mov    %al,(%rsi,%rdx,1)
  4171a8:	48 ff c1             	inc    %rcx
  4171ab:	89 4d dc             	mov    %ecx,-0x24(%rbp)
  4171ae:	48 63 45 dc          	movslq -0x24(%rbp),%rax
  4171b2:	48 3d ff ff 01 00    	cmp    $0x1ffff,%rax
  4171b8:	7e b6                	jle    417170 <spec_random_load+0x90>
  4171ba:	e9 71 ff ff ff       	jmpq   417130 <spec_random_load+0x50>
  4171bf:	48 63 05 0a 43 21 00 	movslq 0x21430a(%rip),%rax        # 62b4d0 <dbglvl>
  4171c6:	48 83 f8 05          	cmp    $0x5,%rax
  4171ca:	7c 12                	jl     4171de <spec_random_load+0xfe>
  4171cc:	48 bf 56 80 42 00 00 	movabs $0x428056,%rdi
  4171d3:	00 00 00 
  4171d6:	48 31 c0             	xor    %rax,%rax
  4171d9:	e8 8a 2e 00 00       	callq  41a068 <printf>
  4171de:	48 31 c0             	xor    %rax,%rax
  4171e1:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4171e4:	49 be 00 00 00 00 00 	movabs $0x4040000000000000,%r14
  4171eb:	00 40 40 
  4171ee:	eb 5c                	jmp    41724c <spec_random_load+0x16c>
  4171f0:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  4171f4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4171f8:	48 8b 04 c5 b0 d7 62 	mov    0x62d7b0(,%rax,8),%rax
  4171ff:	00 
  417200:	48 63 5d e0          	movslq -0x20(%rbp),%rbx
  417204:	48 01 c3             	add    %rax,%rbx
  417207:	e8 b4 fc ff ff       	callq  416ec0 <ran>
  41720c:	48 89 c7             	mov    %rax,%rdi
  41720f:	4c 89 f6             	mov    %r14,%rsi
  417212:	e8 d9 c2 00 00       	callq  4234f0 <float64_mul>
  417217:	48 89 c7             	mov    %rax,%rdi
  41721a:	e8 11 ae 00 00       	callq  422030 <float64_to_int64>
  41721f:	48 c7 c1 11 00 00 00 	mov    $0x11,%rcx
  417226:	48 d3 e0             	shl    %cl,%rax
  417229:	48 8d b4 05 d0 ff bf 	lea    -0x400030(%rbp,%rax,1),%rsi
  417230:	ff 
  417231:	48 c7 c2 00 00 02 00 	mov    $0x20000,%rdx
  417238:	48 89 df             	mov    %rbx,%rdi
  41723b:	e8 e4 47 00 00       	callq  41ba24 <memcpy>
  417240:	8b 45 e0             	mov    -0x20(%rbp),%eax
  417243:	48 05 00 00 02 00    	add    $0x20000,%rax
  417249:	89 45 e0             	mov    %eax,-0x20(%rbp)
  41724c:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  417250:	48 63 4d e0          	movslq -0x20(%rbp),%rcx
  417254:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417258:	48 63 04 c5 a0 d7 62 	movslq 0x62d7a0(,%rax,8),%rax
  41725f:	00 
  417260:	48 39 c1             	cmp    %rax,%rcx
  417263:	7c 8b                	jl     4171f0 <spec_random_load+0x110>
  417265:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  417269:	48 8d 0c 40          	lea    (%rax,%rax,2),%rcx
  41726d:	48 c7 c2 00 00 10 00 	mov    $0x100000,%rdx
  417274:	48 31 c0             	xor    %rax,%rax
  417277:	89 14 cd a4 d7 62 00 	mov    %edx,0x62d7a4(,%rcx,8)
  41727e:	48 81 c4 18 00 40 00 	add    $0x400018,%rsp
  417285:	5b                   	pop    %rbx
  417286:	41 5e                	pop    %r14
  417288:	41 5f                	pop    %r15
  41728a:	5d                   	pop    %rbp
  41728b:	c3                   	retq   
  41728c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000417290 <spec_load>:
  417290:	55                   	push   %rbp
  417291:	48 89 e5             	mov    %rsp,%rbp
  417294:	41 56                	push   %r14
  417296:	53                   	push   %rbx
  417297:	48 83 ec 30          	sub    $0x30,%rsp
  41729b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41729f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4172a3:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4172a6:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4172a9:	48 31 f6             	xor    %rsi,%rsi
  4172ac:	48 31 c0             	xor    %rax,%rax
  4172af:	48 31 db             	xor    %rbx,%rbx
  4172b2:	48 89 cf             	mov    %rcx,%rdi
  4172b5:	e8 ee 0d 00 00       	callq  4180a8 <open>
  4172ba:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4172c1:	48 89 c2             	mov    %rax,%rdx
  4172c4:	48 d3 e2             	shl    %cl,%rdx
  4172c7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4172ce:	48 d3 fa             	sar    %cl,%rdx
  4172d1:	48 85 d2             	test   %rdx,%rdx
  4172d4:	89 45 d8             	mov    %eax,-0x28(%rbp)
  4172d7:	0f 88 c2 01 00 00    	js     41749f <spec_load+0x20f>
  4172dd:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  4172e1:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4172e5:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  4172e9:	89 1c c5 a4 d7 62 00 	mov    %ebx,0x62d7a4(,%rax,8)
  4172f0:	48 8d 04 49          	lea    (%rcx,%rcx,2),%rax
  4172f4:	89 1c c5 a8 d7 62 00 	mov    %ebx,0x62d7a8(,%rax,8)
  4172fb:	89 5d d0             	mov    %ebx,-0x30(%rbp)
  4172fe:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  417305:	00 00 00 
  417308:	eb 2e                	jmp    417338 <spec_load+0xa8>
  41730a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  417310:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  417314:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  417317:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  41731b:	8b 14 c5 a4 d7 62 00 	mov    0x62d7a4(,%rax,8),%edx
  417322:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  417325:	8b 7d d0             	mov    -0x30(%rbp),%edi
  417328:	48 01 ca             	add    %rcx,%rdx
  41732b:	89 14 c5 a4 d7 62 00 	mov    %edx,0x62d7a4(,%rax,8)
  417332:	48 01 f7             	add    %rsi,%rdi
  417335:	89 7d d0             	mov    %edi,-0x30(%rbp)
  417338:	48 63 45 d0          	movslq -0x30(%rbp),%rax
  41733c:	48 63 4d dc          	movslq -0x24(%rbp),%rcx
  417340:	48 39 c8             	cmp    %rcx,%rax
  417343:	7d 63                	jge    4173a8 <spec_load+0x118>
  417345:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  417349:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  41734d:	48 8b 04 c5 b0 d7 62 	mov    0x62d7b0(,%rax,8),%rax
  417354:	00 
  417355:	48 63 75 d0          	movslq -0x30(%rbp),%rsi
  417359:	8b 7d d8             	mov    -0x28(%rbp),%edi
  41735c:	48 01 c6             	add    %rax,%rsi
  41735f:	48 c7 c2 00 00 02 00 	mov    $0x20000,%rdx
  417366:	e8 95 50 00 00       	callq  41c400 <read>
  41736b:	48 85 d8             	test   %rbx,%rax
  41736e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  417371:	74 35                	je     4173a8 <spec_load+0x118>
  417373:	48 63 45 d4          	movslq -0x2c(%rbp),%rax
  417377:	48 85 c0             	test   %rax,%rax
  41737a:	79 94                	jns    417310 <spec_load+0x80>
  41737c:	48 8b 1d 4d 16 01 00 	mov    0x1164d(%rip),%rbx        # 4289d0 <stderr>
  417383:	4c 8b 75 e0          	mov    -0x20(%rbp),%r14
  417387:	e8 74 0c 00 00       	callq  418000 <__errno_location>
  41738c:	8b 00                	mov    (%rax),%eax
  41738e:	48 89 c7             	mov    %rax,%rdi
  417391:	e8 8a 0c 00 00       	callq  418020 <strerror>
  417396:	48 89 c1             	mov    %rax,%rcx
  417399:	48 ba 82 80 42 00 00 	movabs $0x428082,%rdx
  4173a0:	00 00 00 
  4173a3:	e9 1e 01 00 00       	jmpq   4174c6 <spec_load+0x236>
  4173a8:	8b 7d d8             	mov    -0x28(%rbp),%edi
  4173ab:	e8 00 50 00 00       	callq  41c3b0 <close>
  4173b0:	48 bb 9d 80 42 00 00 	movabs $0x42809d,%rbx
  4173b7:	00 00 00 
  4173ba:	eb 44                	jmp    417400 <spec_load+0x170>
  4173bc:	0f 1f 40 00          	nopl   0x0(%rax)
  4173c0:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  4173c4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4173c8:	48 8b 34 c5 b0 d7 62 	mov    0x62d7b0(,%rax,8),%rsi
  4173cf:	00 
  4173d0:	48 63 3c c5 a4 d7 62 	movslq 0x62d7a4(,%rax,8),%rdi
  4173d7:	00 
  4173d8:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
  4173dc:	48 01 f7             	add    %rsi,%rdi
  4173df:	e8 40 46 00 00       	callq  41ba24 <memcpy>
  4173e4:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  4173e8:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  4173eb:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4173ef:	8b 14 c5 a4 d7 62 00 	mov    0x62d7a4(,%rax,8),%edx
  4173f6:	48 01 ca             	add    %rcx,%rdx
  4173f9:	89 14 c5 a4 d7 62 00 	mov    %edx,0x62d7a4(,%rax,8)
  417400:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  417404:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417408:	48 63 04 c5 a4 d7 62 	movslq 0x62d7a4(,%rax,8),%rax
  41740f:	00 
  417410:	48 63 4d dc          	movslq -0x24(%rbp),%rcx
  417414:	48 39 c8             	cmp    %rcx,%rax
  417417:	7d 7a                	jge    417493 <spec_load+0x203>
  417419:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  41741d:	8b 55 dc             	mov    -0x24(%rbp),%edx
  417420:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417424:	8b 04 c5 a4 d7 62 00 	mov    0x62d7a4(,%rax,8),%eax
  41742b:	48 63 75 ec          	movslq -0x14(%rbp),%rsi
  41742f:	48 29 c2             	sub    %rax,%rdx
  417432:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  417439:	48 89 d0             	mov    %rdx,%rax
  41743c:	48 d3 e0             	shl    %cl,%rax
  41743f:	48 8d 0c 76          	lea    (%rsi,%rsi,2),%rcx
  417443:	48 63 34 cd a4 d7 62 	movslq 0x62d7a4(,%rcx,8),%rsi
  41744a:	00 
  41744b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  417452:	48 d3 f8             	sar    %cl,%rax
  417455:	89 55 cc             	mov    %edx,-0x34(%rbp)
  417458:	48 39 f0             	cmp    %rsi,%rax
  41745b:	7e 12                	jle    41746f <spec_load+0x1df>
  41745d:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  417461:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417465:	8b 04 c5 a4 d7 62 00 	mov    0x62d7a4(,%rax,8),%eax
  41746c:	89 45 cc             	mov    %eax,-0x34(%rbp)
  41746f:	48 63 05 5a 40 21 00 	movslq 0x21405a(%rip),%rax        # 62b4d0 <dbglvl>
  417476:	48 83 f8 04          	cmp    $0x4,%rax
  41747a:	0f 8c 40 ff ff ff    	jl     4173c0 <spec_load+0x130>
  417480:	8b 75 cc             	mov    -0x34(%rbp),%esi
  417483:	48 31 c0             	xor    %rax,%rax
  417486:	48 89 df             	mov    %rbx,%rdi
  417489:	e8 da 2b 00 00       	callq  41a068 <printf>
  41748e:	e9 2d ff ff ff       	jmpq   4173c0 <spec_load+0x130>
  417493:	48 31 c0             	xor    %rax,%rax
  417496:	48 83 c4 30          	add    $0x30,%rsp
  41749a:	5b                   	pop    %rbx
  41749b:	41 5e                	pop    %r14
  41749d:	5d                   	pop    %rbp
  41749e:	c3                   	retq   
  41749f:	48 8b 1d 2a 15 01 00 	mov    0x1152a(%rip),%rbx        # 4289d0 <stderr>
  4174a6:	4c 8b 75 e0          	mov    -0x20(%rbp),%r14
  4174aa:	e8 51 0b 00 00       	callq  418000 <__errno_location>
  4174af:	8b 00                	mov    (%rax),%eax
  4174b1:	48 89 c7             	mov    %rax,%rdi
  4174b4:	e8 67 0b 00 00       	callq  418020 <strerror>
  4174b9:	48 89 c1             	mov    %rax,%rcx
  4174bc:	48 ba 6a 80 42 00 00 	movabs $0x42806a,%rdx
  4174c3:	00 00 00 
  4174c6:	48 31 c0             	xor    %rax,%rax
  4174c9:	48 89 df             	mov    %rbx,%rdi
  4174cc:	48 89 d6             	mov    %rdx,%rsi
  4174cf:	4c 89 f2             	mov    %r14,%rdx
  4174d2:	e8 21 28 00 00       	callq  419cf8 <fprintf>
  4174d7:	48 31 ff             	xor    %rdi,%rdi
  4174da:	e8 72 0b 00 00       	callq  418051 <exit>
  4174df:	90                   	nop

00000000004174e0 <spec_read>:
  4174e0:	55                   	push   %rbp
  4174e1:	48 89 e5             	mov    %rsp,%rbp
  4174e4:	48 83 ec 20          	sub    $0x20,%rsp
  4174e8:	89 7d f8             	mov    %edi,-0x8(%rbp)
  4174eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4174ef:	48 63 05 da 3f 21 00 	movslq 0x213fda(%rip),%rax        # 62b4d0 <dbglvl>
  4174f6:	89 55 ec             	mov    %edx,-0x14(%rbp)
  4174f9:	48 31 c9             	xor    %rcx,%rcx
  4174fc:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  4174ff:	48 83 f8 05          	cmp    $0x5,%rax
  417503:	7c 1c                	jl     417521 <spec_read+0x41>
  417505:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  417509:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  41750c:	8b 75 f8             	mov    -0x8(%rbp),%esi
  41750f:	48 bf b3 80 42 00 00 	movabs $0x4280b3,%rdi
  417516:	00 00 00 
  417519:	48 31 c0             	xor    %rax,%rax
  41751c:	e8 47 2b 00 00       	callq  41a068 <printf>
  417521:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  417525:	48 83 f8 04          	cmp    $0x4,%rax
  417529:	0f 8d 1a 01 00 00    	jge    417649 <spec_read+0x169>
  41752f:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  417533:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417537:	48 63 0c c5 a8 d7 62 	movslq 0x62d7a8(,%rax,8),%rcx
  41753e:	00 
  41753f:	48 63 04 c5 a4 d7 62 	movslq 0x62d7a4(,%rax,8),%rax
  417546:	00 
  417547:	48 39 c1             	cmp    %rax,%rcx
  41754a:	7c 2e                	jl     41757a <spec_read+0x9a>
  41754c:	48 63 05 7d 3f 21 00 	movslq 0x213f7d(%rip),%rax        # 62b4d0 <dbglvl>
  417553:	48 83 f8 05          	cmp    $0x5,%rax
  417557:	7c 12                	jl     41756b <spec_read+0x8b>
  417559:	48 bf ee 80 42 00 00 	movabs $0x4280ee,%rdi
  417560:	00 00 00 
  417563:	48 31 c0             	xor    %rax,%rax
  417566:	e8 fd 2a 00 00       	callq  41a068 <printf>
  41756b:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  417572:	00 00 00 
  417575:	e9 c3 00 00 00       	jmpq   41763d <spec_read+0x15d>
  41757a:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  41757e:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417582:	8b 0c c5 a8 d7 62 00 	mov    0x62d7a8(,%rax,8),%ecx
  417589:	8b 55 ec             	mov    -0x14(%rbp),%edx
  41758c:	48 01 ca             	add    %rcx,%rdx
  41758f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  417596:	48 63 04 c5 a4 d7 62 	movslq 0x62d7a4(,%rax,8),%rax
  41759d:	00 
  41759e:	48 d3 e2             	shl    %cl,%rdx
  4175a1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4175a8:	48 d3 fa             	sar    %cl,%rdx
  4175ab:	48 39 c2             	cmp    %rax,%rdx
  4175ae:	7c 1e                	jl     4175ce <spec_read+0xee>
  4175b0:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  4175b4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4175b8:	8b 0c c5 a4 d7 62 00 	mov    0x62d7a4(,%rax,8),%ecx
  4175bf:	8b 04 c5 a8 d7 62 00 	mov    0x62d7a8(,%rax,8),%eax
  4175c6:	48 29 c1             	sub    %rax,%rcx
  4175c9:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  4175cc:	eb 06                	jmp    4175d4 <spec_read+0xf4>
  4175ce:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4175d1:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4175d4:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  4175d8:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  4175dc:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4175e0:	48 63 0c c5 a8 d7 62 	movslq 0x62d7a8(,%rax,8),%rcx
  4175e7:	00 
  4175e8:	48 8b 34 c5 b0 d7 62 	mov    0x62d7b0(,%rax,8),%rsi
  4175ef:	00 
  4175f0:	48 63 55 e8          	movslq -0x18(%rbp),%rdx
  4175f4:	48 01 ce             	add    %rcx,%rsi
  4175f7:	e8 28 44 00 00       	callq  41ba24 <memcpy>
  4175fc:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  417600:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  417603:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417607:	8b 14 c5 a8 d7 62 00 	mov    0x62d7a8(,%rax,8),%edx
  41760e:	48 63 35 bb 3e 21 00 	movslq 0x213ebb(%rip),%rsi        # 62b4d0 <dbglvl>
  417615:	48 01 ca             	add    %rcx,%rdx
  417618:	89 14 c5 a8 d7 62 00 	mov    %edx,0x62d7a8(,%rax,8)
  41761f:	48 83 fe 05          	cmp    $0x5,%rsi
  417623:	7c 15                	jl     41763a <spec_read+0x15a>
  417625:	8b 75 e8             	mov    -0x18(%rbp),%esi
  417628:	48 bf 88 7d 42 00 00 	movabs $0x427d88,%rdi
  41762f:	00 00 00 
  417632:	48 31 c0             	xor    %rax,%rax
  417635:	e8 2e 2a 00 00       	callq  41a068 <printf>
  41763a:	8b 45 e8             	mov    -0x18(%rbp),%eax
  41763d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  417640:	8b 45 fc             	mov    -0x4(%rbp),%eax
  417643:	48 83 c4 20          	add    $0x20,%rsp
  417647:	5d                   	pop    %rbp
  417648:	c3                   	retq   
  417649:	48 8b 0d 80 13 01 00 	mov    0x11380(%rip),%rcx        # 4289d0 <stderr>
  417650:	8b 55 f8             	mov    -0x8(%rbp),%edx
  417653:	48 be cc 80 42 00 00 	movabs $0x4280cc,%rsi
  41765a:	00 00 00 
  41765d:	48 31 c0             	xor    %rax,%rax
  417660:	48 89 cf             	mov    %rcx,%rdi
  417663:	e8 90 26 00 00       	callq  419cf8 <fprintf>
  417668:	48 31 ff             	xor    %rdi,%rdi
  41766b:	e8 e1 09 00 00       	callq  418051 <exit>

0000000000417670 <spec_fread>:
  417670:	55                   	push   %rbp
  417671:	48 89 e5             	mov    %rsp,%rbp
  417674:	48 83 ec 20          	sub    $0x20,%rsp
  417678:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  41767c:	89 75 ec             	mov    %esi,-0x14(%rbp)
  41767f:	89 55 e8             	mov    %edx,-0x18(%rbp)
  417682:	48 63 05 47 3e 21 00 	movslq 0x213e47(%rip),%rax        # 62b4d0 <dbglvl>
  417689:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  41768c:	48 31 c9             	xor    %rcx,%rcx
  41768f:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  417692:	48 83 f8 05          	cmp    $0x5,%rax
  417696:	7c 20                	jl     4176b8 <spec_fread+0x48>
  417698:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  41769c:	44 8b 45 e4          	mov    -0x1c(%rbp),%r8d
  4176a0:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  4176a3:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4176a6:	48 bf f3 80 42 00 00 	movabs $0x4280f3,%rdi
  4176ad:	00 00 00 
  4176b0:	48 31 c0             	xor    %rax,%rax
  4176b3:	e8 b0 29 00 00       	callq  41a068 <printf>
  4176b8:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  4176bc:	48 83 f8 04          	cmp    $0x4,%rax
  4176c0:	0f 8d 49 01 00 00    	jge    41780f <spec_fread+0x19f>
  4176c6:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  4176ca:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4176ce:	48 63 0c c5 a8 d7 62 	movslq 0x62d7a8(,%rax,8),%rcx
  4176d5:	00 
  4176d6:	48 63 04 c5 a4 d7 62 	movslq 0x62d7a4(,%rax,8),%rax
  4176dd:	00 
  4176de:	48 39 c1             	cmp    %rax,%rcx
  4176e1:	7c 2e                	jl     417711 <spec_fread+0xa1>
  4176e3:	48 63 05 e6 3d 21 00 	movslq 0x213de6(%rip),%rax        # 62b4d0 <dbglvl>
  4176ea:	48 83 f8 05          	cmp    $0x5,%rax
  4176ee:	7c 12                	jl     417702 <spec_fread+0x92>
  4176f0:	48 bf ee 80 42 00 00 	movabs $0x4280ee,%rdi
  4176f7:	00 00 00 
  4176fa:	48 31 c0             	xor    %rax,%rax
  4176fd:	e8 66 29 00 00       	callq  41a068 <printf>
  417702:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  417709:	00 00 00 
  41770c:	e9 f2 00 00 00       	jmpq   417803 <spec_fread+0x193>
  417711:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  417715:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417719:	8b 0c c5 a8 d7 62 00 	mov    0x62d7a8(,%rax,8),%ecx
  417720:	8b 55 ec             	mov    -0x14(%rbp),%edx
  417723:	8b 75 e8             	mov    -0x18(%rbp),%esi
  417726:	48 0f af f2          	imul   %rdx,%rsi
  41772a:	48 01 ce             	add    %rcx,%rsi
  41772d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  417734:	48 63 04 c5 a4 d7 62 	movslq 0x62d7a4(,%rax,8),%rax
  41773b:	00 
  41773c:	48 d3 e6             	shl    %cl,%rsi
  41773f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  417746:	48 d3 fe             	sar    %cl,%rsi
  417749:	48 39 c6             	cmp    %rax,%rsi
  41774c:	7c 38                	jl     417786 <spec_fread+0x116>
  41774e:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  417752:	48 8d 0c 40          	lea    (%rax,%rax,2),%rcx
  417756:	8b 04 cd a4 d7 62 00 	mov    0x62d7a4(,%rcx,8),%eax
  41775d:	8b 0c cd a8 d7 62 00 	mov    0x62d7a8(,%rcx,8),%ecx
  417764:	48 29 c8             	sub    %rcx,%rax
  417767:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41776e:	48 d3 e0             	shl    %cl,%rax
  417771:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  417778:	48 63 75 ec          	movslq -0x14(%rbp),%rsi
  41777c:	48 d3 f8             	sar    %cl,%rax
  41777f:	48 99                	cqto   
  417781:	48 f7 fe             	idiv   %rsi
  417784:	eb 03                	jmp    417789 <spec_fread+0x119>
  417786:	8b 45 e8             	mov    -0x18(%rbp),%eax
  417789:	89 45 e0             	mov    %eax,-0x20(%rbp)
  41778c:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  417790:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  417794:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417798:	48 63 0c c5 a8 d7 62 	movslq 0x62d7a8(,%rax,8),%rcx
  41779f:	00 
  4177a0:	48 8b 34 c5 b0 d7 62 	mov    0x62d7b0(,%rax,8),%rsi
  4177a7:	00 
  4177a8:	48 63 55 e0          	movslq -0x20(%rbp),%rdx
  4177ac:	48 01 ce             	add    %rcx,%rsi
  4177af:	e8 70 42 00 00       	callq  41ba24 <memcpy>
  4177b4:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
  4177b8:	8b 4d e0             	mov    -0x20(%rbp),%ecx
  4177bb:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4177be:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4177c2:	8b 34 c5 a8 d7 62 00 	mov    0x62d7a8(,%rax,8),%esi
  4177c9:	48 63 3d 00 3d 21 00 	movslq 0x213d00(%rip),%rdi        # 62b4d0 <dbglvl>
  4177d0:	48 0f af d1          	imul   %rcx,%rdx
  4177d4:	48 01 d6             	add    %rdx,%rsi
  4177d7:	89 34 c5 a8 d7 62 00 	mov    %esi,0x62d7a8(,%rax,8)
  4177de:	48 83 ff 05          	cmp    $0x5,%rdi
  4177e2:	7c 1c                	jl     417800 <spec_fread+0x190>
  4177e4:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4177e7:	8b 75 ec             	mov    -0x14(%rbp),%esi
  4177ea:	48 0f af f0          	imul   %rax,%rsi
  4177ee:	48 bf 88 7d 42 00 00 	movabs $0x427d88,%rdi
  4177f5:	00 00 00 
  4177f8:	48 31 c0             	xor    %rax,%rax
  4177fb:	e8 68 28 00 00       	callq  41a068 <printf>
  417800:	8b 45 e0             	mov    -0x20(%rbp),%eax
  417803:	89 45 fc             	mov    %eax,-0x4(%rbp)
  417806:	8b 45 fc             	mov    -0x4(%rbp),%eax
  417809:	48 83 c4 20          	add    $0x20,%rsp
  41780d:	5d                   	pop    %rbp
  41780e:	c3                   	retq   
  41780f:	48 8b 0d ba 11 01 00 	mov    0x111ba(%rip),%rcx        # 4289d0 <stderr>
  417816:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  417819:	48 be 15 81 42 00 00 	movabs $0x428115,%rsi
  417820:	00 00 00 
  417823:	48 31 c0             	xor    %rax,%rax
  417826:	48 89 cf             	mov    %rcx,%rdi
  417829:	e8 ca 24 00 00       	callq  419cf8 <fprintf>
  41782e:	48 31 ff             	xor    %rdi,%rdi
  417831:	e8 1b 08 00 00       	callq  418051 <exit>
  417836:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41783d:	00 00 00 

0000000000417840 <spec_getc>:
  417840:	55                   	push   %rbp
  417841:	48 89 e5             	mov    %rsp,%rbp
  417844:	48 83 ec 10          	sub    $0x10,%rsp
  417848:	48 63 05 81 3c 21 00 	movslq 0x213c81(%rip),%rax        # 62b4d0 <dbglvl>
  41784f:	89 7d f8             	mov    %edi,-0x8(%rbp)
  417852:	48 31 c9             	xor    %rcx,%rcx
  417855:	89 4d f4             	mov    %ecx,-0xc(%rbp)
  417858:	48 83 f8 05          	cmp    $0x5,%rax
  41785c:	7c 15                	jl     417873 <spec_getc+0x33>
  41785e:	8b 75 f8             	mov    -0x8(%rbp),%esi
  417861:	48 bf 38 81 42 00 00 	movabs $0x428138,%rdi
  417868:	00 00 00 
  41786b:	48 31 c0             	xor    %rax,%rax
  41786e:	e8 f5 27 00 00       	callq  41a068 <printf>
  417873:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  417877:	48 83 f8 04          	cmp    $0x4,%rax
  41787b:	0f 8d ab 00 00 00    	jge    41792c <spec_getc+0xec>
  417881:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  417885:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417889:	48 63 0c c5 a8 d7 62 	movslq 0x62d7a8(,%rax,8),%rcx
  417890:	00 
  417891:	48 63 04 c5 a4 d7 62 	movslq 0x62d7a4(,%rax,8),%rax
  417898:	00 
  417899:	48 39 c1             	cmp    %rax,%rcx
  41789c:	7c 2b                	jl     4178c9 <spec_getc+0x89>
  41789e:	48 63 05 2b 3c 21 00 	movslq 0x213c2b(%rip),%rax        # 62b4d0 <dbglvl>
  4178a5:	48 83 f8 05          	cmp    $0x5,%rax
  4178a9:	7c 12                	jl     4178bd <spec_getc+0x7d>
  4178ab:	48 bf ee 80 42 00 00 	movabs $0x4280ee,%rdi
  4178b2:	00 00 00 
  4178b5:	48 31 c0             	xor    %rax,%rax
  4178b8:	e8 ab 27 00 00       	callq  41a068 <printf>
  4178bd:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  4178c4:	00 00 00 
  4178c7:	eb 57                	jmp    417920 <spec_getc+0xe0>
  4178c9:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  4178cd:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4178d1:	48 63 0c c5 a8 d7 62 	movslq 0x62d7a8(,%rax,8),%rcx
  4178d8:	00 
  4178d9:	48 63 55 f8          	movslq -0x8(%rbp),%rdx
  4178dd:	48 8d 71 01          	lea    0x1(%rcx),%rsi
  4178e1:	89 34 c5 a8 d7 62 00 	mov    %esi,0x62d7a8(,%rax,8)
  4178e8:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
  4178ec:	48 8b 04 c5 b0 d7 62 	mov    0x62d7b0(,%rax,8),%rax
  4178f3:	00 
  4178f4:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
  4178f8:	48 63 0d d1 3b 21 00 	movslq 0x213bd1(%rip),%rcx        # 62b4d0 <dbglvl>
  4178ff:	89 45 f4             	mov    %eax,-0xc(%rbp)
  417902:	48 83 f9 05          	cmp    $0x5,%rcx
  417906:	7c 15                	jl     41791d <spec_getc+0xdd>
  417908:	8b 75 f4             	mov    -0xc(%rbp),%esi
  41790b:	48 bf 88 7d 42 00 00 	movabs $0x427d88,%rdi
  417912:	00 00 00 
  417915:	48 31 c0             	xor    %rax,%rax
  417918:	e8 4b 27 00 00       	callq  41a068 <printf>
  41791d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  417920:	89 45 fc             	mov    %eax,-0x4(%rbp)
  417923:	8b 45 fc             	mov    -0x4(%rbp),%eax
  417926:	48 83 c4 10          	add    $0x10,%rsp
  41792a:	5d                   	pop    %rbp
  41792b:	c3                   	retq   
  41792c:	48 8b 0d 9d 10 01 00 	mov    0x1109d(%rip),%rcx        # 4289d0 <stderr>
  417933:	8b 55 f8             	mov    -0x8(%rbp),%edx
  417936:	48 be cc 80 42 00 00 	movabs $0x4280cc,%rsi
  41793d:	00 00 00 
  417940:	48 31 c0             	xor    %rax,%rax
  417943:	48 89 cf             	mov    %rcx,%rdi
  417946:	e8 ad 23 00 00       	callq  419cf8 <fprintf>
  41794b:	48 31 ff             	xor    %rdi,%rdi
  41794e:	e8 fe 06 00 00       	callq  418051 <exit>
  417953:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41795a:	84 00 00 00 00 00 

0000000000417960 <spec_ungetc>:
  417960:	55                   	push   %rbp
  417961:	48 89 e5             	mov    %rsp,%rbp
  417964:	48 83 ec 10          	sub    $0x10,%rsp
  417968:	40 88 7d ff          	mov    %dil,-0x1(%rbp)
  41796c:	48 63 05 5d 3b 21 00 	movslq 0x213b5d(%rip),%rax        # 62b4d0 <dbglvl>
  417973:	89 75 f8             	mov    %esi,-0x8(%rbp)
  417976:	48 31 c9             	xor    %rcx,%rcx
  417979:	89 4d f4             	mov    %ecx,-0xc(%rbp)
  41797c:	48 83 f8 05          	cmp    $0x5,%rax
  417980:	7c 15                	jl     417997 <spec_ungetc+0x37>
  417982:	8b 75 f8             	mov    -0x8(%rbp),%esi
  417985:	48 bf 49 81 42 00 00 	movabs $0x428149,%rdi
  41798c:	00 00 00 
  41798f:	48 31 c0             	xor    %rax,%rax
  417992:	e8 d1 26 00 00       	callq  41a068 <printf>
  417997:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  41799b:	48 83 f8 04          	cmp    $0x4,%rax
  41799f:	0f 8d 8f 00 00 00    	jge    417a34 <spec_ungetc+0xd4>
  4179a5:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  4179a9:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4179ad:	48 63 04 c5 a8 d7 62 	movslq 0x62d7a8(,%rax,8),%rax
  4179b4:	00 
  4179b5:	48 85 c0             	test   %rax,%rax
  4179b8:	0f 8e 8c 00 00 00    	jle    417a4a <spec_ungetc+0xea>
  4179be:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  4179c2:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  4179c6:	8b 14 c5 a8 d7 62 00 	mov    0x62d7a8(,%rax,8),%edx
  4179cd:	48 ff ca             	dec    %rdx
  4179d0:	48 63 75 f8          	movslq -0x8(%rbp),%rsi
  4179d4:	89 14 c5 a8 d7 62 00 	mov    %edx,0x62d7a8(,%rax,8)
  4179db:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4179e2:	48 d3 e2             	shl    %cl,%rdx
  4179e5:	48 8d 04 76          	lea    (%rsi,%rsi,2),%rax
  4179e9:	48 8b 04 c5 b0 d7 62 	mov    0x62d7b0(,%rax,8),%rax
  4179f0:	00 
  4179f1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4179f8:	48 d3 fa             	sar    %cl,%rdx
  4179fb:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
  4179ff:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
  417a03:	48 39 c8             	cmp    %rcx,%rax
  417a06:	75 75                	jne    417a7d <spec_ungetc+0x11d>
  417a08:	48 63 05 c1 3a 21 00 	movslq 0x213ac1(%rip),%rax        # 62b4d0 <dbglvl>
  417a0f:	48 83 f8 05          	cmp    $0x5,%rax
  417a13:	7c 15                	jl     417a2a <spec_ungetc+0xca>
  417a15:	8b 75 f4             	mov    -0xc(%rbp),%esi
  417a18:	48 bf 88 7d 42 00 00 	movabs $0x427d88,%rdi
  417a1f:	00 00 00 
  417a22:	48 31 c0             	xor    %rax,%rax
  417a25:	e8 3e 26 00 00       	callq  41a068 <printf>
  417a2a:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  417a2e:	48 83 c4 10          	add    $0x10,%rsp
  417a32:	5d                   	pop    %rbp
  417a33:	c3                   	retq   
  417a34:	48 8b 0d 95 0f 01 00 	mov    0x10f95(%rip),%rcx        # 4289d0 <stderr>
  417a3b:	8b 55 f8             	mov    -0x8(%rbp),%edx
  417a3e:	48 be cc 80 42 00 00 	movabs $0x4280cc,%rsi
  417a45:	00 00 00 
  417a48:	eb 20                	jmp    417a6a <spec_ungetc+0x10a>
  417a4a:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  417a4e:	48 8b 0d 7b 0f 01 00 	mov    0x10f7b(%rip),%rcx        # 4289d0 <stderr>
  417a55:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417a59:	8b 14 c5 a8 d7 62 00 	mov    0x62d7a8(,%rax,8),%edx
  417a60:	48 be 5c 81 42 00 00 	movabs $0x42815c,%rsi
  417a67:	00 00 00 
  417a6a:	48 31 c0             	xor    %rax,%rax
  417a6d:	48 89 cf             	mov    %rcx,%rdi
  417a70:	e8 83 22 00 00       	callq  419cf8 <fprintf>
  417a75:	48 31 ff             	xor    %rdi,%rdi
  417a78:	e8 d4 05 00 00       	callq  418051 <exit>
  417a7d:	48 8b 0d 4c 0f 01 00 	mov    0x10f4c(%rip),%rcx        # 4289d0 <stderr>
  417a84:	48 ba 76 81 42 00 00 	movabs $0x428176,%rdx
  417a8b:	00 00 00 
  417a8e:	48 31 c0             	xor    %rax,%rax
  417a91:	48 89 cf             	mov    %rcx,%rdi
  417a94:	48 89 d6             	mov    %rdx,%rsi
  417a97:	e8 5c 22 00 00       	callq  419cf8 <fprintf>
  417a9c:	48 31 ff             	xor    %rdi,%rdi
  417a9f:	e8 ad 05 00 00       	callq  418051 <exit>
  417aa4:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  417aab:	00 00 00 00 00 

0000000000417ab0 <spec_rewind>:
  417ab0:	55                   	push   %rbp
  417ab1:	48 89 e5             	mov    %rsp,%rbp
  417ab4:	89 7d fc             	mov    %edi,-0x4(%rbp)
  417ab7:	48 63 45 fc          	movslq -0x4(%rbp),%rax
  417abb:	48 8d 0c 40          	lea    (%rax,%rax,2),%rcx
  417abf:	48 31 d2             	xor    %rdx,%rdx
  417ac2:	48 31 c0             	xor    %rax,%rax
  417ac5:	89 14 cd a8 d7 62 00 	mov    %edx,0x62d7a8(,%rcx,8)
  417acc:	5d                   	pop    %rbp
  417acd:	c3                   	retq   
  417ace:	66 90                	xchg   %ax,%ax

0000000000417ad0 <spec_reset>:
  417ad0:	55                   	push   %rbp
  417ad1:	48 89 e5             	mov    %rsp,%rbp
  417ad4:	53                   	push   %rbx
  417ad5:	50                   	push   %rax
  417ad6:	89 7d f4             	mov    %edi,-0xc(%rbp)
  417ad9:	48 63 45 f4          	movslq -0xc(%rbp),%rax
  417add:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417ae1:	48 8b 3c c5 b0 d7 62 	mov    0x62d7b0(,%rax,8),%rdi
  417ae8:	00 
  417ae9:	48 63 14 c5 a4 d7 62 	movslq 0x62d7a4(,%rax,8),%rdx
  417af0:	00 
  417af1:	48 31 f6             	xor    %rsi,%rsi
  417af4:	48 31 db             	xor    %rbx,%rbx
  417af7:	e8 5c 3f 00 00       	callq  41ba58 <memset>
  417afc:	48 63 45 f4          	movslq -0xc(%rbp),%rax
  417b00:	48 63 4d f4          	movslq -0xc(%rbp),%rcx
  417b04:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417b08:	89 1c c5 a4 d7 62 00 	mov    %ebx,0x62d7a4(,%rax,8)
  417b0f:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
  417b13:	48 31 c0             	xor    %rax,%rax
  417b16:	89 1c cd a8 d7 62 00 	mov    %ebx,0x62d7a8(,%rcx,8)
  417b1d:	48 83 c4 08          	add    $0x8,%rsp
  417b21:	5b                   	pop    %rbx
  417b22:	5d                   	pop    %rbp
  417b23:	c3                   	retq   
  417b24:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  417b2b:	00 00 00 00 00 

0000000000417b30 <spec_write>:
  417b30:	55                   	push   %rbp
  417b31:	48 89 e5             	mov    %rsp,%rbp
  417b34:	48 83 ec 20          	sub    $0x20,%rsp
  417b38:	48 63 05 91 39 21 00 	movslq 0x213991(%rip),%rax        # 62b4d0 <dbglvl>
  417b3f:	89 7d fc             	mov    %edi,-0x4(%rbp)
  417b42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  417b46:	89 55 ec             	mov    %edx,-0x14(%rbp)
  417b49:	48 83 f8 05          	cmp    $0x5,%rax
  417b4d:	7c 1c                	jl     417b6b <spec_write+0x3b>
  417b4f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  417b53:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  417b56:	8b 75 fc             	mov    -0x4(%rbp),%esi
  417b59:	48 bf be 81 42 00 00 	movabs $0x4281be,%rdi
  417b60:	00 00 00 
  417b63:	48 31 c0             	xor    %rax,%rax
  417b66:	e8 fd 24 00 00       	callq  41a068 <printf>
  417b6b:	48 63 45 fc          	movslq -0x4(%rbp),%rax
  417b6f:	48 83 f8 04          	cmp    $0x4,%rax
  417b73:	0f 8d 8b 00 00 00    	jge    417c04 <spec_write+0xd4>
  417b79:	48 63 45 fc          	movslq -0x4(%rbp),%rax
  417b7d:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417b81:	48 63 0c c5 a8 d7 62 	movslq 0x62d7a8(,%rax,8),%rcx
  417b88:	00 
  417b89:	48 8b 3c c5 b0 d7 62 	mov    0x62d7b0(,%rax,8),%rdi
  417b90:	00 
  417b91:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  417b95:	48 63 55 ec          	movslq -0x14(%rbp),%rdx
  417b99:	48 01 cf             	add    %rcx,%rdi
  417b9c:	e8 83 3e 00 00       	callq  41ba24 <memcpy>
  417ba1:	48 63 45 fc          	movslq -0x4(%rbp),%rax
  417ba5:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  417ba8:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417bac:	8b 14 c5 a4 d7 62 00 	mov    0x62d7a4(,%rax,8),%edx
  417bb3:	48 63 75 fc          	movslq -0x4(%rbp),%rsi
  417bb7:	48 01 ca             	add    %rcx,%rdx
  417bba:	89 14 c5 a4 d7 62 00 	mov    %edx,0x62d7a4(,%rax,8)
  417bc1:	8b 45 ec             	mov    -0x14(%rbp),%eax
  417bc4:	48 8d 0c 76          	lea    (%rsi,%rsi,2),%rcx
  417bc8:	8b 14 cd a8 d7 62 00 	mov    0x62d7a8(,%rcx,8),%edx
  417bcf:	48 63 35 fa 38 21 00 	movslq 0x2138fa(%rip),%rsi        # 62b4d0 <dbglvl>
  417bd6:	48 01 c2             	add    %rax,%rdx
  417bd9:	89 14 cd a8 d7 62 00 	mov    %edx,0x62d7a8(,%rcx,8)
  417be0:	48 83 fe 05          	cmp    $0x5,%rsi
  417be4:	7c 15                	jl     417bfb <spec_write+0xcb>
  417be6:	8b 75 ec             	mov    -0x14(%rbp),%esi
  417be9:	48 bf 88 7d 42 00 00 	movabs $0x427d88,%rdi
  417bf0:	00 00 00 
  417bf3:	48 31 c0             	xor    %rax,%rax
  417bf6:	e8 6d 24 00 00       	callq  41a068 <printf>
  417bfb:	8b 45 ec             	mov    -0x14(%rbp),%eax
  417bfe:	48 83 c4 20          	add    $0x20,%rsp
  417c02:	5d                   	pop    %rbp
  417c03:	c3                   	retq   
  417c04:	48 8b 0d c5 0d 01 00 	mov    0x10dc5(%rip),%rcx        # 4289d0 <stderr>
  417c0b:	8b 55 fc             	mov    -0x4(%rbp),%edx
  417c0e:	48 be d8 81 42 00 00 	movabs $0x4281d8,%rsi
  417c15:	00 00 00 
  417c18:	48 31 c0             	xor    %rax,%rax
  417c1b:	48 89 cf             	mov    %rcx,%rdi
  417c1e:	e8 d5 20 00 00       	callq  419cf8 <fprintf>
  417c23:	48 31 ff             	xor    %rdi,%rdi
  417c26:	e8 26 04 00 00       	callq  418051 <exit>
  417c2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000417c30 <spec_fwrite>:
  417c30:	55                   	push   %rbp
  417c31:	48 89 e5             	mov    %rsp,%rbp
  417c34:	48 83 ec 20          	sub    $0x20,%rsp
  417c38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  417c3c:	48 63 05 8d 38 21 00 	movslq 0x21388d(%rip),%rax        # 62b4d0 <dbglvl>
  417c43:	89 75 f4             	mov    %esi,-0xc(%rbp)
  417c46:	89 55 f0             	mov    %edx,-0x10(%rbp)
  417c49:	89 4d ec             	mov    %ecx,-0x14(%rbp)
  417c4c:	48 83 f8 05          	cmp    $0x5,%rax
  417c50:	7c 20                	jl     417c72 <spec_fwrite+0x42>
  417c52:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  417c56:	44 8b 45 ec          	mov    -0x14(%rbp),%r8d
  417c5a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  417c5d:	8b 55 f4             	mov    -0xc(%rbp),%edx
  417c60:	48 bf fb 81 42 00 00 	movabs $0x4281fb,%rdi
  417c67:	00 00 00 
  417c6a:	48 31 c0             	xor    %rax,%rax
  417c6d:	e8 f6 23 00 00       	callq  41a068 <printf>
  417c72:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  417c76:	48 83 f8 04          	cmp    $0x4,%rax
  417c7a:	0f 8d b3 00 00 00    	jge    417d33 <spec_fwrite+0x103>
  417c80:	48 63 45 ec          	movslq -0x14(%rbp),%rax
  417c84:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417c88:	48 63 0c c5 a8 d7 62 	movslq 0x62d7a8(,%rax,8),%rcx
  417c8f:	00 
  417c90:	48 8b 3c c5 b0 d7 62 	mov    0x62d7b0(,%rax,8),%rdi
  417c97:	00 
  417c98:	48 01 cf             	add    %rcx,%rdi
  417c9b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  417c9e:	8b 55 f0             	mov    -0x10(%rbp),%edx
  417ca1:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  417ca5:	48 0f af d0          	imul   %rax,%rdx
  417ca9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  417cb0:	48 d3 e2             	shl    %cl,%rdx
  417cb3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  417cba:	48 d3 fa             	sar    %cl,%rdx
  417cbd:	e8 62 3d 00 00       	callq  41ba24 <memcpy>
  417cc2:	8b 45 f4             	mov    -0xc(%rbp),%eax
  417cc5:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
  417cc9:	8b 55 f0             	mov    -0x10(%rbp),%edx
  417ccc:	48 0f af d0          	imul   %rax,%rdx
  417cd0:	48 8d 04 49          	lea    (%rcx,%rcx,2),%rax
  417cd4:	8b 0c c5 a4 d7 62 00 	mov    0x62d7a4(,%rax,8),%ecx
  417cdb:	48 01 d1             	add    %rdx,%rcx
  417cde:	48 63 55 ec          	movslq -0x14(%rbp),%rdx
  417ce2:	89 0c c5 a4 d7 62 00 	mov    %ecx,0x62d7a4(,%rax,8)
  417ce9:	8b 45 f4             	mov    -0xc(%rbp),%eax
  417cec:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  417cef:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
  417cf3:	8b 34 d5 a8 d7 62 00 	mov    0x62d7a8(,%rdx,8),%esi
  417cfa:	48 63 3d cf 37 21 00 	movslq 0x2137cf(%rip),%rdi        # 62b4d0 <dbglvl>
  417d01:	48 0f af c8          	imul   %rax,%rcx
  417d05:	48 01 ce             	add    %rcx,%rsi
  417d08:	89 34 d5 a8 d7 62 00 	mov    %esi,0x62d7a8(,%rdx,8)
  417d0f:	48 83 ff 05          	cmp    $0x5,%rdi
  417d13:	7c 15                	jl     417d2a <spec_fwrite+0xfa>
  417d15:	8b 75 f0             	mov    -0x10(%rbp),%esi
  417d18:	48 bf 88 7d 42 00 00 	movabs $0x427d88,%rdi
  417d1f:	00 00 00 
  417d22:	48 31 c0             	xor    %rax,%rax
  417d25:	e8 3e 23 00 00       	callq  41a068 <printf>
  417d2a:	8b 45 f0             	mov    -0x10(%rbp),%eax
  417d2d:	48 83 c4 20          	add    $0x20,%rsp
  417d31:	5d                   	pop    %rbp
  417d32:	c3                   	retq   
  417d33:	48 8b 0d 96 0c 01 00 	mov    0x10c96(%rip),%rcx        # 4289d0 <stderr>
  417d3a:	8b 55 ec             	mov    -0x14(%rbp),%edx
  417d3d:	48 be 1a 82 42 00 00 	movabs $0x42821a,%rsi
  417d44:	00 00 00 
  417d47:	48 31 c0             	xor    %rax,%rax
  417d4a:	48 89 cf             	mov    %rcx,%rdi
  417d4d:	e8 a6 1f 00 00       	callq  419cf8 <fprintf>
  417d52:	48 31 ff             	xor    %rdi,%rdi
  417d55:	e8 f7 02 00 00       	callq  418051 <exit>
  417d5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000417d60 <spec_putc>:
  417d60:	55                   	push   %rbp
  417d61:	48 89 e5             	mov    %rsp,%rbp
  417d64:	48 83 ec 10          	sub    $0x10,%rsp
  417d68:	48 63 05 61 37 21 00 	movslq 0x213761(%rip),%rax        # 62b4d0 <dbglvl>
  417d6f:	40 88 7d ff          	mov    %dil,-0x1(%rbp)
  417d73:	89 75 f8             	mov    %esi,-0x8(%rbp)
  417d76:	48 83 f8 05          	cmp    $0x5,%rax
  417d7a:	7c 19                	jl     417d95 <spec_putc+0x35>
  417d7c:	0f b6 75 ff          	movzbl -0x1(%rbp),%esi
  417d80:	8b 55 f8             	mov    -0x8(%rbp),%edx
  417d83:	48 bf 3e 82 42 00 00 	movabs $0x42823e,%rdi
  417d8a:	00 00 00 
  417d8d:	48 31 c0             	xor    %rax,%rax
  417d90:	e8 d3 22 00 00       	callq  41a068 <printf>
  417d95:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  417d99:	48 83 f8 04          	cmp    $0x4,%rax
  417d9d:	7d 55                	jge    417df4 <spec_putc+0x94>
  417d9f:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  417da3:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
  417da7:	48 63 0c c5 a8 d7 62 	movslq 0x62d7a8(,%rax,8),%rcx
  417dae:	00 
  417daf:	48 63 55 f8          	movslq -0x8(%rbp),%rdx
  417db3:	48 8d 71 01          	lea    0x1(%rcx),%rsi
  417db7:	89 34 c5 a8 d7 62 00 	mov    %esi,0x62d7a8(,%rax,8)
  417dbe:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  417dc2:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
  417dc6:	48 8b 14 d5 b0 d7 62 	mov    0x62d7b0(,%rdx,8),%rdx
  417dcd:	00 
  417dce:	88 04 0a             	mov    %al,(%rdx,%rcx,1)
  417dd1:	48 63 45 f8          	movslq -0x8(%rbp),%rax
  417dd5:	48 8d 0c 40          	lea    (%rax,%rax,2),%rcx
  417dd9:	8b 14 cd a4 d7 62 00 	mov    0x62d7a4(,%rcx,8),%edx
  417de0:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  417de4:	48 ff c2             	inc    %rdx
  417de7:	89 14 cd a4 d7 62 00 	mov    %edx,0x62d7a4(,%rcx,8)
  417dee:	48 83 c4 10          	add    $0x10,%rsp
  417df2:	5d                   	pop    %rbp
  417df3:	c3                   	retq   
  417df4:	48 8b 0d d5 0b 01 00 	mov    0x10bd5(%rip),%rcx        # 4289d0 <stderr>
  417dfb:	8b 55 f8             	mov    -0x8(%rbp),%edx
  417dfe:	48 be d8 81 42 00 00 	movabs $0x4281d8,%rsi
  417e05:	00 00 00 
  417e08:	48 31 c0             	xor    %rax,%rax
  417e0b:	48 89 cf             	mov    %rcx,%rdi
  417e0e:	e8 e5 1e 00 00       	callq  419cf8 <fprintf>
  417e13:	48 31 ff             	xor    %rdi,%rdi
  417e16:	e8 36 02 00 00       	callq  418051 <exit>
  417e1b:	90                   	nop

0000000000417e1c <_start>:
  417e1c:	48 31 ed             	xor    %rbp,%rbp
  417e1f:	49 89 d1             	mov    %rdx,%r9
  417e22:	5e                   	pop    %rsi
  417e23:	48 89 e2             	mov    %rsp,%rdx
  417e26:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  417e2a:	49 c7 c0 50 80 41 00 	mov    $0x418050,%r8
  417e31:	48 c7 c1 60 7e 41 00 	mov    $0x417e60,%rcx
  417e38:	48 c7 c7 80 3e 40 00 	mov    $0x403e80,%rdi
  417e3f:	e8 d7 00 00 00       	callq  417f1b <__libc_start_main>
  417e44:	eb fe                	jmp    417e44 <_start+0x28>
  417e46:	66 90                	xchg   %ax,%ax

0000000000417e48 <isspace>:
  417e48:	8d 47 f7             	lea    -0x9(%rdi),%eax
  417e4b:	83 f8 04             	cmp    $0x4,%eax
  417e4e:	0f 96 c0             	setbe  %al
  417e51:	83 ff 20             	cmp    $0x20,%edi
  417e54:	0f 94 c2             	sete   %dl
  417e57:	09 d0                	or     %edx,%eax
  417e59:	0f b6 c0             	movzbl %al,%eax
  417e5c:	c3                   	retq   
  417e5d:	0f 1f 00             	nopl   (%rax)

0000000000417e60 <_init>:
  417e60:	c3                   	retq   

0000000000417e61 <__init_libc>:
  417e61:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
  417e68:	48 89 fa             	mov    %rdi,%rdx
  417e6b:	31 c0                	xor    %eax,%eax
  417e6d:	48 89 e7             	mov    %rsp,%rdi
  417e70:	b9 4c 00 00 00       	mov    $0x4c,%ecx
  417e75:	48 89 15 4c 48 21 00 	mov    %rdx,0x21484c(%rip)        # 62c6c8 <__environ>
  417e7c:	f3 ab                	rep stos %eax,%es:(%rdi)
  417e7e:	31 c0                	xor    %eax,%eax
  417e80:	48 83 3c c2 00       	cmpq   $0x0,(%rdx,%rax,8)
  417e85:	48 8d 40 01          	lea    0x1(%rax),%rax
  417e89:	75 f5                	jne    417e80 <__init_libc+0x1f>
  417e8b:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
  417e8f:	48 89 05 9a 59 21 00 	mov    %rax,0x21599a(%rip)        # 62d830 <__libc+0x10>
  417e96:	eb 12                	jmp    417eaa <__init_libc+0x49>
  417e98:	48 83 fa 25          	cmp    $0x25,%rdx
  417e9c:	77 08                	ja     417ea6 <__init_libc+0x45>
  417e9e:	48 8b 48 08          	mov    0x8(%rax),%rcx
  417ea2:	48 89 0c d4          	mov    %rcx,(%rsp,%rdx,8)
  417ea6:	48 83 c0 10          	add    $0x10,%rax
  417eaa:	48 8b 10             	mov    (%rax),%rdx
  417ead:	48 85 d2             	test   %rdx,%rdx
  417eb0:	75 e6                	jne    417e98 <__init_libc+0x37>
  417eb2:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
  417eb9:	00 
  417eba:	48 85 f6             	test   %rsi,%rsi
  417ebd:	48 89 05 3c 59 21 00 	mov    %rax,0x21593c(%rip)        # 62d800 <__hwcap>
  417ec4:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
  417ecb:	00 
  417ecc:	48 89 05 8d 59 21 00 	mov    %rax,0x21598d(%rip)        # 62d860 <__sysinfo>
  417ed3:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  417ed8:	48 89 05 79 59 21 00 	mov    %rax,0x215979(%rip)        # 62d858 <__libc+0x38>
  417edf:	75 12                	jne    417ef3 <__init_libc+0x92>
  417ee1:	48 89 e7             	mov    %rsp,%rdi
  417ee4:	e8 70 46 00 00       	callq  41c559 <__init_tls>
  417ee9:	48 89 e7             	mov    %rsp,%rdi
  417eec:	e8 3c 45 00 00       	callq  41c42d <__init_security>
  417ef1:	eb 20                	jmp    417f13 <__init_libc+0xb2>
  417ef3:	48 89 35 1e 39 21 00 	mov    %rsi,0x21391e(%rip)        # 62b818 <__progname_full>
  417efa:	eb 04                	jmp    417f00 <__init_libc+0x9f>
  417efc:	3c 2f                	cmp    $0x2f,%al
  417efe:	75 07                	jne    417f07 <__init_libc+0xa6>
  417f00:	48 89 35 19 39 21 00 	mov    %rsi,0x213919(%rip)        # 62b820 <__progname>
  417f07:	48 ff c6             	inc    %rsi
  417f0a:	8a 46 ff             	mov    -0x1(%rsi),%al
  417f0d:	84 c0                	test   %al,%al
  417f0f:	75 eb                	jne    417efc <__init_libc+0x9b>
  417f11:	eb ce                	jmp    417ee1 <__init_libc+0x80>
  417f13:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
  417f1a:	c3                   	retq   

0000000000417f1b <__libc_start_main>:
  417f1b:	41 56                	push   %r14
  417f1d:	48 63 c6             	movslq %esi,%rax
  417f20:	49 89 fe             	mov    %rdi,%r14
  417f23:	41 55                	push   %r13
  417f25:	4c 8d 6c c2 08       	lea    0x8(%rdx,%rax,8),%r13
  417f2a:	41 54                	push   %r12
  417f2c:	41 89 f4             	mov    %esi,%r12d
  417f2f:	4c 89 ef             	mov    %r13,%rdi
  417f32:	55                   	push   %rbp
  417f33:	48 89 d5             	mov    %rdx,%rbp
  417f36:	53                   	push   %rbx
  417f37:	48 8b 32             	mov    (%rdx),%rsi
  417f3a:	bb c8 a7 62 00       	mov    $0x62a7c8,%ebx
  417f3f:	e8 1d ff ff ff       	callq  417e61 <__init_libc>
  417f44:	31 c0                	xor    %eax,%eax
  417f46:	e8 15 ff ff ff       	callq  417e60 <_init>
  417f4b:	eb 08                	jmp    417f55 <__libc_start_main+0x3a>
  417f4d:	31 c0                	xor    %eax,%eax
  417f4f:	ff 13                	callq  *(%rbx)
  417f51:	48 83 c3 08          	add    $0x8,%rbx
  417f55:	48 81 fb c8 a7 62 00 	cmp    $0x62a7c8,%rbx
  417f5c:	72 ef                	jb     417f4d <__libc_start_main+0x32>
  417f5e:	44 89 e7             	mov    %r12d,%edi
  417f61:	4c 89 ea             	mov    %r13,%rdx
  417f64:	48 89 ee             	mov    %rbp,%rsi
  417f67:	41 ff d6             	callq  *%r14
  417f6a:	89 c7                	mov    %eax,%edi
  417f6c:	e8 e0 00 00 00       	callq  418051 <exit>
  417f71:	0f 1f 00             	nopl   (%rax)

0000000000417f74 <getenv>:
  417f74:	41 54                	push   %r12
  417f76:	55                   	push   %rbp
  417f77:	48 89 fd             	mov    %rdi,%rbp
  417f7a:	53                   	push   %rbx
  417f7b:	e8 e0 3c 00 00       	callq  41bc60 <strlen>
  417f80:	48 83 3d 40 47 21 00 	cmpq   $0x0,0x214740(%rip)        # 62c6c8 <__environ>
  417f87:	00 
  417f88:	75 04                	jne    417f8e <getenv+0x1a>
  417f8a:	31 c0                	xor    %eax,%eax
  417f8c:	eb 6d                	jmp    417ffb <getenv+0x87>
  417f8e:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
  417f92:	74 f6                	je     417f8a <getenv+0x16>
  417f94:	be 3d 00 00 00       	mov    $0x3d,%esi
  417f99:	48 89 ef             	mov    %rbp,%rdi
  417f9c:	49 89 c4             	mov    %rax,%r12
  417f9f:	31 db                	xor    %ebx,%ebx
  417fa1:	e8 5a 3b 00 00       	callq  41bb00 <strchr>
  417fa6:	48 85 c0             	test   %rax,%rax
  417fa9:	74 06                	je     417fb1 <getenv+0x3d>
  417fab:	eb dd                	jmp    417f8a <getenv+0x16>
  417fad:	48 83 c3 08          	add    $0x8,%rbx
  417fb1:	48 8b 05 10 47 21 00 	mov    0x214710(%rip),%rax        # 62c6c8 <__environ>
  417fb8:	48 8b 34 18          	mov    (%rax,%rbx,1),%rsi
  417fbc:	48 85 f6             	test   %rsi,%rsi
  417fbf:	75 17                	jne    417fd8 <getenv+0x64>
  417fc1:	48 8b 05 00 47 21 00 	mov    0x214700(%rip),%rax        # 62c6c8 <__environ>
  417fc8:	48 8b 14 18          	mov    (%rax,%rbx,1),%rdx
  417fcc:	48 85 d2             	test   %rdx,%rdx
  417fcf:	4a 8d 44 22 01       	lea    0x1(%rdx,%r12,1),%rax
  417fd4:	75 25                	jne    417ffb <getenv+0x87>
  417fd6:	eb b2                	jmp    417f8a <getenv+0x16>
  417fd8:	4c 89 e2             	mov    %r12,%rdx
  417fdb:	48 89 ef             	mov    %rbp,%rdi
  417fde:	e8 fd 3c 00 00       	callq  41bce0 <strncmp>
  417fe3:	85 c0                	test   %eax,%eax
  417fe5:	75 c6                	jne    417fad <getenv+0x39>
  417fe7:	48 8b 05 da 46 21 00 	mov    0x2146da(%rip),%rax        # 62c6c8 <__environ>
  417fee:	48 8b 04 18          	mov    (%rax,%rbx,1),%rax
  417ff2:	42 80 3c 20 3d       	cmpb   $0x3d,(%rax,%r12,1)
  417ff7:	75 b4                	jne    417fad <getenv+0x39>
  417ff9:	eb c6                	jmp    417fc1 <getenv+0x4d>
  417ffb:	5b                   	pop    %rbx
  417ffc:	5d                   	pop    %rbp
  417ffd:	41 5c                	pop    %r12
  417fff:	c3                   	retq   

0000000000418000 <__errno_location>:
  418000:	48 83 3d 18 58 21 00 	cmpq   $0x0,0x215818(%rip)        # 62d820 <__libc>
  418007:	00 
  418008:	74 0e                	je     418018 <__errno_location+0x18>
  41800a:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
  418011:	00 00 
  418013:	48 8b 40 40          	mov    0x40(%rax),%rax
  418017:	c3                   	retq   
  418018:	b8 10 b8 62 00       	mov    $0x62b810,%eax
  41801d:	c3                   	retq   
  41801e:	66 90                	xchg   %ax,%ax

0000000000418020 <strerror>:
  418020:	31 c0                	xor    %eax,%eax
  418022:	0f b6 88 60 82 42 00 	movzbl 0x428260(%rax),%ecx
  418029:	89 c2                	mov    %eax,%edx
  41802b:	84 c9                	test   %cl,%cl
  41802d:	75 02                	jne    418031 <strerror+0x11>
  41802f:	eb 07                	jmp    418038 <strerror+0x18>
  418031:	48 ff c0             	inc    %rax
  418034:	39 f9                	cmp    %edi,%ecx
  418036:	75 ea                	jne    418022 <strerror+0x2>
  418038:	b8 c0 82 42 00       	mov    $0x4282c0,%eax
  41803d:	eb 0b                	jmp    41804a <strerror+0x2a>
  41803f:	80 38 00             	cmpb   $0x0,(%rax)
  418042:	48 8d 40 01          	lea    0x1(%rax),%rax
  418046:	75 f7                	jne    41803f <strerror+0x1f>
  418048:	ff ca                	dec    %edx
  41804a:	85 d2                	test   %edx,%edx
  41804c:	75 f1                	jne    41803f <strerror+0x1f>
  41804e:	c3                   	retq   
  41804f:	90                   	nop

0000000000418050 <__funcs_on_exit>:
  418050:	c3                   	retq   

0000000000418051 <exit>:
  418051:	55                   	push   %rbp
  418052:	89 fd                	mov    %edi,%ebp
  418054:	be 01 00 00 00       	mov    $0x1,%esi
  418059:	bf 22 00 00 00       	mov    $0x22,%edi
  41805e:	53                   	push   %rbx
  41805f:	50                   	push   %rax
  418060:	eb 05                	jmp    418067 <exit+0x16>
  418062:	48 89 f8             	mov    %rdi,%rax
  418065:	0f 05                	syscall 
  418067:	89 f2                	mov    %esi,%edx
  418069:	87 15 a5 37 21 00    	xchg   %edx,0x2137a5(%rip)        # 62b814 <lock.1882>
  41806f:	85 d2                	test   %edx,%edx
  418071:	75 ef                	jne    418062 <exit+0x11>
  418073:	31 c0                	xor    %eax,%eax
  418075:	bb c8 a7 62 00       	mov    $0x62a7c8,%ebx
  41807a:	e8 d1 ff ff ff       	callq  418050 <__funcs_on_exit>
  41807f:	eb 08                	jmp    418089 <exit+0x38>
  418081:	48 83 eb 08          	sub    $0x8,%rbx
  418085:	31 c0                	xor    %eax,%eax
  418087:	ff 13                	callq  *(%rbx)
  418089:	48 81 fb c8 a7 62 00 	cmp    $0x62a7c8,%rbx
  418090:	77 ef                	ja     418081 <exit+0x30>
  418092:	31 c0                	xor    %eax,%eax
  418094:	e8 b7 ff ff ff       	callq  418050 <__funcs_on_exit>
  418099:	31 c0                	xor    %eax,%eax
  41809b:	e8 e0 4f 00 00       	callq  41d080 <__stdio_exit>
  4180a0:	89 ef                	mov    %ebp,%edi
  4180a2:	e8 95 45 00 00       	callq  41c63c <_Exit>
  4180a7:	90                   	nop

00000000004180a8 <open>:
  4180a8:	48 83 ec 58          	sub    $0x58,%rsp
  4180ac:	45 31 c9             	xor    %r9d,%r9d
  4180af:	45 31 c0             	xor    %r8d,%r8d
  4180b2:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  4180b7:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  4180bc:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%rsp)
  4180c3:	00 
  4180c4:	48 63 d6             	movslq %esi,%rdx
  4180c7:	48 89 fe             	mov    %rdi,%rsi
  4180ca:	bf 02 00 00 00       	mov    $0x2,%edi
  4180cf:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  4180d4:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  4180d9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  4180de:	50                   	push   %rax
  4180df:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
  4180e3:	6a 00                	pushq  $0x0
  4180e5:	e8 2a 42 00 00       	callq  41c314 <__syscall_cp>
  4180ea:	48 89 c7             	mov    %rax,%rdi
  4180ed:	e8 0e 00 00 00       	callq  418100 <__syscall_ret>
  4180f2:	48 83 c4 68          	add    $0x68,%rsp
  4180f6:	c3                   	retq   
  4180f7:	90                   	nop
  4180f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4180ff:	00 

0000000000418100 <__syscall_ret>:
  418100:	48 81 ff 00 f0 ff ff 	cmp    $0xfffffffffffff000,%rdi
  418107:	77 07                	ja     418110 <__syscall_ret+0x10>
  418109:	48 89 f8             	mov    %rdi,%rax
  41810c:	c3                   	retq   
  41810d:	0f 1f 00             	nopl   (%rax)
  418110:	48 83 ec 18          	sub    $0x18,%rsp
  418114:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  418119:	e8 e2 fe ff ff       	callq  418000 <__errno_location>
  41811e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  418123:	f7 df                	neg    %edi
  418125:	89 38                	mov    %edi,(%rax)
  418127:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
  41812e:	48 83 c4 18          	add    $0x18,%rsp
  418132:	48 89 f8             	mov    %rdi,%rax
  418135:	c3                   	retq   
  418136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41813d:	00 00 00 

0000000000418140 <__simple_malloc>:
  418140:	41 54                	push   %r12
  418142:	48 83 ff 00          	cmp    $0x0,%rdi
  418146:	55                   	push   %rbp
  418147:	53                   	push   %rbx
  418148:	74 36                	je     418180 <__simple_malloc+0x40>
  41814a:	0f 8c ca 00 00 00    	jl     41821a <__simple_malloc+0xda>
  418150:	48 83 ff 01          	cmp    $0x1,%rdi
  418154:	76 2a                	jbe    418180 <__simple_malloc+0x40>
  418156:	bb 01 00 00 00       	mov    $0x1,%ebx
  41815b:	eb 08                	jmp    418165 <__simple_malloc+0x25>
  41815d:	0f 1f 00             	nopl   (%rax)
  418160:	48 39 df             	cmp    %rbx,%rdi
  418163:	76 09                	jbe    41816e <__simple_malloc+0x2e>
  418165:	48 01 db             	add    %rbx,%rbx
  418168:	48 83 fb 0f          	cmp    $0xf,%rbx
  41816c:	76 f2                	jbe    418160 <__simple_malloc+0x20>
  41816e:	49 89 dc             	mov    %rbx,%r12
  418171:	48 8d 6c 3b ff       	lea    -0x1(%rbx,%rdi,1),%rbp
  418176:	49 f7 dc             	neg    %r12
  418179:	4c 21 e5             	and    %r12,%rbp
  41817c:	eb 13                	jmp    418191 <__simple_malloc+0x51>
  41817e:	66 90                	xchg   %ax,%ax
  418180:	bd 01 00 00 00       	mov    $0x1,%ebp
  418185:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
  41818c:	bb 01 00 00 00       	mov    $0x1,%ebx
  418191:	bf 30 b8 62 00       	mov    $0x62b830,%edi
  418196:	e8 d1 40 00 00       	callq  41c26c <__lock>
  41819b:	48 8b 05 96 36 21 00 	mov    0x213696(%rip),%rax        # 62b838 <cur.1736>
  4181a2:	48 85 c0             	test   %rax,%rax
  4181a5:	0f 84 85 00 00 00    	je     418230 <__simple_malloc+0xf0>
  4181ab:	48 8d 5c 03 ff       	lea    -0x1(%rbx,%rax,1),%rbx
  4181b0:	48 c7 c0 ff ef ff ff 	mov    $0xffffffffffffefff,%rax
  4181b7:	4c 21 e3             	and    %r12,%rbx
  4181ba:	48 29 d8             	sub    %rbx,%rax
  4181bd:	48 39 e8             	cmp    %rbp,%rax
  4181c0:	72 4e                	jb     418210 <__simple_malloc+0xd0>
  4181c2:	48 01 dd             	add    %rbx,%rbp
  4181c5:	48 3b 2d 74 36 21 00 	cmp    0x213674(%rip),%rbp        # 62b840 <brk.1737>
  4181cc:	76 22                	jbe    4181f0 <__simple_malloc+0xb0>
  4181ce:	4c 8d a5 ff 0f 00 00 	lea    0xfff(%rbp),%r12
  4181d5:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
  4181dc:	4c 89 e7             	mov    %r12,%rdi
  4181df:	e8 8c 44 00 00       	callq  41c670 <__brk>
  4181e4:	4c 39 e0             	cmp    %r12,%rax
  4181e7:	75 27                	jne    418210 <__simple_malloc+0xd0>
  4181e9:	48 89 05 50 36 21 00 	mov    %rax,0x213650(%rip)        # 62b840 <brk.1737>
  4181f0:	bf 30 b8 62 00       	mov    $0x62b830,%edi
  4181f5:	48 89 2d 3c 36 21 00 	mov    %rbp,0x21363c(%rip)        # 62b838 <cur.1736>
  4181fc:	e8 a5 40 00 00       	callq  41c2a6 <__unlock>
  418201:	48 89 d8             	mov    %rbx,%rax
  418204:	5b                   	pop    %rbx
  418205:	5d                   	pop    %rbp
  418206:	41 5c                	pop    %r12
  418208:	c3                   	retq   
  418209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  418210:	bf 30 b8 62 00       	mov    $0x62b830,%edi
  418215:	e8 8c 40 00 00       	callq  41c2a6 <__unlock>
  41821a:	e8 e1 fd ff ff       	callq  418000 <__errno_location>
  41821f:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
  418225:	31 c0                	xor    %eax,%eax
  418227:	5b                   	pop    %rbx
  418228:	5d                   	pop    %rbp
  418229:	41 5c                	pop    %r12
  41822b:	c3                   	retq   
  41822c:	0f 1f 40 00          	nopl   0x0(%rax)
  418230:	31 ff                	xor    %edi,%edi
  418232:	e8 39 44 00 00       	callq  41c670 <__brk>
  418237:	48 83 c0 10          	add    $0x10,%rax
  41823b:	48 89 05 fe 35 21 00 	mov    %rax,0x2135fe(%rip)        # 62b840 <brk.1737>
  418242:	48 89 05 ef 35 21 00 	mov    %rax,0x2135ef(%rip)        # 62b838 <cur.1736>
  418249:	e9 5d ff ff ff       	jmpq   4181ab <__simple_malloc+0x6b>
  41824e:	66 90                	xchg   %ax,%ax

0000000000418250 <expand_heap>:
  418250:	41 54                	push   %r12
  418252:	8b 05 e0 55 21 00    	mov    0x2155e0(%rip),%eax        # 62d838 <__libc+0x18>
  418258:	49 89 fc             	mov    %rdi,%r12
  41825b:	55                   	push   %rbp
  41825c:	85 c0                	test   %eax,%eax
  41825e:	53                   	push   %rbx
  41825f:	74 3f                	je     4182a0 <expand_heap+0x50>
  418261:	b8 01 00 00 00       	mov    $0x1,%eax
  418266:	87 05 0c 3c 21 00    	xchg   %eax,0x213c0c(%rip)        # 62be78 <mal+0x618>
  41826c:	85 c0                	test   %eax,%eax
  41826e:	74 30                	je     4182a0 <expand_heap+0x50>
  418270:	bb 60 b8 62 00       	mov    $0x62b860,%ebx
  418275:	0f 1f 00             	nopl   (%rax)
  418278:	b9 01 00 00 00       	mov    $0x1,%ecx
  41827d:	ba 01 00 00 00       	mov    $0x1,%edx
  418282:	be 7c be 62 00       	mov    $0x62be7c,%esi
  418287:	bf 78 be 62 00       	mov    $0x62be78,%edi
  41828c:	e8 37 40 00 00       	callq  41c2c8 <__wait>
  418291:	b8 01 00 00 00       	mov    $0x1,%eax
  418296:	87 83 18 06 00 00    	xchg   %eax,0x618(%rbx)
  41829c:	85 c0                	test   %eax,%eax
  41829e:	75 d8                	jne    418278 <expand_heap+0x28>
  4182a0:	48 8b 2d b9 35 21 00 	mov    0x2135b9(%rip),%rbp        # 62b860 <mal>
  4182a7:	48 89 e8             	mov    %rbp,%rax
  4182aa:	48 f7 d0             	not    %rax
  4182ad:	48 2d 00 20 00 00    	sub    $0x2000,%rax
  4182b3:	4c 39 e0             	cmp    %r12,%rax
  4182b6:	0f 82 84 00 00 00    	jb     418340 <expand_heap+0xf0>
  4182bc:	4a 8d 9c 25 1f 10 00 	lea    0x101f(%rbp,%r12,1),%rbx
  4182c3:	00 
  4182c4:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
  4182cb:	48 89 df             	mov    %rbx,%rdi
  4182ce:	e8 9d 43 00 00       	callq  41c670 <__brk>
  4182d3:	48 39 d8             	cmp    %rbx,%rax
  4182d6:	75 68                	jne    418340 <expand_heap+0xf0>
  4182d8:	48 89 c1             	mov    %rax,%rcx
  4182db:	48 8b 15 7e 35 21 00 	mov    0x21357e(%rip),%rdx        # 62b860 <mal>
  4182e2:	48 c7 40 f8 01 00 00 	movq   $0x1,-0x8(%rax)
  4182e9:	00 
  4182ea:	48 29 e9             	sub    %rbp,%rcx
  4182ed:	48 83 c9 01          	or     $0x1,%rcx
  4182f1:	48 89 48 f0          	mov    %rcx,-0x10(%rax)
  4182f5:	48 89 05 64 35 21 00 	mov    %rax,0x213564(%rip)        # 62b860 <mal>
  4182fc:	4c 8d 42 f0          	lea    -0x10(%rdx),%r8
  418300:	8b 05 72 3b 21 00    	mov    0x213b72(%rip),%eax        # 62be78 <mal+0x618>
  418306:	48 89 4a f8          	mov    %rcx,-0x8(%rdx)
  41830a:	85 c0                	test   %eax,%eax
  41830c:	74 26                	je     418334 <expand_heap+0xe4>
  41830e:	31 c0                	xor    %eax,%eax
  418310:	89 05 62 3b 21 00    	mov    %eax,0x213b62(%rip)        # 62be78 <mal+0x618>
  418316:	8b 05 60 3b 21 00    	mov    0x213b60(%rip),%eax        # 62be7c <mal+0x61c>
  41831c:	85 c0                	test   %eax,%eax
  41831e:	74 14                	je     418334 <expand_heap+0xe4>
  418320:	ba 01 00 00 00       	mov    $0x1,%edx
  418325:	bf 78 be 62 00       	mov    $0x62be78,%edi
  41832a:	b8 ca 00 00 00       	mov    $0xca,%eax
  41832f:	48 89 d6             	mov    %rdx,%rsi
  418332:	0f 05                	syscall 
  418334:	5b                   	pop    %rbx
  418335:	5d                   	pop    %rbp
  418336:	4c 89 c0             	mov    %r8,%rax
  418339:	41 5c                	pop    %r12
  41833b:	c3                   	retq   
  41833c:	0f 1f 40 00          	nopl   0x0(%rax)
  418340:	8b 05 32 3b 21 00    	mov    0x213b32(%rip),%eax        # 62be78 <mal+0x618>
  418346:	85 c0                	test   %eax,%eax
  418348:	74 26                	je     418370 <expand_heap+0x120>
  41834a:	31 c0                	xor    %eax,%eax
  41834c:	89 05 26 3b 21 00    	mov    %eax,0x213b26(%rip)        # 62be78 <mal+0x618>
  418352:	8b 05 24 3b 21 00    	mov    0x213b24(%rip),%eax        # 62be7c <mal+0x61c>
  418358:	85 c0                	test   %eax,%eax
  41835a:	74 14                	je     418370 <expand_heap+0x120>
  41835c:	ba 01 00 00 00       	mov    $0x1,%edx
  418361:	bf 78 be 62 00       	mov    $0x62be78,%edi
  418366:	b8 ca 00 00 00       	mov    $0xca,%eax
  41836b:	48 89 d6             	mov    %rdx,%rsi
  41836e:	0f 05                	syscall 
  418370:	e8 8b fc ff ff       	callq  418000 <__errno_location>
  418375:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
  41837b:	45 31 c0             	xor    %r8d,%r8d
  41837e:	5b                   	pop    %rbx
  41837f:	5d                   	pop    %rbp
  418380:	4c 89 c0             	mov    %r8,%rax
  418383:	41 5c                	pop    %r12
  418385:	c3                   	retq   
  418386:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41838d:	00 00 00 

0000000000418390 <alloc_rev>:
  418390:	41 57                	push   %r15
  418392:	41 56                	push   %r14
  418394:	41 55                	push   %r13
  418396:	41 54                	push   %r12
  418398:	55                   	push   %rbp
  418399:	53                   	push   %rbx
  41839a:	bb 01 00 00 00       	mov    $0x1,%ebx
  41839f:	48 83 ec 18          	sub    $0x18,%rsp
  4183a3:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  4183a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4183af:	00 
  4183b0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4183b5:	4c 8b 27             	mov    (%rdi),%r12
  4183b8:	41 f6 c4 01          	test   $0x1,%r12b
  4183bc:	0f 85 1b 01 00 00    	jne    4184dd <alloc_rev+0x14d>
  4183c2:	4c 89 e0             	mov    %r12,%rax
  4183c5:	48 c1 e8 05          	shr    $0x5,%rax
  4183c9:	48 83 e8 01          	sub    $0x1,%rax
  4183cd:	48 83 f8 20          	cmp    $0x20,%rax
  4183d1:	0f 87 b9 00 00 00    	ja     418490 <alloc_rev+0x100>
  4183d7:	89 44 24 04          	mov    %eax,0x4(%rsp)
  4183db:	4c 63 6c 24 04       	movslq 0x4(%rsp),%r13
  4183e0:	8b 15 52 54 21 00    	mov    0x215452(%rip),%edx        # 62d838 <__libc+0x18>
  4183e6:	85 d2                	test   %edx,%edx
  4183e8:	4b 8d 44 6d 00       	lea    0x0(%r13,%r13,2),%rax
  4183ed:	4c 8d 34 c5 70 b8 62 	lea    0x62b870(,%rax,8),%r14
  4183f4:	00 
  4183f5:	4c 89 e0             	mov    %r12,%rax
  4183f8:	4d 8d 7e 08          	lea    0x8(%r14),%r15
  4183fc:	74 38                	je     418436 <alloc_rev+0xa6>
  4183fe:	89 d8                	mov    %ebx,%eax
  418400:	49 8d 6e 0c          	lea    0xc(%r14),%rbp
  418404:	41 87 46 08          	xchg   %eax,0x8(%r14)
  418408:	85 c0                	test   %eax,%eax
  41840a:	74 22                	je     41842e <alloc_rev+0x9e>
  41840c:	0f 1f 40 00          	nopl   0x0(%rax)
  418410:	b9 01 00 00 00       	mov    $0x1,%ecx
  418415:	ba 01 00 00 00       	mov    $0x1,%edx
  41841a:	48 89 ee             	mov    %rbp,%rsi
  41841d:	4c 89 ff             	mov    %r15,%rdi
  418420:	e8 a3 3e 00 00       	callq  41c2c8 <__wait>
  418425:	89 d9                	mov    %ebx,%ecx
  418427:	41 87 0f             	xchg   %ecx,(%r15)
  41842a:	85 c9                	test   %ecx,%ecx
  41842c:	75 e2                	jne    418410 <alloc_rev+0x80>
  41842e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  418433:	48 8b 07             	mov    (%rdi),%rax
  418436:	4b 8d 54 6d 00       	lea    0x0(%r13,%r13,2),%rdx
  41843b:	48 c1 e2 03          	shl    $0x3,%rdx
  41843f:	48 83 ba 80 b8 62 00 	cmpq   $0x0,0x62b880(%rdx)
  418446:	00 
  418447:	48 8d 8a 70 b8 62 00 	lea    0x62b870(%rdx),%rcx
  41844e:	0f 84 9c 00 00 00    	je     4184f0 <alloc_rev+0x160>
  418454:	49 39 c4             	cmp    %rax,%r12
  418457:	0f 84 aa 00 00 00    	je     418507 <alloc_rev+0x177>
  41845d:	41 8b 56 08          	mov    0x8(%r14),%edx
  418461:	85 d2                	test   %edx,%edx
  418463:	74 6b                	je     4184d0 <alloc_rev+0x140>
  418465:	31 c0                	xor    %eax,%eax
  418467:	41 89 07             	mov    %eax,(%r15)
  41846a:	41 8b 47 04          	mov    0x4(%r15),%eax
  41846e:	85 c0                	test   %eax,%eax
  418470:	0f 84 3a ff ff ff    	je     4183b0 <alloc_rev+0x20>
  418476:	ba 01 00 00 00       	mov    $0x1,%edx
  41847b:	b8 ca 00 00 00       	mov    $0xca,%eax
  418480:	4c 89 ff             	mov    %r15,%rdi
  418483:	48 89 d6             	mov    %rdx,%rsi
  418486:	0f 05                	syscall 
  418488:	e9 23 ff ff ff       	jmpq   4183b0 <alloc_rev+0x20>
  41848d:	0f 1f 00             	nopl   (%rax)
  418490:	48 3d 00 1c 00 00    	cmp    $0x1c00,%rax
  418496:	c7 44 24 04 3f 00 00 	movl   $0x3f,0x4(%rsp)
  41849d:	00 
  41849e:	0f 87 37 ff ff ff    	ja     4183db <alloc_rev+0x4b>
  4184a4:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
  4184a8:	f3 0f 11 44 24 04    	movss  %xmm0,0x4(%rsp)
  4184ae:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
  4184b3:	41 c1 ef 15          	shr    $0x15,%r15d
  4184b7:	41 81 ef f0 01 00 00 	sub    $0x1f0,%r15d
  4184be:	44 89 7c 24 04       	mov    %r15d,0x4(%rsp)
  4184c3:	e9 13 ff ff ff       	jmpq   4183db <alloc_rev+0x4b>
  4184c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4184cf:	00 
  4184d0:	49 89 c4             	mov    %rax,%r12
  4184d3:	41 f6 c4 01          	test   $0x1,%r12b
  4184d7:	0f 84 e5 fe ff ff    	je     4183c2 <alloc_rev+0x32>
  4184dd:	48 83 c4 18          	add    $0x18,%rsp
  4184e1:	31 c0                	xor    %eax,%eax
  4184e3:	5b                   	pop    %rbx
  4184e4:	5d                   	pop    %rbp
  4184e5:	41 5c                	pop    %r12
  4184e7:	41 5d                	pop    %r13
  4184e9:	41 5e                	pop    %r14
  4184eb:	41 5f                	pop    %r15
  4184ed:	c3                   	retq   
  4184ee:	66 90                	xchg   %ax,%ax
  4184f0:	49 39 c4             	cmp    %rax,%r12
  4184f3:	48 89 8a 88 b8 62 00 	mov    %rcx,0x62b888(%rdx)
  4184fa:	48 89 8a 80 b8 62 00 	mov    %rcx,0x62b880(%rdx)
  418501:	0f 85 56 ff ff ff    	jne    41845d <alloc_rev+0xcd>
  418507:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  41850c:	49 83 e4 fe          	and    $0xfffffffffffffffe,%r12
  418510:	4c 29 e0             	sub    %r12,%rax
  418513:	48 8b 50 18          	mov    0x18(%rax),%rdx
  418517:	48 8b 48 10          	mov    0x10(%rax),%rcx
  41851b:	48 39 ca             	cmp    %rcx,%rdx
  41851e:	74 5e                	je     41857e <alloc_rev+0x1ee>
  418520:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  418524:	48 8b 48 10          	mov    0x10(%rax),%rcx
  418528:	48 89 51 18          	mov    %rdx,0x18(%rcx)
  41852c:	48 8b 50 08          	mov    0x8(%rax),%rdx
  418530:	48 89 d1             	mov    %rdx,%rcx
  418533:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
  418537:	48 83 c9 01          	or     $0x1,%rcx
  41853b:	48 83 0c 10 01       	orq    $0x1,(%rax,%rdx,1)
  418540:	48 89 48 08          	mov    %rcx,0x8(%rax)
  418544:	41 8b 07             	mov    (%r15),%eax
  418547:	85 c0                	test   %eax,%eax
  418549:	74 1f                	je     41856a <alloc_rev+0x1da>
  41854b:	31 c0                	xor    %eax,%eax
  41854d:	41 89 07             	mov    %eax,(%r15)
  418550:	41 8b 47 04          	mov    0x4(%r15),%eax
  418554:	85 c0                	test   %eax,%eax
  418556:	74 12                	je     41856a <alloc_rev+0x1da>
  418558:	ba 01 00 00 00       	mov    $0x1,%edx
  41855d:	b8 ca 00 00 00       	mov    $0xca,%eax
  418562:	4c 89 ff             	mov    %r15,%rdi
  418565:	48 89 d6             	mov    %rdx,%rsi
  418568:	0f 05                	syscall 
  41856a:	48 83 c4 18          	add    $0x18,%rsp
  41856e:	b8 01 00 00 00       	mov    $0x1,%eax
  418573:	5b                   	pop    %rbx
  418574:	5d                   	pop    %rbp
  418575:	41 5c                	pop    %r12
  418577:	41 5d                	pop    %r13
  418579:	41 5e                	pop    %r14
  41857b:	41 5f                	pop    %r15
  41857d:	c3                   	retq   
  41857e:	0f b6 4c 24 04       	movzbl 0x4(%rsp),%ecx
  418583:	48 c7 c2 fe ff ff ff 	mov    $0xfffffffffffffffe,%rdx
  41858a:	48 d3 c2             	rol    %cl,%rdx
  41858d:	f0 48 21 15 db 32 21 	lock and %rdx,0x2132db(%rip)        # 62b870 <mal+0x10>
  418594:	00 
  418595:	48 8b 50 18          	mov    0x18(%rax),%rdx
  418599:	48 8b 48 10          	mov    0x10(%rax),%rcx
  41859d:	eb 81                	jmp    418520 <alloc_rev+0x190>
  41859f:	90                   	nop

00000000004185a0 <alloc_fwd>:
  4185a0:	41 57                	push   %r15
  4185a2:	41 56                	push   %r14
  4185a4:	41 55                	push   %r13
  4185a6:	41 54                	push   %r12
  4185a8:	55                   	push   %rbp
  4185a9:	53                   	push   %rbx
  4185aa:	bb 01 00 00 00       	mov    $0x1,%ebx
  4185af:	48 83 ec 18          	sub    $0x18,%rsp
  4185b3:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  4185b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4185bf:	00 
  4185c0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4185c5:	4c 8b 67 08          	mov    0x8(%rdi),%r12
  4185c9:	41 f6 c4 01          	test   $0x1,%r12b
  4185cd:	0f 85 1a 01 00 00    	jne    4186ed <alloc_fwd+0x14d>
  4185d3:	4c 89 e0             	mov    %r12,%rax
  4185d6:	48 c1 e8 05          	shr    $0x5,%rax
  4185da:	48 83 e8 01          	sub    $0x1,%rax
  4185de:	48 83 f8 20          	cmp    $0x20,%rax
  4185e2:	0f 87 b8 00 00 00    	ja     4186a0 <alloc_fwd+0x100>
  4185e8:	89 44 24 04          	mov    %eax,0x4(%rsp)
  4185ec:	4c 63 6c 24 04       	movslq 0x4(%rsp),%r13
  4185f1:	8b 15 41 52 21 00    	mov    0x215241(%rip),%edx        # 62d838 <__libc+0x18>
  4185f7:	85 d2                	test   %edx,%edx
  4185f9:	4b 8d 44 6d 00       	lea    0x0(%r13,%r13,2),%rax
  4185fe:	4c 8d 34 c5 70 b8 62 	lea    0x62b870(,%rax,8),%r14
  418605:	00 
  418606:	4c 89 e0             	mov    %r12,%rax
  418609:	4d 8d 7e 08          	lea    0x8(%r14),%r15
  41860d:	74 38                	je     418647 <alloc_fwd+0xa7>
  41860f:	89 d8                	mov    %ebx,%eax
  418611:	49 8d 6e 0c          	lea    0xc(%r14),%rbp
  418615:	41 87 46 08          	xchg   %eax,0x8(%r14)
  418619:	85 c0                	test   %eax,%eax
  41861b:	74 21                	je     41863e <alloc_fwd+0x9e>
  41861d:	0f 1f 00             	nopl   (%rax)
  418620:	b9 01 00 00 00       	mov    $0x1,%ecx
  418625:	ba 01 00 00 00       	mov    $0x1,%edx
  41862a:	48 89 ee             	mov    %rbp,%rsi
  41862d:	4c 89 ff             	mov    %r15,%rdi
  418630:	e8 93 3c 00 00       	callq  41c2c8 <__wait>
  418635:	89 d9                	mov    %ebx,%ecx
  418637:	41 87 0f             	xchg   %ecx,(%r15)
  41863a:	85 c9                	test   %ecx,%ecx
  41863c:	75 e2                	jne    418620 <alloc_fwd+0x80>
  41863e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  418643:	48 8b 47 08          	mov    0x8(%rdi),%rax
  418647:	4b 8d 54 6d 00       	lea    0x0(%r13,%r13,2),%rdx
  41864c:	48 c1 e2 03          	shl    $0x3,%rdx
  418650:	48 83 ba 80 b8 62 00 	cmpq   $0x0,0x62b880(%rdx)
  418657:	00 
  418658:	48 8d 8a 70 b8 62 00 	lea    0x62b870(%rdx),%rcx
  41865f:	0f 84 9b 00 00 00    	je     418700 <alloc_fwd+0x160>
  418665:	49 39 c4             	cmp    %rax,%r12
  418668:	0f 84 a9 00 00 00    	je     418717 <alloc_fwd+0x177>
  41866e:	41 8b 56 08          	mov    0x8(%r14),%edx
  418672:	85 d2                	test   %edx,%edx
  418674:	74 6a                	je     4186e0 <alloc_fwd+0x140>
  418676:	31 c0                	xor    %eax,%eax
  418678:	41 89 07             	mov    %eax,(%r15)
  41867b:	41 8b 47 04          	mov    0x4(%r15),%eax
  41867f:	85 c0                	test   %eax,%eax
  418681:	0f 84 39 ff ff ff    	je     4185c0 <alloc_fwd+0x20>
  418687:	ba 01 00 00 00       	mov    $0x1,%edx
  41868c:	b8 ca 00 00 00       	mov    $0xca,%eax
  418691:	4c 89 ff             	mov    %r15,%rdi
  418694:	48 89 d6             	mov    %rdx,%rsi
  418697:	0f 05                	syscall 
  418699:	e9 22 ff ff ff       	jmpq   4185c0 <alloc_fwd+0x20>
  41869e:	66 90                	xchg   %ax,%ax
  4186a0:	48 3d 00 1c 00 00    	cmp    $0x1c00,%rax
  4186a6:	c7 44 24 04 3f 00 00 	movl   $0x3f,0x4(%rsp)
  4186ad:	00 
  4186ae:	0f 87 38 ff ff ff    	ja     4185ec <alloc_fwd+0x4c>
  4186b4:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
  4186b8:	f3 0f 11 44 24 04    	movss  %xmm0,0x4(%rsp)
  4186be:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
  4186c3:	41 c1 ef 15          	shr    $0x15,%r15d
  4186c7:	41 81 ef f0 01 00 00 	sub    $0x1f0,%r15d
  4186ce:	44 89 7c 24 04       	mov    %r15d,0x4(%rsp)
  4186d3:	e9 14 ff ff ff       	jmpq   4185ec <alloc_fwd+0x4c>
  4186d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4186df:	00 
  4186e0:	49 89 c4             	mov    %rax,%r12
  4186e3:	41 f6 c4 01          	test   $0x1,%r12b
  4186e7:	0f 84 e6 fe ff ff    	je     4185d3 <alloc_fwd+0x33>
  4186ed:	48 83 c4 18          	add    $0x18,%rsp
  4186f1:	31 c0                	xor    %eax,%eax
  4186f3:	5b                   	pop    %rbx
  4186f4:	5d                   	pop    %rbp
  4186f5:	41 5c                	pop    %r12
  4186f7:	41 5d                	pop    %r13
  4186f9:	41 5e                	pop    %r14
  4186fb:	41 5f                	pop    %r15
  4186fd:	c3                   	retq   
  4186fe:	66 90                	xchg   %ax,%ax
  418700:	49 39 c4             	cmp    %rax,%r12
  418703:	48 89 8a 88 b8 62 00 	mov    %rcx,0x62b888(%rdx)
  41870a:	48 89 8a 80 b8 62 00 	mov    %rcx,0x62b880(%rdx)
  418711:	0f 85 57 ff ff ff    	jne    41866e <alloc_fwd+0xce>
  418717:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  41871c:	48 8b 47 18          	mov    0x18(%rdi),%rax
  418720:	48 8b 57 10          	mov    0x10(%rdi),%rdx
  418724:	48 39 d0             	cmp    %rdx,%rax
  418727:	74 5a                	je     418783 <alloc_fwd+0x1e3>
  418729:	48 89 50 10          	mov    %rdx,0x10(%rax)
  41872d:	48 8b 57 10          	mov    0x10(%rdi),%rdx
  418731:	48 89 42 18          	mov    %rax,0x18(%rdx)
  418735:	4c 89 e0             	mov    %r12,%rax
  418738:	49 83 e4 fe          	and    $0xfffffffffffffffe,%r12
  41873c:	48 83 c8 01          	or     $0x1,%rax
  418740:	4a 83 0c 27 01       	orq    $0x1,(%rdi,%r12,1)
  418745:	48 89 47 08          	mov    %rax,0x8(%rdi)
  418749:	41 8b 07             	mov    (%r15),%eax
  41874c:	85 c0                	test   %eax,%eax
  41874e:	74 1f                	je     41876f <alloc_fwd+0x1cf>
  418750:	31 c0                	xor    %eax,%eax
  418752:	41 89 07             	mov    %eax,(%r15)
  418755:	41 8b 47 04          	mov    0x4(%r15),%eax
  418759:	85 c0                	test   %eax,%eax
  41875b:	74 12                	je     41876f <alloc_fwd+0x1cf>
  41875d:	ba 01 00 00 00       	mov    $0x1,%edx
  418762:	b8 ca 00 00 00       	mov    $0xca,%eax
  418767:	4c 89 ff             	mov    %r15,%rdi
  41876a:	48 89 d6             	mov    %rdx,%rsi
  41876d:	0f 05                	syscall 
  41876f:	48 83 c4 18          	add    $0x18,%rsp
  418773:	b8 01 00 00 00       	mov    $0x1,%eax
  418778:	5b                   	pop    %rbx
  418779:	5d                   	pop    %rbp
  41877a:	41 5c                	pop    %r12
  41877c:	41 5d                	pop    %r13
  41877e:	41 5e                	pop    %r14
  418780:	41 5f                	pop    %r15
  418782:	c3                   	retq   
  418783:	0f b6 4c 24 04       	movzbl 0x4(%rsp),%ecx
  418788:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
  41878f:	48 d3 c0             	rol    %cl,%rax
  418792:	f0 48 21 05 d6 30 21 	lock and %rax,0x2130d6(%rip)        # 62b870 <mal+0x10>
  418799:	00 
  41879a:	48 8b 47 18          	mov    0x18(%rdi),%rax
  41879e:	48 8b 57 10          	mov    0x10(%rdi),%rdx
  4187a2:	4c 8b 67 08          	mov    0x8(%rdi),%r12
  4187a6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4187ab:	e9 79 ff ff ff       	jmpq   418729 <alloc_fwd+0x189>

00000000004187b0 <free>:
  4187b0:	41 57                	push   %r15
  4187b2:	41 56                	push   %r14
  4187b4:	41 55                	push   %r13
  4187b6:	41 54                	push   %r12
  4187b8:	4c 8d 67 f0          	lea    -0x10(%rdi),%r12
  4187bc:	55                   	push   %rbp
  4187bd:	53                   	push   %rbx
  4187be:	48 83 ec 38          	sub    $0x38,%rsp
  4187c2:	48 85 ff             	test   %rdi,%rdi
  4187c5:	0f 84 34 03 00 00    	je     418aff <free+0x34f>
  4187cb:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
  4187cf:	a8 01                	test   $0x1,%al
  4187d1:	0f 84 39 03 00 00    	je     418b10 <free+0x360>
  4187d7:	48 89 c2             	mov    %rax,%rdx
  4187da:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
  4187de:	49 89 d5             	mov    %rdx,%r13
  4187e1:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  4187e6:	4d 01 e5             	add    %r12,%r13
  4187e9:	49 3b 45 00          	cmp    0x0(%r13),%rax
  4187ed:	74 01                	je     4187f0 <free+0x40>
  4187ef:	f4                   	hlt    
  4187f0:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  4187f5:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
  4187fc:	00 
  4187fd:	bd 01 00 00 00       	mov    $0x1,%ebp
  418802:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  418807:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41880e:	00 00 
  418810:	8b 44 24 24          	mov    0x24(%rsp),%eax
  418814:	85 c0                	test   %eax,%eax
  418816:	0f 84 a8 00 00 00    	je     4188c4 <free+0x114>
  41881c:	49 8b 04 24          	mov    (%r12),%rax
  418820:	49 23 45 08          	and    0x8(%r13),%rax
  418824:	a8 01                	test   $0x1,%al
  418826:	0f 85 34 03 00 00    	jne    418b60 <free+0x3b0>
  41882c:	4c 89 e7             	mov    %r12,%rdi
  41882f:	e8 5c fb ff ff       	callq  418390 <alloc_rev>
  418834:	85 c0                	test   %eax,%eax
  418836:	74 3b                	je     418873 <free+0xc3>
  418838:	49 8b 04 24          	mov    (%r12),%rax
  41883c:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  418841:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  418845:	49 29 c4             	sub    %rax,%r12
  418848:	49 8b 44 24 08       	mov    0x8(%r12),%rax
  41884d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  418851:	48 01 44 24 08       	add    %rax,0x8(%rsp)
  418856:	48 01 c2             	add    %rax,%rdx
  418859:	48 81 fa 00 80 02 00 	cmp    $0x28000,%rdx
  418860:	76 11                	jbe    418873 <free+0xc3>
  418862:	48 31 c2             	xor    %rax,%rdx
  418865:	48 39 d0             	cmp    %rdx,%rax
  418868:	8b 44 24 24          	mov    0x24(%rsp),%eax
  41886c:	0f 42 c5             	cmovb  %ebp,%eax
  41886f:	89 44 24 24          	mov    %eax,0x24(%rsp)
  418873:	4c 89 ef             	mov    %r13,%rdi
  418876:	e8 25 fd ff ff       	callq  4185a0 <alloc_fwd>
  41887b:	85 c0                	test   %eax,%eax
  41887d:	74 91                	je     418810 <free+0x60>
  41887f:	49 8b 55 08          	mov    0x8(%r13),%rdx
  418883:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  418888:	48 89 d0             	mov    %rdx,%rax
  41888b:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  41888f:	48 01 44 24 08       	add    %rax,0x8(%rsp)
  418894:	48 01 c1             	add    %rax,%rcx
  418897:	48 81 f9 00 80 02 00 	cmp    $0x28000,%rcx
  41889e:	76 11                	jbe    4188b1 <free+0x101>
  4188a0:	48 31 c1             	xor    %rax,%rcx
  4188a3:	48 39 c8             	cmp    %rcx,%rax
  4188a6:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
  4188aa:	0f 42 cd             	cmovb  %ebp,%ecx
  4188ad:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
  4188b1:	8b 44 24 24          	mov    0x24(%rsp),%eax
  4188b5:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
  4188b9:	49 01 d5             	add    %rdx,%r13
  4188bc:	85 c0                	test   %eax,%eax
  4188be:	0f 85 58 ff ff ff    	jne    41881c <free+0x6c>
  4188c4:	49 8b 04 24          	mov    (%r12),%rax
  4188c8:	49 23 45 08          	and    0x8(%r13),%rax
  4188cc:	a8 01                	test   $0x1,%al
  4188ce:	0f 84 58 ff ff ff    	je     41882c <free+0x7c>
  4188d4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4188d9:	48 83 c8 01          	or     $0x1,%rax
  4188dd:	49 89 44 24 08       	mov    %rax,0x8(%r12)
  4188e2:	49 89 45 00          	mov    %rax,0x0(%r13)
  4188e6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4188eb:	48 c1 e8 05          	shr    $0x5,%rax
  4188ef:	48 83 e8 01          	sub    $0x1,%rax
  4188f3:	48 83 f8 20          	cmp    $0x20,%rax
  4188f7:	76 24                	jbe    41891d <free+0x16d>
  4188f9:	48 3d 00 1c 00 00    	cmp    $0x1c00,%rax
  4188ff:	c7 44 24 10 3f 00 00 	movl   $0x3f,0x10(%rsp)
  418906:	00 
  418907:	77 18                	ja     418921 <free+0x171>
  418909:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
  41890d:	f3 0f 11 04 24       	movss  %xmm0,(%rsp)
  418912:	8b 04 24             	mov    (%rsp),%eax
  418915:	c1 e8 15             	shr    $0x15,%eax
  418918:	2d f0 01 00 00       	sub    $0x1f0,%eax
  41891d:	89 44 24 10          	mov    %eax,0x10(%rsp)
  418921:	4c 63 7c 24 10       	movslq 0x10(%rsp),%r15
  418926:	4b 8d 04 7f          	lea    (%r15,%r15,2),%rax
  41892a:	48 8d 04 c5 70 b8 62 	lea    0x62b870(,%rax,8),%rax
  418931:	00 
  418932:	48 89 c3             	mov    %rax,%rbx
  418935:	48 89 04 24          	mov    %rax,(%rsp)
  418939:	8b 05 f9 4e 21 00    	mov    0x214ef9(%rip),%eax        # 62d838 <__libc+0x18>
  41893f:	48 83 c3 08          	add    $0x8,%rbx
  418943:	85 c0                	test   %eax,%eax
  418945:	74 36                	je     41897d <free+0x1cd>
  418947:	89 e8                	mov    %ebp,%eax
  418949:	48 8b 14 24          	mov    (%rsp),%rdx
  41894d:	87 42 08             	xchg   %eax,0x8(%rdx)
  418950:	85 c0                	test   %eax,%eax
  418952:	74 29                	je     41897d <free+0x1cd>
  418954:	49 89 d6             	mov    %rdx,%r14
  418957:	49 83 c6 0c          	add    $0xc,%r14
  41895b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  418960:	b9 01 00 00 00       	mov    $0x1,%ecx
  418965:	ba 01 00 00 00       	mov    $0x1,%edx
  41896a:	4c 89 f6             	mov    %r14,%rsi
  41896d:	48 89 df             	mov    %rbx,%rdi
  418970:	e8 53 39 00 00       	callq  41c2c8 <__wait>
  418975:	89 e8                	mov    %ebp,%eax
  418977:	87 03                	xchg   %eax,(%rbx)
  418979:	85 c0                	test   %eax,%eax
  41897b:	75 e3                	jne    418960 <free+0x1b0>
  41897d:	4b 8d 04 7f          	lea    (%r15,%r15,2),%rax
  418981:	48 c1 e0 03          	shl    $0x3,%rax
  418985:	48 8d 90 70 b8 62 00 	lea    0x62b870(%rax),%rdx
  41898c:	48 83 7a 10 00       	cmpq   $0x0,0x10(%rdx)
  418991:	0f 84 a9 01 00 00    	je     418b40 <free+0x390>
  418997:	8b 05 9b 4e 21 00    	mov    0x214e9b(%rip),%eax        # 62d838 <__libc+0x18>
  41899d:	85 c0                	test   %eax,%eax
  41899f:	74 3d                	je     4189de <free+0x22e>
  4189a1:	89 e8                	mov    %ebp,%eax
  4189a3:	41 be 60 b8 62 00    	mov    $0x62b860,%r14d
  4189a9:	87 05 d1 34 21 00    	xchg   %eax,0x2134d1(%rip)        # 62be80 <mal+0x620>
  4189af:	85 c0                	test   %eax,%eax
  4189b1:	74 2b                	je     4189de <free+0x22e>
  4189b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4189b8:	b9 01 00 00 00       	mov    $0x1,%ecx
  4189bd:	ba 01 00 00 00       	mov    $0x1,%edx
  4189c2:	be 84 be 62 00       	mov    $0x62be84,%esi
  4189c7:	bf 80 be 62 00       	mov    $0x62be80,%edi
  4189cc:	e8 f7 38 00 00       	callq  41c2c8 <__wait>
  4189d1:	89 e8                	mov    %ebp,%eax
  4189d3:	41 87 86 20 06 00 00 	xchg   %eax,0x620(%r14)
  4189da:	85 c0                	test   %eax,%eax
  4189dc:	75 da                	jne    4189b8 <free+0x208>
  4189de:	49 8b 04 24          	mov    (%r12),%rax
  4189e2:	49 23 45 08          	and    0x8(%r13),%rax
  4189e6:	a8 01                	test   $0x1,%al
  4189e8:	75 66                	jne    418a50 <free+0x2a0>
  4189ea:	8b 05 90 34 21 00    	mov    0x213490(%rip),%eax        # 62be80 <mal+0x620>
  4189f0:	85 c0                	test   %eax,%eax
  4189f2:	74 26                	je     418a1a <free+0x26a>
  4189f4:	31 c0                	xor    %eax,%eax
  4189f6:	89 05 84 34 21 00    	mov    %eax,0x213484(%rip)        # 62be80 <mal+0x620>
  4189fc:	8b 05 82 34 21 00    	mov    0x213482(%rip),%eax        # 62be84 <mal+0x624>
  418a02:	85 c0                	test   %eax,%eax
  418a04:	74 14                	je     418a1a <free+0x26a>
  418a06:	ba 01 00 00 00       	mov    $0x1,%edx
  418a0b:	bf 80 be 62 00       	mov    $0x62be80,%edi
  418a10:	b8 ca 00 00 00       	mov    $0xca,%eax
  418a15:	48 89 d6             	mov    %rdx,%rsi
  418a18:	0f 05                	syscall 
  418a1a:	48 8b 3c 24          	mov    (%rsp),%rdi
  418a1e:	8b 47 08             	mov    0x8(%rdi),%eax
  418a21:	85 c0                	test   %eax,%eax
  418a23:	0f 84 03 fe ff ff    	je     41882c <free+0x7c>
  418a29:	31 c0                	xor    %eax,%eax
  418a2b:	89 47 08             	mov    %eax,0x8(%rdi)
  418a2e:	8b 43 04             	mov    0x4(%rbx),%eax
  418a31:	85 c0                	test   %eax,%eax
  418a33:	0f 84 f3 fd ff ff    	je     41882c <free+0x7c>
  418a39:	ba 01 00 00 00       	mov    $0x1,%edx
  418a3e:	b8 ca 00 00 00       	mov    $0xca,%eax
  418a43:	48 89 df             	mov    %rbx,%rdi
  418a46:	48 89 d6             	mov    %rdx,%rsi
  418a49:	0f 05                	syscall 
  418a4b:	e9 dc fd ff ff       	jmpq   41882c <free+0x7c>
  418a50:	8b 05 2a 34 21 00    	mov    0x21342a(%rip),%eax        # 62be80 <mal+0x620>
  418a56:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  418a5b:	85 c0                	test   %eax,%eax
  418a5d:	49 89 74 24 08       	mov    %rsi,0x8(%r12)
  418a62:	49 89 75 00          	mov    %rsi,0x0(%r13)
  418a66:	74 26                	je     418a8e <free+0x2de>
  418a68:	31 c0                	xor    %eax,%eax
  418a6a:	89 05 10 34 21 00    	mov    %eax,0x213410(%rip)        # 62be80 <mal+0x620>
  418a70:	8b 05 0e 34 21 00    	mov    0x21340e(%rip),%eax        # 62be84 <mal+0x624>
  418a76:	85 c0                	test   %eax,%eax
  418a78:	74 14                	je     418a8e <free+0x2de>
  418a7a:	ba 01 00 00 00       	mov    $0x1,%edx
  418a7f:	bf 80 be 62 00       	mov    $0x62be80,%edi
  418a84:	b8 ca 00 00 00       	mov    $0xca,%eax
  418a89:	48 89 d6             	mov    %rdx,%rsi
  418a8c:	0f 05                	syscall 
  418a8e:	4b 8d 14 7f          	lea    (%r15,%r15,2),%rdx
  418a92:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
  418a96:	48 c1 e2 03          	shl    $0x3,%rdx
  418a9a:	48 8d 82 70 b8 62 00 	lea    0x62b870(%rdx),%rax
  418aa1:	48 8b 92 88 b8 62 00 	mov    0x62b888(%rdx),%rdx
  418aa8:	49 89 44 24 10       	mov    %rax,0x10(%r12)
  418aad:	49 89 54 24 18       	mov    %rdx,0x18(%r12)
  418ab2:	4c 89 60 18          	mov    %r12,0x18(%rax)
  418ab6:	49 8b 44 24 18       	mov    0x18(%r12),%rax
  418abb:	4c 89 60 10          	mov    %r12,0x10(%rax)
  418abf:	48 8b 05 aa 2d 21 00 	mov    0x212daa(%rip),%rax        # 62b870 <mal+0x10>
  418ac6:	48 0f a3 c8          	bt     %rcx,%rax
  418aca:	72 10                	jb     418adc <free+0x32c>
  418acc:	b8 01 00 00 00       	mov    $0x1,%eax
  418ad1:	48 d3 e0             	shl    %cl,%rax
  418ad4:	f0 48 09 05 94 2d 21 	lock or %rax,0x212d94(%rip)        # 62b870 <mal+0x10>
  418adb:	00 
  418adc:	8b 03                	mov    (%rbx),%eax
  418ade:	85 c0                	test   %eax,%eax
  418ae0:	74 1d                	je     418aff <free+0x34f>
  418ae2:	31 c0                	xor    %eax,%eax
  418ae4:	89 03                	mov    %eax,(%rbx)
  418ae6:	8b 43 04             	mov    0x4(%rbx),%eax
  418ae9:	85 c0                	test   %eax,%eax
  418aeb:	74 12                	je     418aff <free+0x34f>
  418aed:	ba 01 00 00 00       	mov    $0x1,%edx
  418af2:	b8 ca 00 00 00       	mov    $0xca,%eax
  418af7:	48 89 df             	mov    %rbx,%rdi
  418afa:	48 89 d6             	mov    %rdx,%rsi
  418afd:	0f 05                	syscall 
  418aff:	48 83 c4 38          	add    $0x38,%rsp
  418b03:	5b                   	pop    %rbx
  418b04:	5d                   	pop    %rbp
  418b05:	41 5c                	pop    %r12
  418b07:	41 5d                	pop    %r13
  418b09:	41 5e                	pop    %r14
  418b0b:	41 5f                	pop    %r15
  418b0d:	c3                   	retq   
  418b0e:	66 90                	xchg   %ax,%ax
  418b10:	48 8b 57 f0          	mov    -0x10(%rdi),%rdx
  418b14:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  418b18:	4c 89 e7             	mov    %r12,%rdi
  418b1b:	48 29 d7             	sub    %rdx,%rdi
  418b1e:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
  418b22:	83 e2 01             	and    $0x1,%edx
  418b25:	74 01                	je     418b28 <free+0x378>
  418b27:	f4                   	hlt    
  418b28:	48 83 c4 38          	add    $0x38,%rsp
  418b2c:	5b                   	pop    %rbx
  418b2d:	5d                   	pop    %rbp
  418b2e:	41 5c                	pop    %r12
  418b30:	41 5d                	pop    %r13
  418b32:	41 5e                	pop    %r14
  418b34:	41 5f                	pop    %r15
  418b36:	e9 5b 09 00 00       	jmpq   419496 <__munmap>
  418b3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  418b40:	48 8d 88 70 b8 62 00 	lea    0x62b870(%rax),%rcx
  418b47:	48 89 88 88 b8 62 00 	mov    %rcx,0x62b888(%rax)
  418b4e:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  418b52:	e9 40 fe ff ff       	jmpq   418997 <free+0x1e7>
  418b57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  418b5e:	00 00 
  418b60:	49 8d bc 24 1f 10 00 	lea    0x101f(%r12),%rdi
  418b67:	00 
  418b68:	49 8d 75 e0          	lea    -0x20(%r13),%rsi
  418b6c:	ba 04 00 00 00       	mov    $0x4,%edx
  418b71:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
  418b78:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
  418b7f:	48 29 fe             	sub    %rdi,%rsi
  418b82:	e8 fd 07 00 00       	callq  419384 <__madvise>
  418b87:	e9 38 fd ff ff       	jmpq   4188c4 <free+0x114>
  418b8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000418b90 <malloc>:
  418b90:	41 57                	push   %r15
  418b92:	48 8d 57 ff          	lea    -0x1(%rdi),%rdx
  418b96:	48 b8 df ef ff ff ff 	movabs $0x7fffffffffffefdf,%rax
  418b9d:	ff ff 7f 
  418ba0:	41 56                	push   %r14
  418ba2:	41 55                	push   %r13
  418ba4:	41 54                	push   %r12
  418ba6:	55                   	push   %rbp
  418ba7:	53                   	push   %rbx
  418ba8:	48 83 ec 28          	sub    $0x28,%rsp
  418bac:	48 39 c2             	cmp    %rax,%rdx
  418baf:	0f 86 ab 02 00 00    	jbe    418e60 <malloc+0x2d0>
  418bb5:	48 85 ff             	test   %rdi,%rdi
  418bb8:	48 c7 44 24 08 20 00 	movq   $0x20,0x8(%rsp)
  418bbf:	00 00 
  418bc1:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
  418bc8:	00 
  418bc9:	0f 85 d8 04 00 00    	jne    4190a7 <malloc+0x517>
  418bcf:	0f b6 4c 24 1c       	movzbl 0x1c(%rsp),%ecx
  418bd4:	48 c7 04 24 ff ff ff 	movq   $0xffffffffffffffff,(%rsp)
  418bdb:	ff 
  418bdc:	bb 01 00 00 00       	mov    $0x1,%ebx
  418be1:	48 d3 24 24          	shlq   %cl,(%rsp)
  418be5:	0f 1f 00             	nopl   (%rax)
  418be8:	4c 8b 3c 24          	mov    (%rsp),%r15
  418bec:	4c 23 3d 7d 2c 21 00 	and    0x212c7d(%rip),%r15        # 62b870 <mal+0x10>
  418bf3:	0f 85 d7 00 00 00    	jne    418cd0 <malloc+0x140>
  418bf9:	83 3d 90 32 21 00 02 	cmpl   $0x2,0x213290(%rip)        # 62be90 <init.3203>
  418c00:	74 49                	je     418c4b <malloc+0xbb>
  418c02:	89 dd                	mov    %ebx,%ebp
  418c04:	87 2d 86 32 21 00    	xchg   %ebp,0x213286(%rip)        # 62be90 <init.3203>
  418c0a:	83 fd 01             	cmp    $0x1,%ebp
  418c0d:	75 29                	jne    418c38 <malloc+0xa8>
  418c0f:	90                   	nop
  418c10:	b9 01 00 00 00       	mov    $0x1,%ecx
  418c15:	ba 01 00 00 00       	mov    $0x1,%edx
  418c1a:	be 94 be 62 00       	mov    $0x62be94,%esi
  418c1f:	bf 90 be 62 00       	mov    $0x62be90,%edi
  418c24:	e8 9f 36 00 00       	callq  41c2c8 <__wait>
  418c29:	89 d8                	mov    %ebx,%eax
  418c2b:	87 05 5f 32 21 00    	xchg   %eax,0x21325f(%rip)        # 62be90 <init.3203>
  418c31:	83 f8 01             	cmp    $0x1,%eax
  418c34:	89 c5                	mov    %eax,%ebp
  418c36:	74 d8                	je     418c10 <malloc+0x80>
  418c38:	85 ed                	test   %ebp,%ebp
  418c3a:	0f 84 90 01 00 00    	je     418dd0 <malloc+0x240>
  418c40:	b8 02 00 00 00       	mov    $0x2,%eax
  418c45:	89 05 45 32 21 00    	mov    %eax,0x213245(%rip)        # 62be90 <init.3203>
  418c4b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  418c50:	e8 fb f5 ff ff       	callq  418250 <expand_heap>
  418c55:	48 85 c0             	test   %rax,%rax
  418c58:	48 89 c5             	mov    %rax,%rbp
  418c5b:	0f 84 a2 03 00 00    	je     419003 <malloc+0x473>
  418c61:	48 89 ef             	mov    %rbp,%rdi
  418c64:	e8 27 f7 ff ff       	callq  418390 <alloc_rev>
  418c69:	85 c0                	test   %eax,%eax
  418c6b:	0f 85 64 02 00 00    	jne    418ed5 <malloc+0x345>
  418c71:	48 8b 45 08          	mov    0x8(%rbp),%rax
  418c75:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  418c79:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  418c7d:	48 3b 54 24 08       	cmp    0x8(%rsp),%rdx
  418c82:	76 36                	jbe    418cba <malloc+0x12a>
  418c84:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  418c89:	48 89 c2             	mov    %rax,%rdx
  418c8c:	48 2b 54 24 08       	sub    0x8(%rsp),%rdx
  418c91:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  418c96:	48 01 e9             	add    %rbp,%rcx
  418c99:	48 83 ce 01          	or     $0x1,%rsi
  418c9d:	48 83 ca 01          	or     $0x1,%rdx
  418ca1:	48 8d 79 10          	lea    0x10(%rcx),%rdi
  418ca5:	48 89 31             	mov    %rsi,(%rcx)
  418ca8:	48 89 51 08          	mov    %rdx,0x8(%rcx)
  418cac:	48 89 54 05 00       	mov    %rdx,0x0(%rbp,%rax,1)
  418cb1:	48 89 75 08          	mov    %rsi,0x8(%rbp)
  418cb5:	e8 f6 fa ff ff       	callq  4187b0 <free>
  418cba:	48 83 c4 28          	add    $0x28,%rsp
  418cbe:	48 8d 45 10          	lea    0x10(%rbp),%rax
  418cc2:	5b                   	pop    %rbx
  418cc3:	5d                   	pop    %rbp
  418cc4:	41 5c                	pop    %r12
  418cc6:	41 5d                	pop    %r13
  418cc8:	41 5e                	pop    %r14
  418cca:	41 5f                	pop    %r15
  418ccc:	c3                   	retq   
  418ccd:	0f 1f 00             	nopl   (%rax)
  418cd0:	4d 0f bc ff          	bsf    %r15,%r15
  418cd4:	4d 63 e7             	movslq %r15d,%r12
  418cd7:	44 89 7c 24 14       	mov    %r15d,0x14(%rsp)
  418cdc:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
  418ce0:	4c 8d 2c c5 70 b8 62 	lea    0x62b870(,%rax,8),%r13
  418ce7:	00 
  418ce8:	8b 05 4a 4b 21 00    	mov    0x214b4a(%rip),%eax        # 62d838 <__libc+0x18>
  418cee:	4d 8d 75 08          	lea    0x8(%r13),%r14
  418cf2:	85 c0                	test   %eax,%eax
  418cf4:	74 30                	je     418d26 <malloc+0x196>
  418cf6:	89 d8                	mov    %ebx,%eax
  418cf8:	41 87 45 08          	xchg   %eax,0x8(%r13)
  418cfc:	85 c0                	test   %eax,%eax
  418cfe:	74 26                	je     418d26 <malloc+0x196>
  418d00:	49 8d 6d 0c          	lea    0xc(%r13),%rbp
  418d04:	0f 1f 40 00          	nopl   0x0(%rax)
  418d08:	ba 01 00 00 00       	mov    $0x1,%edx
  418d0d:	b9 01 00 00 00       	mov    $0x1,%ecx
  418d12:	48 89 ee             	mov    %rbp,%rsi
  418d15:	4c 89 f7             	mov    %r14,%rdi
  418d18:	e8 ab 35 00 00       	callq  41c2c8 <__wait>
  418d1d:	89 da                	mov    %ebx,%edx
  418d1f:	41 87 16             	xchg   %edx,(%r14)
  418d22:	85 d2                	test   %edx,%edx
  418d24:	75 e2                	jne    418d08 <malloc+0x178>
  418d26:	4b 8d 04 64          	lea    (%r12,%r12,2),%rax
  418d2a:	48 c1 e0 03          	shl    $0x3,%rax
  418d2e:	48 8d 90 70 b8 62 00 	lea    0x62b870(%rax),%rdx
  418d35:	48 8b 6a 10          	mov    0x10(%rdx),%rbp
  418d39:	48 85 ed             	test   %rbp,%rbp
  418d3c:	0f 84 06 01 00 00    	je     418e48 <malloc+0x2b8>
  418d42:	48 05 70 b8 62 00    	add    $0x62b870,%rax
  418d48:	48 39 c5             	cmp    %rax,%rbp
  418d4b:	74 44                	je     418d91 <malloc+0x201>
  418d4d:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
  418d51:	48 89 c8             	mov    %rcx,%rax
  418d54:	48 c1 e8 05          	shr    $0x5,%rax
  418d58:	48 83 e8 01          	sub    $0x1,%rax
  418d5c:	48 83 f8 20          	cmp    $0x20,%rax
  418d60:	89 c2                	mov    %eax,%edx
  418d62:	76 24                	jbe    418d88 <malloc+0x1f8>
  418d64:	48 3d 00 1c 00 00    	cmp    $0x1c00,%rax
  418d6a:	ba 3f 00 00 00       	mov    $0x3f,%edx
  418d6f:	77 17                	ja     418d88 <malloc+0x1f8>
  418d71:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
  418d75:	f3 0f 11 44 24 18    	movss  %xmm0,0x18(%rsp)
  418d7b:	8b 54 24 18          	mov    0x18(%rsp),%edx
  418d7f:	c1 ea 15             	shr    $0x15,%edx
  418d82:	81 ea f0 01 00 00    	sub    $0x1f0,%edx
  418d88:	41 39 d7             	cmp    %edx,%r15d
  418d8b:	0f 84 e1 01 00 00    	je     418f72 <malloc+0x3e2>
  418d91:	41 8b 45 08          	mov    0x8(%r13),%eax
  418d95:	85 c0                	test   %eax,%eax
  418d97:	0f 84 4b fe ff ff    	je     418be8 <malloc+0x58>
  418d9d:	31 c0                	xor    %eax,%eax
  418d9f:	41 89 45 08          	mov    %eax,0x8(%r13)
  418da3:	41 8b 46 04          	mov    0x4(%r14),%eax
  418da7:	85 c0                	test   %eax,%eax
  418da9:	0f 84 39 fe ff ff    	je     418be8 <malloc+0x58>
  418daf:	ba 01 00 00 00       	mov    $0x1,%edx
  418db4:	b8 ca 00 00 00       	mov    $0xca,%eax
  418db9:	4c 89 f7             	mov    %r14,%rdi
  418dbc:	48 89 d6             	mov    %rdx,%rsi
  418dbf:	0f 05                	syscall 
  418dc1:	e9 22 fe ff ff       	jmpq   418be8 <malloc+0x58>
  418dc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  418dcd:	00 00 00 
  418dd0:	31 ff                	xor    %edi,%edi
  418dd2:	e8 99 38 00 00       	callq  41c670 <__brk>
  418dd7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  418ddc:	48 83 c0 3f          	add    $0x3f,%rax
  418de0:	48 83 e0 e0          	and    $0xffffffffffffffe0,%rax
  418de4:	48 89 05 75 2a 21 00 	mov    %rax,0x212a75(%rip)        # 62b860 <mal>
  418deb:	e8 60 f4 ff ff       	callq  418250 <expand_heap>
  418df0:	48 85 c0             	test   %rax,%rax
  418df3:	0f 84 4f 01 00 00    	je     418f48 <malloc+0x3b8>
  418df9:	48 8d 78 10          	lea    0x10(%rax),%rdi
  418dfd:	48 89 05 64 2a 21 00 	mov    %rax,0x212a64(%rip)        # 62b868 <mal+0x8>
  418e04:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
  418e0b:	e8 a0 f9 ff ff       	callq  4187b0 <free>
  418e10:	b8 02 00 00 00       	mov    $0x2,%eax
  418e15:	89 05 75 30 21 00    	mov    %eax,0x213075(%rip)        # 62be90 <init.3203>
  418e1b:	8b 15 73 30 21 00    	mov    0x213073(%rip),%edx        # 62be94 <waiters.3204>
  418e21:	85 d2                	test   %edx,%edx
  418e23:	0f 84 bf fd ff ff    	je     418be8 <malloc+0x58>
  418e29:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
  418e2e:	be 01 00 00 00       	mov    $0x1,%esi
  418e33:	b8 ca 00 00 00       	mov    $0xca,%eax
  418e38:	bf 90 be 62 00       	mov    $0x62be90,%edi
  418e3d:	0f 05                	syscall 
  418e3f:	e9 a4 fd ff ff       	jmpq   418be8 <malloc+0x58>
  418e44:	0f 1f 40 00          	nopl   0x0(%rax)
  418e48:	48 8d 88 70 b8 62 00 	lea    0x62b870(%rax),%rcx
  418e4f:	48 89 88 88 b8 62 00 	mov    %rcx,0x62b888(%rax)
  418e56:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
  418e5a:	e9 32 ff ff ff       	jmpq   418d91 <malloc+0x201>
  418e5f:	90                   	nop
  418e60:	48 83 c7 2f          	add    $0x2f,%rdi
  418e64:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
  418e68:	48 81 ff 00 80 03 00 	cmp    $0x38000,%rdi
  418e6f:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  418e74:	0f 86 8d 00 00 00    	jbe    418f07 <malloc+0x377>
  418e7a:	48 89 fb             	mov    %rdi,%rbx
  418e7d:	45 31 c9             	xor    %r9d,%r9d
  418e80:	31 ff                	xor    %edi,%edi
  418e82:	48 81 c3 0f 10 00 00 	add    $0x100f,%rbx
  418e89:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
  418e8f:	b9 22 00 00 00       	mov    $0x22,%ecx
  418e94:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
  418e9b:	ba 03 00 00 00       	mov    $0x3,%edx
  418ea0:	48 89 de             	mov    %rbx,%rsi
  418ea3:	e8 fa 04 00 00       	callq  4193a2 <__mmap>
  418ea8:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  418eac:	0f 84 51 01 00 00    	je     419003 <malloc+0x473>
  418eb2:	48 83 eb 10          	sub    $0x10,%rbx
  418eb6:	48 c7 40 10 10 00 00 	movq   $0x10,0x10(%rax)
  418ebd:	00 
  418ebe:	48 89 58 18          	mov    %rbx,0x18(%rax)
  418ec2:	48 83 c0 20          	add    $0x20,%rax
  418ec6:	48 83 c4 28          	add    $0x28,%rsp
  418eca:	5b                   	pop    %rbx
  418ecb:	5d                   	pop    %rbp
  418ecc:	41 5c                	pop    %r12
  418ece:	41 5d                	pop    %r13
  418ed0:	41 5e                	pop    %r14
  418ed2:	41 5f                	pop    %r15
  418ed4:	c3                   	retq   
  418ed5:	48 8b 45 00          	mov    0x0(%rbp),%rax
  418ed9:	48 89 ea             	mov    %rbp,%rdx
  418edc:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
  418ee0:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  418ee4:	48 29 c2             	sub    %rax,%rdx
  418ee7:	48 8b 42 08          	mov    0x8(%rdx),%rax
  418eeb:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  418eef:	48 01 c8             	add    %rcx,%rax
  418ef2:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
  418ef6:	48 89 44 0d 00       	mov    %rax,0x0(%rbp,%rcx,1)
  418efb:	48 89 42 08          	mov    %rax,0x8(%rdx)
  418eff:	48 89 d5             	mov    %rdx,%rbp
  418f02:	e9 6e fd ff ff       	jmpq   418c75 <malloc+0xe5>
  418f07:	48 89 f8             	mov    %rdi,%rax
  418f0a:	48 c1 e8 05          	shr    $0x5,%rax
  418f0e:	48 83 e8 01          	sub    $0x1,%rax
  418f12:	48 83 f8 20          	cmp    $0x20,%rax
  418f16:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
  418f1a:	0f 86 af fc ff ff    	jbe    418bcf <malloc+0x3f>
  418f20:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
  418f24:	b8 ff ff 1f 00       	mov    $0x1fffff,%eax
  418f29:	f3 0f 11 04 24       	movss  %xmm0,(%rsp)
  418f2e:	03 04 24             	add    (%rsp),%eax
  418f31:	c1 e8 15             	shr    $0x15,%eax
  418f34:	2d f0 01 00 00       	sub    $0x1f0,%eax
  418f39:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
  418f3d:	e9 8d fc ff ff       	jmpq   418bcf <malloc+0x3f>
  418f42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  418f48:	89 2d 42 2f 21 00    	mov    %ebp,0x212f42(%rip)        # 62be90 <init.3203>
  418f4e:	8b 0d 40 2f 21 00    	mov    0x212f40(%rip),%ecx        # 62be94 <waiters.3204>
  418f54:	85 c9                	test   %ecx,%ecx
  418f56:	0f 84 ef fc ff ff    	je     418c4b <malloc+0xbb>
  418f5c:	ba 01 00 00 00       	mov    $0x1,%edx
  418f61:	b0 ca                	mov    $0xca,%al
  418f63:	bf 90 be 62 00       	mov    $0x62be90,%edi
  418f68:	48 89 d6             	mov    %rdx,%rsi
  418f6b:	0f 05                	syscall 
  418f6d:	e9 d9 fc ff ff       	jmpq   418c4b <malloc+0xbb>
  418f72:	83 7c 24 14 27       	cmpl   $0x27,0x14(%rsp)
  418f77:	7e 1c                	jle    418f95 <malloc+0x405>
  418f79:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
  418f7d:	83 c0 02             	add    $0x2,%eax
  418f80:	3b 44 24 14          	cmp    0x14(%rsp),%eax
  418f84:	0f 8c 8a 00 00 00    	jl     419014 <malloc+0x484>
  418f8a:	83 7c 24 14 3f       	cmpl   $0x3f,0x14(%rsp)
  418f8f:	0f 84 24 01 00 00    	je     4190b9 <malloc+0x529>
  418f95:	48 8b 45 18          	mov    0x18(%rbp),%rax
  418f99:	48 3b 45 10          	cmp    0x10(%rbp),%rax
  418f9d:	0f 84 36 01 00 00    	je     4190d9 <malloc+0x549>
  418fa3:	48 8b 55 10          	mov    0x10(%rbp),%rdx
  418fa7:	48 89 50 10          	mov    %rdx,0x10(%rax)
  418fab:	48 8b 55 10          	mov    0x10(%rbp),%rdx
  418faf:	48 89 42 18          	mov    %rax,0x18(%rdx)
  418fb3:	48 8b 45 08          	mov    0x8(%rbp),%rax
  418fb7:	48 89 c2             	mov    %rax,%rdx
  418fba:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  418fbe:	48 83 4c 05 00 01    	orq    $0x1,0x0(%rbp,%rax,1)
  418fc4:	48 83 ca 01          	or     $0x1,%rdx
  418fc8:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  418fcc:	41 8b 06             	mov    (%r14),%eax
  418fcf:	85 c0                	test   %eax,%eax
  418fd1:	0f 84 9a fc ff ff    	je     418c71 <malloc+0xe1>
  418fd7:	31 c0                	xor    %eax,%eax
  418fd9:	41 89 06             	mov    %eax,(%r14)
  418fdc:	41 8b 46 04          	mov    0x4(%r14),%eax
  418fe0:	85 c0                	test   %eax,%eax
  418fe2:	0f 84 89 fc ff ff    	je     418c71 <malloc+0xe1>
  418fe8:	ba 01 00 00 00       	mov    $0x1,%edx
  418fed:	b8 ca 00 00 00       	mov    $0xca,%eax
  418ff2:	4c 89 f7             	mov    %r14,%rdi
  418ff5:	48 89 d6             	mov    %rdx,%rsi
  418ff8:	0f 05                	syscall 
  418ffa:	48 8b 45 08          	mov    0x8(%rbp),%rax
  418ffe:	e9 72 fc ff ff       	jmpq   418c75 <malloc+0xe5>
  419003:	48 83 c4 28          	add    $0x28,%rsp
  419007:	31 c0                	xor    %eax,%eax
  419009:	5b                   	pop    %rbx
  41900a:	5d                   	pop    %rbp
  41900b:	41 5c                	pop    %r12
  41900d:	41 5d                	pop    %r13
  41900f:	41 5e                	pop    %r14
  419011:	41 5f                	pop    %r15
  419013:	c3                   	retq   
  419014:	48 89 ca             	mov    %rcx,%rdx
  419017:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
  41901b:	48 2b 54 24 08       	sub    0x8(%rsp),%rdx
  419020:	48 89 d0             	mov    %rdx,%rax
  419023:	48 c1 e8 05          	shr    $0x5,%rax
  419027:	48 83 e8 01          	sub    $0x1,%rax
  41902b:	48 83 f8 20          	cmp    $0x20,%rax
  41902f:	0f 86 60 ff ff ff    	jbe    418f95 <malloc+0x405>
  419035:	48 3d 00 1c 00 00    	cmp    $0x1c00,%rax
  41903b:	be 3f 00 00 00       	mov    $0x3f,%esi
  419040:	77 15                	ja     419057 <malloc+0x4c7>
  419042:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
  419046:	f3 0f 11 04 24       	movss  %xmm0,(%rsp)
  41904b:	8b 34 24             	mov    (%rsp),%esi
  41904e:	c1 ee 15             	shr    $0x15,%esi
  419051:	81 ee f0 01 00 00    	sub    $0x1f0,%esi
  419057:	39 74 24 14          	cmp    %esi,0x14(%rsp)
  41905b:	0f 85 34 ff ff ff    	jne    418f95 <malloc+0x405>
  419061:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  419066:	48 8b 75 18          	mov    0x18(%rbp),%rsi
  41906a:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
  41906e:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
  419072:	48 01 e8             	add    %rbp,%rax
  419075:	48 89 70 18          	mov    %rsi,0x18(%rax)
  419079:	48 89 78 10          	mov    %rdi,0x10(%rax)
  41907d:	48 89 46 10          	mov    %rax,0x10(%rsi)
  419081:	48 8b 70 10          	mov    0x10(%rax),%rsi
  419085:	48 89 50 08          	mov    %rdx,0x8(%rax)
  419089:	48 89 46 18          	mov    %rax,0x18(%rsi)
  41908d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  419092:	48 83 ce 01          	or     $0x1,%rsi
  419096:	48 89 30             	mov    %rsi,(%rax)
  419099:	48 89 75 08          	mov    %rsi,0x8(%rbp)
  41909d:	48 89 54 0d 00       	mov    %rdx,0x0(%rbp,%rcx,1)
  4190a2:	e9 25 ff ff ff       	jmpq   418fcc <malloc+0x43c>
  4190a7:	e8 54 ef ff ff       	callq  418000 <__errno_location>
  4190ac:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
  4190b2:	31 c0                	xor    %eax,%eax
  4190b4:	e9 0d fe ff ff       	jmpq   418ec6 <malloc+0x336>
  4190b9:	48 89 ca             	mov    %rcx,%rdx
  4190bc:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
  4190c0:	48 89 d0             	mov    %rdx,%rax
  4190c3:	48 2b 44 24 08       	sub    0x8(%rsp),%rax
  4190c8:	48 3d 00 80 03 00    	cmp    $0x38000,%rax
  4190ce:	0f 87 47 ff ff ff    	ja     41901b <malloc+0x48b>
  4190d4:	e9 bc fe ff ff       	jmpq   418f95 <malloc+0x405>
  4190d9:	0f b6 4c 24 14       	movzbl 0x14(%rsp),%ecx
  4190de:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
  4190e5:	48 d3 c0             	rol    %cl,%rax
  4190e8:	f0 48 21 05 80 27 21 	lock and %rax,0x212780(%rip)        # 62b870 <mal+0x10>
  4190ef:	00 
  4190f0:	48 8b 45 18          	mov    0x18(%rbp),%rax
  4190f4:	e9 aa fe ff ff       	jmpq   418fa3 <malloc+0x413>
  4190f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000419100 <realloc>:
  419100:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  419105:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  41910a:	48 89 fb             	mov    %rdi,%rbx
  41910d:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  419112:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  419117:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  41911c:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  419121:	48 83 ec 48          	sub    $0x48,%rsp
  419125:	48 85 ff             	test   %rdi,%rdi
  419128:	0f 84 fa 01 00 00    	je     419328 <realloc+0x228>
  41912e:	48 8d 56 ff          	lea    -0x1(%rsi),%rdx
  419132:	48 b8 df ef ff ff ff 	movabs $0x7fffffffffffefdf,%rax
  419139:	ff ff 7f 
  41913c:	48 39 c2             	cmp    %rax,%rdx
  41913f:	0f 87 9b 00 00 00    	ja     4191e0 <realloc+0xe0>
  419145:	48 8d 6e 2f          	lea    0x2f(%rsi),%rbp
  419149:	48 83 e5 e0          	and    $0xffffffffffffffe0,%rbp
  41914d:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
  419151:	4c 8d 7b f0          	lea    -0x10(%rbx),%r15
  419155:	49 89 c5             	mov    %rax,%r13
  419158:	49 83 e5 fe          	and    $0xfffffffffffffffe,%r13
  41915c:	a8 01                	test   $0x1,%al
  41915e:	0f 85 9c 00 00 00    	jne    419200 <realloc+0x100>
  419164:	4c 8b 73 f0          	mov    -0x10(%rbx),%r14
  419168:	41 f6 c6 01          	test   $0x1,%r14b
  41916c:	4f 8d 44 35 00       	lea    0x0(%r13,%r14,1),%r8
  419171:	4e 8d 6c 35 00       	lea    0x0(%rbp,%r14,1),%r13
  419176:	74 01                	je     419179 <realloc+0x79>
  419178:	f4                   	hlt    
  419179:	49 81 fd ff 0f 00 00 	cmp    $0xfff,%r13
  419180:	0f 86 7a 01 00 00    	jbe    419300 <realloc+0x200>
  419186:	49 8d ad ff 0f 00 00 	lea    0xfff(%r13),%rbp
  41918d:	48 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%rbp
  419194:	49 39 e8             	cmp    %rbp,%r8
  419197:	0f 84 93 00 00 00    	je     419230 <realloc+0x130>
  41919d:	4c 89 ff             	mov    %r15,%rdi
  4191a0:	4c 89 c6             	mov    %r8,%rsi
  4191a3:	31 c0                	xor    %eax,%eax
  4191a5:	4c 29 f7             	sub    %r14,%rdi
  4191a8:	b9 01 00 00 00       	mov    $0x1,%ecx
  4191ad:	48 89 ea             	mov    %rbp,%rdx
  4191b0:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
  4191b5:	e8 9a 02 00 00       	callq  419454 <__mremap>
  4191ba:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  4191be:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
  4191c3:	0f 84 a7 01 00 00    	je     419370 <realloc+0x270>
  4191c9:	4e 8d 24 30          	lea    (%rax,%r14,1),%r12
  4191cd:	4c 29 f5             	sub    %r14,%rbp
  4191d0:	49 89 6c 24 08       	mov    %rbp,0x8(%r12)
  4191d5:	49 83 c4 10          	add    $0x10,%r12
  4191d9:	eb 58                	jmp    419233 <realloc+0x133>
  4191db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4191e0:	48 85 f6             	test   %rsi,%rsi
  4191e3:	bd 20 00 00 00       	mov    $0x20,%ebp
  4191e8:	0f 84 5f ff ff ff    	je     41914d <realloc+0x4d>
  4191ee:	e8 0d ee ff ff       	callq  418000 <__errno_location>
  4191f3:	45 31 e4             	xor    %r12d,%r12d
  4191f6:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
  4191fc:	eb 35                	jmp    419233 <realloc+0x133>
  4191fe:	66 90                	xchg   %ax,%ax
  419200:	4f 8d 24 2f          	lea    (%r15,%r13,1),%r12
  419204:	49 3b 04 24          	cmp    (%r12),%rax
  419208:	74 01                	je     41920b <realloc+0x10b>
  41920a:	f4                   	hlt    
  41920b:	49 39 ed             	cmp    %rbp,%r13
  41920e:	0f 82 7c 00 00 00    	jb     419290 <realloc+0x190>
  419214:	4c 89 e8             	mov    %r13,%rax
  419217:	48 83 c8 01          	or     $0x1,%rax
  41921b:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
  41921f:	49 89 04 24          	mov    %rax,(%r12)
  419223:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  419227:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
  41922b:	48 39 ea             	cmp    %rbp,%rdx
  41922e:	77 30                	ja     419260 <realloc+0x160>
  419230:	49 89 dc             	mov    %rbx,%r12
  419233:	4c 89 e0             	mov    %r12,%rax
  419236:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  41923b:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
  419240:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
  419245:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
  41924a:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
  41924f:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
  419254:	48 83 c4 48          	add    $0x48,%rsp
  419258:	c3                   	retq   
  419259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  419260:	48 89 c2             	mov    %rax,%rdx
  419263:	49 01 ef             	add    %rbp,%r15
  419266:	48 89 e9             	mov    %rbp,%rcx
  419269:	48 29 ea             	sub    %rbp,%rdx
  41926c:	48 83 c9 01          	or     $0x1,%rcx
  419270:	49 8d 7f 10          	lea    0x10(%r15),%rdi
  419274:	48 83 ca 01          	or     $0x1,%rdx
  419278:	49 89 0f             	mov    %rcx,(%r15)
  41927b:	49 89 57 08          	mov    %rdx,0x8(%r15)
  41927f:	48 89 54 03 f0       	mov    %rdx,-0x10(%rbx,%rax,1)
  419284:	48 89 4b f8          	mov    %rcx,-0x8(%rbx)
  419288:	e8 23 f5 ff ff       	callq  4187b0 <free>
  41928d:	eb a1                	jmp    419230 <realloc+0x130>
  41928f:	90                   	nop
  419290:	4c 89 e7             	mov    %r12,%rdi
  419293:	e8 08 f3 ff ff       	callq  4185a0 <alloc_fwd>
  419298:	85 c0                	test   %eax,%eax
  41929a:	0f 84 b8 00 00 00    	je     419358 <realloc+0x258>
  4192a0:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
  4192a5:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
  4192a9:	4a 8d 0c 2a          	lea    (%rdx,%r13,1),%rcx
  4192ad:	48 89 c8             	mov    %rcx,%rax
  4192b0:	48 83 c8 01          	or     $0x1,%rax
  4192b4:	48 39 e9             	cmp    %rbp,%rcx
  4192b7:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
  4192bb:	49 89 04 14          	mov    %rax,(%r12,%rdx,1)
  4192bf:	0f 83 5e ff ff ff    	jae    419223 <realloc+0x123>
  4192c5:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
  4192c9:	e8 c2 f8 ff ff       	callq  418b90 <malloc>
  4192ce:	48 85 c0             	test   %rax,%rax
  4192d1:	49 89 c4             	mov    %rax,%r12
  4192d4:	0f 84 a2 00 00 00    	je     41937c <realloc+0x27c>
  4192da:	49 8d 55 f0          	lea    -0x10(%r13),%rdx
  4192de:	4c 89 e7             	mov    %r12,%rdi
  4192e1:	48 89 de             	mov    %rbx,%rsi
  4192e4:	e8 3b 27 00 00       	callq  41ba24 <memcpy>
  4192e9:	48 89 df             	mov    %rbx,%rdi
  4192ec:	e8 bf f4 ff ff       	callq  4187b0 <free>
  4192f1:	e9 3d ff ff ff       	jmpq   419233 <realloc+0x133>
  4192f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4192fd:	00 00 00 
  419300:	48 89 ef             	mov    %rbp,%rdi
  419303:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
  419308:	e8 83 f8 ff ff       	callq  418b90 <malloc>
  41930d:	48 85 c0             	test   %rax,%rax
  419310:	49 89 c4             	mov    %rax,%r12
  419313:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  419317:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
  41931c:	75 c0                	jne    4192de <realloc+0x1de>
  41931e:	e9 63 fe ff ff       	jmpq   419186 <realloc+0x86>
  419323:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  419328:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  41932d:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
  419332:	48 89 f7             	mov    %rsi,%rdi
  419335:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
  41933a:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
  41933f:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
  419344:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
  419349:	48 83 c4 48          	add    $0x48,%rsp
  41934d:	e9 3e f8 ff ff       	jmpq   418b90 <malloc>
  419352:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  419358:	4c 89 e8             	mov    %r13,%rax
  41935b:	48 83 c8 01          	or     $0x1,%rax
  41935f:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
  419363:	49 89 04 24          	mov    %rax,(%r12)
  419367:	e9 59 ff ff ff       	jmpq   4192c5 <realloc+0x1c5>
  41936c:	0f 1f 40 00          	nopl   0x0(%rax)
  419370:	49 39 e8             	cmp    %rbp,%r8
  419373:	49 89 dc             	mov    %rbx,%r12
  419376:	0f 87 b7 fe ff ff    	ja     419233 <realloc+0x133>
  41937c:	45 31 e4             	xor    %r12d,%r12d
  41937f:	e9 af fe ff ff       	jmpq   419233 <realloc+0x133>

0000000000419384 <__madvise>:
  419384:	41 b8 1c 00 00 00    	mov    $0x1c,%r8d
  41938a:	50                   	push   %rax
  41938b:	48 63 d2             	movslq %edx,%rdx
  41938e:	4c 89 c0             	mov    %r8,%rax
  419391:	0f 05                	syscall 
  419393:	48 89 c7             	mov    %rax,%rdi
  419396:	e8 65 ed ff ff       	callq  418100 <__syscall_ret>
  41939b:	5a                   	pop    %rdx
  41939c:	c3                   	retq   
  41939d:	0f 1f 00             	nopl   (%rax)

00000000004193a0 <__vm_lock>:
  4193a0:	c3                   	retq   

00000000004193a1 <__vm_unlock>:
  4193a1:	c3                   	retq   

00000000004193a2 <__mmap>:
  4193a2:	41 55                	push   %r13
  4193a4:	41 54                	push   %r12
  4193a6:	55                   	push   %rbp
  4193a7:	53                   	push   %rbx
  4193a8:	48 83 ec 28          	sub    $0x28,%rsp
  4193ac:	41 f7 c1 ff 0f 00 00 	test   $0xfff,%r9d
  4193b3:	74 0d                	je     4193c2 <__mmap+0x20>
  4193b5:	e8 46 ec ff ff       	callq  418000 <__errno_location>
  4193ba:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
  4193c0:	eb 1a                	jmp    4193dc <__mmap+0x3a>
  4193c2:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
  4193c9:	ff ff 7f 
  4193cc:	48 39 c6             	cmp    %rax,%rsi
  4193cf:	76 11                	jbe    4193e2 <__mmap+0x40>
  4193d1:	e8 2a ec ff ff       	callq  418000 <__errno_location>
  4193d6:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
  4193dc:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
  4193e0:	eb 66                	jmp    419448 <__mmap+0xa6>
  4193e2:	89 cd                	mov    %ecx,%ebp
  4193e4:	49 89 fc             	mov    %rdi,%r12
  4193e7:	41 89 d5             	mov    %edx,%r13d
  4193ea:	83 e5 10             	and    $0x10,%ebp
  4193ed:	89 cb                	mov    %ecx,%ebx
  4193ef:	74 26                	je     419417 <__mmap+0x75>
  4193f1:	83 cf ff             	or     $0xffffffff,%edi
  4193f4:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
  4193f9:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
  4193fe:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
  419403:	e8 98 ff ff ff       	callq  4193a0 <__vm_lock>
  419408:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
  41940d:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
  419412:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
  419417:	4c 63 d3             	movslq %ebx,%r10
  41941a:	bb 09 00 00 00       	mov    $0x9,%ebx
  41941f:	4d 63 c0             	movslq %r8d,%r8
  419422:	49 63 d5             	movslq %r13d,%rdx
  419425:	48 89 d8             	mov    %rbx,%rax
  419428:	4c 89 e7             	mov    %r12,%rdi
  41942b:	0f 05                	syscall 
  41942d:	48 89 c7             	mov    %rax,%rdi
  419430:	e8 cb ec ff ff       	callq  418100 <__syscall_ret>
  419435:	85 ed                	test   %ebp,%ebp
  419437:	74 0f                	je     419448 <__mmap+0xa6>
  419439:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41943e:	e8 5e ff ff ff       	callq  4193a1 <__vm_unlock>
  419443:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  419448:	48 83 c4 28          	add    $0x28,%rsp
  41944c:	5b                   	pop    %rbx
  41944d:	5d                   	pop    %rbp
  41944e:	41 5c                	pop    %r12
  419450:	41 5d                	pop    %r13
  419452:	c3                   	retq   
  419453:	90                   	nop

0000000000419454 <__mremap>:
  419454:	48 83 ec 58          	sub    $0x58,%rsp
  419458:	41 b9 19 00 00 00    	mov    $0x19,%r9d
  41945e:	4c 63 d1             	movslq %ecx,%r10
  419461:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  419466:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
  41946b:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%rsp)
  419472:	00 
  419473:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  419478:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  41947d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  419482:	4c 89 c8             	mov    %r9,%rax
  419485:	0f 05                	syscall 
  419487:	48 89 c7             	mov    %rax,%rdi
  41948a:	e8 71 ec ff ff       	callq  418100 <__syscall_ret>
  41948f:	48 83 c4 58          	add    $0x58,%rsp
  419493:	c3                   	retq   

0000000000419494 <dummy1>:
  419494:	c3                   	retq   

0000000000419495 <dummy0>:
  419495:	c3                   	retq   

0000000000419496 <__munmap>:
  419496:	53                   	push   %rbx
  419497:	48 89 fb             	mov    %rdi,%rbx
  41949a:	83 cf ff             	or     $0xffffffff,%edi
  41949d:	48 83 ec 10          	sub    $0x10,%rsp
  4194a1:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  4194a6:	e8 f5 fe ff ff       	callq  4193a0 <__vm_lock>
  4194ab:	ba 0b 00 00 00       	mov    $0xb,%edx
  4194b0:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  4194b5:	48 89 df             	mov    %rbx,%rdi
  4194b8:	48 89 d0             	mov    %rdx,%rax
  4194bb:	0f 05                	syscall 
  4194bd:	48 89 c7             	mov    %rax,%rdi
  4194c0:	e8 3b ec ff ff       	callq  418100 <__syscall_ret>
  4194c5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4194ca:	e8 d2 fe ff ff       	callq  4193a1 <__vm_unlock>
  4194cf:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4194d4:	48 83 c4 10          	add    $0x10,%rsp
  4194d8:	5b                   	pop    %rbx
  4194d9:	c3                   	retq   
  4194da:	66 90                	xchg   %ax,%ax

00000000004194dc <signal>:
  4194dc:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
  4194e3:	41 89 f8             	mov    %edi,%r8d
  4194e6:	31 c0                	xor    %eax,%eax
  4194e8:	48 8d bc 24 98 00 00 	lea    0x98(%rsp),%rdi
  4194ef:	00 
  4194f0:	b9 26 00 00 00       	mov    $0x26,%ecx
  4194f5:	48 89 e2             	mov    %rsp,%rdx
  4194f8:	f3 ab                	rep stos %eax,%es:(%rdi)
  4194fa:	48 89 b4 24 98 00 00 	mov    %rsi,0x98(%rsp)
  419501:	00 
  419502:	48 8d b4 24 98 00 00 	lea    0x98(%rsp),%rsi
  419509:	00 
  41950a:	44 89 c7             	mov    %r8d,%edi
  41950d:	c7 84 24 20 01 00 00 	movl   $0x10000000,0x120(%rsp)
  419514:	00 00 00 10 
  419518:	e8 63 33 00 00       	callq  41c880 <__sigaction>
  41951d:	48 83 ca ff          	or     $0xffffffffffffffff,%rdx
  419521:	85 c0                	test   %eax,%eax
  419523:	78 04                	js     419529 <signal+0x4d>
  419525:	48 8b 14 24          	mov    (%rsp),%rdx
  419529:	48 89 d0             	mov    %rdx,%rax
  41952c:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
  419533:	c3                   	retq   

0000000000419534 <chmod>:
  419534:	ba 5a 00 00 00       	mov    $0x5a,%edx
  419539:	50                   	push   %rax
  41953a:	89 f6                	mov    %esi,%esi
  41953c:	48 89 d0             	mov    %rdx,%rax
  41953f:	0f 05                	syscall 
  419541:	48 89 c7             	mov    %rax,%rdi
  419544:	e8 b7 eb ff ff       	callq  418100 <__syscall_ret>
  419549:	5a                   	pop    %rdx
  41954a:	c3                   	retq   
  41954b:	90                   	nop

000000000041954c <lstat>:
  41954c:	ba 06 00 00 00       	mov    $0x6,%edx
  419551:	50                   	push   %rax
  419552:	48 89 d0             	mov    %rdx,%rax
  419555:	0f 05                	syscall 
  419557:	48 89 c7             	mov    %rax,%rdi
  41955a:	e8 a1 eb ff ff       	callq  418100 <__syscall_ret>
  41955f:	5a                   	pop    %rdx
  419560:	c3                   	retq   
  419561:	0f 1f 00             	nopl   (%rax)

0000000000419564 <stat>:
  419564:	ba 04 00 00 00       	mov    $0x4,%edx
  419569:	50                   	push   %rax
  41956a:	48 89 d0             	mov    %rdx,%rax
  41956d:	0f 05                	syscall 
  41956f:	48 89 c7             	mov    %rax,%rdi
  419572:	e8 89 eb ff ff       	callq  418100 <__syscall_ret>
  419577:	5a                   	pop    %rdx
  419578:	c3                   	retq   
  419579:	0f 1f 00             	nopl   (%rax)

000000000041957c <__fdopen>:
  41957c:	41 54                	push   %r12
  41957e:	41 89 fc             	mov    %edi,%r12d
  419581:	bf cc 89 42 00       	mov    $0x4289cc,%edi
  419586:	55                   	push   %rbp
  419587:	48 89 f5             	mov    %rsi,%rbp
  41958a:	53                   	push   %rbx
  41958b:	48 83 ec 40          	sub    $0x40,%rsp
  41958f:	0f be 36             	movsbl (%rsi),%esi
  419592:	e8 69 25 00 00       	callq  41bb00 <strchr>
  419597:	48 85 c0             	test   %rax,%rax
  41959a:	75 12                	jne    4195ae <__fdopen+0x32>
  41959c:	e8 5f ea ff ff       	callq  418000 <__errno_location>
  4195a1:	31 db                	xor    %ebx,%ebx
  4195a3:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
  4195a9:	e9 48 01 00 00       	jmpq   4196f6 <__fdopen+0x17a>
  4195ae:	bf d8 04 00 00       	mov    $0x4d8,%edi
  4195b3:	e8 d8 f5 ff ff       	callq  418b90 <malloc>
  4195b8:	48 85 c0             	test   %rax,%rax
  4195bb:	48 89 c3             	mov    %rax,%rbx
  4195be:	0f 84 32 01 00 00    	je     4196f6 <__fdopen+0x17a>
  4195c4:	31 f6                	xor    %esi,%esi
  4195c6:	ba d0 00 00 00       	mov    $0xd0,%edx
  4195cb:	48 89 c7             	mov    %rax,%rdi
  4195ce:	e8 85 24 00 00       	callq  41ba58 <memset>
  4195d3:	be 2b 00 00 00       	mov    $0x2b,%esi
  4195d8:	48 89 ef             	mov    %rbp,%rdi
  4195db:	e8 20 25 00 00       	callq  41bb00 <strchr>
  4195e0:	48 85 c0             	test   %rax,%rax
  4195e3:	75 12                	jne    4195f7 <__fdopen+0x7b>
  4195e5:	31 c0                	xor    %eax,%eax
  4195e7:	80 7d 00 72          	cmpb   $0x72,0x0(%rbp)
  4195eb:	0f 94 c0             	sete   %al
  4195ee:	8d 04 85 04 00 00 00 	lea    0x4(,%rax,4),%eax
  4195f5:	89 03                	mov    %eax,(%rbx)
  4195f7:	be 65 00 00 00       	mov    $0x65,%esi
  4195fc:	48 89 ef             	mov    %rbp,%rdi
  4195ff:	e8 fc 24 00 00       	callq  41bb00 <strchr>
  419604:	48 85 c0             	test   %rax,%rax
  419607:	74 14                	je     41961d <__fdopen+0xa1>
  419609:	49 63 fc             	movslq %r12d,%rdi
  41960c:	ba 01 00 00 00       	mov    $0x1,%edx
  419611:	be 02 00 00 00       	mov    $0x2,%esi
  419616:	b8 48 00 00 00       	mov    $0x48,%eax
  41961b:	0f 05                	syscall 
  41961d:	80 7d 00 61          	cmpb   $0x61,0x0(%rbp)
  419621:	75 2e                	jne    419651 <__fdopen+0xd5>
  419623:	41 b8 48 00 00 00    	mov    $0x48,%r8d
  419629:	49 63 fc             	movslq %r12d,%rdi
  41962c:	be 03 00 00 00       	mov    $0x3,%esi
  419631:	4c 89 c0             	mov    %r8,%rax
  419634:	0f 05                	syscall 
  419636:	f6 c4 04             	test   $0x4,%ah
  419639:	75 10                	jne    41964b <__fdopen+0xcf>
  41963b:	80 cc 04             	or     $0x4,%ah
  41963e:	be 04 00 00 00       	mov    $0x4,%esi
  419643:	48 63 d0             	movslq %eax,%rdx
  419646:	4c 89 c0             	mov    %r8,%rax
  419649:	0f 05                	syscall 
  41964b:	81 0b 80 00 00 00    	orl    $0x80,(%rbx)
  419651:	f6 03 08             	testb  $0x8,(%rbx)
  419654:	48 8d 83 d8 00 00 00 	lea    0xd8(%rbx),%rax
  41965b:	44 89 63 78          	mov    %r12d,0x78(%rbx)
  41965f:	48 c7 43 60 00 04 00 	movq   $0x400,0x60(%rbx)
  419666:	00 
  419667:	c6 83 8b 00 00 00 ff 	movb   $0xff,0x8b(%rbx)
  41966e:	48 89 43 58          	mov    %rax,0x58(%rbx)
  419672:	75 20                	jne    419694 <__fdopen+0x118>
  419674:	49 63 fc             	movslq %r12d,%rdi
  419677:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
  41967c:	be 01 54 00 00       	mov    $0x5401,%esi
  419681:	b8 10 00 00 00       	mov    $0x10,%eax
  419686:	0f 05                	syscall 
  419688:	48 85 c0             	test   %rax,%rax
  41968b:	75 07                	jne    419694 <__fdopen+0x118>
  41968d:	c6 83 8b 00 00 00 0a 	movb   $0xa,0x8b(%rbx)
  419694:	83 3d 8d 41 21 00 00 	cmpl   $0x0,0x21418d(%rip)        # 62d828 <__libc+0x8>
  41969b:	48 c7 43 40 30 97 41 	movq   $0x419730,0x40(%rbx)
  4196a2:	00 
  4196a3:	48 c7 43 48 7c 98 41 	movq   $0x41987c,0x48(%rbx)
  4196aa:	00 
  4196ab:	48 c7 43 50 50 98 41 	movq   $0x419850,0x50(%rbx)
  4196b2:	00 
  4196b3:	48 c7 43 18 04 97 41 	movq   $0x419704,0x18(%rbx)
  4196ba:	00 
  4196bb:	75 0a                	jne    4196c7 <__fdopen+0x14b>
  4196bd:	c7 83 8c 00 00 00 ff 	movl   $0xffffffff,0x8c(%rbx)
  4196c4:	ff ff ff 
  4196c7:	bf 48 d8 62 00       	mov    $0x62d848,%edi
  4196cc:	e8 9b 2b 00 00       	callq  41c26c <__lock>
  4196d1:	48 8b 05 68 41 21 00 	mov    0x214168(%rip),%rax        # 62d840 <__libc+0x20>
  4196d8:	48 85 c0             	test   %rax,%rax
  4196db:	48 89 43 70          	mov    %rax,0x70(%rbx)
  4196df:	74 04                	je     4196e5 <__fdopen+0x169>
  4196e1:	48 89 58 68          	mov    %rbx,0x68(%rax)
  4196e5:	bf 48 d8 62 00       	mov    $0x62d848,%edi
  4196ea:	48 89 1d 4f 41 21 00 	mov    %rbx,0x21414f(%rip)        # 62d840 <__libc+0x20>
  4196f1:	e8 b0 2b 00 00       	callq  41c2a6 <__unlock>
  4196f6:	48 83 c4 40          	add    $0x40,%rsp
  4196fa:	48 89 d8             	mov    %rbx,%rax
  4196fd:	5b                   	pop    %rbx
  4196fe:	5d                   	pop    %rbp
  4196ff:	41 5c                	pop    %r12
  419701:	c3                   	retq   
  419702:	66 90                	xchg   %ax,%ax

0000000000419704 <__stdio_close>:
  419704:	ba 03 00 00 00       	mov    $0x3,%edx
  419709:	50                   	push   %rax
  41970a:	48 63 7f 78          	movslq 0x78(%rdi),%rdi
  41970e:	48 89 d0             	mov    %rdx,%rax
  419711:	0f 05                	syscall 
  419713:	48 89 c7             	mov    %rax,%rdi
  419716:	e8 e5 e9 ff ff       	callq  418100 <__syscall_ret>
  41971b:	5a                   	pop    %rdx
  41971c:	c3                   	retq   
  41971d:	0f 1f 00             	nopl   (%rax)

0000000000419720 <cleanup>:
  419720:	48 83 bf 80 00 00 00 	cmpq   $0x0,0x80(%rdi)
  419727:	00 
  419728:	75 05                	jne    41972f <cleanup+0xf>
  41972a:	e9 49 32 00 00       	jmpq   41c978 <__unlockfile>
  41972f:	c3                   	retq   

0000000000419730 <__stdio_read>:
  419730:	41 54                	push   %r12
  419732:	49 89 f4             	mov    %rsi,%r12
  419735:	55                   	push   %rbp
  419736:	48 89 d5             	mov    %rdx,%rbp
  419739:	31 d2                	xor    %edx,%edx
  41973b:	48 89 e9             	mov    %rbp,%rcx
  41973e:	53                   	push   %rbx
  41973f:	48 89 fb             	mov    %rdi,%rbx
  419742:	48 83 ec 50          	sub    $0x50,%rsp
  419746:	48 8b 47 60          	mov    0x60(%rdi),%rax
  41974a:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
  41974f:	48 85 c0             	test   %rax,%rax
  419752:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  419757:	0f 95 c2             	setne  %dl
  41975a:	48 29 d1             	sub    %rdx,%rcx
  41975d:	48 83 3d bb 40 21 00 	cmpq   $0x0,0x2140bb(%rip)        # 62d820 <__libc>
  419764:	00 
  419765:	48 8b 57 58          	mov    0x58(%rdi),%rdx
  419769:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  41976e:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
  419773:	74 55                	je     4197ca <__stdio_read+0x9a>
  419775:	48 89 fa             	mov    %rdi,%rdx
  419778:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
  41977d:	be 20 97 41 00       	mov    $0x419720,%esi
  419782:	e8 96 2b 00 00       	callq  41c31d <_pthread_cleanup_push>
  419787:	50                   	push   %rax
  419788:	48 63 73 78          	movslq 0x78(%rbx),%rsi
  41978c:	b9 02 00 00 00       	mov    $0x2,%ecx
  419791:	45 31 c9             	xor    %r9d,%r9d
  419794:	45 31 c0             	xor    %r8d,%r8d
  419797:	bf 13 00 00 00       	mov    $0x13,%edi
  41979c:	6a 00                	pushq  $0x0
  41979e:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
  4197a3:	e8 6c 2b 00 00       	callq  41c314 <__syscall_cp>
  4197a8:	48 89 c7             	mov    %rax,%rdi
  4197ab:	e8 50 e9 ff ff       	callq  418100 <__syscall_ret>
  4197b0:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  4197b5:	31 f6                	xor    %esi,%esi
  4197b7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  4197bc:	e8 68 2b 00 00       	callq  41c329 <_pthread_cleanup_pop>
  4197c1:	5a                   	pop    %rdx
  4197c2:	59                   	pop    %rcx
  4197c3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4197c8:	eb 21                	jmp    4197eb <__stdio_read+0xbb>
  4197ca:	41 b8 13 00 00 00    	mov    $0x13,%r8d
  4197d0:	48 63 7f 78          	movslq 0x78(%rdi),%rdi
  4197d4:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
  4197d9:	ba 02 00 00 00       	mov    $0x2,%edx
  4197de:	4c 89 c0             	mov    %r8,%rax
  4197e1:	0f 05                	syscall 
  4197e3:	48 89 c7             	mov    %rax,%rdi
  4197e6:	e8 15 e9 ff ff       	callq  418100 <__syscall_ret>
  4197eb:	48 85 c0             	test   %rax,%rax
  4197ee:	7f 1e                	jg     41980e <__stdio_read+0xde>
  4197f0:	48 89 c2             	mov    %rax,%rdx
  4197f3:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
  4197fa:	00 
  4197fb:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
  419802:	00 
  419803:	83 e2 30             	and    $0x30,%edx
  419806:	48 83 f2 10          	xor    $0x10,%rdx
  41980a:	09 13                	or     %edx,(%rbx)
  41980c:	eb 33                	jmp    419841 <__stdio_read+0x111>
  41980e:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
  419813:	48 39 c8             	cmp    %rcx,%rax
  419816:	76 29                	jbe    419841 <__stdio_read+0x111>
  419818:	48 8b 53 58          	mov    0x58(%rbx),%rdx
  41981c:	48 29 c8             	sub    %rcx,%rax
  41981f:	48 01 d0             	add    %rdx,%rax
  419822:	48 83 7b 60 00       	cmpq   $0x0,0x60(%rbx)
  419827:	48 89 53 08          	mov    %rdx,0x8(%rbx)
  41982b:	48 89 43 10          	mov    %rax,0x10(%rbx)
  41982f:	74 13                	je     419844 <__stdio_read+0x114>
  419831:	8a 02                	mov    (%rdx),%al
  419833:	48 ff c2             	inc    %rdx
  419836:	41 88 44 2c ff       	mov    %al,-0x1(%r12,%rbp,1)
  41983b:	48 89 53 08          	mov    %rdx,0x8(%rbx)
  41983f:	eb 03                	jmp    419844 <__stdio_read+0x114>
  419841:	48 89 c5             	mov    %rax,%rbp
  419844:	48 83 c4 50          	add    $0x50,%rsp
  419848:	48 89 e8             	mov    %rbp,%rax
  41984b:	5b                   	pop    %rbx
  41984c:	5d                   	pop    %rbp
  41984d:	41 5c                	pop    %r12
  41984f:	c3                   	retq   

0000000000419850 <__stdio_seek>:
  419850:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  419856:	48 63 7f 78          	movslq 0x78(%rdi),%rdi
  41985a:	48 63 d2             	movslq %edx,%rdx
  41985d:	4c 89 c0             	mov    %r8,%rax
  419860:	0f 05                	syscall 
  419862:	48 89 c7             	mov    %rax,%rdi
  419865:	e9 96 e8 ff ff       	jmpq   418100 <__syscall_ret>
  41986a:	66 90                	xchg   %ax,%ax

000000000041986c <cleanup>:
  41986c:	48 83 bf 80 00 00 00 	cmpq   $0x0,0x80(%rdi)
  419873:	00 
  419874:	75 05                	jne    41987b <cleanup+0xf>
  419876:	e9 fd 30 00 00       	jmpq   41c978 <__unlockfile>
  41987b:	c3                   	retq   

000000000041987c <__stdio_write>:
  41987c:	41 56                	push   %r14
  41987e:	41 55                	push   %r13
  419880:	49 89 d5             	mov    %rdx,%r13
  419883:	41 54                	push   %r12
  419885:	41 bc 02 00 00 00    	mov    $0x2,%r12d
  41988b:	55                   	push   %rbp
  41988c:	53                   	push   %rbx
  41988d:	48 89 fb             	mov    %rdi,%rbx
  419890:	48 83 ec 50          	sub    $0x50,%rsp
  419894:	48 8b 57 38          	mov    0x38(%rdi),%rdx
  419898:	48 8b 47 28          	mov    0x28(%rdi),%rax
  41989c:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
  4198a1:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
  4198a6:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
  4198ab:	48 29 d0             	sub    %rdx,%rax
  4198ae:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  4198b3:	4d 8d 74 05 00       	lea    0x0(%r13,%rax,1),%r14
  4198b8:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  4198bd:	48 83 3d 5b 3f 21 00 	cmpq   $0x0,0x213f5b(%rip)        # 62d820 <__libc>
  4198c4:	00 
  4198c5:	74 51                	je     419918 <__stdio_write+0x9c>
  4198c7:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
  4198cc:	48 89 da             	mov    %rbx,%rdx
  4198cf:	be 6c 98 41 00       	mov    $0x41986c,%esi
  4198d4:	e8 44 2a 00 00       	callq  41c31d <_pthread_cleanup_push>
  4198d9:	48 63 73 78          	movslq 0x78(%rbx),%rsi
  4198dd:	50                   	push   %rax
  4198de:	49 63 cc             	movslq %r12d,%rcx
  4198e1:	48 89 ea             	mov    %rbp,%rdx
  4198e4:	45 31 c9             	xor    %r9d,%r9d
  4198e7:	45 31 c0             	xor    %r8d,%r8d
  4198ea:	6a 00                	pushq  $0x0
  4198ec:	bf 14 00 00 00       	mov    $0x14,%edi
  4198f1:	e8 1e 2a 00 00       	callq  41c314 <__syscall_cp>
  4198f6:	48 89 c7             	mov    %rax,%rdi
  4198f9:	e8 02 e8 ff ff       	callq  418100 <__syscall_ret>
  4198fe:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  419903:	31 f6                	xor    %esi,%esi
  419905:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41990a:	e8 1a 2a 00 00       	callq  41c329 <_pthread_cleanup_pop>
  41990f:	5a                   	pop    %rdx
  419910:	59                   	pop    %rcx
  419911:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  419916:	eb 1d                	jmp    419935 <__stdio_write+0xb9>
  419918:	41 b8 14 00 00 00    	mov    $0x14,%r8d
  41991e:	48 63 7b 78          	movslq 0x78(%rbx),%rdi
  419922:	49 63 d4             	movslq %r12d,%rdx
  419925:	4c 89 c0             	mov    %r8,%rax
  419928:	48 89 ee             	mov    %rbp,%rsi
  41992b:	0f 05                	syscall 
  41992d:	48 89 c7             	mov    %rax,%rdi
  419930:	e8 cb e7 ff ff       	callq  418100 <__syscall_ret>
  419935:	4c 39 f0             	cmp    %r14,%rax
  419938:	75 19                	jne    419953 <__stdio_write+0xd7>
  41993a:	48 8b 43 58          	mov    0x58(%rbx),%rax
  41993e:	48 89 c2             	mov    %rax,%rdx
  419941:	48 03 53 60          	add    0x60(%rbx),%rdx
  419945:	48 89 43 38          	mov    %rax,0x38(%rbx)
  419949:	48 89 43 28          	mov    %rax,0x28(%rbx)
  41994d:	48 89 53 20          	mov    %rdx,0x20(%rbx)
  419951:	eb 6a                	jmp    4199bd <__stdio_write+0x141>
  419953:	48 85 c0             	test   %rax,%rax
  419956:	79 27                	jns    41997f <__stdio_write+0x103>
  419958:	83 0b 20             	orl    $0x20,(%rbx)
  41995b:	41 83 fc 02          	cmp    $0x2,%r12d
  41995f:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
  419966:	00 
  419967:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
  41996e:	00 
  41996f:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
  419976:	00 
  419977:	74 41                	je     4199ba <__stdio_write+0x13e>
  419979:	4c 2b 6d 08          	sub    0x8(%rbp),%r13
  41997d:	eb 3e                	jmp    4199bd <__stdio_write+0x141>
  41997f:	48 8b 55 08          	mov    0x8(%rbp),%rdx
  419983:	49 29 c6             	sub    %rax,%r14
  419986:	48 39 d0             	cmp    %rdx,%rax
  419989:	76 18                	jbe    4199a3 <__stdio_write+0x127>
  41998b:	48 8b 4b 58          	mov    0x58(%rbx),%rcx
  41998f:	48 29 d0             	sub    %rdx,%rax
  419992:	48 83 c5 10          	add    $0x10,%rbp
  419996:	41 ff cc             	dec    %r12d
  419999:	48 89 4b 38          	mov    %rcx,0x38(%rbx)
  41999d:	48 89 4b 28          	mov    %rcx,0x28(%rbx)
  4199a1:	eb 0a                	jmp    4199ad <__stdio_write+0x131>
  4199a3:	41 83 fc 02          	cmp    $0x2,%r12d
  4199a7:	75 04                	jne    4199ad <__stdio_write+0x131>
  4199a9:	48 01 43 38          	add    %rax,0x38(%rbx)
  4199ad:	48 01 45 00          	add    %rax,0x0(%rbp)
  4199b1:	48 29 45 08          	sub    %rax,0x8(%rbp)
  4199b5:	e9 03 ff ff ff       	jmpq   4198bd <__stdio_write+0x41>
  4199ba:	45 31 ed             	xor    %r13d,%r13d
  4199bd:	48 83 c4 50          	add    $0x50,%rsp
  4199c1:	4c 89 e8             	mov    %r13,%rax
  4199c4:	5b                   	pop    %rbx
  4199c5:	5d                   	pop    %rbp
  4199c6:	41 5c                	pop    %r12
  4199c8:	41 5d                	pop    %r13
  4199ca:	41 5e                	pop    %r14
  4199cc:	c3                   	retq   
  4199cd:	0f 1f 00             	nopl   (%rax)

00000000004199d0 <fclose>:
  4199d0:	41 55                	push   %r13
  4199d2:	41 54                	push   %r12
  4199d4:	55                   	push   %rbp
  4199d5:	53                   	push   %rbx
  4199d6:	48 89 fb             	mov    %rdi,%rbx
  4199d9:	51                   	push   %rcx
  4199da:	83 bf 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rdi)
  4199e1:	78 05                	js     4199e8 <fclose+0x18>
  4199e3:	e8 38 2f 00 00       	callq  41c920 <__lockfile>
  4199e8:	44 8b 23             	mov    (%rbx),%r12d
  4199eb:	41 83 e4 01          	and    $0x1,%r12d
  4199ef:	75 42                	jne    419a33 <fclose+0x63>
  4199f1:	bf 48 d8 62 00       	mov    $0x62d848,%edi
  4199f6:	e8 71 28 00 00       	callq  41c26c <__lock>
  4199fb:	48 8b 53 68          	mov    0x68(%rbx),%rdx
  4199ff:	48 85 d2             	test   %rdx,%rdx
  419a02:	74 08                	je     419a0c <fclose+0x3c>
  419a04:	48 8b 43 70          	mov    0x70(%rbx),%rax
  419a08:	48 89 42 70          	mov    %rax,0x70(%rdx)
  419a0c:	48 8b 43 70          	mov    0x70(%rbx),%rax
  419a10:	48 85 c0             	test   %rax,%rax
  419a13:	74 04                	je     419a19 <fclose+0x49>
  419a15:	48 89 50 68          	mov    %rdx,0x68(%rax)
  419a19:	48 39 1d 20 3e 21 00 	cmp    %rbx,0x213e20(%rip)        # 62d840 <__libc+0x20>
  419a20:	75 07                	jne    419a29 <fclose+0x59>
  419a22:	48 89 05 17 3e 21 00 	mov    %rax,0x213e17(%rip)        # 62d840 <__libc+0x20>
  419a29:	bf 48 d8 62 00       	mov    $0x62d848,%edi
  419a2e:	e8 73 28 00 00       	callq  41c2a6 <__unlock>
  419a33:	48 89 df             	mov    %rbx,%rdi
  419a36:	e8 d9 00 00 00       	callq  419b14 <fflush>
  419a3b:	48 89 df             	mov    %rbx,%rdi
  419a3e:	41 89 c5             	mov    %eax,%r13d
  419a41:	ff 53 18             	callq  *0x18(%rbx)
  419a44:	48 8b bb a8 00 00 00 	mov    0xa8(%rbx),%rdi
  419a4b:	89 c5                	mov    %eax,%ebp
  419a4d:	44 09 ed             	or     %r13d,%ebp
  419a50:	48 85 ff             	test   %rdi,%rdi
  419a53:	74 05                	je     419a5a <fclose+0x8a>
  419a55:	e8 56 ed ff ff       	callq  4187b0 <free>
  419a5a:	45 85 e4             	test   %r12d,%r12d
  419a5d:	75 08                	jne    419a67 <fclose+0x97>
  419a5f:	48 89 df             	mov    %rbx,%rdi
  419a62:	e8 49 ed ff ff       	callq  4187b0 <free>
  419a67:	5a                   	pop    %rdx
  419a68:	5b                   	pop    %rbx
  419a69:	89 e8                	mov    %ebp,%eax
  419a6b:	5d                   	pop    %rbp
  419a6c:	41 5c                	pop    %r12
  419a6e:	41 5d                	pop    %r13
  419a70:	c3                   	retq   
  419a71:	0f 1f 00             	nopl   (%rax)

0000000000419a74 <ferror>:
  419a74:	55                   	push   %rbp
  419a75:	31 c0                	xor    %eax,%eax
  419a77:	48 89 fd             	mov    %rdi,%rbp
  419a7a:	53                   	push   %rbx
  419a7b:	51                   	push   %rcx
  419a7c:	83 bf 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rdi)
  419a83:	78 05                	js     419a8a <ferror+0x16>
  419a85:	e8 96 2e 00 00       	callq  41c920 <__lockfile>
  419a8a:	8b 5d 00             	mov    0x0(%rbp),%ebx
  419a8d:	c1 eb 05             	shr    $0x5,%ebx
  419a90:	83 e3 01             	and    $0x1,%ebx
  419a93:	85 c0                	test   %eax,%eax
  419a95:	74 08                	je     419a9f <ferror+0x2b>
  419a97:	48 89 ef             	mov    %rbp,%rdi
  419a9a:	e8 d9 2e 00 00       	callq  41c978 <__unlockfile>
  419a9f:	5a                   	pop    %rdx
  419aa0:	89 d8                	mov    %ebx,%eax
  419aa2:	5b                   	pop    %rbx
  419aa3:	5d                   	pop    %rbp
  419aa4:	c3                   	retq   
  419aa5:	0f 1f 00             	nopl   (%rax)

0000000000419aa8 <fflush_unlocked>:
  419aa8:	53                   	push   %rbx
  419aa9:	48 8b 47 38          	mov    0x38(%rdi),%rax
  419aad:	48 89 fb             	mov    %rdi,%rbx
  419ab0:	48 39 47 28          	cmp    %rax,0x28(%rdi)
  419ab4:	77 0f                	ja     419ac5 <fflush_unlocked+0x1d>
  419ab6:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  419aba:	48 8b 43 10          	mov    0x10(%rbx),%rax
  419abe:	48 39 c6             	cmp    %rax,%rsi
  419ac1:	73 20                	jae    419ae3 <fflush_unlocked+0x3b>
  419ac3:	eb 10                	jmp    419ad5 <fflush_unlocked+0x2d>
  419ac5:	31 d2                	xor    %edx,%edx
  419ac7:	31 f6                	xor    %esi,%esi
  419ac9:	ff 53 48             	callq  *0x48(%rbx)
  419acc:	48 83 7b 28 00       	cmpq   $0x0,0x28(%rbx)
  419ad1:	75 e3                	jne    419ab6 <fflush_unlocked+0xe>
  419ad3:	eb 3a                	jmp    419b0f <fflush_unlocked+0x67>
  419ad5:	48 29 c6             	sub    %rax,%rsi
  419ad8:	ba 01 00 00 00       	mov    $0x1,%edx
  419add:	48 89 df             	mov    %rbx,%rdi
  419ae0:	ff 53 50             	callq  *0x50(%rbx)
  419ae3:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
  419aea:	00 
  419aeb:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
  419af2:	00 
  419af3:	31 c0                	xor    %eax,%eax
  419af5:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
  419afc:	00 
  419afd:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
  419b04:	00 
  419b05:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
  419b0c:	00 
  419b0d:	eb 03                	jmp    419b12 <fflush_unlocked+0x6a>
  419b0f:	83 c8 ff             	or     $0xffffffff,%eax
  419b12:	5b                   	pop    %rbx
  419b13:	c3                   	retq   

0000000000419b14 <fflush>:
  419b14:	41 54                	push   %r12
  419b16:	48 85 ff             	test   %rdi,%rdi
  419b19:	55                   	push   %rbp
  419b1a:	53                   	push   %rbx
  419b1b:	48 89 fb             	mov    %rdi,%rbx
  419b1e:	74 31                	je     419b51 <fflush+0x3d>
  419b20:	45 31 e4             	xor    %r12d,%r12d
  419b23:	83 bf 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rdi)
  419b2a:	78 08                	js     419b34 <fflush+0x20>
  419b2c:	e8 ef 2d 00 00       	callq  41c920 <__lockfile>
  419b31:	41 89 c4             	mov    %eax,%r12d
  419b34:	48 89 df             	mov    %rbx,%rdi
  419b37:	e8 6c ff ff ff       	callq  419aa8 <fflush_unlocked>
  419b3c:	45 85 e4             	test   %r12d,%r12d
  419b3f:	89 c5                	mov    %eax,%ebp
  419b41:	0f 84 86 00 00 00    	je     419bcd <fflush+0xb9>
  419b47:	48 89 df             	mov    %rbx,%rdi
  419b4a:	e8 29 2e 00 00       	callq  41c978 <__unlockfile>
  419b4f:	eb 7c                	jmp    419bcd <fflush+0xb9>
  419b51:	48 8b 05 48 1b 21 00 	mov    0x211b48(%rip),%rax        # 62b6a0 <__stdout_used>
  419b58:	48 85 c0             	test   %rax,%rax
  419b5b:	74 10                	je     419b6d <fflush+0x59>
  419b5d:	48 8b 3d 3c 1b 21 00 	mov    0x211b3c(%rip),%rdi        # 62b6a0 <__stdout_used>
  419b64:	e8 ab ff ff ff       	callq  419b14 <fflush>
  419b69:	89 c5                	mov    %eax,%ebp
  419b6b:	eb 02                	jmp    419b6f <fflush+0x5b>
  419b6d:	31 ed                	xor    %ebp,%ebp
  419b6f:	bf 48 d8 62 00       	mov    $0x62d848,%edi
  419b74:	e8 f3 26 00 00       	callq  41c26c <__lock>
  419b79:	48 8b 1d c0 3c 21 00 	mov    0x213cc0(%rip),%rbx        # 62d840 <__libc+0x20>
  419b80:	eb 3c                	jmp    419bbe <fflush+0xaa>
  419b82:	45 31 e4             	xor    %r12d,%r12d
  419b85:	83 bb 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rbx)
  419b8c:	78 0b                	js     419b99 <fflush+0x85>
  419b8e:	48 89 df             	mov    %rbx,%rdi
  419b91:	e8 8a 2d 00 00       	callq  41c920 <__lockfile>
  419b96:	41 89 c4             	mov    %eax,%r12d
  419b99:	48 8b 43 38          	mov    0x38(%rbx),%rax
  419b9d:	48 39 43 28          	cmp    %rax,0x28(%rbx)
  419ba1:	76 0a                	jbe    419bad <fflush+0x99>
  419ba3:	48 89 df             	mov    %rbx,%rdi
  419ba6:	e8 fd fe ff ff       	callq  419aa8 <fflush_unlocked>
  419bab:	09 c5                	or     %eax,%ebp
  419bad:	45 85 e4             	test   %r12d,%r12d
  419bb0:	74 08                	je     419bba <fflush+0xa6>
  419bb2:	48 89 df             	mov    %rbx,%rdi
  419bb5:	e8 be 2d 00 00       	callq  41c978 <__unlockfile>
  419bba:	48 8b 5b 70          	mov    0x70(%rbx),%rbx
  419bbe:	48 85 db             	test   %rbx,%rbx
  419bc1:	75 bf                	jne    419b82 <fflush+0x6e>
  419bc3:	bf 48 d8 62 00       	mov    $0x62d848,%edi
  419bc8:	e8 d9 26 00 00       	callq  41c2a6 <__unlock>
  419bcd:	5b                   	pop    %rbx
  419bce:	89 e8                	mov    %ebp,%eax
  419bd0:	5d                   	pop    %rbp
  419bd1:	41 5c                	pop    %r12
  419bd3:	c3                   	retq   

0000000000419bd4 <fgetc>:
  419bd4:	53                   	push   %rbx
  419bd5:	48 89 fb             	mov    %rdi,%rbx
  419bd8:	48 83 ec 10          	sub    $0x10,%rsp
  419bdc:	83 bf 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rdi)
  419be3:	79 0c                	jns    419bf1 <fgetc+0x1d>
  419be5:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  419be9:	48 3b 53 10          	cmp    0x10(%rbx),%rdx
  419bed:	72 0d                	jb     419bfc <fgetc+0x28>
  419bef:	eb 17                	jmp    419c08 <fgetc+0x34>
  419bf1:	e8 2a 2d 00 00       	callq  41c920 <__lockfile>
  419bf6:	85 c0                	test   %eax,%eax
  419bf8:	74 eb                	je     419be5 <fgetc+0x11>
  419bfa:	eb 19                	jmp    419c15 <fgetc+0x41>
  419bfc:	0f b6 02             	movzbl (%rdx),%eax
  419bff:	48 ff c2             	inc    %rdx
  419c02:	48 89 53 08          	mov    %rdx,0x8(%rbx)
  419c06:	eb 3b                	jmp    419c43 <fgetc+0x6f>
  419c08:	48 83 c4 10          	add    $0x10,%rsp
  419c0c:	48 89 df             	mov    %rbx,%rdi
  419c0f:	5b                   	pop    %rbx
  419c10:	e9 97 2e 00 00       	jmpq   41caac <__uflow>
  419c15:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  419c19:	48 3b 53 10          	cmp    0x10(%rbx),%rdx
  419c1d:	73 0c                	jae    419c2b <fgetc+0x57>
  419c1f:	0f b6 02             	movzbl (%rdx),%eax
  419c22:	48 ff c2             	inc    %rdx
  419c25:	48 89 53 08          	mov    %rdx,0x8(%rbx)
  419c29:	eb 08                	jmp    419c33 <fgetc+0x5f>
  419c2b:	48 89 df             	mov    %rbx,%rdi
  419c2e:	e8 79 2e 00 00       	callq  41caac <__uflow>
  419c33:	48 89 df             	mov    %rbx,%rdi
  419c36:	89 44 24 08          	mov    %eax,0x8(%rsp)
  419c3a:	e8 39 2d 00 00       	callq  41c978 <__unlockfile>
  419c3f:	8b 44 24 08          	mov    0x8(%rsp),%eax
  419c43:	48 83 c4 10          	add    $0x10,%rsp
  419c47:	5b                   	pop    %rbx
  419c48:	c3                   	retq   
  419c49:	0f 1f 00             	nopl   (%rax)

0000000000419c4c <fileno>:
  419c4c:	53                   	push   %rbx
  419c4d:	83 bf 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rdi)
  419c54:	48 89 fb             	mov    %rdi,%rbx
  419c57:	78 11                	js     419c6a <fileno+0x1e>
  419c59:	e8 c2 2c 00 00       	callq  41c920 <__lockfile>
  419c5e:	85 c0                	test   %eax,%eax
  419c60:	74 08                	je     419c6a <fileno+0x1e>
  419c62:	48 89 df             	mov    %rbx,%rdi
  419c65:	e8 0e 2d 00 00       	callq  41c978 <__unlockfile>
  419c6a:	8b 43 78             	mov    0x78(%rbx),%eax
  419c6d:	5b                   	pop    %rbx
  419c6e:	c3                   	retq   
  419c6f:	90                   	nop

0000000000419c70 <fopen>:
  419c70:	55                   	push   %rbp
  419c71:	48 89 fd             	mov    %rdi,%rbp
  419c74:	bf cc 89 42 00       	mov    $0x4289cc,%edi
  419c79:	53                   	push   %rbx
  419c7a:	48 89 f3             	mov    %rsi,%rbx
  419c7d:	41 50                	push   %r8
  419c7f:	0f be 36             	movsbl (%rsi),%esi
  419c82:	e8 79 1e 00 00       	callq  41bb00 <strchr>
  419c87:	48 85 c0             	test   %rax,%rax
  419c8a:	75 0d                	jne    419c99 <fopen+0x29>
  419c8c:	e8 6f e3 ff ff       	callq  418000 <__errno_location>
  419c91:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
  419c97:	eb 55                	jmp    419cee <fopen+0x7e>
  419c99:	48 89 df             	mov    %rbx,%rdi
  419c9c:	e8 ff 2b 00 00       	callq  41c8a0 <__fmodeflags>
  419ca1:	51                   	push   %rcx
  419ca2:	48 89 ee             	mov    %rbp,%rsi
  419ca5:	45 31 c9             	xor    %r9d,%r9d
  419ca8:	45 31 c0             	xor    %r8d,%r8d
  419cab:	48 63 d0             	movslq %eax,%rdx
  419cae:	b9 b6 01 00 00       	mov    $0x1b6,%ecx
  419cb3:	6a 00                	pushq  $0x0
  419cb5:	bf 02 00 00 00       	mov    $0x2,%edi
  419cba:	e8 55 26 00 00       	callq  41c314 <__syscall_cp>
  419cbf:	48 89 c7             	mov    %rax,%rdi
  419cc2:	e8 39 e4 ff ff       	callq  418100 <__syscall_ret>
  419cc7:	5e                   	pop    %rsi
  419cc8:	85 c0                	test   %eax,%eax
  419cca:	48 89 c5             	mov    %rax,%rbp
  419ccd:	5f                   	pop    %rdi
  419cce:	78 1e                	js     419cee <fopen+0x7e>
  419cd0:	48 89 de             	mov    %rbx,%rsi
  419cd3:	89 c7                	mov    %eax,%edi
  419cd5:	e8 a2 f8 ff ff       	callq  41957c <__fdopen>
  419cda:	48 85 c0             	test   %rax,%rax
  419cdd:	48 89 c2             	mov    %rax,%rdx
  419ce0:	75 0e                	jne    419cf0 <fopen+0x80>
  419ce2:	48 63 fd             	movslq %ebp,%rdi
  419ce5:	b8 03 00 00 00       	mov    $0x3,%eax
  419cea:	0f 05                	syscall 
  419cec:	eb 02                	jmp    419cf0 <fopen+0x80>
  419cee:	31 d2                	xor    %edx,%edx
  419cf0:	48 89 d0             	mov    %rdx,%rax
  419cf3:	5a                   	pop    %rdx
  419cf4:	5b                   	pop    %rbx
  419cf5:	5d                   	pop    %rbp
  419cf6:	c3                   	retq   
  419cf7:	90                   	nop

0000000000419cf8 <fprintf>:
  419cf8:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
  419cff:	84 c0                	test   %al,%al
  419d01:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  419d06:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  419d0b:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
  419d10:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
  419d15:	74 37                	je     419d4e <fprintf+0x56>
  419d17:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
  419d1c:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
  419d21:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
  419d26:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
  419d2d:	00 
  419d2e:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
  419d35:	00 
  419d36:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
  419d3d:	00 
  419d3e:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
  419d45:	00 
  419d46:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
  419d4d:	00 
  419d4e:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
  419d55:	00 
  419d56:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  419d5b:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%rsp)
  419d62:	00 
  419d63:	c7 44 24 0c 30 00 00 	movl   $0x30,0xc(%rsp)
  419d6a:	00 
  419d6b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  419d70:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  419d75:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  419d7a:	e8 4e 1a 00 00       	callq  41b7cd <vfprintf>
  419d7f:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
  419d86:	c3                   	retq   
  419d87:	90                   	nop

0000000000419d88 <fread>:
  419d88:	41 57                	push   %r15
  419d8a:	41 56                	push   %r14
  419d8c:	41 55                	push   %r13
  419d8e:	41 54                	push   %r12
  419d90:	49 89 d4             	mov    %rdx,%r12
  419d93:	55                   	push   %rbp
  419d94:	48 89 f5             	mov    %rsi,%rbp
  419d97:	48 0f af ea          	imul   %rdx,%rbp
  419d9b:	53                   	push   %rbx
  419d9c:	48 83 ec 18          	sub    $0x18,%rsp
  419da0:	48 85 ed             	test   %rbp,%rbp
  419da3:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  419da8:	0f 84 b7 00 00 00    	je     419e65 <fread+0xdd>
  419dae:	45 31 f6             	xor    %r14d,%r14d
  419db1:	83 b9 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rcx)
  419db8:	49 89 fd             	mov    %rdi,%r13
  419dbb:	49 89 cf             	mov    %rcx,%r15
  419dbe:	78 0b                	js     419dcb <fread+0x43>
  419dc0:	48 89 cf             	mov    %rcx,%rdi
  419dc3:	e8 58 2b 00 00       	callq  41c920 <__lockfile>
  419dc8:	41 89 c6             	mov    %eax,%r14d
  419dcb:	49 8b 77 08          	mov    0x8(%r15),%rsi
  419dcf:	49 8b 5f 10          	mov    0x10(%r15),%rbx
  419dd3:	48 29 f3             	sub    %rsi,%rbx
  419dd6:	48 85 db             	test   %rbx,%rbx
  419dd9:	7e 24                	jle    419dff <fread+0x77>
  419ddb:	48 39 dd             	cmp    %rbx,%rbp
  419dde:	4c 89 ef             	mov    %r13,%rdi
  419de1:	48 0f 46 dd          	cmovbe %rbp,%rbx
  419de5:	48 89 da             	mov    %rbx,%rdx
  419de8:	49 01 dd             	add    %rbx,%r13
  419deb:	e8 34 1c 00 00       	callq  41ba24 <memcpy>
  419df0:	48 89 e8             	mov    %rbp,%rax
  419df3:	49 01 5f 08          	add    %rbx,0x8(%r15)
  419df7:	48 29 d8             	sub    %rbx,%rax
  419dfa:	48 89 c3             	mov    %rax,%rbx
  419dfd:	eb 52                	jmp    419e51 <fread+0xc9>
  419dff:	48 89 eb             	mov    %rbp,%rbx
  419e02:	eb 4d                	jmp    419e51 <fread+0xc9>
  419e04:	4c 89 ff             	mov    %r15,%rdi
  419e07:	e8 e8 2b 00 00       	callq  41c9f4 <__toread>
  419e0c:	31 d2                	xor    %edx,%edx
  419e0e:	85 c0                	test   %eax,%eax
  419e10:	75 10                	jne    419e22 <fread+0x9a>
  419e12:	48 89 da             	mov    %rbx,%rdx
  419e15:	4c 89 ee             	mov    %r13,%rsi
  419e18:	4c 89 ff             	mov    %r15,%rdi
  419e1b:	41 ff 57 40          	callq  *0x40(%r15)
  419e1f:	48 89 c2             	mov    %rax,%rdx
  419e22:	48 8d 42 01          	lea    0x1(%rdx),%rax
  419e26:	48 83 f8 01          	cmp    $0x1,%rax
  419e2a:	77 1f                	ja     419e4b <fread+0xc3>
  419e2c:	45 85 f6             	test   %r14d,%r14d
  419e2f:	74 08                	je     419e39 <fread+0xb1>
  419e31:	4c 89 ff             	mov    %r15,%rdi
  419e34:	e8 3f 2b 00 00       	callq  41c978 <__unlockfile>
  419e39:	48 89 e8             	mov    %rbp,%rax
  419e3c:	31 d2                	xor    %edx,%edx
  419e3e:	48 29 d8             	sub    %rbx,%rax
  419e41:	48 f7 74 24 08       	divq   0x8(%rsp)
  419e46:	49 89 c4             	mov    %rax,%r12
  419e49:	eb 1d                	jmp    419e68 <fread+0xe0>
  419e4b:	48 29 d3             	sub    %rdx,%rbx
  419e4e:	49 01 d5             	add    %rdx,%r13
  419e51:	48 85 db             	test   %rbx,%rbx
  419e54:	75 ae                	jne    419e04 <fread+0x7c>
  419e56:	45 85 f6             	test   %r14d,%r14d
  419e59:	74 0d                	je     419e68 <fread+0xe0>
  419e5b:	4c 89 ff             	mov    %r15,%rdi
  419e5e:	e8 15 2b 00 00       	callq  41c978 <__unlockfile>
  419e63:	eb 03                	jmp    419e68 <fread+0xe0>
  419e65:	45 31 e4             	xor    %r12d,%r12d
  419e68:	48 83 c4 18          	add    $0x18,%rsp
  419e6c:	4c 89 e0             	mov    %r12,%rax
  419e6f:	5b                   	pop    %rbx
  419e70:	5d                   	pop    %rbp
  419e71:	41 5c                	pop    %r12
  419e73:	41 5d                	pop    %r13
  419e75:	41 5e                	pop    %r14
  419e77:	41 5f                	pop    %r15
  419e79:	c3                   	retq   
  419e7a:	66 90                	xchg   %ax,%ax

0000000000419e7c <__fwritex>:
  419e7c:	41 55                	push   %r13
  419e7e:	49 89 fd             	mov    %rdi,%r13
  419e81:	41 54                	push   %r12
  419e83:	49 89 f4             	mov    %rsi,%r12
  419e86:	55                   	push   %rbp
  419e87:	48 89 d5             	mov    %rdx,%rbp
  419e8a:	53                   	push   %rbx
  419e8b:	41 50                	push   %r8
  419e8d:	48 83 7a 20 00       	cmpq   $0x0,0x20(%rdx)
  419e92:	74 0f                	je     419ea3 <__fwritex+0x27>
  419e94:	48 8b 45 20          	mov    0x20(%rbp),%rax
  419e98:	48 2b 45 28          	sub    0x28(%rbp),%rax
  419e9c:	49 39 c4             	cmp    %rax,%r12
  419e9f:	76 26                	jbe    419ec7 <__fwritex+0x4b>
  419ea1:	eb 0e                	jmp    419eb1 <__fwritex+0x35>
  419ea3:	48 89 d7             	mov    %rdx,%rdi
  419ea6:	e8 b5 2b 00 00       	callq  41ca60 <__towrite>
  419eab:	85 c0                	test   %eax,%eax
  419ead:	74 e5                	je     419e94 <__fwritex+0x18>
  419eaf:	eb 67                	jmp    419f18 <__fwritex+0x9c>
  419eb1:	48 8b 45 48          	mov    0x48(%rbp),%rax
  419eb5:	48 89 ef             	mov    %rbp,%rdi
  419eb8:	4c 89 e2             	mov    %r12,%rdx
  419ebb:	59                   	pop    %rcx
  419ebc:	5b                   	pop    %rbx
  419ebd:	5d                   	pop    %rbp
  419ebe:	41 5c                	pop    %r12
  419ec0:	4c 89 ee             	mov    %r13,%rsi
  419ec3:	41 5d                	pop    %r13
  419ec5:	ff e0                	jmpq   *%rax
  419ec7:	80 bd 8b 00 00 00 00 	cmpb   $0x0,0x8b(%rbp)
  419ece:	78 2e                	js     419efe <__fwritex+0x82>
  419ed0:	4c 89 e3             	mov    %r12,%rbx
  419ed3:	eb 03                	jmp    419ed8 <__fwritex+0x5c>
  419ed5:	48 ff cb             	dec    %rbx
  419ed8:	48 85 db             	test   %rbx,%rbx
  419edb:	74 23                	je     419f00 <__fwritex+0x84>
  419edd:	41 80 7c 1d ff 0a    	cmpb   $0xa,-0x1(%r13,%rbx,1)
  419ee3:	75 f0                	jne    419ed5 <__fwritex+0x59>
  419ee5:	48 89 da             	mov    %rbx,%rdx
  419ee8:	4c 89 ee             	mov    %r13,%rsi
  419eeb:	48 89 ef             	mov    %rbp,%rdi
  419eee:	ff 55 48             	callq  *0x48(%rbp)
  419ef1:	48 39 d8             	cmp    %rbx,%rax
  419ef4:	72 24                	jb     419f1a <__fwritex+0x9e>
  419ef6:	49 01 dd             	add    %rbx,%r13
  419ef9:	49 29 dc             	sub    %rbx,%r12
  419efc:	eb 02                	jmp    419f00 <__fwritex+0x84>
  419efe:	31 db                	xor    %ebx,%ebx
  419f00:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
  419f04:	4c 89 e2             	mov    %r12,%rdx
  419f07:	4c 89 ee             	mov    %r13,%rsi
  419f0a:	4c 01 e3             	add    %r12,%rbx
  419f0d:	e8 12 1b 00 00       	callq  41ba24 <memcpy>
  419f12:	4c 01 65 28          	add    %r12,0x28(%rbp)
  419f16:	eb 02                	jmp    419f1a <__fwritex+0x9e>
  419f18:	31 db                	xor    %ebx,%ebx
  419f1a:	5a                   	pop    %rdx
  419f1b:	48 89 d8             	mov    %rbx,%rax
  419f1e:	5b                   	pop    %rbx
  419f1f:	5d                   	pop    %rbp
  419f20:	41 5c                	pop    %r12
  419f22:	41 5d                	pop    %r13
  419f24:	c3                   	retq   

0000000000419f25 <fwrite>:
  419f25:	41 57                	push   %r15
  419f27:	41 56                	push   %r14
  419f29:	49 89 d6             	mov    %rdx,%r14
  419f2c:	41 55                	push   %r13
  419f2e:	41 54                	push   %r12
  419f30:	49 89 f4             	mov    %rsi,%r12
  419f33:	55                   	push   %rbp
  419f34:	53                   	push   %rbx
  419f35:	48 89 d3             	mov    %rdx,%rbx
  419f38:	48 0f af de          	imul   %rsi,%rbx
  419f3c:	48 83 ec 18          	sub    $0x18,%rsp
  419f40:	48 85 db             	test   %rbx,%rbx
  419f43:	74 54                	je     419f99 <fwrite+0x74>
  419f45:	45 31 ff             	xor    %r15d,%r15d
  419f48:	83 b9 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rcx)
  419f4f:	49 89 fd             	mov    %rdi,%r13
  419f52:	48 89 cd             	mov    %rcx,%rbp
  419f55:	78 0b                	js     419f62 <fwrite+0x3d>
  419f57:	48 89 cf             	mov    %rcx,%rdi
  419f5a:	e8 c1 29 00 00       	callq  41c920 <__lockfile>
  419f5f:	41 89 c7             	mov    %eax,%r15d
  419f62:	48 89 ea             	mov    %rbp,%rdx
  419f65:	48 89 de             	mov    %rbx,%rsi
  419f68:	4c 89 ef             	mov    %r13,%rdi
  419f6b:	e8 0c ff ff ff       	callq  419e7c <__fwritex>
  419f70:	45 85 ff             	test   %r15d,%r15d
  419f73:	74 12                	je     419f87 <fwrite+0x62>
  419f75:	48 89 ef             	mov    %rbp,%rdi
  419f78:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  419f7d:	e8 f6 29 00 00       	callq  41c978 <__unlockfile>
  419f82:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  419f87:	48 39 d8             	cmp    %rbx,%rax
  419f8a:	74 0a                	je     419f96 <fwrite+0x71>
  419f8c:	31 d2                	xor    %edx,%edx
  419f8e:	49 f7 f4             	div    %r12
  419f91:	48 89 c3             	mov    %rax,%rbx
  419f94:	eb 03                	jmp    419f99 <fwrite+0x74>
  419f96:	4c 89 f3             	mov    %r14,%rbx
  419f99:	48 83 c4 18          	add    $0x18,%rsp
  419f9d:	48 89 d8             	mov    %rbx,%rax
  419fa0:	5b                   	pop    %rbx
  419fa1:	5d                   	pop    %rbp
  419fa2:	41 5c                	pop    %r12
  419fa4:	41 5d                	pop    %r13
  419fa6:	41 5e                	pop    %r14
  419fa8:	41 5f                	pop    %r15
  419faa:	c3                   	retq   
  419fab:	90                   	nop

0000000000419fac <perror>:
  419fac:	41 55                	push   %r13
  419fae:	41 54                	push   %r12
  419fb0:	45 31 e4             	xor    %r12d,%r12d
  419fb3:	55                   	push   %rbp
  419fb4:	48 89 fd             	mov    %rdi,%rbp
  419fb7:	53                   	push   %rbx
  419fb8:	51                   	push   %rcx
  419fb9:	48 8b 1d 10 ea 00 00 	mov    0xea10(%rip),%rbx        # 4289d0 <stderr>
  419fc0:	e8 3b e0 ff ff       	callq  418000 <__errno_location>
  419fc5:	8b 38                	mov    (%rax),%edi
  419fc7:	e8 54 e0 ff ff       	callq  418020 <strerror>
  419fcc:	83 bb 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rbx)
  419fd3:	49 89 c5             	mov    %rax,%r13
  419fd6:	78 0b                	js     419fe3 <perror+0x37>
  419fd8:	48 89 df             	mov    %rbx,%rdi
  419fdb:	e8 40 29 00 00       	callq  41c920 <__lockfile>
  419fe0:	41 89 c4             	mov    %eax,%r12d
  419fe3:	48 85 ed             	test   %rbp,%rbp
  419fe6:	74 3b                	je     41a023 <perror+0x77>
  419fe8:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
  419fec:	74 35                	je     41a023 <perror+0x77>
  419fee:	48 89 ef             	mov    %rbp,%rdi
  419ff1:	e8 6a 1c 00 00       	callq  41bc60 <strlen>
  419ff6:	48 89 d9             	mov    %rbx,%rcx
  419ff9:	ba 01 00 00 00       	mov    $0x1,%edx
  419ffe:	48 89 c6             	mov    %rax,%rsi
  41a001:	48 89 ef             	mov    %rbp,%rdi
  41a004:	e8 1c ff ff ff       	callq  419f25 <fwrite>
  41a009:	48 89 de             	mov    %rbx,%rsi
  41a00c:	bf 3a 00 00 00       	mov    $0x3a,%edi
  41a011:	e8 d6 2a 00 00       	callq  41caec <fputc>
  41a016:	48 89 de             	mov    %rbx,%rsi
  41a019:	bf 20 00 00 00       	mov    $0x20,%edi
  41a01e:	e8 c9 2a 00 00       	callq  41caec <fputc>
  41a023:	4c 89 ef             	mov    %r13,%rdi
  41a026:	e8 35 1c 00 00       	callq  41bc60 <strlen>
  41a02b:	48 89 d9             	mov    %rbx,%rcx
  41a02e:	ba 01 00 00 00       	mov    $0x1,%edx
  41a033:	48 89 c6             	mov    %rax,%rsi
  41a036:	4c 89 ef             	mov    %r13,%rdi
  41a039:	e8 e7 fe ff ff       	callq  419f25 <fwrite>
  41a03e:	48 89 de             	mov    %rbx,%rsi
  41a041:	bf 0a 00 00 00       	mov    $0xa,%edi
  41a046:	e8 a1 2a 00 00       	callq  41caec <fputc>
  41a04b:	45 85 e4             	test   %r12d,%r12d
  41a04e:	74 0f                	je     41a05f <perror+0xb3>
  41a050:	5a                   	pop    %rdx
  41a051:	48 89 df             	mov    %rbx,%rdi
  41a054:	5b                   	pop    %rbx
  41a055:	5d                   	pop    %rbp
  41a056:	41 5c                	pop    %r12
  41a058:	41 5d                	pop    %r13
  41a05a:	e9 19 29 00 00       	jmpq   41c978 <__unlockfile>
  41a05f:	58                   	pop    %rax
  41a060:	5b                   	pop    %rbx
  41a061:	5d                   	pop    %rbp
  41a062:	41 5c                	pop    %r12
  41a064:	41 5d                	pop    %r13
  41a066:	c3                   	retq   
  41a067:	90                   	nop

000000000041a068 <printf>:
  41a068:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
  41a06f:	84 c0                	test   %al,%al
  41a071:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
  41a076:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  41a07b:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  41a080:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
  41a085:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
  41a08a:	74 37                	je     41a0c3 <printf+0x5b>
  41a08c:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
  41a091:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
  41a096:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
  41a09b:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
  41a0a2:	00 
  41a0a3:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
  41a0aa:	00 
  41a0ab:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
  41a0b2:	00 
  41a0b3:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
  41a0ba:	00 
  41a0bb:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
  41a0c2:	00 
  41a0c3:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
  41a0ca:	00 
  41a0cb:	48 89 fe             	mov    %rdi,%rsi
  41a0ce:	48 8b 3d 0b e9 00 00 	mov    0xe90b(%rip),%rdi        # 4289e0 <stdout>
  41a0d5:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  41a0da:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%rsp)
  41a0e1:	00 
  41a0e2:	c7 44 24 0c 30 00 00 	movl   $0x30,0xc(%rsp)
  41a0e9:	00 
  41a0ea:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41a0ef:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  41a0f4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41a0f9:	e8 cf 16 00 00       	callq  41b7cd <vfprintf>
  41a0fe:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
  41a105:	c3                   	retq   
  41a106:	66 90                	xchg   %ax,%ax

000000000041a108 <remove>:
  41a108:	55                   	push   %rbp
  41a109:	ba 57 00 00 00       	mov    $0x57,%edx
  41a10e:	48 89 d0             	mov    %rdx,%rax
  41a111:	53                   	push   %rbx
  41a112:	48 89 fb             	mov    %rdi,%rbx
  41a115:	51                   	push   %rcx
  41a116:	0f 05                	syscall 
  41a118:	48 89 c7             	mov    %rax,%rdi
  41a11b:	e8 e0 df ff ff       	callq  418100 <__syscall_ret>
  41a120:	85 c0                	test   %eax,%eax
  41a122:	89 c5                	mov    %eax,%ebp
  41a124:	74 21                	je     41a147 <remove+0x3f>
  41a126:	e8 d5 de ff ff       	callq  418000 <__errno_location>
  41a12b:	83 38 15             	cmpl   $0x15,(%rax)
  41a12e:	75 17                	jne    41a147 <remove+0x3f>
  41a130:	ba 54 00 00 00       	mov    $0x54,%edx
  41a135:	48 89 df             	mov    %rbx,%rdi
  41a138:	48 89 d0             	mov    %rdx,%rax
  41a13b:	0f 05                	syscall 
  41a13d:	48 89 c7             	mov    %rax,%rdi
  41a140:	e8 bb df ff ff       	callq  418100 <__syscall_ret>
  41a145:	89 c5                	mov    %eax,%ebp
  41a147:	5a                   	pop    %rdx
  41a148:	5b                   	pop    %rbx
  41a149:	89 e8                	mov    %ebp,%eax
  41a14b:	5d                   	pop    %rbp
  41a14c:	c3                   	retq   
  41a14d:	0f 1f 00             	nopl   (%rax)

000000000041a150 <rewind>:
  41a150:	55                   	push   %rbp
  41a151:	31 ed                	xor    %ebp,%ebp
  41a153:	53                   	push   %rbx
  41a154:	48 89 fb             	mov    %rdi,%rbx
  41a157:	51                   	push   %rcx
  41a158:	83 bf 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rdi)
  41a15f:	78 07                	js     41a168 <rewind+0x18>
  41a161:	e8 ba 27 00 00       	callq  41c920 <__lockfile>
  41a166:	89 c5                	mov    %eax,%ebp
  41a168:	31 d2                	xor    %edx,%edx
  41a16a:	31 f6                	xor    %esi,%esi
  41a16c:	48 89 df             	mov    %rbx,%rdi
  41a16f:	e8 18 2a 00 00       	callq  41cb8c <__fseeko_unlocked>
  41a174:	83 23 df             	andl   $0xffffffdf,(%rbx)
  41a177:	85 ed                	test   %ebp,%ebp
  41a179:	74 0b                	je     41a186 <rewind+0x36>
  41a17b:	5a                   	pop    %rdx
  41a17c:	48 89 df             	mov    %rbx,%rdi
  41a17f:	5b                   	pop    %rbx
  41a180:	5d                   	pop    %rbp
  41a181:	e9 f2 27 00 00       	jmpq   41c978 <__unlockfile>
  41a186:	58                   	pop    %rax
  41a187:	5b                   	pop    %rbx
  41a188:	5d                   	pop    %rbp
  41a189:	c3                   	retq   
  41a18a:	66 90                	xchg   %ax,%ax

000000000041a18c <ungetc>:
  41a18c:	41 54                	push   %r12
  41a18e:	83 ff ff             	cmp    $0xffffffff,%edi
  41a191:	55                   	push   %rbp
  41a192:	89 fd                	mov    %edi,%ebp
  41a194:	53                   	push   %rbx
  41a195:	75 02                	jne    41a199 <ungetc+0xd>
  41a197:	eb 4d                	jmp    41a1e6 <ungetc+0x5a>
  41a199:	45 31 e4             	xor    %r12d,%r12d
  41a19c:	83 be 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rsi)
  41a1a3:	48 89 f3             	mov    %rsi,%rbx
  41a1a6:	78 0b                	js     41a1b3 <ungetc+0x27>
  41a1a8:	48 89 f7             	mov    %rsi,%rdi
  41a1ab:	e8 70 27 00 00       	callq  41c920 <__lockfile>
  41a1b0:	41 89 c4             	mov    %eax,%r12d
  41a1b3:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
  41a1b8:	74 13                	je     41a1cd <ungetc+0x41>
  41a1ba:	48 8b 53 58          	mov    0x58(%rbx),%rdx
  41a1be:	48 8b 43 08          	mov    0x8(%rbx),%rax
  41a1c2:	48 83 ea 08          	sub    $0x8,%rdx
  41a1c6:	48 39 d0             	cmp    %rdx,%rax
  41a1c9:	76 0e                	jbe    41a1d9 <ungetc+0x4d>
  41a1cb:	eb 1e                	jmp    41a1eb <ungetc+0x5f>
  41a1cd:	48 89 df             	mov    %rbx,%rdi
  41a1d0:	e8 1f 28 00 00       	callq  41c9f4 <__toread>
  41a1d5:	85 c0                	test   %eax,%eax
  41a1d7:	74 e1                	je     41a1ba <ungetc+0x2e>
  41a1d9:	45 85 e4             	test   %r12d,%r12d
  41a1dc:	74 08                	je     41a1e6 <ungetc+0x5a>
  41a1de:	48 89 df             	mov    %rbx,%rdi
  41a1e1:	e8 92 27 00 00       	callq  41c978 <__unlockfile>
  41a1e6:	83 cd ff             	or     $0xffffffff,%ebp
  41a1e9:	eb 1c                	jmp    41a207 <ungetc+0x7b>
  41a1eb:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  41a1ef:	48 89 53 08          	mov    %rdx,0x8(%rbx)
  41a1f3:	40 88 68 ff          	mov    %bpl,-0x1(%rax)
  41a1f7:	83 23 ef             	andl   $0xffffffef,(%rbx)
  41a1fa:	45 85 e4             	test   %r12d,%r12d
  41a1fd:	74 08                	je     41a207 <ungetc+0x7b>
  41a1ff:	48 89 df             	mov    %rbx,%rdi
  41a202:	e8 71 27 00 00       	callq  41c978 <__unlockfile>
  41a207:	5b                   	pop    %rbx
  41a208:	89 e8                	mov    %ebp,%eax
  41a20a:	5d                   	pop    %rbp
  41a20b:	41 5c                	pop    %r12
  41a20d:	c3                   	retq   
  41a20e:	66 90                	xchg   %ax,%ax

000000000041a210 <fmt_u>:
  41a210:	48 89 f8             	mov    %rdi,%rax
  41a213:	b9 0a 00 00 00       	mov    $0xa,%ecx
  41a218:	eb 0d                	jmp    41a227 <fmt_u+0x17>
  41a21a:	31 d2                	xor    %edx,%edx
  41a21c:	48 ff ce             	dec    %rsi
  41a21f:	48 f7 f1             	div    %rcx
  41a222:	83 c2 30             	add    $0x30,%edx
  41a225:	88 16                	mov    %dl,(%rsi)
  41a227:	48 85 c0             	test   %rax,%rax
  41a22a:	75 ee                	jne    41a21a <fmt_u+0xa>
  41a22c:	48 89 f0             	mov    %rsi,%rax
  41a22f:	c3                   	retq   

000000000041a230 <pop_arg.part.0>:
  41a230:	83 ee 09             	sub    $0x9,%esi
  41a233:	83 fe 0b             	cmp    $0xb,%esi
  41a236:	0f 87 57 01 00 00    	ja     41a393 <pop_arg.part.0+0x163>
  41a23c:	ff 24 f5 f0 89 42 00 	jmpq   *0x4289f0(,%rsi,8)
  41a243:	8b 0a                	mov    (%rdx),%ecx
  41a245:	83 f9 2f             	cmp    $0x2f,%ecx
  41a248:	77 0d                	ja     41a257 <pop_arg.part.0+0x27>
  41a24a:	89 c8                	mov    %ecx,%eax
  41a24c:	83 c1 08             	add    $0x8,%ecx
  41a24f:	48 03 42 10          	add    0x10(%rdx),%rax
  41a253:	89 0a                	mov    %ecx,(%rdx)
  41a255:	eb 0c                	jmp    41a263 <pop_arg.part.0+0x33>
  41a257:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a25b:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41a25f:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a263:	48 63 00             	movslq (%rax),%rax
  41a266:	e9 e3 00 00 00       	jmpq   41a34e <pop_arg.part.0+0x11e>
  41a26b:	8b 0a                	mov    (%rdx),%ecx
  41a26d:	83 f9 2f             	cmp    $0x2f,%ecx
  41a270:	77 0d                	ja     41a27f <pop_arg.part.0+0x4f>
  41a272:	89 c8                	mov    %ecx,%eax
  41a274:	83 c1 08             	add    $0x8,%ecx
  41a277:	48 03 42 10          	add    0x10(%rdx),%rax
  41a27b:	89 0a                	mov    %ecx,(%rdx)
  41a27d:	eb 0c                	jmp    41a28b <pop_arg.part.0+0x5b>
  41a27f:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a283:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41a287:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a28b:	8b 00                	mov    (%rax),%eax
  41a28d:	e9 bc 00 00 00       	jmpq   41a34e <pop_arg.part.0+0x11e>
  41a292:	8b 0a                	mov    (%rdx),%ecx
  41a294:	83 f9 2f             	cmp    $0x2f,%ecx
  41a297:	77 0d                	ja     41a2a6 <pop_arg.part.0+0x76>
  41a299:	89 c8                	mov    %ecx,%eax
  41a29b:	83 c1 08             	add    $0x8,%ecx
  41a29e:	48 03 42 10          	add    0x10(%rdx),%rax
  41a2a2:	89 0a                	mov    %ecx,(%rdx)
  41a2a4:	eb 0c                	jmp    41a2b2 <pop_arg.part.0+0x82>
  41a2a6:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a2aa:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41a2ae:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a2b2:	48 8b 00             	mov    (%rax),%rax
  41a2b5:	e9 94 00 00 00       	jmpq   41a34e <pop_arg.part.0+0x11e>
  41a2ba:	8b 0a                	mov    (%rdx),%ecx
  41a2bc:	83 f9 2f             	cmp    $0x2f,%ecx
  41a2bf:	77 0d                	ja     41a2ce <pop_arg.part.0+0x9e>
  41a2c1:	89 c8                	mov    %ecx,%eax
  41a2c3:	83 c1 08             	add    $0x8,%ecx
  41a2c6:	48 03 42 10          	add    0x10(%rdx),%rax
  41a2ca:	89 0a                	mov    %ecx,(%rdx)
  41a2cc:	eb 0c                	jmp    41a2da <pop_arg.part.0+0xaa>
  41a2ce:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a2d2:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41a2d6:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a2da:	48 0f bf 00          	movswq (%rax),%rax
  41a2de:	eb 6e                	jmp    41a34e <pop_arg.part.0+0x11e>
  41a2e0:	8b 0a                	mov    (%rdx),%ecx
  41a2e2:	83 f9 2f             	cmp    $0x2f,%ecx
  41a2e5:	77 0d                	ja     41a2f4 <pop_arg.part.0+0xc4>
  41a2e7:	89 c8                	mov    %ecx,%eax
  41a2e9:	83 c1 08             	add    $0x8,%ecx
  41a2ec:	48 03 42 10          	add    0x10(%rdx),%rax
  41a2f0:	89 0a                	mov    %ecx,(%rdx)
  41a2f2:	eb 0c                	jmp    41a300 <pop_arg.part.0+0xd0>
  41a2f4:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a2f8:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41a2fc:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a300:	0f b7 00             	movzwl (%rax),%eax
  41a303:	eb 49                	jmp    41a34e <pop_arg.part.0+0x11e>
  41a305:	8b 0a                	mov    (%rdx),%ecx
  41a307:	83 f9 2f             	cmp    $0x2f,%ecx
  41a30a:	77 0d                	ja     41a319 <pop_arg.part.0+0xe9>
  41a30c:	89 c8                	mov    %ecx,%eax
  41a30e:	83 c1 08             	add    $0x8,%ecx
  41a311:	48 03 42 10          	add    0x10(%rdx),%rax
  41a315:	89 0a                	mov    %ecx,(%rdx)
  41a317:	eb 0c                	jmp    41a325 <pop_arg.part.0+0xf5>
  41a319:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a31d:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41a321:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a325:	48 0f be 00          	movsbq (%rax),%rax
  41a329:	eb 23                	jmp    41a34e <pop_arg.part.0+0x11e>
  41a32b:	8b 0a                	mov    (%rdx),%ecx
  41a32d:	83 f9 2f             	cmp    $0x2f,%ecx
  41a330:	77 0d                	ja     41a33f <pop_arg.part.0+0x10f>
  41a332:	89 c8                	mov    %ecx,%eax
  41a334:	83 c1 08             	add    $0x8,%ecx
  41a337:	48 03 42 10          	add    0x10(%rdx),%rax
  41a33b:	89 0a                	mov    %ecx,(%rdx)
  41a33d:	eb 0c                	jmp    41a34b <pop_arg.part.0+0x11b>
  41a33f:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a343:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41a347:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a34b:	0f b6 00             	movzbl (%rax),%eax
  41a34e:	48 89 07             	mov    %rax,(%rdi)
  41a351:	c3                   	retq   
  41a352:	8b 4a 04             	mov    0x4(%rdx),%ecx
  41a355:	81 f9 af 00 00 00    	cmp    $0xaf,%ecx
  41a35b:	77 0e                	ja     41a36b <pop_arg.part.0+0x13b>
  41a35d:	89 c8                	mov    %ecx,%eax
  41a35f:	83 c1 10             	add    $0x10,%ecx
  41a362:	48 03 42 10          	add    0x10(%rdx),%rax
  41a366:	89 4a 04             	mov    %ecx,0x4(%rdx)
  41a369:	eb 0c                	jmp    41a377 <pop_arg.part.0+0x147>
  41a36b:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a36f:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41a373:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a377:	dd 00                	fldl   (%rax)
  41a379:	eb 16                	jmp    41a391 <pop_arg.part.0+0x161>
  41a37b:	48 8b 42 08          	mov    0x8(%rdx),%rax
  41a37f:	48 83 c0 0f          	add    $0xf,%rax
  41a383:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
  41a387:	48 8d 48 10          	lea    0x10(%rax),%rcx
  41a38b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  41a38f:	db 28                	fldt   (%rax)
  41a391:	db 3f                	fstpt  (%rdi)
  41a393:	c3                   	retq   

000000000041a394 <pad>:
  41a394:	41 81 e0 00 20 01 00 	and    $0x12000,%r8d
  41a39b:	75 71                	jne    41a40e <pad+0x7a>
  41a39d:	39 d1                	cmp    %edx,%ecx
  41a39f:	7d 6d                	jge    41a40e <pad+0x7a>
  41a3a1:	41 55                	push   %r13
  41a3a3:	b8 00 01 00 00       	mov    $0x100,%eax
  41a3a8:	40 0f be f6          	movsbl %sil,%esi
  41a3ac:	41 54                	push   %r12
  41a3ae:	49 89 fc             	mov    %rdi,%r12
  41a3b1:	55                   	push   %rbp
  41a3b2:	53                   	push   %rbx
  41a3b3:	89 d3                	mov    %edx,%ebx
  41a3b5:	29 cb                	sub    %ecx,%ebx
  41a3b7:	48 81 ec 08 01 00 00 	sub    $0x108,%rsp
  41a3be:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
  41a3c4:	89 dd                	mov    %ebx,%ebp
  41a3c6:	0f 46 c3             	cmovbe %ebx,%eax
  41a3c9:	48 89 e7             	mov    %rsp,%rdi
  41a3cc:	89 c2                	mov    %eax,%edx
  41a3ce:	e8 85 16 00 00       	callq  41ba58 <memset>
  41a3d3:	eb 16                	jmp    41a3eb <pad+0x57>
  41a3d5:	4c 89 e2             	mov    %r12,%rdx
  41a3d8:	be 00 01 00 00       	mov    $0x100,%esi
  41a3dd:	48 89 e7             	mov    %rsp,%rdi
  41a3e0:	81 ed 00 01 00 00    	sub    $0x100,%ebp
  41a3e6:	e8 91 fa ff ff       	callq  419e7c <__fwritex>
  41a3eb:	81 fd ff 00 00 00    	cmp    $0xff,%ebp
  41a3f1:	77 e2                	ja     41a3d5 <pad+0x41>
  41a3f3:	0f b6 f3             	movzbl %bl,%esi
  41a3f6:	4c 89 e2             	mov    %r12,%rdx
  41a3f9:	48 89 e7             	mov    %rsp,%rdi
  41a3fc:	e8 7b fa ff ff       	callq  419e7c <__fwritex>
  41a401:	48 81 c4 08 01 00 00 	add    $0x108,%rsp
  41a408:	5b                   	pop    %rbx
  41a409:	5d                   	pop    %rbp
  41a40a:	41 5c                	pop    %r12
  41a40c:	41 5d                	pop    %r13
  41a40e:	c3                   	retq   

000000000041a40f <fmt_fp>:
  41a40f:	41 57                	push   %r15
  41a411:	41 56                	push   %r14
  41a413:	41 55                	push   %r13
  41a415:	41 54                	push   %r12
  41a417:	55                   	push   %rbp
  41a418:	48 89 fd             	mov    %rdi,%rbp
  41a41b:	53                   	push   %rbx
  41a41c:	89 d3                	mov    %edx,%ebx
  41a41e:	48 81 ec 58 1d 00 00 	sub    $0x1d58,%rsp
  41a425:	db ac 24 90 1d 00 00 	fldt   0x1d90(%rsp)
  41a42c:	89 74 24 44          	mov    %esi,0x44(%rsp)
  41a430:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
  41a434:	44 89 44 24 3c       	mov    %r8d,0x3c(%rsp)
  41a439:	c7 44 24 78 00 00 00 	movl   $0x0,0x78(%rsp)
  41a440:	00 
  41a441:	d9 c0                	fld    %st(0)
  41a443:	db 3c 24             	fstpt  (%rsp)
  41a446:	db 7c 24 10          	fstpt  0x10(%rsp)
  41a44a:	e8 71 22 00 00       	callq  41c6c0 <__signbitl>
  41a44f:	85 c0                	test   %eax,%eax
  41a451:	41 59                	pop    %r9
  41a453:	41 5a                	pop    %r10
  41a455:	db 2c 24             	fldt   (%rsp)
  41a458:	74 13                	je     41a46d <fmt_fp+0x5e>
  41a45a:	d9 e0                	fchs   
  41a45c:	41 be 01 00 00 00    	mov    $0x1,%r14d
  41a462:	48 c7 44 24 38 30 8e 	movq   $0x428e30,0x38(%rsp)
  41a469:	42 00 
  41a46b:	eb 46                	jmp    41a4b3 <fmt_fp+0xa4>
  41a46d:	f7 44 24 30 00 08 00 	testl  $0x800,0x30(%rsp)
  41a474:	00 
  41a475:	75 2d                	jne    41a4a4 <fmt_fp+0x95>
  41a477:	8b 44 24 30          	mov    0x30(%rsp),%eax
  41a47b:	48 c7 44 24 38 36 8e 	movq   $0x428e36,0x38(%rsp)
  41a482:	42 00 
  41a484:	83 e0 01             	and    $0x1,%eax
  41a487:	83 f8 01             	cmp    $0x1,%eax
  41a48a:	45 19 f6             	sbb    %r14d,%r14d
  41a48d:	41 ff c6             	inc    %r14d
  41a490:	85 c0                	test   %eax,%eax
  41a492:	b8 31 8e 42 00       	mov    $0x428e31,%eax
  41a497:	48 0f 45 44 24 38    	cmovne 0x38(%rsp),%rax
  41a49d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  41a4a2:	eb 0f                	jmp    41a4b3 <fmt_fp+0xa4>
  41a4a4:	41 be 01 00 00 00    	mov    $0x1,%r14d
  41a4aa:	48 c7 44 24 38 33 8e 	movq   $0x428e33,0x38(%rsp)
  41a4b1:	42 00 
  41a4b3:	56                   	push   %rsi
  41a4b4:	56                   	push   %rsi
  41a4b5:	d9 c0                	fld    %st(0)
  41a4b7:	db 3c 24             	fstpt  (%rsp)
  41a4ba:	db 7c 24 10          	fstpt  0x10(%rsp)
  41a4be:	e8 b5 21 00 00       	callq  41c678 <__fpclassifyl>
  41a4c3:	ff c8                	dec    %eax
  41a4c5:	5f                   	pop    %rdi
  41a4c6:	41 58                	pop    %r8
  41a4c8:	db 2c 24             	fldt   (%rsp)
  41a4cb:	7f 69                	jg     41a536 <fmt_fp+0x127>
  41a4cd:	f6 44 24 2c 20       	testb  $0x20,0x2c(%rsp)
  41a4d2:	0f 85 08 0a 00 00    	jne    41aee0 <fmt_fp+0xad1>
  41a4d8:	df e8                	fucomip %st(0),%st
  41a4da:	41 bc 43 8e 42 00    	mov    $0x428e43,%r12d
  41a4e0:	7b 11                	jnp    41a4f3 <fmt_fp+0xe4>
  41a4e2:	41 bc 47 8e 42 00    	mov    $0x428e47,%r12d
  41a4e8:	eb 06                	jmp    41a4f0 <fmt_fp+0xe1>
  41a4ea:	41 bc 4b 8e 42 00    	mov    $0x428e4b,%r12d
  41a4f0:	45 31 f6             	xor    %r14d,%r14d
  41a4f3:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
  41a4f8:	8b 54 24 34          	mov    0x34(%rsp),%edx
  41a4fc:	41 8d 5e 03          	lea    0x3(%r14),%ebx
  41a500:	be 20 00 00 00       	mov    $0x20,%esi
  41a505:	48 89 ef             	mov    %rbp,%rdi
  41a508:	89 d9                	mov    %ebx,%ecx
  41a50a:	41 81 e0 ff ff fe ff 	and    $0xfffeffff,%r8d
  41a511:	e8 7e fe ff ff       	callq  41a394 <pad>
  41a516:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  41a51b:	49 63 f6             	movslq %r14d,%rsi
  41a51e:	48 89 ea             	mov    %rbp,%rdx
  41a521:	e8 56 f9 ff ff       	callq  419e7c <__fwritex>
  41a526:	48 89 ea             	mov    %rbp,%rdx
  41a529:	be 03 00 00 00       	mov    $0x3,%esi
  41a52e:	4c 89 e7             	mov    %r12,%rdi
  41a531:	e9 44 02 00 00       	jmpq   41a77a <fmt_fp+0x36b>
  41a536:	50                   	push   %rax
  41a537:	50                   	push   %rax
  41a538:	db 3c 24             	fstpt  (%rsp)
  41a53b:	48 8d 7c 24 78       	lea    0x78(%rsp),%rdi
  41a540:	e8 8f 21 00 00       	callq  41c6d4 <frexpl>
  41a545:	d8 c0                	fadd   %st(0),%st
  41a547:	5a                   	pop    %rdx
  41a548:	59                   	pop    %rcx
  41a549:	d9 ee                	fldz   
  41a54b:	d9 c9                	fxch   %st(1)
  41a54d:	db e9                	fucomi %st(1),%st
  41a54f:	dd d9                	fstp   %st(1)
  41a551:	7a 02                	jp     41a555 <fmt_fp+0x146>
  41a553:	74 04                	je     41a559 <fmt_fp+0x14a>
  41a555:	ff 4c 24 68          	decl   0x68(%rsp)
  41a559:	44 8b 4c 24 2c       	mov    0x2c(%rsp),%r9d
  41a55e:	41 83 c9 20          	or     $0x20,%r9d
  41a562:	41 83 f9 61          	cmp    $0x61,%r9d
  41a566:	0f 85 42 02 00 00    	jne    41a7ae <fmt_fp+0x39f>
  41a56c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  41a571:	44 8b 7c 24 2c       	mov    0x2c(%rsp),%r15d
  41a576:	48 83 c0 09          	add    $0x9,%rax
  41a57a:	41 83 e7 20          	and    $0x20,%r15d
  41a57e:	48 0f 44 44 24 38    	cmove  0x38(%rsp),%rax
  41a584:	41 83 c6 02          	add    $0x2,%r14d
  41a588:	83 fb 0e             	cmp    $0xe,%ebx
  41a58b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  41a590:	77 36                	ja     41a5c8 <fmt_fp+0x1b9>
  41a592:	b8 0f 00 00 00       	mov    $0xf,%eax
  41a597:	d9 05 cb e8 00 00    	flds   0xe8cb(%rip)        # 428e68 <xdigits+0x48>
  41a59d:	29 d8                	sub    %ebx,%eax
  41a59f:	eb 06                	jmp    41a5a7 <fmt_fp+0x198>
  41a5a1:	d8 0d d1 e8 00 00    	fmuls  0xe8d1(%rip)        # 428e78 <xdigits+0x58>
  41a5a7:	ff c8                	dec    %eax
  41a5a9:	83 f8 ff             	cmp    $0xffffffff,%eax
  41a5ac:	75 f3                	jne    41a5a1 <fmt_fp+0x192>
  41a5ae:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  41a5b3:	80 38 2d             	cmpb   $0x2d,(%rax)
  41a5b6:	75 0c                	jne    41a5c4 <fmt_fp+0x1b5>
  41a5b8:	d9 c9                	fxch   %st(1)
  41a5ba:	d9 e0                	fchs   
  41a5bc:	d8 e1                	fsub   %st(1),%st
  41a5be:	de c1                	faddp  %st,%st(1)
  41a5c0:	d9 e0                	fchs   
  41a5c2:	eb 04                	jmp    41a5c8 <fmt_fp+0x1b9>
  41a5c4:	dc c1                	fadd   %st,%st(1)
  41a5c6:	de e9                	fsubrp %st,%st(1)
  41a5c8:	8b 44 24 68          	mov    0x68(%rsp),%eax
  41a5cc:	8b 7c 24 68          	mov    0x68(%rsp),%edi
  41a5d0:	4c 8d 64 24 7b       	lea    0x7b(%rsp),%r12
  41a5d5:	db 3c 24             	fstpt  (%rsp)
  41a5d8:	4c 89 e6             	mov    %r12,%rsi
  41a5db:	c1 f8 1f             	sar    $0x1f,%eax
  41a5de:	31 c7                	xor    %eax,%edi
  41a5e0:	29 c7                	sub    %eax,%edi
  41a5e2:	48 63 ff             	movslq %edi,%rdi
  41a5e5:	e8 26 fc ff ff       	callq  41a210 <fmt_u>
  41a5ea:	4c 39 e0             	cmp    %r12,%rax
  41a5ed:	48 89 c1             	mov    %rax,%rcx
  41a5f0:	db 2c 24             	fldt   (%rsp)
  41a5f3:	75 0a                	jne    41a5ff <fmt_fp+0x1f0>
  41a5f5:	48 8d 4c 24 7a       	lea    0x7a(%rsp),%rcx
  41a5fa:	c6 44 24 7a 30       	movb   $0x30,0x7a(%rsp)
  41a5ff:	8b 44 24 68          	mov    0x68(%rsp),%eax
  41a603:	8b 7c 24 30          	mov    0x30(%rsp),%edi
  41a607:	d9 05 6b e8 00 00    	flds   0xe86b(%rip)        # 428e78 <xdigits+0x58>
  41a60d:	99                   	cltd   
  41a60e:	48 8d 44 24 7b       	lea    0x7b(%rsp),%rax
  41a613:	d9 ee                	fldz   
  41a615:	d9 ca                	fxch   %st(2)
  41a617:	83 e2 02             	and    $0x2,%edx
  41a61a:	83 e7 08             	and    $0x8,%edi
  41a61d:	83 c2 2b             	add    $0x2b,%edx
  41a620:	49 89 c5             	mov    %rax,%r13
  41a623:	88 51 ff             	mov    %dl,-0x1(%rcx)
  41a626:	48 8d 51 fe          	lea    -0x2(%rcx),%rdx
  41a62a:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
  41a62f:	8a 54 24 2c          	mov    0x2c(%rsp),%dl
  41a633:	83 c2 0f             	add    $0xf,%edx
  41a636:	88 51 fe             	mov    %dl,-0x2(%rcx)
  41a639:	d9 7c 24 5e          	fnstcw 0x5e(%rsp)
  41a63d:	66 8b 54 24 5e       	mov    0x5e(%rsp),%dx
  41a642:	80 ce 0c             	or     $0xc,%dh
  41a645:	66 89 54 24 5c       	mov    %dx,0x5c(%rsp)
  41a64a:	eb 03                	jmp    41a64f <fmt_fp+0x240>
  41a64c:	4c 89 e0             	mov    %r12,%rax
  41a64f:	d9 c0                	fld    %st(0)
  41a651:	d9 6c 24 5c          	fldcw  0x5c(%rsp)
  41a655:	db 5c 24 58          	fistpl 0x58(%rsp)
  41a659:	d9 6c 24 5e          	fldcw  0x5e(%rsp)
  41a65d:	4c 8d 60 01          	lea    0x1(%rax),%r12
  41a661:	8b 54 24 58          	mov    0x58(%rsp),%edx
  41a665:	48 63 f2             	movslq %edx,%rsi
  41a668:	8a 8e 20 8e 42 00    	mov    0x428e20(%rsi),%cl
  41a66e:	44 09 f9             	or     %r15d,%ecx
  41a671:	49 39 c5             	cmp    %rax,%r13
  41a674:	88 08                	mov    %cl,(%rax)
  41a676:	89 54 24 80          	mov    %edx,-0x80(%rsp)
  41a67a:	da 64 24 80          	fisubl -0x80(%rsp)
  41a67e:	d8 c9                	fmul   %st(1),%st
  41a680:	75 16                	jne    41a698 <fmt_fp+0x289>
  41a682:	db ea                	fucomi %st(2),%st
  41a684:	7a 0a                	jp     41a690 <fmt_fp+0x281>
  41a686:	75 08                	jne    41a690 <fmt_fp+0x281>
  41a688:	85 db                	test   %ebx,%ebx
  41a68a:	7f 04                	jg     41a690 <fmt_fp+0x281>
  41a68c:	85 ff                	test   %edi,%edi
  41a68e:	74 08                	je     41a698 <fmt_fp+0x289>
  41a690:	4c 8d 60 02          	lea    0x2(%rax),%r12
  41a694:	c6 40 01 2e          	movb   $0x2e,0x1(%rax)
  41a698:	db ea                	fucomi %st(2),%st
  41a69a:	7a b0                	jp     41a64c <fmt_fp+0x23d>
  41a69c:	75 ae                	jne    41a64c <fmt_fp+0x23d>
  41a69e:	dd d8                	fstp   %st(0)
  41a6a0:	dd d8                	fstp   %st(0)
  41a6a2:	dd d8                	fstp   %st(0)
  41a6a4:	85 db                	test   %ebx,%ebx
  41a6a6:	74 27                	je     41a6cf <fmt_fp+0x2c0>
  41a6a8:	4c 89 e2             	mov    %r12,%rdx
  41a6ab:	48 63 c3             	movslq %ebx,%rax
  41a6ae:	4c 29 ea             	sub    %r13,%rdx
  41a6b1:	48 ff ca             	dec    %rdx
  41a6b4:	48 39 c2             	cmp    %rax,%rdx
  41a6b7:	7f 16                	jg     41a6cf <fmt_fp+0x2c0>
  41a6b9:	48 8d 84 24 40 1d 00 	lea    0x1d40(%rsp),%rax
  41a6c0:	00 
  41a6c1:	2b 44 24 20          	sub    0x20(%rsp),%eax
  41a6c5:	44 8d bc 03 3d e3 ff 	lea    -0x1cc3(%rbx,%rax,1),%r15d
  41a6cc:	ff 
  41a6cd:	eb 13                	jmp    41a6e2 <fmt_fp+0x2d3>
  41a6cf:	48 8d 44 24 7b       	lea    0x7b(%rsp),%rax
  41a6d4:	48 2b 44 24 20       	sub    0x20(%rsp),%rax
  41a6d9:	4d 89 e7             	mov    %r12,%r15
  41a6dc:	4d 29 ef             	sub    %r13,%r15
  41a6df:	41 01 c7             	add    %eax,%r15d
  41a6e2:	43 8d 1c 3e          	lea    (%r14,%r15,1),%ebx
  41a6e6:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
  41a6eb:	8b 54 24 34          	mov    0x34(%rsp),%edx
  41a6ef:	be 20 00 00 00       	mov    $0x20,%esi
  41a6f4:	48 89 ef             	mov    %rbp,%rdi
  41a6f7:	89 d9                	mov    %ebx,%ecx
  41a6f9:	e8 96 fc ff ff       	callq  41a394 <pad>
  41a6fe:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  41a703:	49 63 f6             	movslq %r14d,%rsi
  41a706:	48 89 ea             	mov    %rbp,%rdx
  41a709:	4c 8d 74 24 7b       	lea    0x7b(%rsp),%r14
  41a70e:	e8 69 f7 ff ff       	callq  419e7c <__fwritex>
  41a713:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
  41a718:	8b 54 24 34          	mov    0x34(%rsp),%edx
  41a71c:	89 d9                	mov    %ebx,%ecx
  41a71e:	be 30 00 00 00       	mov    $0x30,%esi
  41a723:	48 89 ef             	mov    %rbp,%rdi
  41a726:	41 81 f0 00 00 01 00 	xor    $0x10000,%r8d
  41a72d:	e8 62 fc ff ff       	callq  41a394 <pad>
  41a732:	48 8d 7c 24 7b       	lea    0x7b(%rsp),%rdi
  41a737:	4c 89 e6             	mov    %r12,%rsi
  41a73a:	48 89 ea             	mov    %rbp,%rdx
  41a73d:	4c 29 ee             	sub    %r13,%rsi
  41a740:	4d 29 e5             	sub    %r12,%r13
  41a743:	e8 34 f7 ff ff       	callq  419e7c <__fwritex>
  41a748:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
  41a74d:	be 30 00 00 00       	mov    $0x30,%esi
  41a752:	48 89 ef             	mov    %rbp,%rdi
  41a755:	45 31 c0             	xor    %r8d,%r8d
  41a758:	31 c9                	xor    %ecx,%ecx
  41a75a:	4c 29 f2             	sub    %r14,%rdx
  41a75d:	41 01 d5             	add    %edx,%r13d
  41a760:	43 8d 54 3d 00       	lea    0x0(%r13,%r15,1),%edx
  41a765:	e8 2a fc ff ff       	callq  41a394 <pad>
  41a76a:	4c 89 f6             	mov    %r14,%rsi
  41a76d:	48 2b 74 24 20       	sub    0x20(%rsp),%rsi
  41a772:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  41a777:	48 89 ea             	mov    %rbp,%rdx
  41a77a:	e8 fd f6 ff ff       	callq  419e7c <__fwritex>
  41a77f:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
  41a784:	8b 54 24 34          	mov    0x34(%rsp),%edx
  41a788:	89 d9                	mov    %ebx,%ecx
  41a78a:	be 20 00 00 00       	mov    $0x20,%esi
  41a78f:	48 89 ef             	mov    %rbp,%rdi
  41a792:	41 81 f0 00 20 00 00 	xor    $0x2000,%r8d
  41a799:	e8 f6 fb ff ff       	callq  41a394 <pad>
  41a79e:	3b 5c 24 34          	cmp    0x34(%rsp),%ebx
  41a7a2:	8b 44 24 34          	mov    0x34(%rsp),%eax
  41a7a6:	0f 4d c3             	cmovge %ebx,%eax
  41a7a9:	e9 45 07 00 00       	jmpq   41aef3 <fmt_fp+0xae4>
  41a7ae:	d9 ee                	fldz   
  41a7b0:	d9 c9                	fxch   %st(1)
  41a7b2:	85 db                	test   %ebx,%ebx
  41a7b4:	b8 06 00 00 00       	mov    $0x6,%eax
  41a7b9:	0f 48 d8             	cmovs  %eax,%ebx
  41a7bc:	db e9                	fucomi %st(1),%st
  41a7be:	dd d9                	fstp   %st(1)
  41a7c0:	7a 02                	jp     41a7c4 <fmt_fp+0x3b5>
  41a7c2:	74 0b                	je     41a7cf <fmt_fp+0x3c0>
  41a7c4:	d8 0d b2 e6 00 00    	fmuls  0xe6b2(%rip)        # 428e7c <xdigits+0x5c>
  41a7ca:	83 6c 24 68 1c       	subl   $0x1c,0x68(%rsp)
  41a7cf:	83 7c 24 68 00       	cmpl   $0x0,0x68(%rsp)
  41a7d4:	48 8d 84 24 94 00 00 	lea    0x94(%rsp),%rax
  41a7db:	00 
  41a7dc:	48 8d b4 24 3c 1c 00 	lea    0x1c3c(%rsp),%rsi
  41a7e3:	00 
  41a7e4:	d9 7c 24 5e          	fnstcw 0x5e(%rsp)
  41a7e8:	d9 05 92 e6 00 00    	flds   0xe692(%rip)        # 428e80 <xdigits+0x60>
  41a7ee:	d9 ee                	fldz   
  41a7f0:	48 0f 49 c6          	cmovns %rsi,%rax
  41a7f4:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  41a7f9:	49 89 c7             	mov    %rax,%r15
  41a7fc:	66 8b 44 24 5e       	mov    0x5e(%rsp),%ax
  41a801:	80 cc 0c             	or     $0xc,%ah
  41a804:	66 89 44 24 5c       	mov    %ax,0x5c(%rsp)
  41a809:	eb 06                	jmp    41a811 <fmt_fp+0x402>
  41a80b:	d9 ca                	fxch   %st(2)
  41a80d:	eb 02                	jmp    41a811 <fmt_fp+0x402>
  41a80f:	d9 ca                	fxch   %st(2)
  41a811:	d9 c2                	fld    %st(2)
  41a813:	d9 6c 24 5c          	fldcw  0x5c(%rsp)
  41a817:	df 7c 24 50          	fistpll 0x50(%rsp)
  41a81b:	d9 6c 24 5e          	fldcw  0x5e(%rsp)
  41a81f:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  41a824:	41 89 07             	mov    %eax,(%r15)
  41a827:	89 c0                	mov    %eax,%eax
  41a829:	49 83 c7 04          	add    $0x4,%r15
  41a82d:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
  41a832:	df 6c 24 50          	fildll 0x50(%rsp)
  41a836:	de eb                	fsubrp %st,%st(3)
  41a838:	d9 ca                	fxch   %st(2)
  41a83a:	d8 c9                	fmul   %st(1),%st
  41a83c:	db ea                	fucomi %st(2),%st
  41a83e:	7a cb                	jp     41a80b <fmt_fp+0x3fc>
  41a840:	75 cd                	jne    41a80f <fmt_fp+0x400>
  41a842:	dd d8                	fstp   %st(0)
  41a844:	dd d8                	fstp   %st(0)
  41a846:	dd d8                	fstp   %st(0)
  41a848:	8b 74 24 68          	mov    0x68(%rsp),%esi
  41a84c:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
  41a851:	41 b8 1d 00 00 00    	mov    $0x1d,%r8d
  41a857:	41 ba 00 ca 9a 3b    	mov    $0x3b9aca00,%r10d
  41a85d:	eb 50                	jmp    41a8af <fmt_fp+0x4a0>
  41a85f:	83 fe 1d             	cmp    $0x1d,%esi
  41a862:	44 89 c1             	mov    %r8d,%ecx
  41a865:	49 8d 7f fc          	lea    -0x4(%r15),%rdi
  41a869:	0f 4e ce             	cmovle %esi,%ecx
  41a86c:	31 c0                	xor    %eax,%eax
  41a86e:	eb 15                	jmp    41a885 <fmt_fp+0x476>
  41a870:	8b 17                	mov    (%rdi),%edx
  41a872:	89 c0                	mov    %eax,%eax
  41a874:	48 d3 e2             	shl    %cl,%rdx
  41a877:	48 01 d0             	add    %rdx,%rax
  41a87a:	31 d2                	xor    %edx,%edx
  41a87c:	49 f7 f2             	div    %r10
  41a87f:	89 17                	mov    %edx,(%rdi)
  41a881:	48 83 ef 04          	sub    $0x4,%rdi
  41a885:	4c 39 e7             	cmp    %r12,%rdi
  41a888:	73 e6                	jae    41a870 <fmt_fp+0x461>
  41a88a:	85 c0                	test   %eax,%eax
  41a88c:	74 0f                	je     41a89d <fmt_fp+0x48e>
  41a88e:	41 89 44 24 fc       	mov    %eax,-0x4(%r12)
  41a893:	49 83 ec 04          	sub    $0x4,%r12
  41a897:	eb 04                	jmp    41a89d <fmt_fp+0x48e>
  41a899:	49 83 ef 04          	sub    $0x4,%r15
  41a89d:	4d 39 e7             	cmp    %r12,%r15
  41a8a0:	77 04                	ja     41a8a6 <fmt_fp+0x497>
  41a8a2:	29 ce                	sub    %ecx,%esi
  41a8a4:	eb 09                	jmp    41a8af <fmt_fp+0x4a0>
  41a8a6:	41 83 7f fc 00       	cmpl   $0x0,-0x4(%r15)
  41a8ab:	74 ec                	je     41a899 <fmt_fp+0x48a>
  41a8ad:	eb f3                	jmp    41a8a2 <fmt_fp+0x493>
  41a8af:	85 f6                	test   %esi,%esi
  41a8b1:	7f ac                	jg     41a85f <fmt_fp+0x450>
  41a8b3:	8d 43 1d             	lea    0x1d(%rbx),%eax
  41a8b6:	b9 09 00 00 00       	mov    $0x9,%ecx
  41a8bb:	89 74 24 68          	mov    %esi,0x68(%rsp)
  41a8bf:	41 bd 00 ca 9a 3b    	mov    $0x3b9aca00,%r13d
  41a8c5:	99                   	cltd   
  41a8c6:	f7 f9                	idiv   %ecx
  41a8c8:	ff c0                	inc    %eax
  41a8ca:	4c 63 d0             	movslq %eax,%r10
  41a8cd:	4e 8d 1c 95 00 00 00 	lea    0x0(,%r10,4),%r11
  41a8d4:	00 
  41a8d5:	e9 8c 00 00 00       	jmpq   41a966 <fmt_fp+0x557>
  41a8da:	89 f1                	mov    %esi,%ecx
  41a8dc:	41 b8 09 00 00 00    	mov    $0x9,%r8d
  41a8e2:	44 89 e8             	mov    %r13d,%eax
  41a8e5:	f7 d9                	neg    %ecx
  41a8e7:	4c 89 e2             	mov    %r12,%rdx
  41a8ea:	83 f9 09             	cmp    $0x9,%ecx
  41a8ed:	41 0f 4f c8          	cmovg  %r8d,%ecx
  41a8f1:	41 b0 01             	mov    $0x1,%r8b
  41a8f4:	41 d3 e0             	shl    %cl,%r8d
  41a8f7:	d3 f8                	sar    %cl,%eax
  41a8f9:	41 ff c8             	dec    %r8d
  41a8fc:	89 44 24 48          	mov    %eax,0x48(%rsp)
  41a900:	31 c0                	xor    %eax,%eax
  41a902:	44 89 44 24 28       	mov    %r8d,0x28(%rsp)
  41a907:	eb 1c                	jmp    41a925 <fmt_fp+0x516>
  41a909:	8b 3a                	mov    (%rdx),%edi
  41a90b:	41 89 f8             	mov    %edi,%r8d
  41a90e:	41 d3 e8             	shr    %cl,%r8d
  41a911:	44 01 c0             	add    %r8d,%eax
  41a914:	89 02                	mov    %eax,(%rdx)
  41a916:	8b 44 24 28          	mov    0x28(%rsp),%eax
  41a91a:	48 83 c2 04          	add    $0x4,%rdx
  41a91e:	21 f8                	and    %edi,%eax
  41a920:	0f af 44 24 48       	imul   0x48(%rsp),%eax
  41a925:	4c 39 fa             	cmp    %r15,%rdx
  41a928:	72 df                	jb     41a909 <fmt_fp+0x4fa>
  41a92a:	41 83 3c 24 00       	cmpl   $0x0,(%r12)
  41a92f:	49 8d 54 24 04       	lea    0x4(%r12),%rdx
  41a934:	4c 0f 44 e2          	cmove  %rdx,%r12
  41a938:	85 c0                	test   %eax,%eax
  41a93a:	74 07                	je     41a943 <fmt_fp+0x534>
  41a93c:	41 89 07             	mov    %eax,(%r15)
  41a93f:	49 83 c7 04          	add    $0x4,%r15
  41a943:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
  41a948:	41 83 f9 66          	cmp    $0x66,%r9d
  41a94c:	4c 89 f8             	mov    %r15,%rax
  41a94f:	49 0f 45 d4          	cmovne %r12,%rdx
  41a953:	48 29 d0             	sub    %rdx,%rax
  41a956:	4c 01 da             	add    %r11,%rdx
  41a959:	48 c1 f8 02          	sar    $0x2,%rax
  41a95d:	4c 39 d0             	cmp    %r10,%rax
  41a960:	4c 0f 4f fa          	cmovg  %rdx,%r15
  41a964:	01 ce                	add    %ecx,%esi
  41a966:	85 f6                	test   %esi,%esi
  41a968:	0f 88 6c ff ff ff    	js     41a8da <fmt_fp+0x4cb>
  41a96e:	45 31 ed             	xor    %r13d,%r13d
  41a971:	4d 39 fc             	cmp    %r15,%r12
  41a974:	89 74 24 68          	mov    %esi,0x68(%rsp)
  41a978:	73 26                	jae    41a9a0 <fmt_fp+0x591>
  41a97a:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  41a97f:	41 8b 14 24          	mov    (%r12),%edx
  41a983:	b8 0a 00 00 00       	mov    $0xa,%eax
  41a988:	4d 29 e5             	sub    %r12,%r13
  41a98b:	49 c1 fd 02          	sar    $0x2,%r13
  41a98f:	47 8d 6c ed 00       	lea    0x0(%r13,%r13,8),%r13d
  41a994:	eb 06                	jmp    41a99c <fmt_fp+0x58d>
  41a996:	6b c0 0a             	imul   $0xa,%eax,%eax
  41a999:	41 ff c5             	inc    %r13d
  41a99c:	39 c2                	cmp    %eax,%edx
  41a99e:	73 f6                	jae    41a996 <fmt_fp+0x587>
  41a9a0:	31 c0                	xor    %eax,%eax
  41a9a2:	41 83 f9 66          	cmp    $0x66,%r9d
  41a9a6:	89 da                	mov    %ebx,%edx
  41a9a8:	0f 95 c0             	setne  %al
  41a9ab:	31 c9                	xor    %ecx,%ecx
  41a9ad:	41 0f af c5          	imul   %r13d,%eax
  41a9b1:	29 c2                	sub    %eax,%edx
  41a9b3:	41 83 f9 67          	cmp    $0x67,%r9d
  41a9b7:	89 d0                	mov    %edx,%eax
  41a9b9:	75 07                	jne    41a9c2 <fmt_fp+0x5b3>
  41a9bb:	31 c9                	xor    %ecx,%ecx
  41a9bd:	85 db                	test   %ebx,%ebx
  41a9bf:	0f 95 c1             	setne  %cl
  41a9c2:	29 c8                	sub    %ecx,%eax
  41a9c4:	4c 89 f9             	mov    %r15,%rcx
  41a9c7:	48 2b 4c 24 20       	sub    0x20(%rsp),%rcx
  41a9cc:	48 63 d0             	movslq %eax,%rdx
  41a9cf:	48 c1 f9 02          	sar    $0x2,%rcx
  41a9d3:	48 ff c9             	dec    %rcx
  41a9d6:	48 8d 0c c9          	lea    (%rcx,%rcx,8),%rcx
  41a9da:	48 39 ca             	cmp    %rcx,%rdx
  41a9dd:	0f 8d 16 01 00 00    	jge    41aaf9 <fmt_fp+0x6ea>
  41a9e3:	05 00 40 02 00       	add    $0x24000,%eax
  41a9e8:	b9 09 00 00 00       	mov    $0x9,%ecx
  41a9ed:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  41a9f2:	99                   	cltd   
  41a9f3:	f7 f9                	idiv   %ecx
  41a9f5:	48 98                	cltq   
  41a9f7:	ff c2                	inc    %edx
  41a9f9:	48 8d 8c 86 04 00 ff 	lea    -0xfffc(%rsi,%rax,4),%rcx
  41aa00:	ff 
  41aa01:	be 0a 00 00 00       	mov    $0xa,%esi
  41aa06:	eb 05                	jmp    41aa0d <fmt_fp+0x5fe>
  41aa08:	6b f6 0a             	imul   $0xa,%esi,%esi
  41aa0b:	ff c2                	inc    %edx
  41aa0d:	83 fa 09             	cmp    $0x9,%edx
  41aa10:	75 f6                	jne    41aa08 <fmt_fp+0x5f9>
  41aa12:	8b 39                	mov    (%rcx),%edi
  41aa14:	31 d2                	xor    %edx,%edx
  41aa16:	89 f8                	mov    %edi,%eax
  41aa18:	f7 f6                	div    %esi
  41aa1a:	85 d2                	test   %edx,%edx
  41aa1c:	41 89 d0             	mov    %edx,%r8d
  41aa1f:	75 0d                	jne    41aa2e <fmt_fp+0x61f>
  41aa21:	48 8d 41 04          	lea    0x4(%rcx),%rax
  41aa25:	49 39 c7             	cmp    %rax,%r15
  41aa28:	0f 84 ba 00 00 00    	je     41aae8 <fmt_fp+0x6d9>
  41aa2e:	31 d2                	xor    %edx,%edx
  41aa30:	89 f8                	mov    %edi,%eax
  41aa32:	f7 f6                	div    %esi
  41aa34:	db 2d 56 e4 00 00    	fldt   0xe456(%rip)        # 428e90 <xdigits+0x70>
  41aa3a:	a8 01                	test   $0x1,%al
  41aa3c:	75 08                	jne    41aa46 <fmt_fp+0x637>
  41aa3e:	dd d8                	fstp   %st(0)
  41aa40:	d9 05 26 e4 00 00    	flds   0xe426(%rip)        # 428e6c <xdigits+0x4c>
  41aa46:	89 f0                	mov    %esi,%eax
  41aa48:	d1 f8                	sar    %eax
  41aa4a:	41 39 c0             	cmp    %eax,%r8d
  41aa4d:	72 11                	jb     41aa60 <fmt_fp+0x651>
  41aa4f:	75 17                	jne    41aa68 <fmt_fp+0x659>
  41aa51:	48 8d 41 04          	lea    0x4(%rcx),%rax
  41aa55:	d9 e8                	fld1   
  41aa57:	49 39 c7             	cmp    %rax,%r15
  41aa5a:	74 12                	je     41aa6e <fmt_fp+0x65f>
  41aa5c:	dd d8                	fstp   %st(0)
  41aa5e:	eb 08                	jmp    41aa68 <fmt_fp+0x659>
  41aa60:	d9 05 0a e4 00 00    	flds   0xe40a(%rip)        # 428e70 <xdigits+0x50>
  41aa66:	eb 06                	jmp    41aa6e <fmt_fp+0x65f>
  41aa68:	d9 05 06 e4 00 00    	flds   0xe406(%rip)        # 428e74 <xdigits+0x54>
  41aa6e:	45 85 f6             	test   %r14d,%r14d
  41aa71:	74 12                	je     41aa85 <fmt_fp+0x676>
  41aa73:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  41aa78:	80 38 2d             	cmpb   $0x2d,(%rax)
  41aa7b:	75 08                	jne    41aa85 <fmt_fp+0x676>
  41aa7d:	d9 c9                	fxch   %st(1)
  41aa7f:	d9 e0                	fchs   
  41aa81:	d9 c9                	fxch   %st(1)
  41aa83:	d9 e0                	fchs   
  41aa85:	d8 c1                	fadd   %st(1),%st
  41aa87:	44 29 c7             	sub    %r8d,%edi
  41aa8a:	df e9                	fucomip %st(1),%st
  41aa8c:	dd d8                	fstp   %st(0)
  41aa8e:	7a 06                	jp     41aa96 <fmt_fp+0x687>
  41aa90:	75 04                	jne    41aa96 <fmt_fp+0x687>
  41aa92:	89 39                	mov    %edi,(%rcx)
  41aa94:	eb 52                	jmp    41aae8 <fmt_fp+0x6d9>
  41aa96:	01 f7                	add    %esi,%edi
  41aa98:	89 39                	mov    %edi,(%rcx)
  41aa9a:	eb 1e                	jmp    41aaba <fmt_fp+0x6ab>
  41aa9c:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
  41aaa2:	48 83 e9 04          	sub    $0x4,%rcx
  41aaa6:	4c 39 e1             	cmp    %r12,%rcx
  41aaa9:	73 0d                	jae    41aab8 <fmt_fp+0x6a9>
  41aaab:	41 c7 44 24 fc 00 00 	movl   $0x0,-0x4(%r12)
  41aab2:	00 00 
  41aab4:	49 83 ec 04          	sub    $0x4,%r12
  41aab8:	ff 01                	incl   (%rcx)
  41aaba:	81 39 ff c9 9a 3b    	cmpl   $0x3b9ac9ff,(%rcx)
  41aac0:	77 da                	ja     41aa9c <fmt_fp+0x68d>
  41aac2:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  41aac7:	41 8b 14 24          	mov    (%r12),%edx
  41aacb:	b8 0a 00 00 00       	mov    $0xa,%eax
  41aad0:	4d 29 e5             	sub    %r12,%r13
  41aad3:	49 c1 fd 02          	sar    $0x2,%r13
  41aad7:	47 8d 6c ed 00       	lea    0x0(%r13,%r13,8),%r13d
  41aadc:	eb 06                	jmp    41aae4 <fmt_fp+0x6d5>
  41aade:	6b c0 0a             	imul   $0xa,%eax,%eax
  41aae1:	41 ff c5             	inc    %r13d
  41aae4:	39 c2                	cmp    %eax,%edx
  41aae6:	73 f6                	jae    41aade <fmt_fp+0x6cf>
  41aae8:	48 83 c1 04          	add    $0x4,%rcx
  41aaec:	49 39 cf             	cmp    %rcx,%r15
  41aaef:	4c 0f 47 f9          	cmova  %rcx,%r15
  41aaf3:	eb 04                	jmp    41aaf9 <fmt_fp+0x6ea>
  41aaf5:	49 83 ef 04          	sub    $0x4,%r15
  41aaf9:	4d 39 e7             	cmp    %r12,%r15
  41aafc:	77 0c                	ja     41ab0a <fmt_fp+0x6fb>
  41aafe:	41 83 f9 67          	cmp    $0x67,%r9d
  41ab02:	0f 85 b7 00 00 00    	jne    41abbf <fmt_fp+0x7b0>
  41ab08:	eb 09                	jmp    41ab13 <fmt_fp+0x704>
  41ab0a:	41 83 7f fc 00       	cmpl   $0x0,-0x4(%r15)
  41ab0f:	74 e4                	je     41aaf5 <fmt_fp+0x6e6>
  41ab11:	eb eb                	jmp    41aafe <fmt_fp+0x6ef>
  41ab13:	85 db                	test   %ebx,%ebx
  41ab15:	b8 01 00 00 00       	mov    $0x1,%eax
  41ab1a:	0f 44 d8             	cmove  %eax,%ebx
  41ab1d:	44 39 eb             	cmp    %r13d,%ebx
  41ab20:	7e 13                	jle    41ab35 <fmt_fp+0x726>
  41ab22:	41 83 fd fc          	cmp    $0xfffffffc,%r13d
  41ab26:	7c 0d                	jl     41ab35 <fmt_fp+0x726>
  41ab28:	44 89 e8             	mov    %r13d,%eax
  41ab2b:	ff 4c 24 2c          	decl   0x2c(%rsp)
  41ab2f:	f7 d0                	not    %eax
  41ab31:	01 c3                	add    %eax,%ebx
  41ab33:	eb 07                	jmp    41ab3c <fmt_fp+0x72d>
  41ab35:	83 6c 24 2c 02       	subl   $0x2,0x2c(%rsp)
  41ab3a:	ff cb                	dec    %ebx
  41ab3c:	f6 44 24 30 08       	testb  $0x8,0x30(%rsp)
  41ab41:	75 7c                	jne    41abbf <fmt_fp+0x7b0>
  41ab43:	4d 39 e7             	cmp    %r12,%r15
  41ab46:	b9 09 00 00 00       	mov    $0x9,%ecx
  41ab4b:	76 22                	jbe    41ab6f <fmt_fp+0x760>
  41ab4d:	41 8b 7f fc          	mov    -0x4(%r15),%edi
  41ab51:	85 ff                	test   %edi,%edi
  41ab53:	75 09                	jne    41ab5e <fmt_fp+0x74f>
  41ab55:	eb 18                	jmp    41ab6f <fmt_fp+0x760>
  41ab57:	6b f6 0a             	imul   $0xa,%esi,%esi
  41ab5a:	ff c1                	inc    %ecx
  41ab5c:	eb 07                	jmp    41ab65 <fmt_fp+0x756>
  41ab5e:	31 c9                	xor    %ecx,%ecx
  41ab60:	be 0a 00 00 00       	mov    $0xa,%esi
  41ab65:	31 d2                	xor    %edx,%edx
  41ab67:	89 f8                	mov    %edi,%eax
  41ab69:	f7 f6                	div    %esi
  41ab6b:	85 d2                	test   %edx,%edx
  41ab6d:	74 e8                	je     41ab57 <fmt_fp+0x748>
  41ab6f:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
  41ab73:	83 c8 20             	or     $0x20,%eax
  41ab76:	83 f8 66             	cmp    $0x66,%eax
  41ab79:	4c 89 f8             	mov    %r15,%rax
  41ab7c:	75 12                	jne    41ab90 <fmt_fp+0x781>
  41ab7e:	48 2b 44 24 20       	sub    0x20(%rsp),%rax
  41ab83:	48 c1 f8 02          	sar    $0x2,%rax
  41ab87:	48 ff c8             	dec    %rax
  41ab8a:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
  41ab8e:	eb 16                	jmp    41aba6 <fmt_fp+0x797>
  41ab90:	48 2b 44 24 20       	sub    0x20(%rsp),%rax
  41ab95:	49 63 d5             	movslq %r13d,%rdx
  41ab98:	48 c1 f8 02          	sar    $0x2,%rax
  41ab9c:	48 ff c8             	dec    %rax
  41ab9f:	48 8d 04 c0          	lea    (%rax,%rax,8),%rax
  41aba3:	48 01 d0             	add    %rdx,%rax
  41aba6:	48 63 c9             	movslq %ecx,%rcx
  41aba9:	ba 00 00 00 00       	mov    $0x0,%edx
  41abae:	48 63 db             	movslq %ebx,%rbx
  41abb1:	48 29 c8             	sub    %rcx,%rax
  41abb4:	48 0f 48 c2          	cmovs  %rdx,%rax
  41abb8:	48 39 d8             	cmp    %rbx,%rax
  41abbb:	48 0f 4e d8          	cmovle %rax,%rbx
  41abbf:	85 db                	test   %ebx,%ebx
  41abc1:	8d 53 01             	lea    0x1(%rbx),%edx
  41abc4:	b8 01 00 00 00       	mov    $0x1,%eax
  41abc9:	75 0a                	jne    41abd5 <fmt_fp+0x7c6>
  41abcb:	8b 44 24 30          	mov    0x30(%rsp),%eax
  41abcf:	c1 e8 03             	shr    $0x3,%eax
  41abd2:	83 e0 01             	and    $0x1,%eax
  41abd5:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
  41abd9:	01 c2                	add    %eax,%edx
  41abdb:	83 c9 20             	or     $0x20,%ecx
  41abde:	83 f9 66             	cmp    $0x66,%ecx
  41abe1:	89 4c 24 48          	mov    %ecx,0x48(%rsp)
  41abe5:	75 0c                	jne    41abf3 <fmt_fp+0x7e4>
  41abe7:	42 8d 04 2a          	lea    (%rdx,%r13,1),%eax
  41abeb:	45 85 ed             	test   %r13d,%r13d
  41abee:	0f 4f d0             	cmovg  %eax,%edx
  41abf1:	eb 62                	jmp    41ac55 <fmt_fp+0x846>
  41abf3:	44 89 e8             	mov    %r13d,%eax
  41abf6:	48 8d 74 24 7b       	lea    0x7b(%rsp),%rsi
  41abfb:	89 54 24 18          	mov    %edx,0x18(%rsp)
  41abff:	c1 f8 1f             	sar    $0x1f,%eax
  41ac02:	89 c7                	mov    %eax,%edi
  41ac04:	44 31 ef             	xor    %r13d,%edi
  41ac07:	29 c7                	sub    %eax,%edi
  41ac09:	48 63 ff             	movslq %edi,%rdi
  41ac0c:	e8 ff f5 ff ff       	callq  41a210 <fmt_u>
  41ac11:	48 8d 7c 24 7b       	lea    0x7b(%rsp),%rdi
  41ac16:	8b 54 24 18          	mov    0x18(%rsp),%edx
  41ac1a:	eb 06                	jmp    41ac22 <fmt_fp+0x813>
  41ac1c:	48 ff c8             	dec    %rax
  41ac1f:	c6 00 30             	movb   $0x30,(%rax)
  41ac22:	48 89 fe             	mov    %rdi,%rsi
  41ac25:	48 29 c6             	sub    %rax,%rsi
  41ac28:	48 ff ce             	dec    %rsi
  41ac2b:	7e ef                	jle    41ac1c <fmt_fp+0x80d>
  41ac2d:	8a 4c 24 2c          	mov    0x2c(%rsp),%cl
  41ac31:	48 8d 70 fe          	lea    -0x2(%rax),%rsi
  41ac35:	41 c1 fd 1f          	sar    $0x1f,%r13d
  41ac39:	41 83 e5 02          	and    $0x2,%r13d
  41ac3d:	41 83 c5 2b          	add    $0x2b,%r13d
  41ac41:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
  41ac46:	88 48 fe             	mov    %cl,-0x2(%rax)
  41ac49:	48 89 f9             	mov    %rdi,%rcx
  41ac4c:	44 88 68 ff          	mov    %r13b,-0x1(%rax)
  41ac50:	48 29 f1             	sub    %rsi,%rcx
  41ac53:	01 ca                	add    %ecx,%edx
  41ac55:	44 01 f2             	add    %r14d,%edx
  41ac58:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
  41ac5d:	be 20 00 00 00       	mov    $0x20,%esi
  41ac62:	89 d1                	mov    %edx,%ecx
  41ac64:	89 54 24 2c          	mov    %edx,0x2c(%rsp)
  41ac68:	8b 54 24 34          	mov    0x34(%rsp),%edx
  41ac6c:	48 89 ef             	mov    %rbp,%rdi
  41ac6f:	e8 20 f7 ff ff       	callq  41a394 <pad>
  41ac74:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  41ac79:	49 63 f6             	movslq %r14d,%rsi
  41ac7c:	48 89 ea             	mov    %rbp,%rdx
  41ac7f:	e8 f8 f1 ff ff       	callq  419e7c <__fwritex>
  41ac84:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
  41ac89:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
  41ac8d:	be 30 00 00 00       	mov    $0x30,%esi
  41ac92:	8b 54 24 34          	mov    0x34(%rsp),%edx
  41ac96:	48 89 ef             	mov    %rbp,%rdi
  41ac99:	41 81 f0 00 00 01 00 	xor    $0x10000,%r8d
  41aca0:	e8 ef f6 ff ff       	callq  41a394 <pad>
  41aca5:	83 7c 24 48 66       	cmpl   $0x66,0x48(%rsp)
  41acaa:	0f 85 fa 00 00 00    	jne    41adaa <fmt_fp+0x99b>
  41acb0:	4c 3b 64 24 20       	cmp    0x20(%rsp),%r12
  41acb5:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
  41acba:	4c 8d 6c 24 7b       	lea    0x7b(%rsp),%r13
  41acbf:	4d 0f 46 f4          	cmovbe %r12,%r14
  41acc3:	4d 89 f4             	mov    %r14,%r12
  41acc6:	eb 55                	jmp    41ad1d <fmt_fp+0x90e>
  41acc8:	41 8b 3c 24          	mov    (%r12),%edi
  41accc:	49 8d 55 09          	lea    0x9(%r13),%rdx
  41acd0:	48 89 d6             	mov    %rdx,%rsi
  41acd3:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
  41acd8:	e8 33 f5 ff ff       	callq  41a210 <fmt_u>
  41acdd:	4d 39 f4             	cmp    %r14,%r12
  41ace0:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  41ace5:	75 08                	jne    41acef <fmt_fp+0x8e0>
  41ace7:	eb 0d                	jmp    41acf6 <fmt_fp+0x8e7>
  41ace9:	48 ff c8             	dec    %rax
  41acec:	c6 00 30             	movb   $0x30,(%rax)
  41acef:	4c 39 e8             	cmp    %r13,%rax
  41acf2:	77 f5                	ja     41ace9 <fmt_fp+0x8da>
  41acf4:	eb 11                	jmp    41ad07 <fmt_fp+0x8f8>
  41acf6:	48 39 d0             	cmp    %rdx,%rax
  41acf9:	75 0c                	jne    41ad07 <fmt_fp+0x8f8>
  41acfb:	49 8d 45 08          	lea    0x8(%r13),%rax
  41acff:	c6 84 24 83 00 00 00 	movb   $0x30,0x83(%rsp)
  41ad06:	30 
  41ad07:	49 8d 75 09          	lea    0x9(%r13),%rsi
  41ad0b:	48 89 ea             	mov    %rbp,%rdx
  41ad0e:	48 89 c7             	mov    %rax,%rdi
  41ad11:	49 83 c4 04          	add    $0x4,%r12
  41ad15:	48 29 c6             	sub    %rax,%rsi
  41ad18:	e8 5f f1 ff ff       	callq  419e7c <__fwritex>
  41ad1d:	4c 3b 64 24 20       	cmp    0x20(%rsp),%r12
  41ad22:	76 a4                	jbe    41acc8 <fmt_fp+0x8b9>
  41ad24:	85 db                	test   %ebx,%ebx
  41ad26:	75 07                	jne    41ad2f <fmt_fp+0x920>
  41ad28:	f6 44 24 30 08       	testb  $0x8,0x30(%rsp)
  41ad2d:	74 50                	je     41ad7f <fmt_fp+0x970>
  41ad2f:	48 89 ea             	mov    %rbp,%rdx
  41ad32:	be 01 00 00 00       	mov    $0x1,%esi
  41ad37:	bf 53 8e 42 00       	mov    $0x428e53,%edi
  41ad3c:	e8 3b f1 ff ff       	callq  419e7c <__fwritex>
  41ad41:	eb 3c                	jmp    41ad7f <fmt_fp+0x970>
  41ad43:	41 8b 3c 24          	mov    (%r12),%edi
  41ad47:	49 8d 76 09          	lea    0x9(%r14),%rsi
  41ad4b:	e8 c0 f4 ff ff       	callq  41a210 <fmt_u>
  41ad50:	eb 06                	jmp    41ad58 <fmt_fp+0x949>
  41ad52:	48 ff c8             	dec    %rax
  41ad55:	c6 00 30             	movb   $0x30,(%rax)
  41ad58:	4c 39 f0             	cmp    %r14,%rax
  41ad5b:	77 f5                	ja     41ad52 <fmt_fp+0x943>
  41ad5d:	83 fb 09             	cmp    $0x9,%ebx
  41ad60:	be 09 00 00 00       	mov    $0x9,%esi
  41ad65:	48 89 ea             	mov    %rbp,%rdx
  41ad68:	0f 4e f3             	cmovle %ebx,%esi
  41ad6b:	48 89 c7             	mov    %rax,%rdi
  41ad6e:	49 83 c4 04          	add    $0x4,%r12
  41ad72:	48 63 f6             	movslq %esi,%rsi
  41ad75:	83 eb 09             	sub    $0x9,%ebx
  41ad78:	e8 ff f0 ff ff       	callq  419e7c <__fwritex>
  41ad7d:	eb 05                	jmp    41ad84 <fmt_fp+0x975>
  41ad7f:	4c 8d 74 24 7b       	lea    0x7b(%rsp),%r14
  41ad84:	85 db                	test   %ebx,%ebx
  41ad86:	7e 05                	jle    41ad8d <fmt_fp+0x97e>
  41ad88:	4d 39 fc             	cmp    %r15,%r12
  41ad8b:	72 b6                	jb     41ad43 <fmt_fp+0x934>
  41ad8d:	8d 53 09             	lea    0x9(%rbx),%edx
  41ad90:	45 31 c0             	xor    %r8d,%r8d
  41ad93:	b9 09 00 00 00       	mov    $0x9,%ecx
  41ad98:	be 30 00 00 00       	mov    $0x30,%esi
  41ad9d:	48 89 ef             	mov    %rbp,%rdi
  41ada0:	e8 ef f5 ff ff       	callq  41a394 <pad>
  41ada5:	e9 04 01 00 00       	jmpq   41aeae <fmt_fp+0xa9f>
  41adaa:	49 8d 44 24 04       	lea    0x4(%r12),%rax
  41adaf:	4d 39 e7             	cmp    %r12,%r15
  41adb2:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
  41adb7:	4c 8d 74 24 7b       	lea    0x7b(%rsp),%r14
  41adbc:	4c 0f 46 f8          	cmovbe %rax,%r15
  41adc0:	e9 a8 00 00 00       	jmpq   41ae6d <fmt_fp+0xa5e>
  41adc5:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
  41adca:	4d 8d 6e 09          	lea    0x9(%r14),%r13
  41adce:	4c 89 ee             	mov    %r13,%rsi
  41add1:	41 8b 38             	mov    (%r8),%edi
  41add4:	e8 37 f4 ff ff       	callq  41a210 <fmt_u>
  41add9:	4c 39 e8             	cmp    %r13,%rax
  41addc:	75 0c                	jne    41adea <fmt_fp+0x9db>
  41adde:	49 8d 46 08          	lea    0x8(%r14),%rax
  41ade2:	c6 84 24 83 00 00 00 	movb   $0x30,0x83(%rsp)
  41ade9:	30 
  41adea:	4c 39 64 24 20       	cmp    %r12,0x20(%rsp)
  41adef:	74 14                	je     41ae05 <fmt_fp+0x9f6>
  41adf1:	49 89 c5             	mov    %rax,%r13
  41adf4:	eb 08                	jmp    41adfe <fmt_fp+0x9ef>
  41adf6:	49 ff cd             	dec    %r13
  41adf9:	41 c6 45 00 30       	movb   $0x30,0x0(%r13)
  41adfe:	4d 39 f5             	cmp    %r14,%r13
  41ae01:	77 f3                	ja     41adf6 <fmt_fp+0x9e7>
  41ae03:	eb 31                	jmp    41ae36 <fmt_fp+0xa27>
  41ae05:	48 89 ea             	mov    %rbp,%rdx
  41ae08:	be 01 00 00 00       	mov    $0x1,%esi
  41ae0d:	48 89 c7             	mov    %rax,%rdi
  41ae10:	4c 8d 68 01          	lea    0x1(%rax),%r13
  41ae14:	e8 63 f0 ff ff       	callq  419e7c <__fwritex>
  41ae19:	85 db                	test   %ebx,%ebx
  41ae1b:	75 07                	jne    41ae24 <fmt_fp+0xa15>
  41ae1d:	f6 44 24 30 08       	testb  $0x8,0x30(%rsp)
  41ae22:	74 12                	je     41ae36 <fmt_fp+0xa27>
  41ae24:	48 89 ea             	mov    %rbp,%rdx
  41ae27:	be 01 00 00 00       	mov    $0x1,%esi
  41ae2c:	bf 53 8e 42 00       	mov    $0x428e53,%edi
  41ae31:	e8 46 f0 ff ff       	callq  419e7c <__fwritex>
  41ae36:	4d 8d 46 09          	lea    0x9(%r14),%r8
  41ae3a:	48 63 c3             	movslq %ebx,%rax
  41ae3d:	48 89 ea             	mov    %rbp,%rdx
  41ae40:	4c 89 ef             	mov    %r13,%rdi
  41ae43:	4c 89 c6             	mov    %r8,%rsi
  41ae46:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
  41ae4b:	4c 29 ee             	sub    %r13,%rsi
  41ae4e:	48 39 c6             	cmp    %rax,%rsi
  41ae51:	48 0f 4f f0          	cmovg  %rax,%rsi
  41ae55:	e8 22 f0 ff ff       	callq  419e7c <__fwritex>
  41ae5a:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
  41ae5f:	48 83 44 24 20 04    	addq   $0x4,0x20(%rsp)
  41ae65:	4c 89 e9             	mov    %r13,%rcx
  41ae68:	4c 29 c1             	sub    %r8,%rcx
  41ae6b:	01 cb                	add    %ecx,%ebx
  41ae6d:	89 d8                	mov    %ebx,%eax
  41ae6f:	83 e8 00             	sub    $0x0,%eax
  41ae72:	78 0b                	js     41ae7f <fmt_fp+0xa70>
  41ae74:	4c 39 7c 24 20       	cmp    %r15,0x20(%rsp)
  41ae79:	0f 82 46 ff ff ff    	jb     41adc5 <fmt_fp+0x9b6>
  41ae7f:	8d 53 12             	lea    0x12(%rbx),%edx
  41ae82:	be 30 00 00 00       	mov    $0x30,%esi
  41ae87:	48 89 ef             	mov    %rbp,%rdi
  41ae8a:	45 31 c0             	xor    %r8d,%r8d
  41ae8d:	b9 12 00 00 00       	mov    $0x12,%ecx
  41ae92:	e8 fd f4 ff ff       	callq  41a394 <pad>
  41ae97:	48 8d 74 24 7b       	lea    0x7b(%rsp),%rsi
  41ae9c:	48 2b 74 24 40       	sub    0x40(%rsp),%rsi
  41aea1:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
  41aea6:	48 89 ea             	mov    %rbp,%rdx
  41aea9:	e8 ce ef ff ff       	callq  419e7c <__fwritex>
  41aeae:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
  41aeb3:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
  41aeb7:	be 20 00 00 00       	mov    $0x20,%esi
  41aebc:	8b 54 24 34          	mov    0x34(%rsp),%edx
  41aec0:	48 89 ef             	mov    %rbp,%rdi
  41aec3:	41 81 f0 00 20 00 00 	xor    $0x2000,%r8d
  41aeca:	e8 c5 f4 ff ff       	callq  41a394 <pad>
  41aecf:	8b 74 24 34          	mov    0x34(%rsp),%esi
  41aed3:	39 74 24 2c          	cmp    %esi,0x2c(%rsp)
  41aed7:	89 f0                	mov    %esi,%eax
  41aed9:	0f 4d 44 24 2c       	cmovge 0x2c(%rsp),%eax
  41aede:	eb 13                	jmp    41aef3 <fmt_fp+0xae4>
  41aee0:	df e8                	fucomip %st(0),%st
  41aee2:	41 bc 4f 8e 42 00    	mov    $0x428e4f,%r12d
  41aee8:	0f 8b 05 f6 ff ff    	jnp    41a4f3 <fmt_fp+0xe4>
  41aeee:	e9 f7 f5 ff ff       	jmpq   41a4ea <fmt_fp+0xdb>
  41aef3:	48 81 c4 48 1d 00 00 	add    $0x1d48,%rsp
  41aefa:	5b                   	pop    %rbx
  41aefb:	5d                   	pop    %rbp
  41aefc:	41 5c                	pop    %r12
  41aefe:	41 5d                	pop    %r13
  41af00:	41 5e                	pop    %r14
  41af02:	41 5f                	pop    %r15
  41af04:	c3                   	retq   

000000000041af05 <printf_core>:
  41af05:	41 57                	push   %r15
  41af07:	45 31 c9             	xor    %r9d,%r9d
  41af0a:	41 56                	push   %r14
  41af0c:	45 31 f6             	xor    %r14d,%r14d
  41af0f:	41 55                	push   %r13
  41af11:	41 54                	push   %r12
  41af13:	49 89 f4             	mov    %rsi,%r12
  41af16:	55                   	push   %rbp
  41af17:	53                   	push   %rbx
  41af18:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  41af1f:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
  41af24:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
  41af29:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
  41af2e:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
  41af33:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%rsp)
  41af3a:	00 
  41af3b:	eb 05                	jmp    41af42 <printf_core+0x3d>
  41af3d:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
  41af42:	45 85 f6             	test   %r14d,%r14d
  41af45:	78 1f                	js     41af66 <printf_core+0x61>
  41af47:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
  41af4c:	44 29 f0             	sub    %r14d,%eax
  41af4f:	45 01 ce             	add    %r9d,%r14d
  41af52:	41 39 c1             	cmp    %eax,%r9d
  41af55:	7e 0f                	jle    41af66 <printf_core+0x61>
  41af57:	e8 a4 d0 ff ff       	callq  418000 <__errno_location>
  41af5c:	41 83 ce ff          	or     $0xffffffff,%r14d
  41af60:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
  41af66:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
  41af6b:	0f 84 9b 07 00 00    	je     41b70c <printf_core+0x807>
  41af71:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
  41af76:	eb 05                	jmp    41af7d <printf_core+0x78>
  41af78:	48 ff 44 24 20       	incq   0x20(%rsp)
  41af7d:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
  41af82:	8a 02                	mov    (%rdx),%al
  41af84:	3c 25                	cmp    $0x25,%al
  41af86:	74 04                	je     41af8c <printf_core+0x87>
  41af88:	84 c0                	test   %al,%al
  41af8a:	75 ec                	jne    41af78 <printf_core+0x73>
  41af8c:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
  41af91:	eb 09                	jmp    41af9c <printf_core+0x97>
  41af93:	48 83 44 24 20 02    	addq   $0x2,0x20(%rsp)
  41af99:	48 ff c3             	inc    %rbx
  41af9c:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  41afa1:	80 39 25             	cmpb   $0x25,(%rcx)
  41afa4:	74 10                	je     41afb6 <printf_core+0xb1>
  41afa6:	4c 29 e3             	sub    %r12,%rbx
  41afa9:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
  41afaf:	41 89 d9             	mov    %ebx,%r9d
  41afb2:	75 0f                	jne    41afc3 <printf_core+0xbe>
  41afb4:	eb 26                	jmp    41afdc <printf_core+0xd7>
  41afb6:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  41afbb:	80 7e 01 25          	cmpb   $0x25,0x1(%rsi)
  41afbf:	74 d2                	je     41af93 <printf_core+0x8e>
  41afc1:	eb e3                	jmp    41afa6 <printf_core+0xa1>
  41afc3:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  41afc8:	48 63 f3             	movslq %ebx,%rsi
  41afcb:	4c 89 e7             	mov    %r12,%rdi
  41afce:	89 5c 24 08          	mov    %ebx,0x8(%rsp)
  41afd2:	e8 a5 ee ff ff       	callq  419e7c <__fwritex>
  41afd7:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
  41afdc:	85 db                	test   %ebx,%ebx
  41afde:	0f 85 59 ff ff ff    	jne    41af3d <printf_core+0x38>
  41afe4:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  41afe9:	0f be 50 01          	movsbl 0x1(%rax),%edx
  41afed:	83 ea 30             	sub    $0x30,%edx
  41aff0:	83 fa 09             	cmp    $0x9,%edx
  41aff3:	77 17                	ja     41b00c <printf_core+0x107>
  41aff5:	80 78 02 24          	cmpb   $0x24,0x2(%rax)
  41aff9:	75 11                	jne    41b00c <printf_core+0x107>
  41affb:	49 89 c7             	mov    %rax,%r15
  41affe:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
  41b005:	00 
  41b006:	49 83 c7 03          	add    $0x3,%r15
  41b00a:	eb 0b                	jmp    41b017 <printf_core+0x112>
  41b00c:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
  41b011:	83 ca ff             	or     $0xffffffff,%edx
  41b014:	49 ff c7             	inc    %r15
  41b017:	31 db                	xor    %ebx,%ebx
  41b019:	be 89 28 01 00       	mov    $0x12889,%esi
  41b01e:	bf 01 00 00 00       	mov    $0x1,%edi
  41b023:	eb 09                	jmp    41b02e <printf_core+0x129>
  41b025:	89 f8                	mov    %edi,%eax
  41b027:	49 ff c7             	inc    %r15
  41b02a:	d3 e0                	shl    %cl,%eax
  41b02c:	09 c3                	or     %eax,%ebx
  41b02e:	41 8a 07             	mov    (%r15),%al
  41b031:	0f be c8             	movsbl %al,%ecx
  41b034:	83 e9 20             	sub    $0x20,%ecx
  41b037:	83 f9 1f             	cmp    $0x1f,%ecx
  41b03a:	76 0d                	jbe    41b049 <printf_core+0x144>
  41b03c:	45 31 ed             	xor    %r13d,%r13d
  41b03f:	3c 2a                	cmp    $0x2a,%al
  41b041:	0f 85 bd 00 00 00    	jne    41b104 <printf_core+0x1ff>
  41b047:	eb 07                	jmp    41b050 <printf_core+0x14b>
  41b049:	0f a3 ce             	bt     %ecx,%esi
  41b04c:	72 d7                	jb     41b025 <printf_core+0x120>
  41b04e:	eb ec                	jmp    41b03c <printf_core+0x137>
  41b050:	49 0f be 47 01       	movsbq 0x1(%r15),%rax
  41b055:	0f be c8             	movsbl %al,%ecx
  41b058:	83 e9 30             	sub    $0x30,%ecx
  41b05b:	83 f9 09             	cmp    $0x9,%ecx
  41b05e:	77 3b                	ja     41b09b <printf_core+0x196>
  41b060:	41 80 7f 02 24       	cmpb   $0x24,0x2(%r15)
  41b065:	75 34                	jne    41b09b <printf_core+0x196>
  41b067:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
  41b06c:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
  41b073:	00 
  41b074:	c7 84 81 40 ff ff ff 	movl   $0xa,-0xc0(%rcx,%rax,4)
  41b07b:	0a 00 00 00 
  41b07f:	49 0f be 47 01       	movsbq 0x1(%r15),%rax
  41b084:	49 83 c7 03          	add    $0x3,%r15
  41b088:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
  41b08d:	48 83 e8 30          	sub    $0x30,%rax
  41b091:	48 c1 e0 04          	shl    $0x4,%rax
  41b095:	44 8b 2c 01          	mov    (%rcx,%rax,1),%r13d
  41b099:	eb 52                	jmp    41b0ed <printf_core+0x1e8>
  41b09b:	83 7c 24 30 00       	cmpl   $0x0,0x30(%rsp)
  41b0a0:	74 09                	je     41b0ab <printf_core+0x1a6>
  41b0a2:	41 83 ce ff          	or     $0xffffffff,%r14d
  41b0a6:	e9 0d 07 00 00       	jmpq   41b7b8 <printf_core+0x8b3>
  41b0ab:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
  41b0b1:	74 34                	je     41b0e7 <printf_core+0x1e2>
  41b0b3:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  41b0b8:	8b 0e                	mov    (%rsi),%ecx
  41b0ba:	83 f9 30             	cmp    $0x30,%ecx
  41b0bd:	73 0d                	jae    41b0cc <printf_core+0x1c7>
  41b0bf:	89 c8                	mov    %ecx,%eax
  41b0c1:	83 c1 08             	add    $0x8,%ecx
  41b0c4:	48 03 46 10          	add    0x10(%rsi),%rax
  41b0c8:	89 0e                	mov    %ecx,(%rsi)
  41b0ca:	eb 16                	jmp    41b0e2 <printf_core+0x1dd>
  41b0cc:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  41b0d1:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  41b0d6:	48 8b 41 08          	mov    0x8(%rcx),%rax
  41b0da:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41b0de:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
  41b0e2:	44 8b 28             	mov    (%rax),%r13d
  41b0e5:	eb 03                	jmp    41b0ea <printf_core+0x1e5>
  41b0e7:	45 31 ed             	xor    %r13d,%r13d
  41b0ea:	49 ff c7             	inc    %r15
  41b0ed:	45 85 ed             	test   %r13d,%r13d
  41b0f0:	79 23                	jns    41b115 <printf_core+0x210>
  41b0f2:	80 cf 20             	or     $0x20,%bh
  41b0f5:	41 f7 dd             	neg    %r13d
  41b0f8:	eb 1b                	jmp    41b115 <printf_core+0x210>
  41b0fa:	45 6b ed 0a          	imul   $0xa,%r13d,%r13d
  41b0fe:	49 ff c7             	inc    %r15
  41b101:	41 01 c5             	add    %eax,%r13d
  41b104:	41 0f be 07          	movsbl (%r15),%eax
  41b108:	83 e8 30             	sub    $0x30,%eax
  41b10b:	83 f8 09             	cmp    $0x9,%eax
  41b10e:	76 ea                	jbe    41b0fa <printf_core+0x1f5>
  41b110:	45 85 ed             	test   %r13d,%r13d
  41b113:	78 8d                	js     41b0a2 <printf_core+0x19d>
  41b115:	83 cd ff             	or     $0xffffffff,%ebp
  41b118:	41 80 3f 2e          	cmpb   $0x2e,(%r15)
  41b11c:	0f 85 b6 00 00 00    	jne    41b1d8 <printf_core+0x2d3>
  41b122:	41 80 7f 01 2a       	cmpb   $0x2a,0x1(%r15)
  41b127:	0f 85 90 00 00 00    	jne    41b1bd <printf_core+0x2b8>
  41b12d:	49 0f be 47 02       	movsbq 0x2(%r15),%rax
  41b132:	0f be c8             	movsbl %al,%ecx
  41b135:	83 e9 30             	sub    $0x30,%ecx
  41b138:	83 f9 09             	cmp    $0x9,%ecx
  41b13b:	77 32                	ja     41b16f <printf_core+0x26a>
  41b13d:	41 80 7f 03 24       	cmpb   $0x24,0x3(%r15)
  41b142:	75 2b                	jne    41b16f <printf_core+0x26a>
  41b144:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
  41b149:	c7 84 81 40 ff ff ff 	movl   $0xa,-0xc0(%rcx,%rax,4)
  41b150:	0a 00 00 00 
  41b154:	49 0f be 47 02       	movsbq 0x2(%r15),%rax
  41b159:	49 83 c7 04          	add    $0x4,%r15
  41b15d:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
  41b162:	48 83 e8 30          	sub    $0x30,%rax
  41b166:	48 c1 e0 04          	shl    $0x4,%rax
  41b16a:	8b 2c 01             	mov    (%rcx,%rax,1),%ebp
  41b16d:	eb 69                	jmp    41b1d8 <printf_core+0x2d3>
  41b16f:	83 7c 24 30 00       	cmpl   $0x0,0x30(%rsp)
  41b174:	0f 85 28 ff ff ff    	jne    41b0a2 <printf_core+0x19d>
  41b17a:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
  41b180:	74 33                	je     41b1b5 <printf_core+0x2b0>
  41b182:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  41b187:	8b 0e                	mov    (%rsi),%ecx
  41b189:	83 f9 30             	cmp    $0x30,%ecx
  41b18c:	73 0d                	jae    41b19b <printf_core+0x296>
  41b18e:	89 c8                	mov    %ecx,%eax
  41b190:	83 c1 08             	add    $0x8,%ecx
  41b193:	48 03 46 10          	add    0x10(%rsi),%rax
  41b197:	89 0e                	mov    %ecx,(%rsi)
  41b199:	eb 16                	jmp    41b1b1 <printf_core+0x2ac>
  41b19b:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  41b1a0:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  41b1a5:	48 8b 41 08          	mov    0x8(%rcx),%rax
  41b1a9:	48 8d 48 08          	lea    0x8(%rax),%rcx
  41b1ad:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
  41b1b1:	8b 28                	mov    (%rax),%ebp
  41b1b3:	eb 02                	jmp    41b1b7 <printf_core+0x2b2>
  41b1b5:	31 ed                	xor    %ebp,%ebp
  41b1b7:	49 83 c7 02          	add    $0x2,%r15
  41b1bb:	eb 1b                	jmp    41b1d8 <printf_core+0x2d3>
  41b1bd:	49 ff c7             	inc    %r15
  41b1c0:	31 ed                	xor    %ebp,%ebp
  41b1c2:	eb 08                	jmp    41b1cc <printf_core+0x2c7>
  41b1c4:	6b ed 0a             	imul   $0xa,%ebp,%ebp
  41b1c7:	49 ff c7             	inc    %r15
  41b1ca:	01 c5                	add    %eax,%ebp
  41b1cc:	41 0f be 07          	movsbl (%r15),%eax
  41b1d0:	83 e8 30             	sub    $0x30,%eax
  41b1d3:	83 f8 09             	cmp    $0x9,%eax
  41b1d6:	76 ec                	jbe    41b1c4 <printf_core+0x2bf>
  41b1d8:	31 c0                	xor    %eax,%eax
  41b1da:	eb 05                	jmp    41b1e1 <printf_core+0x2dc>
  41b1dc:	49 89 ff             	mov    %rdi,%r15
  41b1df:	89 f0                	mov    %esi,%eax
  41b1e1:	41 0f be 0f          	movsbl (%r15),%ecx
  41b1e5:	83 e9 41             	sub    $0x41,%ecx
  41b1e8:	83 f9 39             	cmp    $0x39,%ecx
  41b1eb:	0f 87 b1 fe ff ff    	ja     41b0a2 <printf_core+0x19d>
  41b1f1:	89 c6                	mov    %eax,%esi
  41b1f3:	48 63 c9             	movslq %ecx,%rcx
  41b1f6:	49 8d 7f 01          	lea    0x1(%r15),%rdi
  41b1fa:	48 6b f6 3a          	imul   $0x3a,%rsi,%rsi
  41b1fe:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
  41b203:	8a 8c 31 50 8c 42 00 	mov    0x428c50(%rcx,%rsi,1),%cl
  41b20a:	0f b6 f1             	movzbl %cl,%esi
  41b20d:	44 8d 46 ff          	lea    -0x1(%rsi),%r8d
  41b211:	41 83 f8 07          	cmp    $0x7,%r8d
  41b215:	76 c5                	jbe    41b1dc <printf_core+0x2d7>
  41b217:	85 f6                	test   %esi,%esi
  41b219:	0f 84 83 fe ff ff    	je     41b0a2 <printf_core+0x19d>
  41b21f:	83 fe 15             	cmp    $0x15,%esi
  41b222:	75 09                	jne    41b22d <printf_core+0x328>
  41b224:	85 d2                	test   %edx,%edx
  41b226:	78 68                	js     41b290 <printf_core+0x38b>
  41b228:	e9 75 fe ff ff       	jmpq   41b0a2 <printf_core+0x19d>
  41b22d:	85 d2                	test   %edx,%edx
  41b22f:	78 27                	js     41b258 <printf_core+0x353>
  41b231:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
  41b236:	48 63 d2             	movslq %edx,%rdx
  41b239:	89 34 91             	mov    %esi,(%rcx,%rdx,4)
  41b23c:	48 c1 e2 04          	shl    $0x4,%rdx
  41b240:	48 03 54 24 48       	add    0x48(%rsp),%rdx
  41b245:	48 8b 0a             	mov    (%rdx),%rcx
  41b248:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
  41b24d:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  41b251:	48 89 54 24 68       	mov    %rdx,0x68(%rsp)
  41b256:	eb 38                	jmp    41b290 <printf_core+0x38b>
  41b258:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
  41b25e:	75 08                	jne    41b268 <printf_core+0x363>
  41b260:	45 31 f6             	xor    %r14d,%r14d
  41b263:	e9 50 05 00 00       	jmpq   41b7b8 <printf_core+0x8b3>
  41b268:	80 f9 16             	cmp    $0x16,%cl
  41b26b:	77 2f                	ja     41b29c <printf_core+0x397>
  41b26d:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  41b272:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
  41b277:	89 44 24 10          	mov    %eax,0x10(%rsp)
  41b27b:	44 89 4c 24 08       	mov    %r9d,0x8(%rsp)
  41b280:	e8 ab ef ff ff       	callq  41a230 <pop_arg.part.0>
  41b285:	8b 44 24 10          	mov    0x10(%rsp),%eax
  41b289:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
  41b28e:	eb 0c                	jmp    41b29c <printf_core+0x397>
  41b290:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
  41b296:	0f 84 a1 fc ff ff    	je     41af3d <printf_core+0x38>
  41b29c:	45 8a 17             	mov    (%r15),%r10b
  41b29f:	85 c0                	test   %eax,%eax
  41b2a1:	45 0f be c2          	movsbl %r10b,%r8d
  41b2a5:	74 13                	je     41b2ba <printf_core+0x3b5>
  41b2a7:	44 88 d2             	mov    %r10b,%dl
  41b2aa:	83 e2 0f             	and    $0xf,%edx
  41b2ad:	80 fa 03             	cmp    $0x3,%dl
  41b2b0:	75 08                	jne    41b2ba <printf_core+0x3b5>
  41b2b2:	41 83 e2 df          	and    $0xffffffdf,%r10d
  41b2b6:	45 0f be c2          	movsbl %r10b,%r8d
  41b2ba:	89 da                	mov    %ebx,%edx
  41b2bc:	81 e2 ff ff fe ff    	and    $0xfffeffff,%edx
  41b2c2:	f6 c7 20             	test   $0x20,%bh
  41b2c5:	0f 45 da             	cmovne %edx,%ebx
  41b2c8:	41 8d 50 bf          	lea    -0x41(%r8),%edx
  41b2cc:	83 fa 37             	cmp    $0x37,%edx
  41b2cf:	0f 87 54 03 00 00    	ja     41b629 <printf_core+0x724>
  41b2d5:	ff 24 d5 50 8a 42 00 	jmpq   *0x428a50(,%rdx,8)
  41b2dc:	83 f8 07             	cmp    $0x7,%eax
  41b2df:	0f 87 58 fc ff ff    	ja     41af3d <printf_core+0x38>
  41b2e5:	ff 24 c5 10 8c 42 00 	jmpq   *0x428c10(,%rax,8)
  41b2ec:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
  41b2f1:	44 89 30             	mov    %r14d,(%rax)
  41b2f4:	e9 44 fc ff ff       	jmpq   41af3d <printf_core+0x38>
  41b2f9:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
  41b2fe:	66 44 89 30          	mov    %r14w,(%rax)
  41b302:	e9 36 fc ff ff       	jmpq   41af3d <printf_core+0x38>
  41b307:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
  41b30c:	44 88 30             	mov    %r14b,(%rax)
  41b30f:	e9 29 fc ff ff       	jmpq   41af3d <printf_core+0x38>
  41b314:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
  41b319:	49 63 d6             	movslq %r14d,%rdx
  41b31c:	48 89 10             	mov    %rdx,(%rax)
  41b31f:	e9 19 fc ff ff       	jmpq   41af3d <printf_core+0x38>
  41b324:	83 fd 10             	cmp    $0x10,%ebp
  41b327:	b8 10 00 00 00       	mov    $0x10,%eax
  41b32c:	41 b8 78 00 00 00    	mov    $0x78,%r8d
  41b332:	0f 42 e8             	cmovb  %eax,%ebp
  41b335:	83 cb 08             	or     $0x8,%ebx
  41b338:	44 89 c2             	mov    %r8d,%edx
  41b33b:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
  41b340:	4c 8d a4 24 a0 00 00 	lea    0xa0(%rsp),%r12
  41b347:	00 
  41b348:	83 e2 20             	and    $0x20,%edx
  41b34b:	eb 19                	jmp    41b366 <printf_core+0x461>
  41b34d:	48 89 c1             	mov    %rax,%rcx
  41b350:	49 ff cc             	dec    %r12
  41b353:	48 c1 e8 04          	shr    $0x4,%rax
  41b357:	83 e1 0f             	and    $0xf,%ecx
  41b35a:	8a 89 20 8e 42 00    	mov    0x428e20(%rcx),%cl
  41b360:	09 d1                	or     %edx,%ecx
  41b362:	41 88 0c 24          	mov    %cl,(%r12)
  41b366:	48 85 c0             	test   %rax,%rax
  41b369:	75 e2                	jne    41b34d <printf_core+0x448>
  41b36b:	48 83 7c 24 60 00    	cmpq   $0x0,0x60(%rsp)
  41b371:	0f 84 f1 00 00 00    	je     41b468 <printf_core+0x563>
  41b377:	f6 c3 08             	test   $0x8,%bl
  41b37a:	0f 84 e8 00 00 00    	je     41b468 <printf_core+0x563>
  41b380:	41 c1 f8 04          	sar    $0x4,%r8d
  41b384:	41 b9 02 00 00 00    	mov    $0x2,%r9d
  41b38a:	4d 63 d0             	movslq %r8d,%r10
  41b38d:	4d 8d ba 55 8e 42 00 	lea    0x428e55(%r10),%r15
  41b394:	e9 d8 00 00 00       	jmpq   41b471 <printf_core+0x56c>
  41b399:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
  41b39e:	4c 8d a4 24 a0 00 00 	lea    0xa0(%rsp),%r12
  41b3a5:	00 
  41b3a6:	eb 14                	jmp    41b3bc <printf_core+0x4b7>
  41b3a8:	48 89 c2             	mov    %rax,%rdx
  41b3ab:	49 ff cc             	dec    %r12
  41b3ae:	48 c1 e8 03          	shr    $0x3,%rax
  41b3b2:	83 e2 07             	and    $0x7,%edx
  41b3b5:	83 c2 30             	add    $0x30,%edx
  41b3b8:	41 88 14 24          	mov    %dl,(%r12)
  41b3bc:	48 85 c0             	test   %rax,%rax
  41b3bf:	75 e7                	jne    41b3a8 <printf_core+0x4a3>
  41b3c1:	f6 c3 08             	test   $0x8,%bl
  41b3c4:	0f 84 9e 00 00 00    	je     41b468 <printf_core+0x563>
  41b3ca:	48 83 7c 24 60 01    	cmpq   $0x1,0x60(%rsp)
  41b3d0:	41 bf 55 8e 42 00    	mov    $0x428e55,%r15d
  41b3d6:	b8 5a 8e 42 00       	mov    $0x428e5a,%eax
  41b3db:	45 19 c9             	sbb    %r9d,%r9d
  41b3de:	41 ff c1             	inc    %r9d
  41b3e1:	48 83 7c 24 60 00    	cmpq   $0x0,0x60(%rsp)
  41b3e7:	4c 0f 45 f8          	cmovne %rax,%r15
  41b3eb:	e9 81 00 00 00       	jmpq   41b471 <printf_core+0x56c>
  41b3f0:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
  41b3f5:	48 85 c0             	test   %rax,%rax
  41b3f8:	79 10                	jns    41b40a <printf_core+0x505>
  41b3fa:	48 f7 d8             	neg    %rax
  41b3fd:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  41b403:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
  41b408:	eb 29                	jmp    41b433 <printf_core+0x52e>
  41b40a:	f6 c7 08             	test   $0x8,%bh
  41b40d:	75 2c                	jne    41b43b <printf_core+0x536>
  41b40f:	89 d8                	mov    %ebx,%eax
  41b411:	41 bf 57 8e 42 00    	mov    $0x428e57,%r15d
  41b417:	83 e0 01             	and    $0x1,%eax
  41b41a:	83 f8 01             	cmp    $0x1,%eax
  41b41d:	45 19 c9             	sbb    %r9d,%r9d
  41b420:	41 ff c1             	inc    %r9d
  41b423:	85 c0                	test   %eax,%eax
  41b425:	b8 55 8e 42 00       	mov    $0x428e55,%eax
  41b42a:	4c 0f 44 f8          	cmove  %rax,%r15
  41b42e:	eb 17                	jmp    41b447 <printf_core+0x542>
  41b430:	45 31 c9             	xor    %r9d,%r9d
  41b433:	41 bf 55 8e 42 00    	mov    $0x428e55,%r15d
  41b439:	eb 0c                	jmp    41b447 <printf_core+0x542>
  41b43b:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  41b441:	41 bf 56 8e 42 00    	mov    $0x428e56,%r15d
  41b447:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
  41b44c:	48 8d b4 24 a0 00 00 	lea    0xa0(%rsp),%rsi
  41b453:	00 
  41b454:	44 89 4c 24 08       	mov    %r9d,0x8(%rsp)
  41b459:	e8 b2 ed ff ff       	callq  41a210 <fmt_u>
  41b45e:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
  41b463:	49 89 c4             	mov    %rax,%r12
  41b466:	eb 09                	jmp    41b471 <printf_core+0x56c>
  41b468:	45 31 c9             	xor    %r9d,%r9d
  41b46b:	41 bf 55 8e 42 00    	mov    $0x428e55,%r15d
  41b471:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
  41b476:	89 d8                	mov    %ebx,%eax
  41b478:	25 ff ff fe ff       	and    $0xfffeffff,%eax
  41b47d:	85 ed                	test   %ebp,%ebp
  41b47f:	0f 49 d8             	cmovns %eax,%ebx
  41b482:	48 85 d2             	test   %rdx,%rdx
  41b485:	75 08                	jne    41b48f <printf_core+0x58a>
  41b487:	85 ed                	test   %ebp,%ebp
  41b489:	0f 84 ad 01 00 00    	je     41b63c <printf_core+0x737>
  41b48f:	48 8d 8c 24 a0 00 00 	lea    0xa0(%rsp),%rcx
  41b496:	00 
  41b497:	31 c0                	xor    %eax,%eax
  41b499:	48 63 ed             	movslq %ebp,%rbp
  41b49c:	4c 29 e1             	sub    %r12,%rcx
  41b49f:	48 85 d2             	test   %rdx,%rdx
  41b4a2:	0f 94 c0             	sete   %al
  41b4a5:	48 01 c8             	add    %rcx,%rax
  41b4a8:	48 39 e8             	cmp    %rbp,%rax
  41b4ab:	48 0f 4d e8          	cmovge %rax,%rbp
  41b4af:	e9 7e 01 00 00       	jmpq   41b632 <printf_core+0x72d>
  41b4b4:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
  41b4b9:	81 e3 ff ff fe ff    	and    $0xfffeffff,%ebx
  41b4bf:	45 31 c9             	xor    %r9d,%r9d
  41b4c2:	41 bf 55 8e 42 00    	mov    $0x428e55,%r15d
  41b4c8:	bd 01 00 00 00       	mov    $0x1,%ebp
  41b4cd:	4c 8d a4 24 9f 00 00 	lea    0x9f(%rsp),%r12
  41b4d4:	00 
  41b4d5:	88 84 24 9f 00 00 00 	mov    %al,0x9f(%rsp)
  41b4dc:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
  41b4e3:	00 
  41b4e4:	e9 5e 01 00 00       	jmpq   41b647 <printf_core+0x742>
  41b4e9:	e8 12 cb ff ff       	callq  418000 <__errno_location>
  41b4ee:	8b 38                	mov    (%rax),%edi
  41b4f0:	e8 2b cb ff ff       	callq  418020 <strerror>
  41b4f5:	49 89 c4             	mov    %rax,%r12
  41b4f8:	eb 11                	jmp    41b50b <printf_core+0x606>
  41b4fa:	4c 8b 64 24 60       	mov    0x60(%rsp),%r12
  41b4ff:	b8 5f 8e 42 00       	mov    $0x428e5f,%eax
  41b504:	4d 85 e4             	test   %r12,%r12
  41b507:	4c 0f 44 e0          	cmove  %rax,%r12
  41b50b:	4c 63 fd             	movslq %ebp,%r15
  41b50e:	31 f6                	xor    %esi,%esi
  41b510:	4c 89 e7             	mov    %r12,%rdi
  41b513:	4c 89 fa             	mov    %r15,%rdx
  41b516:	e8 d5 03 00 00       	callq  41b8f0 <memchr>
  41b51b:	48 85 c0             	test   %rax,%rax
  41b51e:	75 06                	jne    41b526 <printf_core+0x621>
  41b520:	4b 8d 04 3c          	lea    (%r12,%r15,1),%rax
  41b524:	eb 05                	jmp    41b52b <printf_core+0x626>
  41b526:	89 c5                	mov    %eax,%ebp
  41b528:	44 29 e5             	sub    %r12d,%ebp
  41b52b:	81 e3 ff ff fe ff    	and    $0xfffeffff,%ebx
  41b531:	45 31 c9             	xor    %r9d,%r9d
  41b534:	41 bf 55 8e 42 00    	mov    $0x428e55,%r15d
  41b53a:	e9 08 01 00 00       	jmpq   41b647 <printf_core+0x742>
  41b53f:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
  41b544:	48 8d 74 24 58       	lea    0x58(%rsp),%rsi
  41b549:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
  41b550:	00 
  41b551:	83 cd ff             	or     $0xffffffff,%ebp
  41b554:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
  41b559:	89 44 24 58          	mov    %eax,0x58(%rsp)
  41b55d:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
  41b562:	45 31 e4             	xor    %r12d,%r12d
  41b565:	eb 03                	jmp    41b56a <printf_core+0x665>
  41b567:	41 01 c4             	add    %eax,%r12d
  41b56a:	41 39 ec             	cmp    %ebp,%r12d
  41b56d:	0f 83 21 02 00 00    	jae    41b794 <printf_core+0x88f>
  41b573:	41 8b 37             	mov    (%r15),%esi
  41b576:	85 f6                	test   %esi,%esi
  41b578:	0f 84 16 02 00 00    	je     41b794 <printf_core+0x88f>
  41b57e:	48 8d 7c 24 54       	lea    0x54(%rsp),%rdi
  41b583:	49 83 c7 04          	add    $0x4,%r15
  41b587:	e8 c0 11 00 00       	callq  41c74c <wctomb>
  41b58c:	85 c0                	test   %eax,%eax
  41b58e:	0f 88 0e fb ff ff    	js     41b0a2 <printf_core+0x19d>
  41b594:	89 ea                	mov    %ebp,%edx
  41b596:	44 29 e2             	sub    %r12d,%edx
  41b599:	39 d0                	cmp    %edx,%eax
  41b59b:	76 ca                	jbe    41b567 <printf_core+0x662>
  41b59d:	e9 f2 01 00 00       	jmpq   41b794 <printf_core+0x88f>
  41b5a2:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  41b5a7:	48 8d 7c 24 54       	lea    0x54(%rsp),%rdi
  41b5ac:	48 63 f0             	movslq %eax,%rsi
  41b5af:	e8 c8 e8 ff ff       	callq  419e7c <__fwritex>
  41b5b4:	44 39 e5             	cmp    %r12d,%ebp
  41b5b7:	72 2e                	jb     41b5e7 <printf_core+0x6e2>
  41b5b9:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41b5be:	41 89 d8             	mov    %ebx,%r8d
  41b5c1:	44 89 e1             	mov    %r12d,%ecx
  41b5c4:	41 81 f0 00 20 00 00 	xor    $0x2000,%r8d
  41b5cb:	44 89 ea             	mov    %r13d,%edx
  41b5ce:	be 20 00 00 00       	mov    $0x20,%esi
  41b5d3:	e8 bc ed ff ff       	callq  41a394 <pad>
  41b5d8:	45 39 ec             	cmp    %r13d,%r12d
  41b5db:	45 89 e9             	mov    %r13d,%r9d
  41b5de:	45 0f 4d cc          	cmovge %r12d,%r9d
  41b5e2:	e9 56 f9 ff ff       	jmpq   41af3d <printf_core+0x38>
  41b5e7:	41 8b 37             	mov    (%r15),%esi
  41b5ea:	85 f6                	test   %esi,%esi
  41b5ec:	74 cb                	je     41b5b9 <printf_core+0x6b4>
  41b5ee:	48 8d 7c 24 54       	lea    0x54(%rsp),%rdi
  41b5f3:	49 83 c7 04          	add    $0x4,%r15
  41b5f7:	e8 50 11 00 00       	callq  41c74c <wctomb>
  41b5fc:	01 c5                	add    %eax,%ebp
  41b5fe:	44 39 e5             	cmp    %r12d,%ebp
  41b601:	7e 9f                	jle    41b5a2 <printf_core+0x69d>
  41b603:	eb b4                	jmp    41b5b9 <printf_core+0x6b4>
  41b605:	ff 74 24 68          	pushq  0x68(%rsp)
  41b609:	ff 74 24 68          	pushq  0x68(%rsp)
  41b60d:	89 d9                	mov    %ebx,%ecx
  41b60f:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  41b614:	89 ea                	mov    %ebp,%edx
  41b616:	44 89 ee             	mov    %r13d,%esi
  41b619:	e8 f1 ed ff ff       	callq  41a40f <fmt_fp>
  41b61e:	41 5b                	pop    %r11
  41b620:	41 89 c1             	mov    %eax,%r9d
  41b623:	5b                   	pop    %rbx
  41b624:	e9 14 f9 ff ff       	jmpq   41af3d <printf_core+0x38>
  41b629:	45 31 c9             	xor    %r9d,%r9d
  41b62c:	41 bf 55 8e 42 00    	mov    $0x428e55,%r15d
  41b632:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
  41b639:	00 
  41b63a:	eb 0b                	jmp    41b647 <printf_core+0x742>
  41b63c:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
  41b643:	00 
  41b644:	49 89 c4             	mov    %rax,%r12
  41b647:	4c 29 e0             	sub    %r12,%rax
  41b64a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41b64f:	41 89 d8             	mov    %ebx,%r8d
  41b652:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
  41b657:	48 63 c5             	movslq %ebp,%rax
  41b65a:	48 3b 44 24 40       	cmp    0x40(%rsp),%rax
  41b65f:	0f 4c 6c 24 40       	cmovl  0x40(%rsp),%ebp
  41b664:	be 20 00 00 00       	mov    $0x20,%esi
  41b669:	44 89 4c 24 08       	mov    %r9d,0x8(%rsp)
  41b66e:	41 8d 0c 29          	lea    (%r9,%rbp,1),%ecx
  41b672:	44 39 e9             	cmp    %r13d,%ecx
  41b675:	89 4c 24 34          	mov    %ecx,0x34(%rsp)
  41b679:	44 0f 4d e9          	cmovge %ecx,%r13d
  41b67d:	44 89 ea             	mov    %r13d,%edx
  41b680:	e8 0f ed ff ff       	callq  41a394 <pad>
  41b685:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
  41b68a:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  41b68f:	4c 89 ff             	mov    %r15,%rdi
  41b692:	49 63 f1             	movslq %r9d,%rsi
  41b695:	e8 e2 e7 ff ff       	callq  419e7c <__fwritex>
  41b69a:	8b 4c 24 34          	mov    0x34(%rsp),%ecx
  41b69e:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41b6a3:	41 89 d8             	mov    %ebx,%r8d
  41b6a6:	41 81 f0 00 00 01 00 	xor    $0x10000,%r8d
  41b6ad:	44 89 ea             	mov    %r13d,%edx
  41b6b0:	be 30 00 00 00       	mov    $0x30,%esi
  41b6b5:	e8 da ec ff ff       	callq  41a394 <pad>
  41b6ba:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
  41b6be:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41b6c3:	45 31 c0             	xor    %r8d,%r8d
  41b6c6:	89 ea                	mov    %ebp,%edx
  41b6c8:	be 30 00 00 00       	mov    $0x30,%esi
  41b6cd:	e8 c2 ec ff ff       	callq  41a394 <pad>
  41b6d2:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  41b6d7:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
  41b6dc:	4c 89 e7             	mov    %r12,%rdi
  41b6df:	e8 98 e7 ff ff       	callq  419e7c <__fwritex>
  41b6e4:	8b 4c 24 34          	mov    0x34(%rsp),%ecx
  41b6e8:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41b6ed:	41 89 d8             	mov    %ebx,%r8d
  41b6f0:	41 81 f0 00 20 00 00 	xor    $0x2000,%r8d
  41b6f7:	44 89 ea             	mov    %r13d,%edx
  41b6fa:	be 20 00 00 00       	mov    $0x20,%esi
  41b6ff:	e8 90 ec ff ff       	callq  41a394 <pad>
  41b704:	45 89 e9             	mov    %r13d,%r9d
  41b707:	e9 31 f8 ff ff       	jmpq   41af3d <printf_core+0x38>
  41b70c:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
  41b712:	0f 85 a0 00 00 00    	jne    41b7b8 <printf_core+0x8b3>
  41b718:	83 7c 24 30 00       	cmpl   $0x0,0x30(%rsp)
  41b71d:	75 39                	jne    41b758 <printf_core+0x853>
  41b71f:	e9 3c fb ff ff       	jmpq   41b260 <printf_core+0x35b>
  41b724:	83 fe 16             	cmp    $0x16,%esi
  41b727:	77 0d                	ja     41b736 <printf_core+0x831>
  41b729:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  41b72e:	48 89 ef             	mov    %rbp,%rdi
  41b731:	e8 fa ea ff ff       	callq  41a230 <pop_arg.part.0>
  41b736:	48 ff c3             	inc    %rbx
  41b739:	48 83 c5 10          	add    $0x10,%rbp
  41b73d:	48 83 fb 09          	cmp    $0x9,%rbx
  41b741:	75 20                	jne    41b763 <printf_core+0x85e>
  41b743:	ba 0a 00 00 00       	mov    $0xa,%edx
  41b748:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  41b74d:	48 63 c2             	movslq %edx,%rax
  41b750:	48 8d 0c 86          	lea    (%rsi,%rax,4),%rcx
  41b754:	31 c0                	xor    %eax,%eax
  41b756:	eb 1d                	jmp    41b775 <printf_core+0x870>
  41b758:	48 8b 6c 24 48       	mov    0x48(%rsp),%rbp
  41b75d:	31 db                	xor    %ebx,%ebx
  41b75f:	48 83 c5 10          	add    $0x10,%rbp
  41b763:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  41b768:	8d 53 01             	lea    0x1(%rbx),%edx
  41b76b:	8b 74 98 04          	mov    0x4(%rax,%rbx,4),%esi
  41b76f:	85 f6                	test   %esi,%esi
  41b771:	75 b1                	jne    41b724 <printf_core+0x81f>
  41b773:	eb d3                	jmp    41b748 <printf_core+0x843>
  41b775:	8d 34 02             	lea    (%rdx,%rax,1),%esi
  41b778:	83 fe 0a             	cmp    $0xa,%esi
  41b77b:	74 0f                	je     41b78c <printf_core+0x887>
  41b77d:	48 ff c0             	inc    %rax
  41b780:	83 7c 81 fc 00       	cmpl   $0x0,-0x4(%rcx,%rax,4)
  41b785:	74 ee                	je     41b775 <printf_core+0x870>
  41b787:	e9 16 f9 ff ff       	jmpq   41b0a2 <printf_core+0x19d>
  41b78c:	41 be 01 00 00 00    	mov    $0x1,%r14d
  41b792:	eb 24                	jmp    41b7b8 <printf_core+0x8b3>
  41b794:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  41b799:	41 89 d8             	mov    %ebx,%r8d
  41b79c:	44 89 e1             	mov    %r12d,%ecx
  41b79f:	44 89 ea             	mov    %r13d,%edx
  41b7a2:	be 20 00 00 00       	mov    $0x20,%esi
  41b7a7:	31 ed                	xor    %ebp,%ebp
  41b7a9:	e8 e6 eb ff ff       	callq  41a394 <pad>
  41b7ae:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
  41b7b3:	e9 fc fd ff ff       	jmpq   41b5b4 <printf_core+0x6af>
  41b7b8:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
  41b7bf:	44 89 f0             	mov    %r14d,%eax
  41b7c2:	5b                   	pop    %rbx
  41b7c3:	5d                   	pop    %rbp
  41b7c4:	41 5c                	pop    %r12
  41b7c6:	41 5d                	pop    %r13
  41b7c8:	41 5e                	pop    %r14
  41b7ca:	41 5f                	pop    %r15
  41b7cc:	c3                   	retq   

000000000041b7cd <vfprintf>:
  41b7cd:	41 55                	push   %r13
  41b7cf:	31 c0                	xor    %eax,%eax
  41b7d1:	b9 0a 00 00 00       	mov    $0xa,%ecx
  41b7d6:	41 54                	push   %r12
  41b7d8:	55                   	push   %rbp
  41b7d9:	48 89 f5             	mov    %rsi,%rbp
  41b7dc:	48 89 d6             	mov    %rdx,%rsi
  41b7df:	53                   	push   %rbx
  41b7e0:	48 89 fb             	mov    %rdi,%rbx
  41b7e3:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
  41b7ea:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
  41b7ef:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
  41b7f4:	48 89 e2             	mov    %rsp,%rdx
  41b7f7:	f3 ab                	rep stos %eax,%es:(%rdi)
  41b7f9:	48 89 e7             	mov    %rsp,%rdi
  41b7fc:	b1 06                	mov    $0x6,%cl
  41b7fe:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
  41b800:	48 8d 8c 24 90 00 00 	lea    0x90(%rsp),%rcx
  41b807:	00 
  41b808:	31 ff                	xor    %edi,%edi
  41b80a:	48 89 ee             	mov    %rbp,%rsi
  41b80d:	e8 f3 f6 ff ff       	callq  41af05 <printf_core>
  41b812:	85 c0                	test   %eax,%eax
  41b814:	79 08                	jns    41b81e <vfprintf+0x51>
  41b816:	83 cd ff             	or     $0xffffffff,%ebp
  41b819:	e9 b4 00 00 00       	jmpq   41b8d2 <vfprintf+0x105>
  41b81e:	45 31 ed             	xor    %r13d,%r13d
  41b821:	83 bb 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rbx)
  41b828:	78 0b                	js     41b835 <vfprintf+0x68>
  41b82a:	48 89 df             	mov    %rbx,%rdi
  41b82d:	e8 ee 10 00 00       	callq  41c920 <__lockfile>
  41b832:	41 89 c5             	mov    %eax,%r13d
  41b835:	45 31 e4             	xor    %r12d,%r12d
  41b838:	48 83 7b 60 00       	cmpq   $0x0,0x60(%rbx)
  41b83d:	75 29                	jne    41b868 <vfprintf+0x9b>
  41b83f:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
  41b844:	4c 8b 63 58          	mov    0x58(%rbx),%r12
  41b848:	48 c7 43 60 50 00 00 	movq   $0x50,0x60(%rbx)
  41b84f:	00 
  41b850:	48 89 53 58          	mov    %rdx,0x58(%rbx)
  41b854:	48 89 53 38          	mov    %rdx,0x38(%rbx)
  41b858:	48 89 53 28          	mov    %rdx,0x28(%rbx)
  41b85c:	48 8d 94 24 90 00 00 	lea    0x90(%rsp),%rdx
  41b863:	00 
  41b864:	48 89 53 20          	mov    %rdx,0x20(%rbx)
  41b868:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
  41b86d:	48 8d 8c 24 90 00 00 	lea    0x90(%rsp),%rcx
  41b874:	00 
  41b875:	48 89 ee             	mov    %rbp,%rsi
  41b878:	48 89 e2             	mov    %rsp,%rdx
  41b87b:	48 89 df             	mov    %rbx,%rdi
  41b87e:	e8 82 f6 ff ff       	callq  41af05 <printf_core>
  41b883:	4d 85 e4             	test   %r12,%r12
  41b886:	89 c5                	mov    %eax,%ebp
  41b888:	74 3b                	je     41b8c5 <vfprintf+0xf8>
  41b88a:	31 d2                	xor    %edx,%edx
  41b88c:	31 f6                	xor    %esi,%esi
  41b88e:	48 89 df             	mov    %rbx,%rdi
  41b891:	ff 53 48             	callq  *0x48(%rbx)
  41b894:	48 83 7b 28 00       	cmpq   $0x0,0x28(%rbx)
  41b899:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  41b89e:	4c 89 63 58          	mov    %r12,0x58(%rbx)
  41b8a2:	48 c7 43 60 00 00 00 	movq   $0x0,0x60(%rbx)
  41b8a9:	00 
  41b8aa:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
  41b8b1:	00 
  41b8b2:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
  41b8b9:	00 
  41b8ba:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
  41b8c1:	00 
  41b8c2:	0f 44 e8             	cmove  %eax,%ebp
  41b8c5:	45 85 ed             	test   %r13d,%r13d
  41b8c8:	74 08                	je     41b8d2 <vfprintf+0x105>
  41b8ca:	48 89 df             	mov    %rbx,%rdi
  41b8cd:	e8 a6 10 00 00       	callq  41c978 <__unlockfile>
  41b8d2:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
  41b8d9:	89 e8                	mov    %ebp,%eax
  41b8db:	5b                   	pop    %rbx
  41b8dc:	5d                   	pop    %rbp
  41b8dd:	41 5c                	pop    %r12
  41b8df:	41 5d                	pop    %r13
  41b8e1:	c3                   	retq   
  41b8e2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41b8e9:	00 00 00 
  41b8ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041b8f0 <memchr>:
  41b8f0:	81 e6 ff 00 00 00    	and    $0xff,%esi
  41b8f6:	40 f6 c7 07          	test   $0x7,%dil
  41b8fa:	0f 84 12 01 00 00    	je     41ba12 <memchr+0x122>
  41b900:	48 85 d2             	test   %rdx,%rdx
  41b903:	0f 84 ea 00 00 00    	je     41b9f3 <memchr+0x103>
  41b909:	0f b6 07             	movzbl (%rdi),%eax
  41b90c:	39 f0                	cmp    %esi,%eax
  41b90e:	48 89 f8             	mov    %rdi,%rax
  41b911:	75 23                	jne    41b936 <memchr+0x46>
  41b913:	e9 de 00 00 00       	jmpq   41b9f6 <memchr+0x106>
  41b918:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41b91f:	00 
  41b920:	48 85 d2             	test   %rdx,%rdx
  41b923:	0f 84 ca 00 00 00    	je     41b9f3 <memchr+0x103>
  41b929:	0f b6 08             	movzbl (%rax),%ecx
  41b92c:	39 f1                	cmp    %esi,%ecx
  41b92e:	66 90                	xchg   %ax,%ax
  41b930:	0f 84 ca 00 00 00    	je     41ba00 <memchr+0x110>
  41b936:	48 83 c0 01          	add    $0x1,%rax
  41b93a:	48 83 ea 01          	sub    $0x1,%rdx
  41b93e:	a8 07                	test   $0x7,%al
  41b940:	75 de                	jne    41b920 <memchr+0x30>
  41b942:	48 85 d2             	test   %rdx,%rdx
  41b945:	0f 84 a8 00 00 00    	je     41b9f3 <memchr+0x103>
  41b94b:	0f b6 08             	movzbl (%rax),%ecx
  41b94e:	39 ce                	cmp    %ecx,%esi
  41b950:	0f 84 a0 00 00 00    	je     41b9f6 <memchr+0x106>
  41b956:	4c 63 c6             	movslq %esi,%r8
  41b959:	48 b9 01 01 01 01 01 	movabs $0x101010101010101,%rcx
  41b960:	01 01 01 
  41b963:	4c 0f af c1          	imul   %rcx,%r8
  41b967:	48 83 fa 07          	cmp    $0x7,%rdx
  41b96b:	76 5b                	jbe    41b9c8 <memchr+0xd8>
  41b96d:	4c 89 c7             	mov    %r8,%rdi
  41b970:	48 33 38             	xor    (%rax),%rdi
  41b973:	49 89 f9             	mov    %rdi,%r9
  41b976:	48 f7 d7             	not    %rdi
  41b979:	49 29 c9             	sub    %rcx,%r9
  41b97c:	4c 89 c9             	mov    %r9,%rcx
  41b97f:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
  41b986:	80 80 80 
  41b989:	48 21 f9             	and    %rdi,%rcx
  41b98c:	4c 85 c9             	test   %r9,%rcx
  41b98f:	75 37                	jne    41b9c8 <memchr+0xd8>
  41b991:	49 ba ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r10
  41b998:	fe fe fe 
  41b99b:	eb 18                	jmp    41b9b5 <memchr+0xc5>
  41b99d:	0f 1f 00             	nopl   (%rax)
  41b9a0:	4c 89 c7             	mov    %r8,%rdi
  41b9a3:	48 33 38             	xor    (%rax),%rdi
  41b9a6:	4a 8d 0c 17          	lea    (%rdi,%r10,1),%rcx
  41b9aa:	48 f7 d7             	not    %rdi
  41b9ad:	48 21 f9             	and    %rdi,%rcx
  41b9b0:	4c 85 c9             	test   %r9,%rcx
  41b9b3:	75 13                	jne    41b9c8 <memchr+0xd8>
  41b9b5:	48 83 ea 08          	sub    $0x8,%rdx
  41b9b9:	48 83 c0 08          	add    $0x8,%rax
  41b9bd:	48 83 fa 07          	cmp    $0x7,%rdx
  41b9c1:	77 dd                	ja     41b9a0 <memchr+0xb0>
  41b9c3:	48 85 d2             	test   %rdx,%rdx
  41b9c6:	74 2b                	je     41b9f3 <memchr+0x103>
  41b9c8:	0f b6 38             	movzbl (%rax),%edi
  41b9cb:	48 01 c2             	add    %rax,%rdx
  41b9ce:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41b9d2:	39 f7                	cmp    %esi,%edi
  41b9d4:	75 15                	jne    41b9eb <memchr+0xfb>
  41b9d6:	eb 42                	jmp    41ba1a <memchr+0x12a>
  41b9d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41b9df:	00 
  41b9e0:	0f b6 38             	movzbl (%rax),%edi
  41b9e3:	48 83 c1 01          	add    $0x1,%rcx
  41b9e7:	39 f7                	cmp    %esi,%edi
  41b9e9:	74 1d                	je     41ba08 <memchr+0x118>
  41b9eb:	48 39 d1             	cmp    %rdx,%rcx
  41b9ee:	48 89 c8             	mov    %rcx,%rax
  41b9f1:	75 ed                	jne    41b9e0 <memchr+0xf0>
  41b9f3:	31 c0                	xor    %eax,%eax
  41b9f5:	c3                   	retq   
  41b9f6:	f3 c3                	repz retq 
  41b9f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41b9ff:	00 
  41ba00:	f3 c3                	repz retq 
  41ba02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41ba08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41ba0f:	00 
  41ba10:	f3 c3                	repz retq 
  41ba12:	48 89 f8             	mov    %rdi,%rax
  41ba15:	e9 28 ff ff ff       	jmpq   41b942 <memchr+0x52>
  41ba1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41ba20:	f3 c3                	repz retq 
  41ba22:	66 90                	xchg   %ax,%ax

000000000041ba24 <memcpy>:
  41ba24:	48 89 f8             	mov    %rdi,%rax
  41ba27:	48 83 fa 08          	cmp    $0x8,%rdx
  41ba2b:	72 14                	jb     41ba41 <memcpy+0x1d>
  41ba2d:	f7 c7 07 00 00 00    	test   $0x7,%edi
  41ba33:	74 0c                	je     41ba41 <memcpy+0x1d>
  41ba35:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  41ba36:	48 ff ca             	dec    %rdx
  41ba39:	f7 c7 07 00 00 00    	test   $0x7,%edi
  41ba3f:	75 f4                	jne    41ba35 <memcpy+0x11>
  41ba41:	48 89 d1             	mov    %rdx,%rcx
  41ba44:	48 c1 e9 03          	shr    $0x3,%rcx
  41ba48:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
  41ba4b:	83 e2 07             	and    $0x7,%edx
  41ba4e:	74 05                	je     41ba55 <memcpy+0x31>
  41ba50:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  41ba51:	ff ca                	dec    %edx
  41ba53:	75 fb                	jne    41ba50 <memcpy+0x2c>
  41ba55:	c3                   	retq   
  41ba56:	66 90                	xchg   %ax,%ax

000000000041ba58 <memset>:
  41ba58:	81 e6 ff 00 00 00    	and    $0xff,%esi
  41ba5e:	48 b8 01 01 01 01 01 	movabs $0x101010101010101,%rax
  41ba65:	01 01 01 
  41ba68:	48 89 d1             	mov    %rdx,%rcx
  41ba6b:	49 89 f8             	mov    %rdi,%r8
  41ba6e:	48 0f af c6          	imul   %rsi,%rax
  41ba72:	48 83 f9 10          	cmp    $0x10,%rcx
  41ba76:	72 10                	jb     41ba88 <memset+0x30>
  41ba78:	48 89 44 0f f8       	mov    %rax,-0x8(%rdi,%rcx,1)
  41ba7d:	48 c1 e9 03          	shr    $0x3,%rcx
  41ba81:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  41ba84:	4c 89 c0             	mov    %r8,%rax
  41ba87:	c3                   	retq   
  41ba88:	85 c9                	test   %ecx,%ecx
  41ba8a:	74 29                	je     41bab5 <memset+0x5d>
  41ba8c:	88 07                	mov    %al,(%rdi)
  41ba8e:	88 44 0f ff          	mov    %al,-0x1(%rdi,%rcx,1)
  41ba92:	83 f9 02             	cmp    $0x2,%ecx
  41ba95:	76 1e                	jbe    41bab5 <memset+0x5d>
  41ba97:	88 47 01             	mov    %al,0x1(%rdi)
  41ba9a:	88 44 0f fe          	mov    %al,-0x2(%rdi,%rcx,1)
  41ba9e:	83 f9 04             	cmp    $0x4,%ecx
  41baa1:	76 12                	jbe    41bab5 <memset+0x5d>
  41baa3:	89 07                	mov    %eax,(%rdi)
  41baa5:	89 44 0f fc          	mov    %eax,-0x4(%rdi,%rcx,1)
  41baa9:	83 f9 08             	cmp    $0x8,%ecx
  41baac:	76 07                	jbe    41bab5 <memset+0x5d>
  41baae:	89 47 04             	mov    %eax,0x4(%rdi)
  41bab1:	89 44 0f f8          	mov    %eax,-0x8(%rdi,%rcx,1)
  41bab5:	4c 89 c0             	mov    %r8,%rax
  41bab8:	c3                   	retq   
  41bab9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000041bac0 <strcat>:
  41bac0:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
  41bac5:	48 89 6c 24 f8       	mov    %rbp,-0x8(%rsp)
  41baca:	48 89 fb             	mov    %rdi,%rbx
  41bacd:	48 83 ec 18          	sub    $0x18,%rsp
  41bad1:	48 89 f5             	mov    %rsi,%rbp
  41bad4:	e8 87 01 00 00       	callq  41bc60 <strlen>
  41bad9:	48 8d 3c 03          	lea    (%rbx,%rax,1),%rdi
  41badd:	48 89 ee             	mov    %rbp,%rsi
  41bae0:	e8 6b 01 00 00       	callq  41bc50 <strcpy>
  41bae5:	48 89 d8             	mov    %rbx,%rax
  41bae8:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  41baed:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  41baf2:	48 83 c4 18          	add    $0x18,%rsp
  41baf6:	c3                   	retq   
  41baf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41bafe:	00 00 

000000000041bb00 <strchr>:
  41bb00:	53                   	push   %rbx
  41bb01:	89 f3                	mov    %esi,%ebx
  41bb03:	e8 18 00 00 00       	callq  41bb20 <__strchrnul>
  41bb08:	38 18                	cmp    %bl,(%rax)
  41bb0a:	ba 00 00 00 00       	mov    $0x0,%edx
  41bb0f:	5b                   	pop    %rbx
  41bb10:	48 0f 45 c2          	cmovne %rdx,%rax
  41bb14:	c3                   	retq   
  41bb15:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41bb1c:	00 00 00 
  41bb1f:	90                   	nop

000000000041bb20 <__strchrnul>:
  41bb20:	81 e6 ff 00 00 00    	and    $0xff,%esi
  41bb26:	53                   	push   %rbx
  41bb27:	48 89 fb             	mov    %rdi,%rbx
  41bb2a:	75 23                	jne    41bb4f <__strchrnul+0x2f>
  41bb2c:	e9 d4 00 00 00       	jmpq   41bc05 <__strchrnul+0xe5>
  41bb31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41bb38:	0f b6 03             	movzbl (%rbx),%eax
  41bb3b:	84 c0                	test   %al,%al
  41bb3d:	0f 84 bd 00 00 00    	je     41bc00 <__strchrnul+0xe0>
  41bb43:	39 f0                	cmp    %esi,%eax
  41bb45:	0f 84 b5 00 00 00    	je     41bc00 <__strchrnul+0xe0>
  41bb4b:	48 83 c3 01          	add    $0x1,%rbx
  41bb4f:	f6 c3 07             	test   $0x7,%bl
  41bb52:	75 e4                	jne    41bb38 <__strchrnul+0x18>
  41bb54:	48 8b 3b             	mov    (%rbx),%rdi
  41bb57:	48 ba 01 01 01 01 01 	movabs $0x101010101010101,%rdx
  41bb5e:	01 01 01 
  41bb61:	4c 63 ce             	movslq %esi,%r9
  41bb64:	4c 0f af ca          	imul   %rdx,%r9
  41bb68:	48 89 f8             	mov    %rdi,%rax
  41bb6b:	48 89 f9             	mov    %rdi,%rcx
  41bb6e:	48 29 d0             	sub    %rdx,%rax
  41bb71:	48 f7 d1             	not    %rcx
  41bb74:	48 21 c8             	and    %rcx,%rax
  41bb77:	48 b9 80 80 80 80 80 	movabs $0x8080808080808080,%rcx
  41bb7e:	80 80 80 
  41bb81:	48 85 c8             	test   %rcx,%rax
  41bb84:	75 6a                	jne    41bbf0 <__strchrnul+0xd0>
  41bb86:	4c 31 cf             	xor    %r9,%rdi
  41bb89:	48 89 f8             	mov    %rdi,%rax
  41bb8c:	48 f7 d7             	not    %rdi
  41bb8f:	48 29 d0             	sub    %rdx,%rax
  41bb92:	48 21 f8             	and    %rdi,%rax
  41bb95:	48 85 c8             	test   %rcx,%rax
  41bb98:	75 56                	jne    41bbf0 <__strchrnul+0xd0>
  41bb9a:	48 bf ff fe fe fe fe 	movabs $0xfefefefefefefeff,%rdi
  41bba1:	fe fe fe 
  41bba4:	eb 1c                	jmp    41bbc2 <__strchrnul+0xa2>
  41bba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41bbad:	00 00 00 
  41bbb0:	4c 31 ca             	xor    %r9,%rdx
  41bbb3:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
  41bbb7:	48 f7 d2             	not    %rdx
  41bbba:	48 21 d0             	and    %rdx,%rax
  41bbbd:	48 85 c8             	test   %rcx,%rax
  41bbc0:	75 2e                	jne    41bbf0 <__strchrnul+0xd0>
  41bbc2:	48 83 c3 08          	add    $0x8,%rbx
  41bbc6:	48 8b 13             	mov    (%rbx),%rdx
  41bbc9:	48 8d 04 3a          	lea    (%rdx,%rdi,1),%rax
  41bbcd:	49 89 d0             	mov    %rdx,%r8
  41bbd0:	49 f7 d0             	not    %r8
  41bbd3:	4c 21 c0             	and    %r8,%rax
  41bbd6:	48 85 c8             	test   %rcx,%rax
  41bbd9:	74 d5                	je     41bbb0 <__strchrnul+0x90>
  41bbdb:	0f b6 03             	movzbl (%rbx),%eax
  41bbde:	84 c0                	test   %al,%al
  41bbe0:	74 1e                	je     41bc00 <__strchrnul+0xe0>
  41bbe2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41bbe8:	39 f0                	cmp    %esi,%eax
  41bbea:	74 14                	je     41bc00 <__strchrnul+0xe0>
  41bbec:	48 83 c3 01          	add    $0x1,%rbx
  41bbf0:	0f b6 03             	movzbl (%rbx),%eax
  41bbf3:	84 c0                	test   %al,%al
  41bbf5:	75 f1                	jne    41bbe8 <__strchrnul+0xc8>
  41bbf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41bbfe:	00 00 
  41bc00:	48 89 d8             	mov    %rbx,%rax
  41bc03:	5b                   	pop    %rbx
  41bc04:	c3                   	retq   
  41bc05:	e8 56 00 00 00       	callq  41bc60 <strlen>
  41bc0a:	48 01 c3             	add    %rax,%rbx
  41bc0d:	48 89 d8             	mov    %rbx,%rax
  41bc10:	5b                   	pop    %rbx
  41bc11:	c3                   	retq   
  41bc12:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41bc19:	00 00 00 
  41bc1c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041bc20 <strcmp>:
  41bc20:	0f b6 07             	movzbl (%rdi),%eax
  41bc23:	0f b6 16             	movzbl (%rsi),%edx
  41bc26:	38 d0                	cmp    %dl,%al
  41bc28:	74 18                	je     41bc42 <strcmp+0x22>
  41bc2a:	eb 1c                	jmp    41bc48 <strcmp+0x28>
  41bc2c:	0f 1f 40 00          	nopl   0x0(%rax)
  41bc30:	48 83 c7 01          	add    $0x1,%rdi
  41bc34:	48 83 c6 01          	add    $0x1,%rsi
  41bc38:	0f b6 07             	movzbl (%rdi),%eax
  41bc3b:	0f b6 16             	movzbl (%rsi),%edx
  41bc3e:	38 d0                	cmp    %dl,%al
  41bc40:	75 06                	jne    41bc48 <strcmp+0x28>
  41bc42:	84 d2                	test   %dl,%dl
  41bc44:	75 ea                	jne    41bc30 <strcmp+0x10>
  41bc46:	31 c0                	xor    %eax,%eax
  41bc48:	29 d0                	sub    %edx,%eax
  41bc4a:	c3                   	retq   
  41bc4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000041bc50 <strcpy>:
  41bc50:	53                   	push   %rbx
  41bc51:	48 89 fb             	mov    %rdi,%rbx
  41bc54:	e8 67 10 00 00       	callq  41ccc0 <__stpcpy>
  41bc59:	48 89 d8             	mov    %rbx,%rax
  41bc5c:	5b                   	pop    %rbx
  41bc5d:	c3                   	retq   
  41bc5e:	66 90                	xchg   %ax,%ax

000000000041bc60 <strlen>:
  41bc60:	40 f6 c7 07          	test   $0x7,%dil
  41bc64:	74 67                	je     41bccd <strlen+0x6d>
  41bc66:	80 3f 00             	cmpb   $0x0,(%rdi)
  41bc69:	74 67                	je     41bcd2 <strlen+0x72>
  41bc6b:	48 89 f8             	mov    %rdi,%rax
  41bc6e:	eb 05                	jmp    41bc75 <strlen+0x15>
  41bc70:	80 38 00             	cmpb   $0x0,(%rax)
  41bc73:	74 54                	je     41bcc9 <strlen+0x69>
  41bc75:	48 83 c0 01          	add    $0x1,%rax
  41bc79:	a8 07                	test   $0x7,%al
  41bc7b:	75 f3                	jne    41bc70 <strlen+0x10>
  41bc7d:	48 8b 08             	mov    (%rax),%rcx
  41bc80:	49 b8 ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r8
  41bc87:	fe fe fe 
  41bc8a:	48 be 80 80 80 80 80 	movabs $0x8080808080808080,%rsi
  41bc91:	80 80 80 
  41bc94:	4a 8d 14 01          	lea    (%rcx,%r8,1),%rdx
  41bc98:	48 f7 d1             	not    %rcx
  41bc9b:	48 21 ca             	and    %rcx,%rdx
  41bc9e:	48 85 f2             	test   %rsi,%rdx
  41bca1:	75 21                	jne    41bcc4 <strlen+0x64>
  41bca3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41bca8:	48 83 c0 08          	add    $0x8,%rax
  41bcac:	48 8b 08             	mov    (%rax),%rcx
  41bcaf:	4a 8d 14 01          	lea    (%rcx,%r8,1),%rdx
  41bcb3:	48 f7 d1             	not    %rcx
  41bcb6:	48 21 ca             	and    %rcx,%rdx
  41bcb9:	48 85 f2             	test   %rsi,%rdx
  41bcbc:	74 ea                	je     41bca8 <strlen+0x48>
  41bcbe:	eb 04                	jmp    41bcc4 <strlen+0x64>
  41bcc0:	48 83 c0 01          	add    $0x1,%rax
  41bcc4:	80 38 00             	cmpb   $0x0,(%rax)
  41bcc7:	75 f7                	jne    41bcc0 <strlen+0x60>
  41bcc9:	48 29 f8             	sub    %rdi,%rax
  41bccc:	c3                   	retq   
  41bccd:	48 89 f8             	mov    %rdi,%rax
  41bcd0:	eb ab                	jmp    41bc7d <strlen+0x1d>
  41bcd2:	31 c0                	xor    %eax,%eax
  41bcd4:	c3                   	retq   
  41bcd5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41bcdc:	00 00 00 
  41bcdf:	90                   	nop

000000000041bce0 <strncmp>:
  41bce0:	31 c0                	xor    %eax,%eax
  41bce2:	48 85 d2             	test   %rdx,%rdx
  41bce5:	74 56                	je     41bd3d <strncmp+0x5d>
  41bce7:	0f b6 07             	movzbl (%rdi),%eax
  41bcea:	44 0f b6 06          	movzbl (%rsi),%r8d
  41bcee:	84 c0                	test   %al,%al
  41bcf0:	74 46                	je     41bd38 <strncmp+0x58>
  41bcf2:	45 84 c0             	test   %r8b,%r8b
  41bcf5:	74 43                	je     41bd3a <strncmp+0x5a>
  41bcf7:	48 83 fa 01          	cmp    $0x1,%rdx
  41bcfb:	74 3d                	je     41bd3a <strncmp+0x5a>
  41bcfd:	44 38 c0             	cmp    %r8b,%al
  41bd00:	75 38                	jne    41bd3a <strncmp+0x5a>
  41bd02:	48 83 ea 02          	sub    $0x2,%rdx
  41bd06:	31 c9                	xor    %ecx,%ecx
  41bd08:	eb 1c                	jmp    41bd26 <strncmp+0x46>
  41bd0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41bd10:	45 84 c0             	test   %r8b,%r8b
  41bd13:	74 25                	je     41bd3a <strncmp+0x5a>
  41bd15:	48 39 d1             	cmp    %rdx,%rcx
  41bd18:	74 20                	je     41bd3a <strncmp+0x5a>
  41bd1a:	48 83 c1 01          	add    $0x1,%rcx
  41bd1e:	44 38 c0             	cmp    %r8b,%al
  41bd21:	4c 89 ce             	mov    %r9,%rsi
  41bd24:	75 14                	jne    41bd3a <strncmp+0x5a>
  41bd26:	0f b6 44 0f 01       	movzbl 0x1(%rdi,%rcx,1),%eax
  41bd2b:	4c 8d 4e 01          	lea    0x1(%rsi),%r9
  41bd2f:	44 0f b6 46 01       	movzbl 0x1(%rsi),%r8d
  41bd34:	84 c0                	test   %al,%al
  41bd36:	75 d8                	jne    41bd10 <strncmp+0x30>
  41bd38:	31 c0                	xor    %eax,%eax
  41bd3a:	44 29 c0             	sub    %r8d,%eax
  41bd3d:	f3 c3                	repz retq 
  41bd3f:	90                   	nop

000000000041bd40 <strncpy>:
  41bd40:	53                   	push   %rbx
  41bd41:	48 89 fb             	mov    %rdi,%rbx
  41bd44:	e8 47 10 00 00       	callq  41cd90 <__stpncpy>
  41bd49:	48 89 d8             	mov    %rbx,%rax
  41bd4c:	5b                   	pop    %rbx
  41bd4d:	c3                   	retq   
  41bd4e:	66 90                	xchg   %ax,%ax

000000000041bd50 <twoway_strstr>:
  41bd50:	41 57                	push   %r15
  41bd52:	41 56                	push   %r14
  41bd54:	49 89 f6             	mov    %rsi,%r14
  41bd57:	41 55                	push   %r13
  41bd59:	41 54                	push   %r12
  41bd5b:	55                   	push   %rbp
  41bd5c:	53                   	push   %rbx
  41bd5d:	48 89 fb             	mov    %rdi,%rbx
  41bd60:	48 81 ec 58 08 00 00 	sub    $0x858,%rsp
  41bd67:	0f b6 06             	movzbl (%rsi),%eax
  41bd6a:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
  41bd71:	00 00 
  41bd73:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
  41bd7a:	00 00 
  41bd7c:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
  41bd83:	00 00 
  41bd85:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
  41bd8c:	00 00 
  41bd8e:	84 c0                	test   %al,%al
  41bd90:	0f 84 52 03 00 00    	je     41c0e8 <twoway_strstr+0x398>
  41bd96:	80 3f 00             	cmpb   $0x0,(%rdi)
  41bd99:	0f 84 eb 02 00 00    	je     41c08a <twoway_strstr+0x33a>
  41bd9f:	45 31 ff             	xor    %r15d,%r15d
  41bda2:	be 01 00 00 00       	mov    $0x1,%esi
  41bda7:	eb 12                	jmp    41bdbb <twoway_strstr+0x6b>
  41bda9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41bdb0:	42 80 3c 3b 00       	cmpb   $0x0,(%rbx,%r15,1)
  41bdb5:	0f 84 cf 02 00 00    	je     41c08a <twoway_strstr+0x33a>
  41bdbb:	49 83 c7 01          	add    $0x1,%r15
  41bdbf:	89 c2                	mov    %eax,%edx
  41bdc1:	89 c1                	mov    %eax,%ecx
  41bdc3:	4c 89 7c c4 50       	mov    %r15,0x50(%rsp,%rax,8)
  41bdc8:	43 0f b6 04 3e       	movzbl (%r14,%r15,1),%eax
  41bdcd:	c0 ea 06             	shr    $0x6,%dl
  41bdd0:	83 e1 3f             	and    $0x3f,%ecx
  41bdd3:	0f b6 d2             	movzbl %dl,%edx
  41bdd6:	48 89 f7             	mov    %rsi,%rdi
  41bdd9:	48 d3 e7             	shl    %cl,%rdi
  41bddc:	48 09 7c d4 30       	or     %rdi,0x30(%rsp,%rdx,8)
  41bde1:	84 c0                	test   %al,%al
  41bde3:	75 cb                	jne    41bdb0 <twoway_strstr+0x60>
  41bde5:	41 ba 01 00 00 00    	mov    $0x1,%r10d
  41bdeb:	ba 01 00 00 00       	mov    $0x1,%edx
  41bdf0:	45 31 c0             	xor    %r8d,%r8d
  41bdf3:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
  41bdfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41be00:	4a 8d 04 02          	lea    (%rdx,%r8,1),%rax
  41be04:	4c 39 f8             	cmp    %r15,%rax
  41be07:	73 2f                	jae    41be38 <twoway_strstr+0xe8>
  41be09:	49 8d 34 3e          	lea    (%r14,%rdi,1),%rsi
  41be0d:	41 0f b6 0c 06       	movzbl (%r14,%rax,1),%ecx
  41be12:	38 0c 16             	cmp    %cl,(%rsi,%rdx,1)
  41be15:	0f 84 55 02 00 00    	je     41c070 <twoway_strstr+0x320>
  41be1b:	0f 86 f7 01 00 00    	jbe    41c018 <twoway_strstr+0x2c8>
  41be21:	49 89 c0             	mov    %rax,%r8
  41be24:	ba 01 00 00 00       	mov    $0x1,%edx
  41be29:	49 89 c2             	mov    %rax,%r10
  41be2c:	4a 8d 04 02          	lea    (%rdx,%r8,1),%rax
  41be30:	49 29 fa             	sub    %rdi,%r10
  41be33:	4c 39 f8             	cmp    %r15,%rax
  41be36:	72 d1                	jb     41be09 <twoway_strstr+0xb9>
  41be38:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
  41be3f:	00 00 
  41be41:	ba 01 00 00 00       	mov    $0x1,%edx
  41be46:	45 31 c0             	xor    %r8d,%r8d
  41be49:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
  41be50:	4a 8d 04 02          	lea    (%rdx,%r8,1),%rax
  41be54:	4c 39 f8             	cmp    %r15,%rax
  41be57:	73 34                	jae    41be8d <twoway_strstr+0x13d>
  41be59:	4b 8d 34 26          	lea    (%r14,%r12,1),%rsi
  41be5d:	41 0f b6 0c 06       	movzbl (%r14,%rax,1),%ecx
  41be62:	38 0c 16             	cmp    %cl,(%rsi,%rdx,1)
  41be65:	0f 84 f5 01 00 00    	je     41c060 <twoway_strstr+0x310>
  41be6b:	0f 83 bf 01 00 00    	jae    41c030 <twoway_strstr+0x2e0>
  41be71:	49 89 c0             	mov    %rax,%r8
  41be74:	ba 01 00 00 00       	mov    $0x1,%edx
  41be79:	48 89 c1             	mov    %rax,%rcx
  41be7c:	4a 8d 04 02          	lea    (%rdx,%r8,1),%rax
  41be80:	4c 29 e1             	sub    %r12,%rcx
  41be83:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
  41be88:	4c 39 f8             	cmp    %r15,%rax
  41be8b:	72 cc                	jb     41be59 <twoway_strstr+0x109>
  41be8d:	4d 8d 5c 24 01       	lea    0x1(%r12),%r11
  41be92:	48 8d 47 01          	lea    0x1(%rdi),%rax
  41be96:	49 39 c3             	cmp    %rax,%r11
  41be99:	0f 86 39 02 00 00    	jbe    41c0d8 <twoway_strstr+0x388>
  41be9f:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  41bea4:	4c 89 da             	mov    %r11,%rdx
  41bea7:	4c 89 f7             	mov    %r14,%rdi
  41beaa:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
  41beaf:	4c 01 f6             	add    %r14,%rsi
  41beb2:	e8 b9 0d 00 00       	callq  41cc70 <memcmp>
  41beb7:	4c 89 f9             	mov    %r15,%rcx
  41beba:	48 2b 4c 24 10       	sub    0x10(%rsp),%rcx
  41bebf:	85 c0                	test   %eax,%eax
  41bec1:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
  41bec6:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
  41becb:	0f 85 e2 01 00 00    	jne    41c0b3 <twoway_strstr+0x363>
  41bed1:	4c 89 f9             	mov    %r15,%rcx
  41bed4:	48 89 dd             	mov    %rbx,%rbp
  41bed7:	45 31 ed             	xor    %r13d,%r13d
  41beda:	48 83 c9 3f          	or     $0x3f,%rcx
  41bede:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
  41bee3:	4c 89 f9             	mov    %r15,%rcx
  41bee6:	48 2b 4c 24 10       	sub    0x10(%rsp),%rcx
  41beeb:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
  41bef0:	48 89 e8             	mov    %rbp,%rax
  41bef3:	48 29 d8             	sub    %rbx,%rax
  41bef6:	4c 39 f8             	cmp    %r15,%rax
  41bef9:	72 4f                	jb     41bf4a <twoway_strstr+0x1fa>
  41befb:	42 0f b6 44 3b ff    	movzbl -0x1(%rbx,%r15,1),%eax
  41bf01:	89 c2                	mov    %eax,%edx
  41bf03:	c0 ea 06             	shr    $0x6,%dl
  41bf06:	0f b6 d2             	movzbl %dl,%edx
  41bf09:	48 8b 54 d4 30       	mov    0x30(%rsp,%rdx,8),%rdx
  41bf0e:	48 0f a3 c2          	bt     %rax,%rdx
  41bf12:	73 74                	jae    41bf88 <twoway_strstr+0x238>
  41bf14:	4c 89 ff             	mov    %r15,%rdi
  41bf17:	48 2b 7c c4 50       	sub    0x50(%rsp,%rax,8),%rdi
  41bf1c:	48 89 f8             	mov    %rdi,%rax
  41bf1f:	74 77                	je     41bf98 <twoway_strstr+0x248>
  41bf21:	4d 85 ed             	test   %r13,%r13
  41bf24:	74 13                	je     41bf39 <twoway_strstr+0x1e9>
  41bf26:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
  41bf2c:	74 0b                	je     41bf39 <twoway_strstr+0x1e9>
  41bf2e:	48 39 7c 24 10       	cmp    %rdi,0x10(%rsp)
  41bf33:	48 0f 47 44 24 28    	cmova  0x28(%rsp),%rax
  41bf39:	48 01 c3             	add    %rax,%rbx
  41bf3c:	48 89 e8             	mov    %rbp,%rax
  41bf3f:	45 31 ed             	xor    %r13d,%r13d
  41bf42:	48 29 d8             	sub    %rbx,%rax
  41bf45:	4c 39 f8             	cmp    %r15,%rax
  41bf48:	73 b1                	jae    41befb <twoway_strstr+0x1ab>
  41bf4a:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  41bf4f:	31 f6                	xor    %esi,%esi
  41bf51:	48 89 ef             	mov    %rbp,%rdi
  41bf54:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
  41bf59:	e8 92 f9 ff ff       	callq  41b8f0 <memchr>
  41bf5e:	48 85 c0             	test   %rax,%rax
  41bf61:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
  41bf66:	0f 84 14 01 00 00    	je     41c080 <twoway_strstr+0x330>
  41bf6c:	48 89 c2             	mov    %rax,%rdx
  41bf6f:	48 29 da             	sub    %rbx,%rdx
  41bf72:	4c 39 fa             	cmp    %r15,%rdx
  41bf75:	0f 82 0f 01 00 00    	jb     41c08a <twoway_strstr+0x33a>
  41bf7b:	48 89 c5             	mov    %rax,%rbp
  41bf7e:	e9 78 ff ff ff       	jmpq   41befb <twoway_strstr+0x1ab>
  41bf83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41bf88:	4c 01 fb             	add    %r15,%rbx
  41bf8b:	45 31 ed             	xor    %r13d,%r13d
  41bf8e:	e9 5d ff ff ff       	jmpq   41bef0 <twoway_strstr+0x1a0>
  41bf93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41bf98:	4d 39 dd             	cmp    %r11,%r13
  41bf9b:	4c 89 d8             	mov    %r11,%rax
  41bf9e:	49 0f 43 c5          	cmovae %r13,%rax
  41bfa2:	41 0f b6 14 06       	movzbl (%r14,%rax,1),%edx
  41bfa7:	84 d2                	test   %dl,%dl
  41bfa9:	75 12                	jne    41bfbd <twoway_strstr+0x26d>
  41bfab:	eb 23                	jmp    41bfd0 <twoway_strstr+0x280>
  41bfad:	0f 1f 00             	nopl   (%rax)
  41bfb0:	48 83 c0 01          	add    $0x1,%rax
  41bfb4:	41 0f b6 14 06       	movzbl (%r14,%rax,1),%edx
  41bfb9:	84 d2                	test   %dl,%dl
  41bfbb:	74 13                	je     41bfd0 <twoway_strstr+0x280>
  41bfbd:	3a 14 03             	cmp    (%rbx,%rax,1),%dl
  41bfc0:	74 ee                	je     41bfb0 <twoway_strstr+0x260>
  41bfc2:	4c 29 e0             	sub    %r12,%rax
  41bfc5:	e9 6f ff ff ff       	jmpq   41bf39 <twoway_strstr+0x1e9>
  41bfca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41bfd0:	4d 39 dd             	cmp    %r11,%r13
  41bfd3:	73 28                	jae    41bffd <twoway_strstr+0x2ad>
  41bfd5:	42 0f b6 14 23       	movzbl (%rbx,%r12,1),%edx
  41bfda:	4c 89 d8             	mov    %r11,%rax
  41bfdd:	43 38 14 26          	cmp    %dl,(%r14,%r12,1)
  41bfe1:	74 11                	je     41bff4 <twoway_strstr+0x2a4>
  41bfe3:	eb 6b                	jmp    41c050 <twoway_strstr+0x300>
  41bfe5:	0f 1f 00             	nopl   (%rax)
  41bfe8:	0f b6 4c 03 ff       	movzbl -0x1(%rbx,%rax,1),%ecx
  41bfed:	41 38 4c 06 ff       	cmp    %cl,-0x1(%r14,%rax,1)
  41bff2:	75 5c                	jne    41c050 <twoway_strstr+0x300>
  41bff4:	48 83 e8 01          	sub    $0x1,%rax
  41bff8:	49 39 c5             	cmp    %rax,%r13
  41bffb:	72 eb                	jb     41bfe8 <twoway_strstr+0x298>
  41bffd:	48 81 c4 58 08 00 00 	add    $0x858,%rsp
  41c004:	48 89 d8             	mov    %rbx,%rax
  41c007:	5b                   	pop    %rbx
  41c008:	5d                   	pop    %rbp
  41c009:	41 5c                	pop    %r12
  41c00b:	41 5d                	pop    %r13
  41c00d:	41 5e                	pop    %r14
  41c00f:	41 5f                	pop    %r15
  41c011:	c3                   	retq   
  41c012:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41c018:	4c 89 c7             	mov    %r8,%rdi
  41c01b:	41 ba 01 00 00 00    	mov    $0x1,%r10d
  41c021:	49 83 c0 01          	add    $0x1,%r8
  41c025:	ba 01 00 00 00       	mov    $0x1,%edx
  41c02a:	e9 d1 fd ff ff       	jmpq   41be00 <twoway_strstr+0xb0>
  41c02f:	90                   	nop
  41c030:	4d 89 c4             	mov    %r8,%r12
  41c033:	48 c7 44 24 10 01 00 	movq   $0x1,0x10(%rsp)
  41c03a:	00 00 
  41c03c:	49 83 c0 01          	add    $0x1,%r8
  41c040:	ba 01 00 00 00       	mov    $0x1,%edx
  41c045:	e9 06 fe ff ff       	jmpq   41be50 <twoway_strstr+0x100>
  41c04a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  41c050:	48 03 5c 24 10       	add    0x10(%rsp),%rbx
  41c055:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  41c05a:	e9 91 fe ff ff       	jmpq   41bef0 <twoway_strstr+0x1a0>
  41c05f:	90                   	nop
  41c060:	48 3b 54 24 10       	cmp    0x10(%rsp),%rdx
  41c065:	74 2a                	je     41c091 <twoway_strstr+0x341>
  41c067:	48 83 c2 01          	add    $0x1,%rdx
  41c06b:	e9 e0 fd ff ff       	jmpq   41be50 <twoway_strstr+0x100>
  41c070:	4c 39 d2             	cmp    %r10,%rdx
  41c073:	74 2e                	je     41c0a3 <twoway_strstr+0x353>
  41c075:	48 83 c2 01          	add    $0x1,%rdx
  41c079:	e9 82 fd ff ff       	jmpq   41be00 <twoway_strstr+0xb0>
  41c07e:	66 90                	xchg   %ax,%ax
  41c080:	48 03 6c 24 18       	add    0x18(%rsp),%rbp
  41c085:	e9 71 fe ff ff       	jmpq   41befb <twoway_strstr+0x1ab>
  41c08a:	31 db                	xor    %ebx,%ebx
  41c08c:	e9 6c ff ff ff       	jmpq   41bffd <twoway_strstr+0x2ad>
  41c091:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
  41c096:	49 89 c0             	mov    %rax,%r8
  41c099:	ba 01 00 00 00       	mov    $0x1,%edx
  41c09e:	e9 ad fd ff ff       	jmpq   41be50 <twoway_strstr+0x100>
  41c0a3:	49 89 d2             	mov    %rdx,%r10
  41c0a6:	49 89 c0             	mov    %rax,%r8
  41c0a9:	ba 01 00 00 00       	mov    $0x1,%edx
  41c0ae:	e9 4d fd ff ff       	jmpq   41be00 <twoway_strstr+0xb0>
  41c0b3:	49 8d 47 ff          	lea    -0x1(%r15),%rax
  41c0b7:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
  41c0be:	00 00 
  41c0c0:	4c 29 e0             	sub    %r12,%rax
  41c0c3:	4c 39 e0             	cmp    %r12,%rax
  41c0c6:	49 0f 42 c4          	cmovb  %r12,%rax
  41c0ca:	48 83 c0 01          	add    $0x1,%rax
  41c0ce:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41c0d3:	e9 f9 fd ff ff       	jmpq   41bed1 <twoway_strstr+0x181>
  41c0d8:	49 89 c3             	mov    %rax,%r11
  41c0db:	49 89 fc             	mov    %rdi,%r12
  41c0de:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
  41c0e3:	e9 b7 fd ff ff       	jmpq   41be9f <twoway_strstr+0x14f>
  41c0e8:	45 31 ff             	xor    %r15d,%r15d
  41c0eb:	e9 f5 fc ff ff       	jmpq   41bde5 <twoway_strstr+0x95>

000000000041c0f0 <strstr>:
  41c0f0:	53                   	push   %rbx
  41c0f1:	48 89 f3             	mov    %rsi,%rbx
  41c0f4:	0f be 36             	movsbl (%rsi),%esi
  41c0f7:	48 89 f8             	mov    %rdi,%rax
  41c0fa:	40 84 f6             	test   %sil,%sil
  41c0fd:	75 09                	jne    41c108 <strstr+0x18>
  41c0ff:	5b                   	pop    %rbx
  41c100:	c3                   	retq   
  41c101:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41c108:	e8 f3 f9 ff ff       	callq  41bb00 <strchr>
  41c10d:	48 85 c0             	test   %rax,%rax
  41c110:	74 ed                	je     41c0ff <strstr+0xf>
  41c112:	0f b6 4b 01          	movzbl 0x1(%rbx),%ecx
  41c116:	84 c9                	test   %cl,%cl
  41c118:	74 e5                	je     41c0ff <strstr+0xf>
  41c11a:	0f b6 70 01          	movzbl 0x1(%rax),%esi
  41c11e:	40 84 f6             	test   %sil,%sil
  41c121:	74 3d                	je     41c160 <strstr+0x70>
  41c123:	44 0f b6 43 02       	movzbl 0x2(%rbx),%r8d
  41c128:	45 84 c0             	test   %r8b,%r8b
  41c12b:	74 3b                	je     41c168 <strstr+0x78>
  41c12d:	44 0f b6 48 02       	movzbl 0x2(%rax),%r9d
  41c132:	45 84 c9             	test   %r9b,%r9b
  41c135:	74 29                	je     41c160 <strstr+0x70>
  41c137:	0f b6 7b 03          	movzbl 0x3(%rbx),%edi
  41c13b:	40 84 ff             	test   %dil,%dil
  41c13e:	0f 84 cc 00 00 00    	je     41c210 <strstr+0x120>
  41c144:	0f b6 50 03          	movzbl 0x3(%rax),%edx
  41c148:	84 d2                	test   %dl,%dl
  41c14a:	74 14                	je     41c160 <strstr+0x70>
  41c14c:	80 7b 04 00          	cmpb   $0x0,0x4(%rbx)
  41c150:	74 5e                	je     41c1b0 <strstr+0xc0>
  41c152:	48 89 de             	mov    %rbx,%rsi
  41c155:	48 89 c7             	mov    %rax,%rdi
  41c158:	5b                   	pop    %rbx
  41c159:	e9 f2 fb ff ff       	jmpq   41bd50 <twoway_strstr>
  41c15e:	66 90                	xchg   %ax,%ax
  41c160:	31 c0                	xor    %eax,%eax
  41c162:	5b                   	pop    %rbx
  41c163:	c3                   	retq   
  41c164:	0f 1f 40 00          	nopl   0x0(%rax)
  41c168:	0f b6 13             	movzbl (%rbx),%edx
  41c16b:	0f b6 f9             	movzbl %cl,%edi
  41c16e:	0f b6 08             	movzbl (%rax),%ecx
  41c171:	48 83 c0 01          	add    $0x1,%rax
  41c175:	c1 e2 08             	shl    $0x8,%edx
  41c178:	c1 e1 08             	shl    $0x8,%ecx
  41c17b:	09 d7                	or     %edx,%edi
  41c17d:	40 0f b6 d6          	movzbl %sil,%edx
  41c181:	09 ca                	or     %ecx,%edx
  41c183:	eb 16                	jmp    41c19b <strstr+0xab>
  41c185:	0f 1f 00             	nopl   (%rax)
  41c188:	48 83 c0 01          	add    $0x1,%rax
  41c18c:	c1 e2 08             	shl    $0x8,%edx
  41c18f:	0f b6 08             	movzbl (%rax),%ecx
  41c192:	0f b6 f1             	movzbl %cl,%esi
  41c195:	09 f2                	or     %esi,%edx
  41c197:	84 c9                	test   %cl,%cl
  41c199:	74 c5                	je     41c160 <strstr+0x70>
  41c19b:	66 39 d7             	cmp    %dx,%di
  41c19e:	75 e8                	jne    41c188 <strstr+0x98>
  41c1a0:	48 83 e8 01          	sub    $0x1,%rax
  41c1a4:	5b                   	pop    %rbx
  41c1a5:	c3                   	retq   
  41c1a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41c1ad:	00 00 00 
  41c1b0:	44 0f b6 13          	movzbl (%rbx),%r10d
  41c1b4:	c1 e1 10             	shl    $0x10,%ecx
  41c1b7:	c1 e6 10             	shl    $0x10,%esi
  41c1ba:	41 c1 e0 08          	shl    $0x8,%r8d
  41c1be:	41 c1 e1 08          	shl    $0x8,%r9d
  41c1c2:	41 c1 e2 18          	shl    $0x18,%r10d
  41c1c6:	44 09 d7             	or     %r10d,%edi
  41c1c9:	09 cf                	or     %ecx,%edi
  41c1cb:	0f b6 08             	movzbl (%rax),%ecx
  41c1ce:	48 83 c0 03          	add    $0x3,%rax
  41c1d2:	44 09 c7             	or     %r8d,%edi
  41c1d5:	c1 e1 18             	shl    $0x18,%ecx
  41c1d8:	09 ca                	or     %ecx,%edx
  41c1da:	09 f2                	or     %esi,%edx
  41c1dc:	44 09 ca             	or     %r9d,%edx
  41c1df:	eb 20                	jmp    41c201 <strstr+0x111>
  41c1e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41c1e8:	48 83 c0 01          	add    $0x1,%rax
  41c1ec:	89 d6                	mov    %edx,%esi
  41c1ee:	0f b6 08             	movzbl (%rax),%ecx
  41c1f1:	c1 e6 08             	shl    $0x8,%esi
  41c1f4:	0f b6 d1             	movzbl %cl,%edx
  41c1f7:	09 f2                	or     %esi,%edx
  41c1f9:	84 c9                	test   %cl,%cl
  41c1fb:	0f 84 5f ff ff ff    	je     41c160 <strstr+0x70>
  41c201:	39 d7                	cmp    %edx,%edi
  41c203:	75 e3                	jne    41c1e8 <strstr+0xf8>
  41c205:	48 83 e8 03          	sub    $0x3,%rax
  41c209:	5b                   	pop    %rbx
  41c20a:	c3                   	retq   
  41c20b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41c210:	0f b6 13             	movzbl (%rbx),%edx
  41c213:	0f b6 f9             	movzbl %cl,%edi
  41c216:	41 c1 e0 08          	shl    $0x8,%r8d
  41c21a:	0f b6 08             	movzbl (%rax),%ecx
  41c21d:	c1 e7 10             	shl    $0x10,%edi
  41c220:	41 c1 e1 08          	shl    $0x8,%r9d
  41c224:	44 09 c7             	or     %r8d,%edi
  41c227:	48 83 c0 02          	add    $0x2,%rax
  41c22b:	c1 e2 18             	shl    $0x18,%edx
  41c22e:	09 d7                	or     %edx,%edi
  41c230:	40 0f b6 d6          	movzbl %sil,%edx
  41c234:	c1 e1 18             	shl    $0x18,%ecx
  41c237:	c1 e2 10             	shl    $0x10,%edx
  41c23a:	44 09 ca             	or     %r9d,%edx
  41c23d:	09 ca                	or     %ecx,%edx
  41c23f:	eb 1e                	jmp    41c25f <strstr+0x16f>
  41c241:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41c248:	48 83 c0 01          	add    $0x1,%rax
  41c24c:	0f b6 08             	movzbl (%rax),%ecx
  41c24f:	0f b6 f1             	movzbl %cl,%esi
  41c252:	09 f2                	or     %esi,%edx
  41c254:	c1 e2 08             	shl    $0x8,%edx
  41c257:	84 c9                	test   %cl,%cl
  41c259:	0f 84 01 ff ff ff    	je     41c160 <strstr+0x70>
  41c25f:	39 d7                	cmp    %edx,%edi
  41c261:	75 e5                	jne    41c248 <strstr+0x158>
  41c263:	48 83 e8 02          	sub    $0x2,%rax
  41c267:	5b                   	pop    %rbx
  41c268:	c3                   	retq   
  41c269:	0f 1f 00             	nopl   (%rax)

000000000041c26c <__lock>:
  41c26c:	55                   	push   %rbp
  41c26d:	48 8d 6f 04          	lea    0x4(%rdi),%rbp
  41c271:	53                   	push   %rbx
  41c272:	48 89 fb             	mov    %rdi,%rbx
  41c275:	52                   	push   %rdx
  41c276:	8b 05 bc 15 21 00    	mov    0x2115bc(%rip),%eax        # 62d838 <__libc+0x18>
  41c27c:	85 c0                	test   %eax,%eax
  41c27e:	75 17                	jne    41c297 <__lock+0x2b>
  41c280:	eb 20                	jmp    41c2a2 <__lock+0x36>
  41c282:	b9 01 00 00 00       	mov    $0x1,%ecx
  41c287:	ba 01 00 00 00       	mov    $0x1,%edx
  41c28c:	48 89 ee             	mov    %rbp,%rsi
  41c28f:	48 89 df             	mov    %rbx,%rdi
  41c292:	e8 31 00 00 00       	callq  41c2c8 <__wait>
  41c297:	b8 01 00 00 00       	mov    $0x1,%eax
  41c29c:	87 03                	xchg   %eax,(%rbx)
  41c29e:	85 c0                	test   %eax,%eax
  41c2a0:	75 e0                	jne    41c282 <__lock+0x16>
  41c2a2:	58                   	pop    %rax
  41c2a3:	5b                   	pop    %rbx
  41c2a4:	5d                   	pop    %rbp
  41c2a5:	c3                   	retq   

000000000041c2a6 <__unlock>:
  41c2a6:	8b 07                	mov    (%rdi),%eax
  41c2a8:	85 c0                	test   %eax,%eax
  41c2aa:	74 1a                	je     41c2c6 <__unlock+0x20>
  41c2ac:	31 c0                	xor    %eax,%eax
  41c2ae:	89 07                	mov    %eax,(%rdi)
  41c2b0:	8b 47 04             	mov    0x4(%rdi),%eax
  41c2b3:	85 c0                	test   %eax,%eax
  41c2b5:	74 0f                	je     41c2c6 <__unlock+0x20>
  41c2b7:	ba 01 00 00 00       	mov    $0x1,%edx
  41c2bc:	b8 ca 00 00 00       	mov    $0xca,%eax
  41c2c1:	48 89 d6             	mov    %rdx,%rsi
  41c2c4:	0f 05                	syscall 
  41c2c6:	c3                   	retq   
  41c2c7:	90                   	nop

000000000041c2c8 <__wait>:
  41c2c8:	49 89 f0             	mov    %rsi,%r8
  41c2cb:	41 89 d1             	mov    %edx,%r9d
  41c2ce:	b8 11 27 00 00       	mov    $0x2711,%eax
  41c2d3:	eb 09                	jmp    41c2de <__wait+0x16>
  41c2d5:	8b 17                	mov    (%rdi),%edx
  41c2d7:	44 39 ca             	cmp    %r9d,%edx
  41c2da:	75 37                	jne    41c313 <__wait+0x4b>
  41c2dc:	f3 90                	pause  
  41c2de:	ff c8                	dec    %eax
  41c2e0:	75 f3                	jne    41c2d5 <__wait+0xd>
  41c2e2:	4d 85 c0             	test   %r8,%r8
  41c2e5:	53                   	push   %rbx
  41c2e6:	74 12                	je     41c2fa <__wait+0x32>
  41c2e8:	f0 41 ff 00          	lock incl (%r8)
  41c2ec:	eb 0c                	jmp    41c2fa <__wait+0x32>
  41c2ee:	45 31 d2             	xor    %r10d,%r10d
  41c2f1:	31 f6                	xor    %esi,%esi
  41c2f3:	48 89 d8             	mov    %rbx,%rax
  41c2f6:	0f 05                	syscall 
  41c2f8:	eb 08                	jmp    41c302 <__wait+0x3a>
  41c2fa:	bb ca 00 00 00       	mov    $0xca,%ebx
  41c2ff:	49 63 d1             	movslq %r9d,%rdx
  41c302:	8b 07                	mov    (%rdi),%eax
  41c304:	44 39 c8             	cmp    %r9d,%eax
  41c307:	74 e5                	je     41c2ee <__wait+0x26>
  41c309:	4d 85 c0             	test   %r8,%r8
  41c30c:	74 04                	je     41c312 <__wait+0x4a>
  41c30e:	f0 41 ff 08          	lock decl (%r8)
  41c312:	5b                   	pop    %rbx
  41c313:	c3                   	retq   

000000000041c314 <__syscall_cp>:
  41c314:	31 c0                	xor    %eax,%eax
  41c316:	e9 39 03 00 00       	jmpq   41c654 <__syscall>

000000000041c31b <__testcancel>:
  41c31b:	c3                   	retq   

000000000041c31c <__do_cleanup_pop>:
  41c31c:	c3                   	retq   

000000000041c31d <_pthread_cleanup_push>:
  41c31d:	48 89 37             	mov    %rsi,(%rdi)
  41c320:	48 89 57 08          	mov    %rdx,0x8(%rdi)
  41c324:	e9 f3 ff ff ff       	jmpq   41c31c <__do_cleanup_pop>

000000000041c329 <_pthread_cleanup_pop>:
  41c329:	55                   	push   %rbp
  41c32a:	89 f5                	mov    %esi,%ebp
  41c32c:	53                   	push   %rbx
  41c32d:	48 89 fb             	mov    %rdi,%rbx
  41c330:	51                   	push   %rcx
  41c331:	e8 e6 ff ff ff       	callq  41c31c <__do_cleanup_pop>
  41c336:	85 ed                	test   %ebp,%ebp
  41c338:	74 0c                	je     41c346 <_pthread_cleanup_pop+0x1d>
  41c33a:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  41c33e:	48 8b 03             	mov    (%rbx),%rax
  41c341:	5a                   	pop    %rdx
  41c342:	5b                   	pop    %rbx
  41c343:	5d                   	pop    %rbp
  41c344:	ff e0                	jmpq   *%rax
  41c346:	58                   	pop    %rax
  41c347:	5b                   	pop    %rbx
  41c348:	5d                   	pop    %rbp
  41c349:	c3                   	retq   
  41c34a:	66 90                	xchg   %ax,%ax

000000000041c34c <utime>:
  41c34c:	48 83 ec 28          	sub    $0x28,%rsp
  41c350:	48 85 f6             	test   %rsi,%rsi
  41c353:	49 89 f8             	mov    %rdi,%r8
  41c356:	74 1f                	je     41c377 <utime+0x2b>
  41c358:	31 c0                	xor    %eax,%eax
  41c35a:	48 89 e7             	mov    %rsp,%rdi
  41c35d:	b9 08 00 00 00       	mov    $0x8,%ecx
  41c362:	f3 ab                	rep stos %eax,%es:(%rdi)
  41c364:	48 8b 06             	mov    (%rsi),%rax
  41c367:	48 89 04 24          	mov    %rax,(%rsp)
  41c36b:	48 8b 46 08          	mov    0x8(%rsi),%rax
  41c36f:	48 89 e6             	mov    %rsp,%rsi
  41c372:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41c377:	ba eb 00 00 00       	mov    $0xeb,%edx
  41c37c:	4c 89 c7             	mov    %r8,%rdi
  41c37f:	48 89 d0             	mov    %rdx,%rax
  41c382:	0f 05                	syscall 
  41c384:	48 89 c7             	mov    %rax,%rdi
  41c387:	e8 74 bd ff ff       	callq  418100 <__syscall_ret>
  41c38c:	48 83 c4 28          	add    $0x28,%rsp
  41c390:	c3                   	retq   
  41c391:	0f 1f 00             	nopl   (%rax)

000000000041c394 <chown>:
  41c394:	41 b8 5c 00 00 00    	mov    $0x5c,%r8d
  41c39a:	50                   	push   %rax
  41c39b:	89 f6                	mov    %esi,%esi
  41c39d:	89 d2                	mov    %edx,%edx
  41c39f:	4c 89 c0             	mov    %r8,%rax
  41c3a2:	0f 05                	syscall 
  41c3a4:	48 89 c7             	mov    %rax,%rdi
  41c3a7:	e8 54 bd ff ff       	callq  418100 <__syscall_ret>
  41c3ac:	5a                   	pop    %rdx
  41c3ad:	c3                   	retq   
  41c3ae:	66 90                	xchg   %ax,%ax

000000000041c3b0 <close>:
  41c3b0:	48 83 ec 10          	sub    $0x10,%rsp
  41c3b4:	48 63 f7             	movslq %edi,%rsi
  41c3b7:	45 31 c9             	xor    %r9d,%r9d
  41c3ba:	6a 00                	pushq  $0x0
  41c3bc:	45 31 c0             	xor    %r8d,%r8d
  41c3bf:	31 c9                	xor    %ecx,%ecx
  41c3c1:	31 d2                	xor    %edx,%edx
  41c3c3:	bf 03 00 00 00       	mov    $0x3,%edi
  41c3c8:	e8 47 ff ff ff       	callq  41c314 <__syscall_cp>
  41c3cd:	5a                   	pop    %rdx
  41c3ce:	59                   	pop    %rcx
  41c3cf:	83 f8 fc             	cmp    $0xfffffffc,%eax
  41c3d2:	bf 8d ff ff ff       	mov    $0xffffff8d,%edi
  41c3d7:	0f 45 f8             	cmovne %eax,%edi
  41c3da:	48 63 ff             	movslq %edi,%rdi
  41c3dd:	e8 1e bd ff ff       	callq  418100 <__syscall_ret>
  41c3e2:	5e                   	pop    %rsi
  41c3e3:	c3                   	retq   

000000000041c3e4 <isatty>:
  41c3e4:	48 83 ec 48          	sub    $0x48,%rsp
  41c3e8:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
  41c3ed:	e8 8a 0a 00 00       	callq  41ce7c <tcgetattr>
  41c3f2:	85 c0                	test   %eax,%eax
  41c3f4:	0f 94 c0             	sete   %al
  41c3f7:	48 83 c4 48          	add    $0x48,%rsp
  41c3fb:	0f b6 c0             	movzbl %al,%eax
  41c3fe:	c3                   	retq   
  41c3ff:	90                   	nop

000000000041c400 <read>:
  41c400:	48 83 ec 10          	sub    $0x10,%rsp
  41c404:	48 89 f0             	mov    %rsi,%rax
  41c407:	48 89 d1             	mov    %rdx,%rcx
  41c40a:	6a 00                	pushq  $0x0
  41c40c:	48 63 f7             	movslq %edi,%rsi
  41c40f:	45 31 c9             	xor    %r9d,%r9d
  41c412:	31 ff                	xor    %edi,%edi
  41c414:	45 31 c0             	xor    %r8d,%r8d
  41c417:	48 89 c2             	mov    %rax,%rdx
  41c41a:	e8 f5 fe ff ff       	callq  41c314 <__syscall_cp>
  41c41f:	48 83 c4 18          	add    $0x18,%rsp
  41c423:	48 89 c7             	mov    %rax,%rdi
  41c426:	e9 d5 bc ff ff       	jmpq   418100 <__syscall_ret>
  41c42b:	90                   	nop

000000000041c42c <__init_ssp>:
  41c42c:	c3                   	retq   

000000000041c42d <__init_security>:
  41c42d:	53                   	push   %rbx
  41c42e:	48 89 fb             	mov    %rdi,%rbx
  41c431:	31 c0                	xor    %eax,%eax
  41c433:	b9 06 00 00 00       	mov    $0x6,%ecx
  41c438:	48 83 ec 20          	sub    $0x20,%rsp
  41c43c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  41c441:	f3 ab                	rep stos %eax,%es:(%rdi)
  41c443:	48 8b bb c8 00 00 00 	mov    0xc8(%rbx),%rdi
  41c44a:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
  41c451:	00 
  41c452:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%rsp)
  41c459:	00 
  41c45a:	e8 cd ff ff ff       	callq  41c42c <__init_ssp>
  41c45f:	48 8b 43 60          	mov    0x60(%rbx),%rax
  41c463:	48 39 43 58          	cmp    %rax,0x58(%rbx)
  41c467:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  41c46c:	75 14                	jne    41c482 <__init_security+0x55>
  41c46e:	48 8b 43 70          	mov    0x70(%rbx),%rax
  41c472:	48 39 43 68          	cmp    %rax,0x68(%rbx)
  41c476:	75 0a                	jne    41c482 <__init_security+0x55>
  41c478:	48 83 bb b8 00 00 00 	cmpq   $0x0,0xb8(%rbx)
  41c47f:	00 
  41c480:	74 42                	je     41c4c4 <__init_security+0x97>
  41c482:	31 d2                	xor    %edx,%edx
  41c484:	be 03 00 00 00       	mov    $0x3,%esi
  41c489:	b8 07 00 00 00       	mov    $0x7,%eax
  41c48e:	0f 05                	syscall 
  41c490:	4c 8d 44 24 26       	lea    0x26(%rsp),%r8
  41c495:	48 8d 57 06          	lea    0x6(%rdi),%rdx
  41c499:	40 b6 02             	mov    $0x2,%sil
  41c49c:	bf a0 8e 42 00       	mov    $0x428ea0,%edi
  41c4a1:	f6 02 20             	testb  $0x20,(%rdx)
  41c4a4:	74 0b                	je     41c4b1 <__init_security+0x84>
  41c4a6:	48 89 f0             	mov    %rsi,%rax
  41c4a9:	0f 05                	syscall 
  41c4ab:	48 85 c0             	test   %rax,%rax
  41c4ae:	79 01                	jns    41c4b1 <__init_security+0x84>
  41c4b0:	f4                   	hlt    
  41c4b1:	48 83 c2 08          	add    $0x8,%rdx
  41c4b5:	4c 39 c2             	cmp    %r8,%rdx
  41c4b8:	75 e7                	jne    41c4a1 <__init_security+0x74>
  41c4ba:	c7 05 68 13 21 00 01 	movl   $0x1,0x211368(%rip)        # 62d82c <__libc+0xc>
  41c4c1:	00 00 00 
  41c4c4:	48 83 c4 20          	add    $0x20,%rsp
  41c4c8:	5b                   	pop    %rbx
  41c4c9:	c3                   	retq   
  41c4ca:	66 90                	xchg   %ax,%ax

000000000041c4cc <__copy_tls>:
  41c4cc:	48 83 3d 9c 13 21 00 	cmpq   $0x0,0x21139c(%rip)        # 62d870 <__static_tls>
  41c4d3:	00 
  41c4d4:	48 89 f8             	mov    %rdi,%rax
  41c4d7:	74 4d                	je     41c526 <__copy_tls+0x5a>
  41c4d9:	48 8b 15 70 13 21 00 	mov    0x211370(%rip),%rdx        # 62d850 <__libc+0x30>
  41c4e0:	53                   	push   %rbx
  41c4e1:	48 8b 1d a0 13 21 00 	mov    0x2113a0(%rip),%rbx        # 62d888 <__static_tls+0x18>
  41c4e8:	48 c7 07 01 00 00 00 	movq   $0x1,(%rdi)
  41c4ef:	48 8b 35 7a 13 21 00 	mov    0x21137a(%rip),%rsi        # 62d870 <__static_tls>
  41c4f6:	48 8d 94 17 d8 fe ff 	lea    -0x128(%rdi,%rdx,1),%rdx
  41c4fd:	ff 
  41c4fe:	48 f7 db             	neg    %rbx
  41c501:	48 21 d3             	and    %rdx,%rbx
  41c504:	48 8b 15 6d 13 21 00 	mov    0x21136d(%rip),%rdx        # 62d878 <__static_tls+0x8>
  41c50b:	48 89 df             	mov    %rbx,%rdi
  41c50e:	48 2b 3d 6b 13 21 00 	sub    0x21136b(%rip),%rdi        # 62d880 <__static_tls+0x10>
  41c515:	48 89 43 08          	mov    %rax,0x8(%rbx)
  41c519:	48 89 78 08          	mov    %rdi,0x8(%rax)
  41c51d:	e8 02 f5 ff ff       	callq  41ba24 <memcpy>
  41c522:	48 89 d8             	mov    %rbx,%rax
  41c525:	5b                   	pop    %rbx
  41c526:	c3                   	retq   

000000000041c527 <__tls_get_addr>:
  41c527:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
  41c52e:	00 00 
  41c530:	48 8b 40 08          	mov    0x8(%rax),%rax
  41c534:	48 8b 40 08          	mov    0x8(%rax),%rax
  41c538:	48 03 47 08          	add    0x8(%rdi),%rax
  41c53c:	c3                   	retq   

000000000041c53d <__install_initial_tls>:
  41c53d:	53                   	push   %rbx
  41c53e:	48 89 fb             	mov    %rdi,%rbx
  41c541:	48 89 3b             	mov    %rdi,(%rbx)
  41c544:	e8 4f 09 00 00       	callq  41ce98 <__set_thread_area>
  41c549:	85 c0                	test   %eax,%eax
  41c54b:	b8 00 00 00 00       	mov    $0x0,%eax
  41c550:	48 0f 45 d8          	cmovne %rax,%rbx
  41c554:	48 89 d8             	mov    %rbx,%rax
  41c557:	5b                   	pop    %rbx
  41c558:	c3                   	retq   

000000000041c559 <__init_tls>:
  41c559:	48 c7 05 ec 12 21 00 	movq   $0x128,0x2112ec(%rip)        # 62d850 <__libc+0x30>
  41c560:	28 01 00 00 
  41c564:	4c 8b 47 18          	mov    0x18(%rdi),%r8
  41c568:	31 f6                	xor    %esi,%esi
  41c56a:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
  41c56e:	31 c0                	xor    %eax,%eax
  41c570:	4c 89 c2             	mov    %r8,%rdx
  41c573:	eb 21                	jmp    41c596 <__init_tls+0x3d>
  41c575:	44 8b 0a             	mov    (%rdx),%r9d
  41c578:	41 83 f9 06          	cmp    $0x6,%r9d
  41c57c:	75 09                	jne    41c587 <__init_tls+0x2e>
  41c57e:	4c 89 c6             	mov    %r8,%rsi
  41c581:	48 2b 72 10          	sub    0x10(%rdx),%rsi
  41c585:	eb 08                	jmp    41c58f <__init_tls+0x36>
  41c587:	41 83 f9 07          	cmp    $0x7,%r9d
  41c58b:	48 0f 44 c2          	cmove  %rdx,%rax
  41c58f:	48 03 57 20          	add    0x20(%rdi),%rdx
  41c593:	48 ff c9             	dec    %rcx
  41c596:	48 85 c9             	test   %rcx,%rcx
  41c599:	75 da                	jne    41c575 <__init_tls+0x1c>
  41c59b:	48 85 c0             	test   %rax,%rax
  41c59e:	0f 84 94 00 00 00    	je     41c638 <__init_tls+0xdf>
  41c5a4:	52                   	push   %rdx
  41c5a5:	48 8b 50 20          	mov    0x20(%rax),%rdx
  41c5a9:	48 03 70 10          	add    0x10(%rax),%rsi
  41c5ad:	48 8b 48 28          	mov    0x28(%rax),%rcx
  41c5b1:	48 89 15 c0 12 21 00 	mov    %rdx,0x2112c0(%rip)        # 62d878 <__static_tls+0x8>
  41c5b8:	48 8b 50 30          	mov    0x30(%rax),%rdx
  41c5bc:	48 8d 04 0e          	lea    (%rsi,%rcx,1),%rax
  41c5c0:	48 89 35 a9 12 21 00 	mov    %rsi,0x2112a9(%rip)        # 62d870 <__static_tls>
  41c5c7:	48 8d 72 ff          	lea    -0x1(%rdx),%rsi
  41c5cb:	48 89 15 b6 12 21 00 	mov    %rdx,0x2112b6(%rip)        # 62d888 <__static_tls+0x18>
  41c5d2:	48 f7 d8             	neg    %rax
  41c5d5:	48 21 f0             	and    %rsi,%rax
  41c5d8:	48 01 c8             	add    %rcx,%rax
  41c5db:	48 83 fa 1f          	cmp    $0x1f,%rdx
  41c5df:	48 89 05 9a 12 21 00 	mov    %rax,0x21129a(%rip)        # 62d880 <__static_tls+0x10>
  41c5e6:	77 0b                	ja     41c5f3 <__init_tls+0x9a>
  41c5e8:	48 c7 05 95 12 21 00 	movq   $0x20,0x211295(%rip)        # 62d888 <__static_tls+0x18>
  41c5ef:	20 00 00 00 
  41c5f3:	48 8b 15 8e 12 21 00 	mov    0x21128e(%rip),%rdx        # 62d888 <__static_tls+0x18>
  41c5fa:	45 31 c9             	xor    %r9d,%r9d
  41c5fd:	41 83 c8 ff          	or     $0xffffffff,%r8d
  41c601:	b9 22 00 00 00       	mov    $0x22,%ecx
  41c606:	31 ff                	xor    %edi,%edi
  41c608:	48 8d b4 10 38 01 00 	lea    0x138(%rax,%rdx,1),%rsi
  41c60f:	00 
  41c610:	ba 03 00 00 00       	mov    $0x3,%edx
  41c615:	48 89 35 34 12 21 00 	mov    %rsi,0x211234(%rip)        # 62d850 <__libc+0x30>
  41c61c:	e8 81 cd ff ff       	callq  4193a2 <__mmap>
  41c621:	48 89 c7             	mov    %rax,%rdi
  41c624:	e8 a3 fe ff ff       	callq  41c4cc <__copy_tls>
  41c629:	48 89 c7             	mov    %rax,%rdi
  41c62c:	e8 0c ff ff ff       	callq  41c53d <__install_initial_tls>
  41c631:	48 85 c0             	test   %rax,%rax
  41c634:	75 01                	jne    41c637 <__init_tls+0xde>
  41c636:	f4                   	hlt    
  41c637:	58                   	pop    %rax
  41c638:	c3                   	retq   
  41c639:	0f 1f 00             	nopl   (%rax)

000000000041c63c <_Exit>:
  41c63c:	48 63 ff             	movslq %edi,%rdi
  41c63f:	b8 e7 00 00 00       	mov    $0xe7,%eax
  41c644:	0f 05                	syscall 
  41c646:	ba 3c 00 00 00       	mov    $0x3c,%edx
  41c64b:	48 89 d0             	mov    %rdx,%rax
  41c64e:	0f 05                	syscall 
  41c650:	eb f9                	jmp    41c64b <_Exit+0xf>
  41c652:	66 90                	xchg   %ax,%ax

000000000041c654 <__syscall>:
  41c654:	48 89 f8             	mov    %rdi,%rax
  41c657:	48 89 f7             	mov    %rsi,%rdi
  41c65a:	48 89 d6             	mov    %rdx,%rsi
  41c65d:	48 89 ca             	mov    %rcx,%rdx
  41c660:	4d 89 c2             	mov    %r8,%r10
  41c663:	4d 89 c8             	mov    %r9,%r8
  41c666:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
  41c66b:	0f 05                	syscall 
  41c66d:	c3                   	retq   
  41c66e:	66 90                	xchg   %ax,%ax

000000000041c670 <__brk>:
  41c670:	b8 0c 00 00 00       	mov    $0xc,%eax
  41c675:	0f 05                	syscall 
  41c677:	c3                   	retq   

000000000041c678 <__fpclassifyl>:
  41c678:	db 6c 24 08          	fldt   0x8(%rsp)
  41c67c:	db 7c 24 e8          	fstpt  -0x18(%rsp)
  41c680:	8b 4c 24 f0          	mov    -0x10(%rsp),%ecx
  41c684:	48 8b 54 24 e8       	mov    -0x18(%rsp),%rdx
  41c689:	81 e1 ff 7f 00 00    	and    $0x7fff,%ecx
  41c68f:	48 89 d6             	mov    %rdx,%rsi
  41c692:	48 c1 ee 3f          	shr    $0x3f,%rsi
  41c696:	89 c8                	mov    %ecx,%eax
  41c698:	09 f0                	or     %esi,%eax
  41c69a:	75 0a                	jne    41c6a6 <__fpclassifyl+0x2e>
  41c69c:	48 83 fa 01          	cmp    $0x1,%rdx
  41c6a0:	19 c0                	sbb    %eax,%eax
  41c6a2:	83 c0 03             	add    $0x3,%eax
  41c6a5:	c3                   	retq   
  41c6a6:	31 c0                	xor    %eax,%eax
  41c6a8:	85 f6                	test   %esi,%esi
  41c6aa:	74 13                	je     41c6bf <__fpclassifyl+0x47>
  41c6ac:	81 f9 ff 7f 00 00    	cmp    $0x7fff,%ecx
  41c6b2:	b0 04                	mov    $0x4,%al
  41c6b4:	75 09                	jne    41c6bf <__fpclassifyl+0x47>
  41c6b6:	48 01 d2             	add    %rdx,%rdx
  41c6b9:	0f 94 c0             	sete   %al
  41c6bc:	0f b6 c0             	movzbl %al,%eax
  41c6bf:	c3                   	retq   

000000000041c6c0 <__signbitl>:
  41c6c0:	db 6c 24 08          	fldt   0x8(%rsp)
  41c6c4:	db 7c 24 e8          	fstpt  -0x18(%rsp)
  41c6c8:	8b 44 24 f0          	mov    -0x10(%rsp),%eax
  41c6cc:	66 c1 e8 0f          	shr    $0xf,%ax
  41c6d0:	0f b7 c0             	movzwl %ax,%eax
  41c6d3:	c3                   	retq   

000000000041c6d4 <frexpl>:
  41c6d4:	53                   	push   %rbx
  41c6d5:	48 89 fb             	mov    %rdi,%rbx
  41c6d8:	48 83 ec 10          	sub    $0x10,%rsp
  41c6dc:	db 6c 24 20          	fldt   0x20(%rsp)
  41c6e0:	d9 c0                	fld    %st(0)
  41c6e2:	db 3c 24             	fstpt  (%rsp)
  41c6e5:	8b 44 24 08          	mov    0x8(%rsp),%eax
  41c6e9:	89 c2                	mov    %eax,%edx
  41c6eb:	81 e2 ff 7f 00 00    	and    $0x7fff,%edx
  41c6f1:	75 2e                	jne    41c721 <frexpl+0x4d>
  41c6f3:	d9 ee                	fldz   
  41c6f5:	d9 c9                	fxch   %st(1)
  41c6f7:	db e9                	fucomi %st(1),%st
  41c6f9:	dd d9                	fstp   %st(1)
  41c6fb:	7a 02                	jp     41c6ff <frexpl+0x2b>
  41c6fd:	74 1a                	je     41c719 <frexpl+0x45>
  41c6ff:	d8 0d a7 c7 00 00    	fmuls  0xc7a7(%rip)        # 428eac <xdigits+0x8c>
  41c705:	51                   	push   %rcx
  41c706:	48 89 df             	mov    %rbx,%rdi
  41c709:	51                   	push   %rcx
  41c70a:	db 3c 24             	fstpt  (%rsp)
  41c70d:	e8 c2 ff ff ff       	callq  41c6d4 <frexpl>
  41c712:	5e                   	pop    %rsi
  41c713:	83 2b 78             	subl   $0x78,(%rbx)
  41c716:	5f                   	pop    %rdi
  41c717:	eb 2a                	jmp    41c743 <frexpl+0x6f>
  41c719:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  41c71f:	eb 22                	jmp    41c743 <frexpl+0x6f>
  41c721:	81 fa ff 7f 00 00    	cmp    $0x7fff,%edx
  41c727:	74 1a                	je     41c743 <frexpl+0x6f>
  41c729:	dd d8                	fstp   %st(0)
  41c72b:	66 25 00 80          	and    $0x8000,%ax
  41c72f:	81 ea fe 3f 00 00    	sub    $0x3ffe,%edx
  41c735:	66 0d fe 3f          	or     $0x3ffe,%ax
  41c739:	89 17                	mov    %edx,(%rdi)
  41c73b:	66 89 44 24 08       	mov    %ax,0x8(%rsp)
  41c740:	db 2c 24             	fldt   (%rsp)
  41c743:	48 83 c4 10          	add    $0x10,%rsp
  41c747:	5b                   	pop    %rbx
  41c748:	c3                   	retq   
  41c749:	0f 1f 00             	nopl   (%rax)

000000000041c74c <wctomb>:
  41c74c:	48 85 ff             	test   %rdi,%rdi
  41c74f:	74 0a                	je     41c75b <wctomb+0xf>
  41c751:	51                   	push   %rcx
  41c752:	31 d2                	xor    %edx,%edx
  41c754:	e8 93 07 00 00       	callq  41ceec <wcrtomb>
  41c759:	eb 03                	jmp    41c75e <wctomb+0x12>
  41c75b:	31 c0                	xor    %eax,%eax
  41c75d:	c3                   	retq   
  41c75e:	5a                   	pop    %rdx
  41c75f:	c3                   	retq   

000000000041c760 <__pthread_self_def>:
  41c760:	31 c0                	xor    %eax,%eax
  41c762:	c3                   	retq   

000000000041c763 <__get_handler_set>:
  41c763:	ba 08 00 00 00       	mov    $0x8,%edx
  41c768:	be d0 c6 62 00       	mov    $0x62c6d0,%esi
  41c76d:	e9 b2 f2 ff ff       	jmpq   41ba24 <memcpy>

000000000041c772 <__libc_sigaction>:
  41c772:	41 54                	push   %r12
  41c774:	41 89 fc             	mov    %edi,%r12d
  41c777:	55                   	push   %rbp
  41c778:	53                   	push   %rbx
  41c779:	48 83 ec 40          	sub    $0x40,%rsp
  41c77d:	83 ff 40             	cmp    $0x40,%edi
  41c780:	76 10                	jbe    41c792 <__libc_sigaction+0x20>
  41c782:	e8 79 b8 ff ff       	callq  418000 <__errno_location>
  41c787:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
  41c78d:	e9 de 00 00 00       	jmpq   41c870 <__libc_sigaction+0xfe>
  41c792:	48 85 f6             	test   %rsi,%rsi
  41c795:	48 89 f3             	mov    %rsi,%rbx
  41c798:	48 89 d5             	mov    %rdx,%rbp
  41c79b:	74 6a                	je     41c807 <__libc_sigaction+0x95>
  41c79d:	48 83 3e 01          	cmpq   $0x1,(%rsi)
  41c7a1:	76 20                	jbe    41c7c3 <__libc_sigaction+0x51>
  41c7a3:	8d 4f ff             	lea    -0x1(%rdi),%ecx
  41c7a6:	ba 01 00 00 00       	mov    $0x1,%edx
  41c7ab:	48 63 c1             	movslq %ecx,%rax
  41c7ae:	48 d3 e2             	shl    %cl,%rdx
  41c7b1:	48 c1 e8 06          	shr    $0x6,%rax
  41c7b5:	f0 48 09 14 c5 d0 c6 	lock or %rdx,0x62c6d0(,%rax,8)
  41c7bc:	62 00 
  41c7be:	e8 9d ff ff ff       	callq  41c760 <__pthread_self_def>
  41c7c3:	48 8b 03             	mov    (%rbx),%rax
  41c7c6:	8b 93 88 00 00 00    	mov    0x88(%rbx),%edx
  41c7cc:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  41c7d0:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
  41c7d5:	48 89 04 24          	mov    %rax,(%rsp)
  41c7d9:	89 d0                	mov    %edx,%eax
  41c7db:	0d 00 00 00 04       	or     $0x4000000,%eax
  41c7e0:	80 e2 04             	and    $0x4,%dl
  41c7e3:	ba c0 cf 41 00       	mov    $0x41cfc0,%edx
  41c7e8:	48 98                	cltq   
  41c7ea:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  41c7ef:	b8 c0 cf 41 00       	mov    $0x41cfc0,%eax
  41c7f4:	48 0f 44 c2          	cmove  %rdx,%rax
  41c7f8:	ba 08 00 00 00       	mov    $0x8,%edx
  41c7fd:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41c802:	e8 1d f2 ff ff       	callq  41ba24 <memcpy>
  41c807:	48 85 ed             	test   %rbp,%rbp
  41c80a:	74 07                	je     41c813 <__libc_sigaction+0xa1>
  41c80c:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  41c811:	eb 02                	jmp    41c815 <__libc_sigaction+0xa3>
  41c813:	31 d2                	xor    %edx,%edx
  41c815:	48 85 db             	test   %rbx,%rbx
  41c818:	74 05                	je     41c81f <__libc_sigaction+0xad>
  41c81a:	48 89 e6             	mov    %rsp,%rsi
  41c81d:	eb 02                	jmp    41c821 <__libc_sigaction+0xaf>
  41c81f:	31 f6                	xor    %esi,%esi
  41c821:	41 b8 0d 00 00 00    	mov    $0xd,%r8d
  41c827:	41 ba 08 00 00 00    	mov    $0x8,%r10d
  41c82d:	49 63 fc             	movslq %r12d,%rdi
  41c830:	4c 89 c0             	mov    %r8,%rax
  41c833:	0f 05                	syscall 
  41c835:	48 89 c7             	mov    %rax,%rdi
  41c838:	e8 c3 b8 ff ff       	callq  418100 <__syscall_ret>
  41c83d:	48 85 c0             	test   %rax,%rax
  41c840:	75 2e                	jne    41c870 <__libc_sigaction+0xfe>
  41c842:	48 85 ed             	test   %rbp,%rbp
  41c845:	74 2e                	je     41c875 <__libc_sigaction+0x103>
  41c847:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  41c84c:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
  41c850:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
  41c855:	ba 08 00 00 00       	mov    $0x8,%edx
  41c85a:	48 89 45 00          	mov    %rax,0x0(%rbp)
  41c85e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  41c863:	89 85 88 00 00 00    	mov    %eax,0x88(%rbp)
  41c869:	e8 b6 f1 ff ff       	callq  41ba24 <memcpy>
  41c86e:	eb 05                	jmp    41c875 <__libc_sigaction+0x103>
  41c870:	83 c8 ff             	or     $0xffffffff,%eax
  41c873:	eb 02                	jmp    41c877 <__libc_sigaction+0x105>
  41c875:	31 c0                	xor    %eax,%eax
  41c877:	48 83 c4 40          	add    $0x40,%rsp
  41c87b:	5b                   	pop    %rbx
  41c87c:	5d                   	pop    %rbp
  41c87d:	41 5c                	pop    %r12
  41c87f:	c3                   	retq   

000000000041c880 <__sigaction>:
  41c880:	8d 47 e0             	lea    -0x20(%rdi),%eax
  41c883:	83 f8 02             	cmp    $0x2,%eax
  41c886:	76 05                	jbe    41c88d <__sigaction+0xd>
  41c888:	e9 e5 fe ff ff       	jmpq   41c772 <__libc_sigaction>
  41c88d:	50                   	push   %rax
  41c88e:	e8 6d b7 ff ff       	callq  418000 <__errno_location>
  41c893:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
  41c899:	83 c8 ff             	or     $0xffffffff,%eax
  41c89c:	5a                   	pop    %rdx
  41c89d:	c3                   	retq   
  41c89e:	66 90                	xchg   %ax,%ax

000000000041c8a0 <__fmodeflags>:
  41c8a0:	55                   	push   %rbp
  41c8a1:	be 2b 00 00 00       	mov    $0x2b,%esi
  41c8a6:	48 89 fd             	mov    %rdi,%rbp
  41c8a9:	53                   	push   %rbx
  41c8aa:	bb 02 00 00 00       	mov    $0x2,%ebx
  41c8af:	51                   	push   %rcx
  41c8b0:	e8 4b f2 ff ff       	callq  41bb00 <strchr>
  41c8b5:	48 85 c0             	test   %rax,%rax
  41c8b8:	75 09                	jne    41c8c3 <__fmodeflags+0x23>
  41c8ba:	31 db                	xor    %ebx,%ebx
  41c8bc:	80 7d 00 72          	cmpb   $0x72,0x0(%rbp)
  41c8c0:	0f 95 c3             	setne  %bl
  41c8c3:	be 78 00 00 00       	mov    $0x78,%esi
  41c8c8:	48 89 ef             	mov    %rbp,%rdi
  41c8cb:	e8 30 f2 ff ff       	callq  41bb00 <strchr>
  41c8d0:	89 da                	mov    %ebx,%edx
  41c8d2:	be 65 00 00 00       	mov    $0x65,%esi
  41c8d7:	48 89 ef             	mov    %rbp,%rdi
  41c8da:	80 ca 80             	or     $0x80,%dl
  41c8dd:	48 85 c0             	test   %rax,%rax
  41c8e0:	0f 45 da             	cmovne %edx,%ebx
  41c8e3:	e8 18 f2 ff ff       	callq  41bb00 <strchr>
  41c8e8:	89 da                	mov    %ebx,%edx
  41c8ea:	81 ca 00 00 08 00    	or     $0x80000,%edx
  41c8f0:	48 85 c0             	test   %rax,%rax
  41c8f3:	8a 45 00             	mov    0x0(%rbp),%al
  41c8f6:	0f 45 da             	cmovne %edx,%ebx
  41c8f9:	3c 72                	cmp    $0x72,%al
  41c8fb:	74 1c                	je     41c919 <__fmodeflags+0x79>
  41c8fd:	3c 77                	cmp    $0x77,%al
  41c8ff:	75 08                	jne    41c909 <__fmodeflags+0x69>
  41c901:	81 cb 40 02 00 00    	or     $0x240,%ebx
  41c907:	eb 10                	jmp    41c919 <__fmodeflags+0x79>
  41c909:	89 da                	mov    %ebx,%edx
  41c90b:	81 cb 40 04 00 00    	or     $0x440,%ebx
  41c911:	83 ca 40             	or     $0x40,%edx
  41c914:	3c 61                	cmp    $0x61,%al
  41c916:	0f 45 da             	cmovne %edx,%ebx
  41c919:	5a                   	pop    %rdx
  41c91a:	89 d8                	mov    %ebx,%eax
  41c91c:	5b                   	pop    %rbx
  41c91d:	5d                   	pop    %rbp
  41c91e:	c3                   	retq   
  41c91f:	90                   	nop

000000000041c920 <__lockfile>:
  41c920:	41 54                	push   %r12
  41c922:	55                   	push   %rbp
  41c923:	48 89 fd             	mov    %rdi,%rbp
  41c926:	53                   	push   %rbx
  41c927:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
  41c92e:	00 00 
  41c930:	8b 58 30             	mov    0x30(%rax),%ebx
  41c933:	39 9f 8c 00 00 00    	cmp    %ebx,0x8c(%rdi)
  41c939:	4c 8d a7 8c 00 00 00 	lea    0x8c(%rdi),%r12
  41c940:	75 18                	jne    41c95a <__lockfile+0x3a>
  41c942:	eb 2d                	jmp    41c971 <__lockfile+0x51>
  41c944:	48 8d b5 90 00 00 00 	lea    0x90(%rbp),%rsi
  41c94b:	b9 01 00 00 00       	mov    $0x1,%ecx
  41c950:	4c 89 e7             	mov    %r12,%rdi
  41c953:	e8 70 f9 ff ff       	callq  41c2c8 <__wait>
  41c958:	eb 00                	jmp    41c95a <__lockfile+0x3a>
  41c95a:	31 d2                	xor    %edx,%edx
  41c95c:	89 d0                	mov    %edx,%eax
  41c95e:	f0 41 0f b1 1c 24    	lock cmpxchg %ebx,(%r12)
  41c964:	85 c0                	test   %eax,%eax
  41c966:	89 c2                	mov    %eax,%edx
  41c968:	75 da                	jne    41c944 <__lockfile+0x24>
  41c96a:	b8 01 00 00 00       	mov    $0x1,%eax
  41c96f:	eb 02                	jmp    41c973 <__lockfile+0x53>
  41c971:	31 c0                	xor    %eax,%eax
  41c973:	5b                   	pop    %rbx
  41c974:	5d                   	pop    %rbp
  41c975:	41 5c                	pop    %r12
  41c977:	c3                   	retq   

000000000041c978 <__unlockfile>:
  41c978:	48 89 f9             	mov    %rdi,%rcx
  41c97b:	31 c0                	xor    %eax,%eax
  41c97d:	48 8d bf 8c 00 00 00 	lea    0x8c(%rdi),%rdi
  41c984:	89 81 8c 00 00 00    	mov    %eax,0x8c(%rcx)
  41c98a:	83 b9 90 00 00 00 00 	cmpl   $0x0,0x90(%rcx)
  41c991:	74 0f                	je     41c9a2 <__unlockfile+0x2a>
  41c993:	ba 01 00 00 00       	mov    $0x1,%edx
  41c998:	b8 ca 00 00 00       	mov    $0xca,%eax
  41c99d:	48 89 d6             	mov    %rdx,%rsi
  41c9a0:	0f 05                	syscall 
  41c9a2:	c3                   	retq   
  41c9a3:	90                   	nop

000000000041c9a4 <__stdout_write>:
  41c9a4:	48 83 ec 48          	sub    $0x48,%rsp
  41c9a8:	f6 07 40             	testb  $0x40,(%rdi)
  41c9ab:	49 89 f8             	mov    %rdi,%r8
  41c9ae:	49 89 f1             	mov    %rsi,%r9
  41c9b1:	49 89 d2             	mov    %rdx,%r10
  41c9b4:	48 c7 47 48 7c 98 41 	movq   $0x41987c,0x48(%rdi)
  41c9bb:	00 
  41c9bc:	75 22                	jne    41c9e0 <__stdout_write+0x3c>
  41c9be:	48 63 7f 78          	movslq 0x78(%rdi),%rdi
  41c9c2:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
  41c9c7:	be 01 54 00 00       	mov    $0x5401,%esi
  41c9cc:	b8 10 00 00 00       	mov    $0x10,%eax
  41c9d1:	0f 05                	syscall 
  41c9d3:	48 85 c0             	test   %rax,%rax
  41c9d6:	74 08                	je     41c9e0 <__stdout_write+0x3c>
  41c9d8:	41 c6 80 8b 00 00 00 	movb   $0xff,0x8b(%r8)
  41c9df:	ff 
  41c9e0:	4c 89 d2             	mov    %r10,%rdx
  41c9e3:	4c 89 ce             	mov    %r9,%rsi
  41c9e6:	4c 89 c7             	mov    %r8,%rdi
  41c9e9:	e8 8e ce ff ff       	callq  41987c <__stdio_write>
  41c9ee:	48 83 c4 48          	add    $0x48,%rsp
  41c9f2:	c3                   	retq   
  41c9f3:	90                   	nop

000000000041c9f4 <__toread>:
  41c9f4:	8a 97 8a 00 00 00    	mov    0x8a(%rdi),%dl
  41c9fa:	53                   	push   %rbx
  41c9fb:	48 89 fb             	mov    %rdi,%rbx
  41c9fe:	8d 42 ff             	lea    -0x1(%rdx),%eax
  41ca01:	09 d0                	or     %edx,%eax
  41ca03:	88 87 8a 00 00 00    	mov    %al,0x8a(%rdi)
  41ca09:	48 8b 47 58          	mov    0x58(%rdi),%rax
  41ca0d:	48 39 47 28          	cmp    %rax,0x28(%rdi)
  41ca11:	76 07                	jbe    41ca1a <__toread+0x26>
  41ca13:	31 d2                	xor    %edx,%edx
  41ca15:	31 f6                	xor    %esi,%esi
  41ca17:	ff 53 48             	callq  *0x48(%rbx)
  41ca1a:	8b 13                	mov    (%rbx),%edx
  41ca1c:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
  41ca23:	00 
  41ca24:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
  41ca2b:	00 
  41ca2c:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
  41ca33:	00 
  41ca34:	f6 c2 14             	test   $0x14,%dl
  41ca37:	74 0f                	je     41ca48 <__toread+0x54>
  41ca39:	83 c8 ff             	or     $0xffffffff,%eax
  41ca3c:	f6 c2 04             	test   $0x4,%dl
  41ca3f:	74 15                	je     41ca56 <__toread+0x62>
  41ca41:	83 ca 20             	or     $0x20,%edx
  41ca44:	89 13                	mov    %edx,(%rbx)
  41ca46:	eb 0e                	jmp    41ca56 <__toread+0x62>
  41ca48:	48 8b 43 58          	mov    0x58(%rbx),%rax
  41ca4c:	48 89 43 10          	mov    %rax,0x10(%rbx)
  41ca50:	48 89 43 08          	mov    %rax,0x8(%rbx)
  41ca54:	31 c0                	xor    %eax,%eax
  41ca56:	5b                   	pop    %rbx
  41ca57:	c3                   	retq   

000000000041ca58 <__toread_needs_stdio_exit>:
  41ca58:	e9 23 06 00 00       	jmpq   41d080 <__stdio_exit>
  41ca5d:	0f 1f 00             	nopl   (%rax)

000000000041ca60 <__towrite>:
  41ca60:	8a 97 8a 00 00 00    	mov    0x8a(%rdi),%dl
  41ca66:	8d 42 ff             	lea    -0x1(%rdx),%eax
  41ca69:	09 d0                	or     %edx,%eax
  41ca6b:	88 87 8a 00 00 00    	mov    %al,0x8a(%rdi)
  41ca71:	8b 07                	mov    (%rdi),%eax
  41ca73:	a8 08                	test   $0x8,%al
  41ca75:	74 09                	je     41ca80 <__towrite+0x20>
  41ca77:	83 c8 20             	or     $0x20,%eax
  41ca7a:	89 07                	mov    %eax,(%rdi)
  41ca7c:	83 c8 ff             	or     $0xffffffff,%eax
  41ca7f:	c3                   	retq   
  41ca80:	48 8b 47 58          	mov    0x58(%rdi),%rax
  41ca84:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
  41ca8b:	00 
  41ca8c:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
  41ca93:	00 
  41ca94:	48 89 47 38          	mov    %rax,0x38(%rdi)
  41ca98:	48 89 47 28          	mov    %rax,0x28(%rdi)
  41ca9c:	48 03 47 60          	add    0x60(%rdi),%rax
  41caa0:	48 89 47 20          	mov    %rax,0x20(%rdi)
  41caa4:	31 c0                	xor    %eax,%eax
  41caa6:	c3                   	retq   

000000000041caa7 <__towrite_needs_stdio_exit>:
  41caa7:	e9 d4 05 00 00       	jmpq   41d080 <__stdio_exit>

000000000041caac <__uflow>:
  41caac:	53                   	push   %rbx
  41caad:	48 89 fb             	mov    %rdi,%rbx
  41cab0:	48 83 ec 10          	sub    $0x10,%rsp
  41cab4:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
  41cab9:	74 17                	je     41cad2 <__uflow+0x26>
  41cabb:	ba 01 00 00 00       	mov    $0x1,%edx
  41cac0:	48 8d 74 24 0f       	lea    0xf(%rsp),%rsi
  41cac5:	48 89 df             	mov    %rbx,%rdi
  41cac8:	ff 53 40             	callq  *0x40(%rbx)
  41cacb:	48 ff c8             	dec    %rax
  41cace:	74 10                	je     41cae0 <__uflow+0x34>
  41cad0:	eb 09                	jmp    41cadb <__uflow+0x2f>
  41cad2:	e8 1d ff ff ff       	callq  41c9f4 <__toread>
  41cad7:	85 c0                	test   %eax,%eax
  41cad9:	74 e0                	je     41cabb <__uflow+0xf>
  41cadb:	83 c8 ff             	or     $0xffffffff,%eax
  41cade:	eb 05                	jmp    41cae5 <__uflow+0x39>
  41cae0:	0f b6 44 24 0f       	movzbl 0xf(%rsp),%eax
  41cae5:	48 83 c4 10          	add    $0x10,%rsp
  41cae9:	5b                   	pop    %rbx
  41caea:	c3                   	retq   
  41caeb:	90                   	nop

000000000041caec <fputc>:
  41caec:	55                   	push   %rbp
  41caed:	89 fd                	mov    %edi,%ebp
  41caef:	53                   	push   %rbx
  41caf0:	48 89 f3             	mov    %rsi,%rbx
  41caf3:	48 83 ec 18          	sub    $0x18,%rsp
  41caf7:	83 be 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rsi)
  41cafe:	79 0d                	jns    41cb0d <fputc+0x21>
  41cb00:	0f be 83 8b 00 00 00 	movsbl 0x8b(%rbx),%eax
  41cb07:	39 c5                	cmp    %eax,%ebp
  41cb09:	75 10                	jne    41cb1b <fputc+0x2f>
  41cb0b:	eb 28                	jmp    41cb35 <fputc+0x49>
  41cb0d:	48 89 f7             	mov    %rsi,%rdi
  41cb10:	e8 0b fe ff ff       	callq  41c920 <__lockfile>
  41cb15:	85 c0                	test   %eax,%eax
  41cb17:	74 e7                	je     41cb00 <fputc+0x14>
  41cb19:	eb 2a                	jmp    41cb45 <fputc+0x59>
  41cb1b:	48 8b 53 28          	mov    0x28(%rbx),%rdx
  41cb1f:	48 3b 53 20          	cmp    0x20(%rbx),%rdx
  41cb23:	73 10                	jae    41cb35 <fputc+0x49>
  41cb25:	40 88 2a             	mov    %bpl,(%rdx)
  41cb28:	48 ff c2             	inc    %rdx
  41cb2b:	40 0f b6 c5          	movzbl %bpl,%eax
  41cb2f:	48 89 53 28          	mov    %rdx,0x28(%rbx)
  41cb33:	eb 4f                	jmp    41cb84 <fputc+0x98>
  41cb35:	48 83 c4 18          	add    $0x18,%rsp
  41cb39:	48 89 df             	mov    %rbx,%rdi
  41cb3c:	89 ee                	mov    %ebp,%esi
  41cb3e:	5b                   	pop    %rbx
  41cb3f:	5d                   	pop    %rbp
  41cb40:	e9 83 04 00 00       	jmpq   41cfc8 <__overflow>
  41cb45:	0f be 83 8b 00 00 00 	movsbl 0x8b(%rbx),%eax
  41cb4c:	39 c5                	cmp    %eax,%ebp
  41cb4e:	74 1a                	je     41cb6a <fputc+0x7e>
  41cb50:	48 8b 53 28          	mov    0x28(%rbx),%rdx
  41cb54:	48 3b 53 20          	cmp    0x20(%rbx),%rdx
  41cb58:	73 10                	jae    41cb6a <fputc+0x7e>
  41cb5a:	40 88 2a             	mov    %bpl,(%rdx)
  41cb5d:	48 ff c2             	inc    %rdx
  41cb60:	40 0f b6 c5          	movzbl %bpl,%eax
  41cb64:	48 89 53 28          	mov    %rdx,0x28(%rbx)
  41cb68:	eb 0a                	jmp    41cb74 <fputc+0x88>
  41cb6a:	89 ee                	mov    %ebp,%esi
  41cb6c:	48 89 df             	mov    %rbx,%rdi
  41cb6f:	e8 54 04 00 00       	callq  41cfc8 <__overflow>
  41cb74:	48 89 df             	mov    %rbx,%rdi
  41cb77:	89 44 24 08          	mov    %eax,0x8(%rsp)
  41cb7b:	e8 f8 fd ff ff       	callq  41c978 <__unlockfile>
  41cb80:	8b 44 24 08          	mov    0x8(%rsp),%eax
  41cb84:	48 83 c4 18          	add    $0x18,%rsp
  41cb88:	5b                   	pop    %rbx
  41cb89:	5d                   	pop    %rbp
  41cb8a:	c3                   	retq   
  41cb8b:	90                   	nop

000000000041cb8c <__fseeko_unlocked>:
  41cb8c:	41 54                	push   %r12
  41cb8e:	83 fa 01             	cmp    $0x1,%edx
  41cb91:	41 89 d4             	mov    %edx,%r12d
  41cb94:	55                   	push   %rbp
  41cb95:	48 89 f5             	mov    %rsi,%rbp
  41cb98:	53                   	push   %rbx
  41cb99:	48 89 fb             	mov    %rdi,%rbx
  41cb9c:	75 0b                	jne    41cba9 <__fseeko_unlocked+0x1d>
  41cb9e:	48 8b 47 08          	mov    0x8(%rdi),%rax
  41cba2:	48 2b 47 10          	sub    0x10(%rdi),%rax
  41cba6:	48 01 c5             	add    %rax,%rbp
  41cba9:	48 8b 43 38          	mov    0x38(%rbx),%rax
  41cbad:	48 39 43 28          	cmp    %rax,0x28(%rbx)
  41cbb1:	77 2b                	ja     41cbde <__fseeko_unlocked+0x52>
  41cbb3:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
  41cbba:	00 
  41cbbb:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
  41cbc2:	00 
  41cbc3:	44 89 e2             	mov    %r12d,%edx
  41cbc6:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
  41cbcd:	00 
  41cbce:	48 89 ee             	mov    %rbp,%rsi
  41cbd1:	48 89 df             	mov    %rbx,%rdi
  41cbd4:	ff 53 50             	callq  *0x50(%rbx)
  41cbd7:	48 85 c0             	test   %rax,%rax
  41cbda:	79 18                	jns    41cbf4 <__fseeko_unlocked+0x68>
  41cbdc:	eb 11                	jmp    41cbef <__fseeko_unlocked+0x63>
  41cbde:	31 d2                	xor    %edx,%edx
  41cbe0:	31 f6                	xor    %esi,%esi
  41cbe2:	48 89 df             	mov    %rbx,%rdi
  41cbe5:	ff 53 48             	callq  *0x48(%rbx)
  41cbe8:	48 83 7b 28 00       	cmpq   $0x0,0x28(%rbx)
  41cbed:	75 c4                	jne    41cbb3 <__fseeko_unlocked+0x27>
  41cbef:	83 c8 ff             	or     $0xffffffff,%eax
  41cbf2:	eb 15                	jmp    41cc09 <__fseeko_unlocked+0x7d>
  41cbf4:	83 23 ef             	andl   $0xffffffef,(%rbx)
  41cbf7:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
  41cbfe:	00 
  41cbff:	31 c0                	xor    %eax,%eax
  41cc01:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
  41cc08:	00 
  41cc09:	5b                   	pop    %rbx
  41cc0a:	5d                   	pop    %rbp
  41cc0b:	41 5c                	pop    %r12
  41cc0d:	c3                   	retq   

000000000041cc0e <__fseeko>:
  41cc0e:	55                   	push   %rbp
  41cc0f:	31 ed                	xor    %ebp,%ebp
  41cc11:	53                   	push   %rbx
  41cc12:	48 89 fb             	mov    %rdi,%rbx
  41cc15:	48 83 ec 18          	sub    $0x18,%rsp
  41cc19:	83 bf 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rdi)
  41cc20:	78 17                	js     41cc39 <__fseeko+0x2b>
  41cc22:	89 14 24             	mov    %edx,(%rsp)
  41cc25:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  41cc2a:	e8 f1 fc ff ff       	callq  41c920 <__lockfile>
  41cc2f:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  41cc34:	8b 14 24             	mov    (%rsp),%edx
  41cc37:	89 c5                	mov    %eax,%ebp
  41cc39:	48 89 df             	mov    %rbx,%rdi
  41cc3c:	e8 4b ff ff ff       	callq  41cb8c <__fseeko_unlocked>
  41cc41:	85 ed                	test   %ebp,%ebp
  41cc43:	74 10                	je     41cc55 <__fseeko+0x47>
  41cc45:	48 89 df             	mov    %rbx,%rdi
  41cc48:	89 44 24 08          	mov    %eax,0x8(%rsp)
  41cc4c:	e8 27 fd ff ff       	callq  41c978 <__unlockfile>
  41cc51:	8b 44 24 08          	mov    0x8(%rsp),%eax
  41cc55:	48 83 c4 18          	add    $0x18,%rsp
  41cc59:	5b                   	pop    %rbx
  41cc5a:	5d                   	pop    %rbp
  41cc5b:	c3                   	retq   

000000000041cc5c <fseek>:
  41cc5c:	e9 ad ff ff ff       	jmpq   41cc0e <__fseeko>
  41cc61:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41cc68:	00 00 00 
  41cc6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000041cc70 <memcmp>:
  41cc70:	48 85 d2             	test   %rdx,%rdx
  41cc73:	74 33                	je     41cca8 <memcmp+0x38>
  41cc75:	0f b6 07             	movzbl (%rdi),%eax
  41cc78:	44 0f b6 06          	movzbl (%rsi),%r8d
  41cc7c:	44 38 c0             	cmp    %r8b,%al
  41cc7f:	75 2f                	jne    41ccb0 <memcmp+0x40>
  41cc81:	48 83 ea 01          	sub    $0x1,%rdx
  41cc85:	31 c9                	xor    %ecx,%ecx
  41cc87:	eb 1a                	jmp    41cca3 <memcmp+0x33>
  41cc89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41cc90:	0f b6 44 0f 01       	movzbl 0x1(%rdi,%rcx,1),%eax
  41cc95:	48 83 c1 01          	add    $0x1,%rcx
  41cc99:	44 0f b6 04 0e       	movzbl (%rsi,%rcx,1),%r8d
  41cc9e:	44 38 c0             	cmp    %r8b,%al
  41cca1:	75 0d                	jne    41ccb0 <memcmp+0x40>
  41cca3:	48 39 d1             	cmp    %rdx,%rcx
  41cca6:	75 e8                	jne    41cc90 <memcmp+0x20>
  41cca8:	31 c0                	xor    %eax,%eax
  41ccaa:	c3                   	retq   
  41ccab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41ccb0:	44 29 c0             	sub    %r8d,%eax
  41ccb3:	c3                   	retq   
  41ccb4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41ccbb:	00 00 00 
  41ccbe:	66 90                	xchg   %ax,%ax

000000000041ccc0 <__stpcpy>:
  41ccc0:	48 89 f2             	mov    %rsi,%rdx
  41ccc3:	48 89 f8             	mov    %rdi,%rax
  41ccc6:	48 31 fa             	xor    %rdi,%rdx
  41ccc9:	83 e2 07             	and    $0x7,%edx
  41cccc:	0f 85 7e 00 00 00    	jne    41cd50 <__stpcpy+0x90>
  41ccd2:	40 f6 c6 07          	test   $0x7,%sil
  41ccd6:	74 2f                	je     41cd07 <__stpcpy+0x47>
  41ccd8:	0f b6 16             	movzbl (%rsi),%edx
  41ccdb:	84 d2                	test   %dl,%dl
  41ccdd:	88 17                	mov    %dl,(%rdi)
  41ccdf:	75 18                	jne    41ccf9 <__stpcpy+0x39>
  41cce1:	e9 8f 00 00 00       	jmpq   41cd75 <__stpcpy+0xb5>
  41cce6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41cced:	00 00 00 
  41ccf0:	0f b6 16             	movzbl (%rsi),%edx
  41ccf3:	84 d2                	test   %dl,%dl
  41ccf5:	88 10                	mov    %dl,(%rax)
  41ccf7:	74 78                	je     41cd71 <__stpcpy+0xb1>
  41ccf9:	48 83 c6 01          	add    $0x1,%rsi
  41ccfd:	48 83 c0 01          	add    $0x1,%rax
  41cd01:	40 f6 c6 07          	test   $0x7,%sil
  41cd05:	75 e9                	jne    41ccf0 <__stpcpy+0x30>
  41cd07:	48 8b 16             	mov    (%rsi),%rdx
  41cd0a:	49 b9 ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r9
  41cd11:	fe fe fe 
  41cd14:	49 b8 80 80 80 80 80 	movabs $0x8080808080808080,%r8
  41cd1b:	80 80 80 
  41cd1e:	4a 8d 0c 0a          	lea    (%rdx,%r9,1),%rcx
  41cd22:	48 89 d7             	mov    %rdx,%rdi
  41cd25:	48 f7 d7             	not    %rdi
  41cd28:	48 21 f9             	and    %rdi,%rcx
  41cd2b:	4c 85 c1             	test   %r8,%rcx
  41cd2e:	75 20                	jne    41cd50 <__stpcpy+0x90>
  41cd30:	48 83 c6 08          	add    $0x8,%rsi
  41cd34:	48 89 10             	mov    %rdx,(%rax)
  41cd37:	48 83 c0 08          	add    $0x8,%rax
  41cd3b:	48 8b 16             	mov    (%rsi),%rdx
  41cd3e:	4a 8d 0c 0a          	lea    (%rdx,%r9,1),%rcx
  41cd42:	48 89 d7             	mov    %rdx,%rdi
  41cd45:	48 f7 d7             	not    %rdi
  41cd48:	48 21 f9             	and    %rdi,%rcx
  41cd4b:	4c 85 c1             	test   %r8,%rcx
  41cd4e:	74 e0                	je     41cd30 <__stpcpy+0x70>
  41cd50:	0f b6 16             	movzbl (%rsi),%edx
  41cd53:	84 d2                	test   %dl,%dl
  41cd55:	88 10                	mov    %dl,(%rax)
  41cd57:	74 1a                	je     41cd73 <__stpcpy+0xb3>
  41cd59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  41cd60:	48 83 c6 01          	add    $0x1,%rsi
  41cd64:	48 83 c0 01          	add    $0x1,%rax
  41cd68:	0f b6 16             	movzbl (%rsi),%edx
  41cd6b:	84 d2                	test   %dl,%dl
  41cd6d:	88 10                	mov    %dl,(%rax)
  41cd6f:	75 ef                	jne    41cd60 <__stpcpy+0xa0>
  41cd71:	f3 c3                	repz retq 
  41cd73:	f3 c3                	repz retq 
  41cd75:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  41cd7c:	00 00 00 00 
  41cd80:	f3 c3                	repz retq 
  41cd82:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41cd89:	00 00 00 
  41cd8c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041cd90 <__stpncpy>:
  41cd90:	48 89 f0             	mov    %rsi,%rax
  41cd93:	53                   	push   %rbx
  41cd94:	48 89 fb             	mov    %rdi,%rbx
  41cd97:	48 31 f8             	xor    %rdi,%rax
  41cd9a:	a8 07                	test   $0x7,%al
  41cd9c:	74 50                	je     41cdee <__stpncpy+0x5e>
  41cd9e:	48 85 d2             	test   %rdx,%rdx
  41cda1:	75 13                	jne    41cdb6 <__stpncpy+0x26>
  41cda3:	eb 1a                	jmp    41cdbf <__stpncpy+0x2f>
  41cda5:	0f 1f 00             	nopl   (%rax)
  41cda8:	48 83 c6 01          	add    $0x1,%rsi
  41cdac:	48 83 c3 01          	add    $0x1,%rbx
  41cdb0:	48 83 ea 01          	sub    $0x1,%rdx
  41cdb4:	74 09                	je     41cdbf <__stpncpy+0x2f>
  41cdb6:	0f b6 06             	movzbl (%rsi),%eax
  41cdb9:	84 c0                	test   %al,%al
  41cdbb:	88 03                	mov    %al,(%rbx)
  41cdbd:	75 e9                	jne    41cda8 <__stpncpy+0x18>
  41cdbf:	48 89 df             	mov    %rbx,%rdi
  41cdc2:	31 f6                	xor    %esi,%esi
  41cdc4:	e8 8f ec ff ff       	callq  41ba58 <memset>
  41cdc9:	48 89 d8             	mov    %rbx,%rax
  41cdcc:	5b                   	pop    %rbx
  41cdcd:	c3                   	retq   
  41cdce:	66 90                	xchg   %ax,%ax
  41cdd0:	48 85 d2             	test   %rdx,%rdx
  41cdd3:	0f 84 8f 00 00 00    	je     41ce68 <__stpncpy+0xd8>
  41cdd9:	0f b6 06             	movzbl (%rsi),%eax
  41cddc:	84 c0                	test   %al,%al
  41cdde:	88 03                	mov    %al,(%rbx)
  41cde0:	74 dd                	je     41cdbf <__stpncpy+0x2f>
  41cde2:	48 83 ea 01          	sub    $0x1,%rdx
  41cde6:	48 83 c6 01          	add    $0x1,%rsi
  41cdea:	48 83 c3 01          	add    $0x1,%rbx
  41cdee:	40 f6 c6 07          	test   $0x7,%sil
  41cdf2:	75 dc                	jne    41cdd0 <__stpncpy+0x40>
  41cdf4:	48 85 d2             	test   %rdx,%rdx
  41cdf7:	74 c6                	je     41cdbf <__stpncpy+0x2f>
  41cdf9:	80 3e 00             	cmpb   $0x0,(%rsi)
  41cdfc:	74 c1                	je     41cdbf <__stpncpy+0x2f>
  41cdfe:	48 83 fa 07          	cmp    $0x7,%rdx
  41ce02:	76 b2                	jbe    41cdb6 <__stpncpy+0x26>
  41ce04:	48 8b 06             	mov    (%rsi),%rax
  41ce07:	49 b9 ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r9
  41ce0e:	fe fe fe 
  41ce11:	49 b8 80 80 80 80 80 	movabs $0x8080808080808080,%r8
  41ce18:	80 80 80 
  41ce1b:	4a 8d 0c 08          	lea    (%rax,%r9,1),%rcx
  41ce1f:	48 89 c7             	mov    %rax,%rdi
  41ce22:	48 f7 d7             	not    %rdi
  41ce25:	48 21 f9             	and    %rdi,%rcx
  41ce28:	4c 85 c1             	test   %r8,%rcx
  41ce2b:	74 1c                	je     41ce49 <__stpncpy+0xb9>
  41ce2d:	eb 87                	jmp    41cdb6 <__stpncpy+0x26>
  41ce2f:	90                   	nop
  41ce30:	48 8b 06             	mov    (%rsi),%rax
  41ce33:	4a 8d 0c 08          	lea    (%rax,%r9,1),%rcx
  41ce37:	48 89 c7             	mov    %rax,%rdi
  41ce3a:	48 f7 d7             	not    %rdi
  41ce3d:	48 21 f9             	and    %rdi,%rcx
  41ce40:	4c 85 c1             	test   %r8,%rcx
  41ce43:	0f 85 6d ff ff ff    	jne    41cdb6 <__stpncpy+0x26>
  41ce49:	48 83 ea 08          	sub    $0x8,%rdx
  41ce4d:	48 89 03             	mov    %rax,(%rbx)
  41ce50:	48 83 c6 08          	add    $0x8,%rsi
  41ce54:	48 83 c3 08          	add    $0x8,%rbx
  41ce58:	48 83 fa 07          	cmp    $0x7,%rdx
  41ce5c:	77 d2                	ja     41ce30 <__stpncpy+0xa0>
  41ce5e:	e9 3b ff ff ff       	jmpq   41cd9e <__stpncpy+0xe>
  41ce63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  41ce68:	48 89 df             	mov    %rbx,%rdi
  41ce6b:	31 d2                	xor    %edx,%edx
  41ce6d:	31 f6                	xor    %esi,%esi
  41ce6f:	e8 e4 eb ff ff       	callq  41ba58 <memset>
  41ce74:	48 89 d8             	mov    %rbx,%rax
  41ce77:	5b                   	pop    %rbx
  41ce78:	c3                   	retq   
  41ce79:	0f 1f 00             	nopl   (%rax)

000000000041ce7c <tcgetattr>:
  41ce7c:	50                   	push   %rax
  41ce7d:	48 89 f2             	mov    %rsi,%rdx
  41ce80:	31 c0                	xor    %eax,%eax
  41ce82:	be 01 54 00 00       	mov    $0x5401,%esi
  41ce87:	e8 1c 00 00 00       	callq  41cea8 <ioctl>
  41ce8c:	83 f8 01             	cmp    $0x1,%eax
  41ce8f:	19 c0                	sbb    %eax,%eax
  41ce91:	f7 d0                	not    %eax
  41ce93:	5a                   	pop    %rdx
  41ce94:	c3                   	retq   
  41ce95:	0f 1f 00             	nopl   (%rax)

000000000041ce98 <__set_thread_area>:
  41ce98:	48 89 fe             	mov    %rdi,%rsi
  41ce9b:	bf 02 10 00 00       	mov    $0x1002,%edi
  41cea0:	b8 9e 00 00 00       	mov    $0x9e,%eax
  41cea5:	0f 05                	syscall 
  41cea7:	c3                   	retq   

000000000041cea8 <ioctl>:
  41cea8:	48 83 ec 58          	sub    $0x58,%rsp
  41ceac:	41 b8 10 00 00 00    	mov    $0x10,%r8d
  41ceb2:	48 63 ff             	movslq %edi,%rdi
  41ceb5:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  41ceba:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  41cebf:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%rsp)
  41cec6:	00 
  41cec7:	48 63 f6             	movslq %esi,%rsi
  41ceca:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  41cecf:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  41ced4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  41ced9:	4c 89 c0             	mov    %r8,%rax
  41cedc:	0f 05                	syscall 
  41cede:	48 89 c7             	mov    %rax,%rdi
  41cee1:	e8 1a b2 ff ff       	callq  418100 <__syscall_ret>
  41cee6:	48 83 c4 58          	add    $0x58,%rsp
  41ceea:	c3                   	retq   
  41ceeb:	90                   	nop

000000000041ceec <wcrtomb>:
  41ceec:	48 85 ff             	test   %rdi,%rdi
  41ceef:	0f 84 c1 00 00 00    	je     41cfb6 <wcrtomb+0xca>
  41cef5:	83 fe 7f             	cmp    $0x7f,%esi
  41cef8:	77 08                	ja     41cf02 <wcrtomb+0x16>
  41cefa:	40 88 37             	mov    %sil,(%rdi)
  41cefd:	e9 b4 00 00 00       	jmpq   41cfb6 <wcrtomb+0xca>
  41cf02:	81 fe ff 07 00 00    	cmp    $0x7ff,%esi
  41cf08:	77 1a                	ja     41cf24 <wcrtomb+0x38>
  41cf0a:	89 f0                	mov    %esi,%eax
  41cf0c:	83 e6 3f             	and    $0x3f,%esi
  41cf0f:	c1 f8 06             	sar    $0x6,%eax
  41cf12:	83 ce 80             	or     $0xffffff80,%esi
  41cf15:	83 c8 c0             	or     $0xffffffc0,%eax
  41cf18:	40 88 77 01          	mov    %sil,0x1(%rdi)
  41cf1c:	88 07                	mov    %al,(%rdi)
  41cf1e:	b8 02 00 00 00       	mov    $0x2,%eax
  41cf23:	c3                   	retq   
  41cf24:	8d 86 00 20 ff ff    	lea    -0xe000(%rsi),%eax
  41cf2a:	3d ff 1f 00 00       	cmp    $0x1fff,%eax
  41cf2f:	76 08                	jbe    41cf39 <wcrtomb+0x4d>
  41cf31:	81 fe ff d7 00 00    	cmp    $0xd7ff,%esi
  41cf37:	77 28                	ja     41cf61 <wcrtomb+0x75>
  41cf39:	89 f0                	mov    %esi,%eax
  41cf3b:	c1 f8 0c             	sar    $0xc,%eax
  41cf3e:	83 c8 e0             	or     $0xffffffe0,%eax
  41cf41:	88 07                	mov    %al,(%rdi)
  41cf43:	89 f0                	mov    %esi,%eax
  41cf45:	83 e6 3f             	and    $0x3f,%esi
  41cf48:	c1 f8 06             	sar    $0x6,%eax
  41cf4b:	83 ce 80             	or     $0xffffff80,%esi
  41cf4e:	83 e0 3f             	and    $0x3f,%eax
  41cf51:	40 88 77 02          	mov    %sil,0x2(%rdi)
  41cf55:	83 c8 80             	or     $0xffffff80,%eax
  41cf58:	88 47 01             	mov    %al,0x1(%rdi)
  41cf5b:	b8 03 00 00 00       	mov    $0x3,%eax
  41cf60:	c3                   	retq   
  41cf61:	8d 86 00 00 ff ff    	lea    -0x10000(%rsi),%eax
  41cf67:	3d ff ff 0f 00       	cmp    $0xfffff,%eax
  41cf6c:	77 36                	ja     41cfa4 <wcrtomb+0xb8>
  41cf6e:	89 f0                	mov    %esi,%eax
  41cf70:	c1 f8 12             	sar    $0x12,%eax
  41cf73:	83 c8 f0             	or     $0xfffffff0,%eax
  41cf76:	88 07                	mov    %al,(%rdi)
  41cf78:	89 f0                	mov    %esi,%eax
  41cf7a:	c1 f8 0c             	sar    $0xc,%eax
  41cf7d:	83 e0 3f             	and    $0x3f,%eax
  41cf80:	83 c8 80             	or     $0xffffff80,%eax
  41cf83:	88 47 01             	mov    %al,0x1(%rdi)
  41cf86:	89 f0                	mov    %esi,%eax
  41cf88:	83 e6 3f             	and    $0x3f,%esi
  41cf8b:	c1 f8 06             	sar    $0x6,%eax
  41cf8e:	83 ce 80             	or     $0xffffff80,%esi
  41cf91:	83 e0 3f             	and    $0x3f,%eax
  41cf94:	40 88 77 03          	mov    %sil,0x3(%rdi)
  41cf98:	83 c8 80             	or     $0xffffff80,%eax
  41cf9b:	88 47 02             	mov    %al,0x2(%rdi)
  41cf9e:	b8 04 00 00 00       	mov    $0x4,%eax
  41cfa3:	c3                   	retq   
  41cfa4:	51                   	push   %rcx
  41cfa5:	e8 56 b0 ff ff       	callq  418000 <__errno_location>
  41cfaa:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
  41cfb0:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
  41cfb4:	eb 06                	jmp    41cfbc <wcrtomb+0xd0>
  41cfb6:	b8 01 00 00 00       	mov    $0x1,%eax
  41cfbb:	c3                   	retq   
  41cfbc:	5a                   	pop    %rdx
  41cfbd:	c3                   	retq   
  41cfbe:	66 90                	xchg   %ax,%ax

000000000041cfc0 <__restore>:
  41cfc0:	b8 0f 00 00 00       	mov    $0xf,%eax
  41cfc5:	0f 05                	syscall 
  41cfc7:	90                   	nop

000000000041cfc8 <__overflow>:
  41cfc8:	53                   	push   %rbx
  41cfc9:	48 89 fb             	mov    %rdi,%rbx
  41cfcc:	48 83 ec 10          	sub    $0x10,%rsp
  41cfd0:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
  41cfd5:	40 88 74 24 0f       	mov    %sil,0xf(%rsp)
  41cfda:	74 0c                	je     41cfe8 <__overflow+0x20>
  41cfdc:	48 8b 53 28          	mov    0x28(%rbx),%rdx
  41cfe0:	48 3b 53 20          	cmp    0x20(%rbx),%rdx
  41cfe4:	72 10                	jb     41cff6 <__overflow+0x2e>
  41cfe6:	eb 2b                	jmp    41d013 <__overflow+0x4b>
  41cfe8:	e8 73 fa ff ff       	callq  41ca60 <__towrite>
  41cfed:	85 c0                	test   %eax,%eax
  41cfef:	74 eb                	je     41cfdc <__overflow+0x14>
  41cff1:	83 c8 ff             	or     $0xffffffff,%eax
  41cff4:	eb 37                	jmp    41d02d <__overflow+0x65>
  41cff6:	8a 4c 24 0f          	mov    0xf(%rsp),%cl
  41cffa:	0f be b3 8b 00 00 00 	movsbl 0x8b(%rbx),%esi
  41d001:	0f b6 c1             	movzbl %cl,%eax
  41d004:	39 f0                	cmp    %esi,%eax
  41d006:	74 0b                	je     41d013 <__overflow+0x4b>
  41d008:	88 0a                	mov    %cl,(%rdx)
  41d00a:	48 ff c2             	inc    %rdx
  41d00d:	48 89 53 28          	mov    %rdx,0x28(%rbx)
  41d011:	eb 1a                	jmp    41d02d <__overflow+0x65>
  41d013:	ba 01 00 00 00       	mov    $0x1,%edx
  41d018:	48 8d 74 24 0f       	lea    0xf(%rsp),%rsi
  41d01d:	48 89 df             	mov    %rbx,%rdi
  41d020:	ff 53 48             	callq  *0x48(%rbx)
  41d023:	48 ff c8             	dec    %rax
  41d026:	75 c9                	jne    41cff1 <__overflow+0x29>
  41d028:	0f b6 44 24 0f       	movzbl 0xf(%rsp),%eax
  41d02d:	48 83 c4 10          	add    $0x10,%rsp
  41d031:	5b                   	pop    %rbx
  41d032:	c3                   	retq   
  41d033:	90                   	nop

000000000041d034 <close_file>:
  41d034:	48 85 ff             	test   %rdi,%rdi
  41d037:	53                   	push   %rbx
  41d038:	48 89 fb             	mov    %rdi,%rbx
  41d03b:	74 41                	je     41d07e <close_file+0x4a>
  41d03d:	83 bf 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rdi)
  41d044:	78 05                	js     41d04b <close_file+0x17>
  41d046:	e8 d5 f8 ff ff       	callq  41c920 <__lockfile>
  41d04b:	48 8b 43 38          	mov    0x38(%rbx),%rax
  41d04f:	48 39 43 28          	cmp    %rax,0x28(%rbx)
  41d053:	76 0a                	jbe    41d05f <close_file+0x2b>
  41d055:	31 d2                	xor    %edx,%edx
  41d057:	31 f6                	xor    %esi,%esi
  41d059:	48 89 df             	mov    %rbx,%rdi
  41d05c:	ff 53 48             	callq  *0x48(%rbx)
  41d05f:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  41d063:	48 8b 43 10          	mov    0x10(%rbx),%rax
  41d067:	48 39 c6             	cmp    %rax,%rsi
  41d06a:	73 12                	jae    41d07e <close_file+0x4a>
  41d06c:	48 29 c6             	sub    %rax,%rsi
  41d06f:	48 89 df             	mov    %rbx,%rdi
  41d072:	48 8b 43 50          	mov    0x50(%rbx),%rax
  41d076:	5b                   	pop    %rbx
  41d077:	ba 01 00 00 00       	mov    $0x1,%edx
  41d07c:	ff e0                	jmpq   *%rax
  41d07e:	5b                   	pop    %rbx
  41d07f:	c3                   	retq   

000000000041d080 <__stdio_exit>:
  41d080:	53                   	push   %rbx
  41d081:	bf 48 d8 62 00       	mov    $0x62d848,%edi
  41d086:	e8 e1 f1 ff ff       	callq  41c26c <__lock>
  41d08b:	48 8b 1d ae 07 21 00 	mov    0x2107ae(%rip),%rbx        # 62d840 <__libc+0x20>
  41d092:	eb 0c                	jmp    41d0a0 <__stdio_exit+0x20>
  41d094:	48 89 df             	mov    %rbx,%rdi
  41d097:	e8 98 ff ff ff       	callq  41d034 <close_file>
  41d09c:	48 8b 5b 70          	mov    0x70(%rbx),%rbx
  41d0a0:	48 85 db             	test   %rbx,%rbx
  41d0a3:	75 ef                	jne    41d094 <__stdio_exit+0x14>
  41d0a5:	48 8b 3d 14 e5 20 00 	mov    0x20e514(%rip),%rdi        # 62b5c0 <__stdin_used>
  41d0ac:	e8 83 ff ff ff       	callq  41d034 <close_file>
  41d0b1:	5b                   	pop    %rbx
  41d0b2:	48 8b 3d e7 e5 20 00 	mov    0x20e5e7(%rip),%rdi        # 62b6a0 <__stdout_used>
  41d0b9:	e9 76 ff ff ff       	jmpq   41d034 <close_file>
  41d0be:	66 90                	xchg   %ax,%ax

000000000041d0c0 <shift32RightJamming>:
  41d0c0:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  41d0c7:	00 00 00 
  41d0ca:	4c 85 c6             	test   %r8,%rsi
  41d0cd:	74 5d                	je     41d12c <shift32RightJamming+0x6c>
  41d0cf:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d0d6:	48 89 f0             	mov    %rsi,%rax
  41d0d9:	48 d3 e0             	shl    %cl,%rax
  41d0dc:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d0e3:	48 d3 f8             	sar    %cl,%rax
  41d0e6:	48 83 f8 1f          	cmp    $0x1f,%rax
  41d0ea:	7f 31                	jg     41d11d <shift32RightJamming+0x5d>
  41d0ec:	48 89 f1             	mov    %rsi,%rcx
  41d0ef:	4c 21 c1             	and    %r8,%rcx
  41d0f2:	48 89 f8             	mov    %rdi,%rax
  41d0f5:	4c 21 c0             	and    %r8,%rax
  41d0f8:	48 d3 e8             	shr    %cl,%rax
  41d0fb:	48 f7 de             	neg    %rsi
  41d0fe:	48 83 e6 1f          	and    $0x1f,%rsi
  41d102:	48 89 f1             	mov    %rsi,%rcx
  41d105:	48 d3 e7             	shl    %cl,%rdi
  41d108:	4c 85 c7             	test   %r8,%rdi
  41d10b:	74 22                	je     41d12f <shift32RightJamming+0x6f>
  41d10d:	48 bf 01 00 00 00 00 	movabs $0x1,%rdi
  41d114:	00 00 00 
  41d117:	48 09 c7             	or     %rax,%rdi
  41d11a:	89 3a                	mov    %edi,(%rdx)
  41d11c:	c3                   	retq   
  41d11d:	4c 85 c7             	test   %r8,%rdi
  41d120:	74 1d                	je     41d13f <shift32RightJamming+0x7f>
  41d122:	48 bf 01 00 00 00 00 	movabs $0x1,%rdi
  41d129:	00 00 00 
  41d12c:	89 3a                	mov    %edi,(%rdx)
  41d12e:	c3                   	retq   
  41d12f:	48 bf 00 00 00 00 00 	movabs $0x0,%rdi
  41d136:	00 00 00 
  41d139:	48 09 c7             	or     %rax,%rdi
  41d13c:	89 3a                	mov    %edi,(%rdx)
  41d13e:	c3                   	retq   
  41d13f:	48 bf 00 00 00 00 00 	movabs $0x0,%rdi
  41d146:	00 00 00 
  41d149:	89 3a                	mov    %edi,(%rdx)
  41d14b:	c3                   	retq   
  41d14c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041d150 <shift64RightJamming>:
  41d150:	49 b9 ff ff ff ff 00 	movabs $0xffffffff,%r9
  41d157:	00 00 00 
  41d15a:	4c 85 ce             	test   %r9,%rsi
  41d15d:	74 57                	je     41d1b6 <shift64RightJamming+0x66>
  41d15f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d166:	48 89 f0             	mov    %rsi,%rax
  41d169:	48 d3 e0             	shl    %cl,%rax
  41d16c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d173:	48 d3 f8             	sar    %cl,%rax
  41d176:	48 83 f8 3f          	cmp    $0x3f,%rax
  41d17a:	7f 2b                	jg     41d1a7 <shift64RightJamming+0x57>
  41d17c:	49 21 f1             	and    %rsi,%r9
  41d17f:	49 89 f8             	mov    %rdi,%r8
  41d182:	4c 89 c9             	mov    %r9,%rcx
  41d185:	49 d3 e8             	shr    %cl,%r8
  41d188:	48 f7 de             	neg    %rsi
  41d18b:	48 89 f1             	mov    %rsi,%rcx
  41d18e:	48 d3 e7             	shl    %cl,%rdi
  41d191:	48 85 ff             	test   %rdi,%rdi
  41d194:	74 24                	je     41d1ba <shift64RightJamming+0x6a>
  41d196:	48 bf 01 00 00 00 00 	movabs $0x1,%rdi
  41d19d:	00 00 00 
  41d1a0:	4c 09 c7             	or     %r8,%rdi
  41d1a3:	48 89 3a             	mov    %rdi,(%rdx)
  41d1a6:	c3                   	retq   
  41d1a7:	48 85 ff             	test   %rdi,%rdi
  41d1aa:	74 1f                	je     41d1cb <shift64RightJamming+0x7b>
  41d1ac:	48 bf 01 00 00 00 00 	movabs $0x1,%rdi
  41d1b3:	00 00 00 
  41d1b6:	48 89 3a             	mov    %rdi,(%rdx)
  41d1b9:	c3                   	retq   
  41d1ba:	48 bf 00 00 00 00 00 	movabs $0x0,%rdi
  41d1c1:	00 00 00 
  41d1c4:	4c 09 c7             	or     %r8,%rdi
  41d1c7:	48 89 3a             	mov    %rdi,(%rdx)
  41d1ca:	c3                   	retq   
  41d1cb:	48 bf 00 00 00 00 00 	movabs $0x0,%rdi
  41d1d2:	00 00 00 
  41d1d5:	48 89 3a             	mov    %rdi,(%rdx)
  41d1d8:	c3                   	retq   
  41d1d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000041d1e0 <shift64ExtraRightJamming>:
  41d1e0:	49 89 c9             	mov    %rcx,%r9
  41d1e3:	49 bb ff ff ff ff 00 	movabs $0xffffffff,%r11
  41d1ea:	00 00 00 
  41d1ed:	4c 85 da             	test   %r11,%rdx
  41d1f0:	0f 84 a3 00 00 00    	je     41d299 <shift64ExtraRightJamming+0xb9>
  41d1f6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d1fd:	48 89 d0             	mov    %rdx,%rax
  41d200:	48 d3 e0             	shl    %cl,%rax
  41d203:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d20a:	48 d3 f8             	sar    %cl,%rax
  41d20d:	48 83 f8 3f          	cmp    $0x3f,%rax
  41d211:	7f 21                	jg     41d234 <shift64ExtraRightJamming+0x54>
  41d213:	48 89 d1             	mov    %rdx,%rcx
  41d216:	48 f7 d9             	neg    %rcx
  41d219:	48 83 e1 3f          	and    $0x3f,%rcx
  41d21d:	49 89 fa             	mov    %rdi,%r10
  41d220:	49 d3 e2             	shl    %cl,%r10
  41d223:	48 85 f6             	test   %rsi,%rsi
  41d226:	74 29                	je     41d251 <shift64ExtraRightJamming+0x71>
  41d228:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  41d22f:	00 00 00 
  41d232:	eb 27                	jmp    41d25b <shift64ExtraRightJamming+0x7b>
  41d234:	49 21 d3             	and    %rdx,%r11
  41d237:	49 83 fb 40          	cmp    $0x40,%r11
  41d23b:	75 2f                	jne    41d26c <shift64ExtraRightJamming+0x8c>
  41d23d:	48 85 f6             	test   %rsi,%rsi
  41d240:	74 3b                	je     41d27d <shift64ExtraRightJamming+0x9d>
  41d242:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  41d249:	00 00 00 
  41d24c:	48 09 fe             	or     %rdi,%rsi
  41d24f:	eb 45                	jmp    41d296 <shift64ExtraRightJamming+0xb6>
  41d251:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41d258:	00 00 00 
  41d25b:	49 09 ca             	or     %rcx,%r10
  41d25e:	49 21 d3             	and    %rdx,%r11
  41d261:	4c 89 d9             	mov    %r11,%rcx
  41d264:	48 d3 ef             	shr    %cl,%rdi
  41d267:	4c 89 d6             	mov    %r10,%rsi
  41d26a:	eb 2d                	jmp    41d299 <shift64ExtraRightJamming+0xb9>
  41d26c:	48 09 fe             	or     %rdi,%rsi
  41d26f:	74 1b                	je     41d28c <shift64ExtraRightJamming+0xac>
  41d271:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  41d278:	00 00 00 
  41d27b:	eb 19                	jmp    41d296 <shift64ExtraRightJamming+0xb6>
  41d27d:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  41d284:	00 00 00 
  41d287:	48 09 fe             	or     %rdi,%rsi
  41d28a:	eb 0a                	jmp    41d296 <shift64ExtraRightJamming+0xb6>
  41d28c:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  41d293:	00 00 00 
  41d296:	48 31 ff             	xor    %rdi,%rdi
  41d299:	49 89 30             	mov    %rsi,(%r8)
  41d29c:	49 89 39             	mov    %rdi,(%r9)
  41d29f:	c3                   	retq   

000000000041d2a0 <shift128Right>:
  41d2a0:	49 89 c9             	mov    %rcx,%r9
  41d2a3:	49 ba ff ff ff ff 00 	movabs $0xffffffff,%r10
  41d2aa:	00 00 00 
  41d2ad:	4c 85 d2             	test   %r10,%rdx
  41d2b0:	74 4c                	je     41d2fe <shift128Right+0x5e>
  41d2b2:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d2b9:	48 89 d0             	mov    %rdx,%rax
  41d2bc:	48 d3 e0             	shl    %cl,%rax
  41d2bf:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d2c6:	48 d3 f8             	sar    %cl,%rax
  41d2c9:	48 31 c9             	xor    %rcx,%rcx
  41d2cc:	48 83 f8 3f          	cmp    $0x3f,%rax
  41d2d0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  41d2d7:	00 00 00 
  41d2da:	7f 28                	jg     41d304 <shift128Right+0x64>
  41d2dc:	48 89 d1             	mov    %rdx,%rcx
  41d2df:	48 f7 d9             	neg    %rcx
  41d2e2:	48 83 e1 3f          	and    $0x3f,%rcx
  41d2e6:	48 89 f8             	mov    %rdi,%rax
  41d2e9:	48 d3 e0             	shl    %cl,%rax
  41d2ec:	49 21 d2             	and    %rdx,%r10
  41d2ef:	4c 89 d1             	mov    %r10,%rcx
  41d2f2:	48 d3 ee             	shr    %cl,%rsi
  41d2f5:	48 09 c6             	or     %rax,%rsi
  41d2f8:	4c 89 d1             	mov    %r10,%rcx
  41d2fb:	48 d3 ef             	shr    %cl,%rdi
  41d2fe:	48 89 f1             	mov    %rsi,%rcx
  41d301:	48 89 f8             	mov    %rdi,%rax
  41d304:	49 89 08             	mov    %rcx,(%r8)
  41d307:	49 89 01             	mov    %rax,(%r9)
  41d30a:	c3                   	retq   
  41d30b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000041d310 <shift128RightJamming>:
  41d310:	49 89 c9             	mov    %rcx,%r9
  41d313:	49 bb ff ff ff ff 00 	movabs $0xffffffff,%r11
  41d31a:	00 00 00 
  41d31d:	4c 85 da             	test   %r11,%rdx
  41d320:	0f 84 11 01 00 00    	je     41d437 <shift128RightJamming+0x127>
  41d326:	49 89 d2             	mov    %rdx,%r10
  41d329:	49 f7 da             	neg    %r10
  41d32c:	49 83 e2 3f          	and    $0x3f,%r10
  41d330:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d337:	48 89 d0             	mov    %rdx,%rax
  41d33a:	48 d3 e0             	shl    %cl,%rax
  41d33d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d344:	48 d3 f8             	sar    %cl,%rax
  41d347:	48 83 f8 3f          	cmp    $0x3f,%rax
  41d34b:	7f 2f                	jg     41d37c <shift128RightJamming+0x6c>
  41d34d:	48 89 f8             	mov    %rdi,%rax
  41d350:	4c 89 d1             	mov    %r10,%rcx
  41d353:	48 d3 e0             	shl    %cl,%rax
  41d356:	49 21 d3             	and    %rdx,%r11
  41d359:	48 89 f2             	mov    %rsi,%rdx
  41d35c:	4c 89 d9             	mov    %r11,%rcx
  41d35f:	48 d3 ea             	shr    %cl,%rdx
  41d362:	48 09 c2             	or     %rax,%rdx
  41d365:	4c 89 d1             	mov    %r10,%rcx
  41d368:	48 d3 e6             	shl    %cl,%rsi
  41d36b:	48 85 f6             	test   %rsi,%rsi
  41d36e:	74 2c                	je     41d39c <shift128RightJamming+0x8c>
  41d370:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  41d377:	00 00 00 
  41d37a:	eb 2a                	jmp    41d3a6 <shift128RightJamming+0x96>
  41d37c:	49 21 d3             	and    %rdx,%r11
  41d37f:	49 83 fb 40          	cmp    $0x40,%r11
  41d383:	75 32                	jne    41d3b7 <shift128RightJamming+0xa7>
  41d385:	48 85 f6             	test   %rsi,%rsi
  41d388:	74 71                	je     41d3fb <shift128RightJamming+0xeb>
  41d38a:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  41d391:	00 00 00 
  41d394:	48 09 fe             	or     %rdi,%rsi
  41d397:	e9 98 00 00 00       	jmpq   41d434 <shift128RightJamming+0x124>
  41d39c:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41d3a3:	00 00 00 
  41d3a6:	48 09 ca             	or     %rcx,%rdx
  41d3a9:	4c 89 d9             	mov    %r11,%rcx
  41d3ac:	48 d3 ef             	shr    %cl,%rdi
  41d3af:	48 89 d6             	mov    %rdx,%rsi
  41d3b2:	e9 80 00 00 00       	jmpq   41d437 <shift128RightJamming+0x127>
  41d3b7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d3be:	48 89 d0             	mov    %rdx,%rax
  41d3c1:	48 d3 e0             	shl    %cl,%rax
  41d3c4:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d3cb:	48 d3 f8             	sar    %cl,%rax
  41d3ce:	48 83 f8 7f          	cmp    $0x7f,%rax
  41d3d2:	7f 36                	jg     41d40a <shift128RightJamming+0xfa>
  41d3d4:	48 83 e2 3f          	and    $0x3f,%rdx
  41d3d8:	48 89 f8             	mov    %rdi,%rax
  41d3db:	48 89 d1             	mov    %rdx,%rcx
  41d3de:	48 d3 e8             	shr    %cl,%rax
  41d3e1:	4c 89 d1             	mov    %r10,%rcx
  41d3e4:	48 d3 e7             	shl    %cl,%rdi
  41d3e7:	48 09 f7             	or     %rsi,%rdi
  41d3ea:	74 2f                	je     41d41b <shift128RightJamming+0x10b>
  41d3ec:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  41d3f3:	00 00 00 
  41d3f6:	48 09 c6             	or     %rax,%rsi
  41d3f9:	eb 39                	jmp    41d434 <shift128RightJamming+0x124>
  41d3fb:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  41d402:	00 00 00 
  41d405:	48 09 fe             	or     %rdi,%rsi
  41d408:	eb 2a                	jmp    41d434 <shift128RightJamming+0x124>
  41d40a:	48 09 fe             	or     %rdi,%rsi
  41d40d:	74 1b                	je     41d42a <shift128RightJamming+0x11a>
  41d40f:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  41d416:	00 00 00 
  41d419:	eb 19                	jmp    41d434 <shift128RightJamming+0x124>
  41d41b:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  41d422:	00 00 00 
  41d425:	48 09 c6             	or     %rax,%rsi
  41d428:	eb 0a                	jmp    41d434 <shift128RightJamming+0x124>
  41d42a:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  41d431:	00 00 00 
  41d434:	48 31 ff             	xor    %rdi,%rdi
  41d437:	49 89 30             	mov    %rsi,(%r8)
  41d43a:	49 89 39             	mov    %rdi,(%r9)
  41d43d:	c3                   	retq   
  41d43e:	66 90                	xchg   %ax,%ax

000000000041d440 <shift128ExtraRightJamming>:
  41d440:	41 57                	push   %r15
  41d442:	41 56                	push   %r14
  41d444:	53                   	push   %rbx
  41d445:	49 89 ca             	mov    %rcx,%r10
  41d448:	49 bb ff ff ff ff 00 	movabs $0xffffffff,%r11
  41d44f:	00 00 00 
  41d452:	4d 85 da             	test   %r11,%r10
  41d455:	74 59                	je     41d4b0 <shift128ExtraRightJamming+0x70>
  41d457:	4c 89 d0             	mov    %r10,%rax
  41d45a:	48 f7 d8             	neg    %rax
  41d45d:	48 83 e0 3f          	and    $0x3f,%rax
  41d461:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d468:	4c 89 d3             	mov    %r10,%rbx
  41d46b:	48 d3 e3             	shl    %cl,%rbx
  41d46e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d475:	48 d3 fb             	sar    %cl,%rbx
  41d478:	48 83 fb 3f          	cmp    $0x3f,%rbx
  41d47c:	7f 3d                	jg     41d4bb <shift128ExtraRightJamming+0x7b>
  41d47e:	49 89 f7             	mov    %rsi,%r15
  41d481:	48 89 c1             	mov    %rax,%rcx
  41d484:	49 d3 e7             	shl    %cl,%r15
  41d487:	48 89 fb             	mov    %rdi,%rbx
  41d48a:	48 89 c1             	mov    %rax,%rcx
  41d48d:	48 d3 e3             	shl    %cl,%rbx
  41d490:	4d 21 d3             	and    %r10,%r11
  41d493:	4c 89 d9             	mov    %r11,%rcx
  41d496:	48 d3 ee             	shr    %cl,%rsi
  41d499:	48 09 de             	or     %rbx,%rsi
  41d49c:	4c 89 d9             	mov    %r11,%rcx
  41d49f:	48 d3 ef             	shr    %cl,%rdi
  41d4a2:	49 89 fe             	mov    %rdi,%r14
  41d4a5:	48 89 f0             	mov    %rsi,%rax
  41d4a8:	4c 89 fe             	mov    %r15,%rsi
  41d4ab:	e9 86 00 00 00       	jmpq   41d536 <shift128ExtraRightJamming+0xf6>
  41d4b0:	49 89 fe             	mov    %rdi,%r14
  41d4b3:	48 89 f0             	mov    %rsi,%rax
  41d4b6:	e9 99 00 00 00       	jmpq   41d554 <shift128ExtraRightJamming+0x114>
  41d4bb:	4d 21 d3             	and    %r10,%r11
  41d4be:	4d 31 f6             	xor    %r14,%r14
  41d4c1:	49 83 fb 40          	cmp    $0x40,%r11
  41d4c5:	75 05                	jne    41d4cc <shift128ExtraRightJamming+0x8c>
  41d4c7:	48 89 f8             	mov    %rdi,%rax
  41d4ca:	eb 6a                	jmp    41d536 <shift128ExtraRightJamming+0xf6>
  41d4cc:	48 09 f2             	or     %rsi,%rdx
  41d4cf:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d4d6:	4c 89 d6             	mov    %r10,%rsi
  41d4d9:	48 d3 e6             	shl    %cl,%rsi
  41d4dc:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d4e3:	48 d3 fe             	sar    %cl,%rsi
  41d4e6:	48 83 fe 7f          	cmp    $0x7f,%rsi
  41d4ea:	7f 18                	jg     41d504 <shift128ExtraRightJamming+0xc4>
  41d4ec:	48 89 fe             	mov    %rdi,%rsi
  41d4ef:	48 89 c1             	mov    %rax,%rcx
  41d4f2:	48 d3 e6             	shl    %cl,%rsi
  41d4f5:	49 83 e2 3f          	and    $0x3f,%r10
  41d4f9:	4c 89 d1             	mov    %r10,%rcx
  41d4fc:	48 d3 ef             	shr    %cl,%rdi
  41d4ff:	48 89 f8             	mov    %rdi,%rax
  41d502:	eb 32                	jmp    41d536 <shift128ExtraRightJamming+0xf6>
  41d504:	4d 31 f6             	xor    %r14,%r14
  41d507:	49 81 fb 80 00 00 00 	cmp    $0x80,%r11
  41d50e:	75 08                	jne    41d518 <shift128ExtraRightJamming+0xd8>
  41d510:	48 31 c0             	xor    %rax,%rax
  41d513:	48 89 fe             	mov    %rdi,%rsi
  41d516:	eb 1e                	jmp    41d536 <shift128ExtraRightJamming+0xf6>
  41d518:	48 85 ff             	test   %rdi,%rdi
  41d51b:	74 0c                	je     41d529 <shift128ExtraRightJamming+0xe9>
  41d51d:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  41d524:	00 00 00 
  41d527:	eb 0a                	jmp    41d533 <shift128ExtraRightJamming+0xf3>
  41d529:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  41d530:	00 00 00 
  41d533:	48 31 c0             	xor    %rax,%rax
  41d536:	48 85 d2             	test   %rdx,%rdx
  41d539:	74 0c                	je     41d547 <shift128ExtraRightJamming+0x107>
  41d53b:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  41d542:	00 00 00 
  41d545:	eb 0a                	jmp    41d551 <shift128ExtraRightJamming+0x111>
  41d547:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  41d54e:	00 00 00 
  41d551:	48 09 f2             	or     %rsi,%rdx
  41d554:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  41d559:	48 89 11             	mov    %rdx,(%rcx)
  41d55c:	49 89 01             	mov    %rax,(%r9)
  41d55f:	4d 89 30             	mov    %r14,(%r8)
  41d562:	5b                   	pop    %rbx
  41d563:	41 5e                	pop    %r14
  41d565:	41 5f                	pop    %r15
  41d567:	c3                   	retq   
  41d568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41d56f:	00 

000000000041d570 <shortShift128Left>:
  41d570:	49 89 c9             	mov    %rcx,%r9
  41d573:	49 ba ff ff ff ff 00 	movabs $0xffffffff,%r10
  41d57a:	00 00 00 
  41d57d:	48 89 d1             	mov    %rdx,%rcx
  41d580:	4c 21 d1             	and    %r10,%rcx
  41d583:	48 89 f0             	mov    %rsi,%rax
  41d586:	48 d3 e0             	shl    %cl,%rax
  41d589:	49 21 d2             	and    %rdx,%r10
  41d58c:	49 89 00             	mov    %rax,(%r8)
  41d58f:	74 16                	je     41d5a7 <shortShift128Left+0x37>
  41d591:	4c 89 d1             	mov    %r10,%rcx
  41d594:	48 d3 e7             	shl    %cl,%rdi
  41d597:	48 f7 da             	neg    %rdx
  41d59a:	48 83 e2 3f          	and    $0x3f,%rdx
  41d59e:	48 89 d1             	mov    %rdx,%rcx
  41d5a1:	48 d3 ee             	shr    %cl,%rsi
  41d5a4:	48 09 f7             	or     %rsi,%rdi
  41d5a7:	49 89 39             	mov    %rdi,(%r9)
  41d5aa:	c3                   	retq   
  41d5ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000041d5b0 <shortShift192Left>:
  41d5b0:	41 56                	push   %r14
  41d5b2:	53                   	push   %rbx
  41d5b3:	48 89 c8             	mov    %rcx,%rax
  41d5b6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d5bd:	48 89 c3             	mov    %rax,%rbx
  41d5c0:	48 d3 e3             	shl    %cl,%rbx
  41d5c3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d5ca:	48 d3 fb             	sar    %cl,%rbx
  41d5cd:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
  41d5d2:	49 89 d3             	mov    %rdx,%r11
  41d5d5:	48 89 c1             	mov    %rax,%rcx
  41d5d8:	49 d3 e3             	shl    %cl,%r11
  41d5db:	49 89 f6             	mov    %rsi,%r14
  41d5de:	48 89 c1             	mov    %rax,%rcx
  41d5e1:	49 d3 e6             	shl    %cl,%r14
  41d5e4:	48 89 c1             	mov    %rax,%rcx
  41d5e7:	48 d3 e7             	shl    %cl,%rdi
  41d5ea:	48 85 db             	test   %rbx,%rbx
  41d5ed:	7e 19                	jle    41d608 <shortShift192Left+0x58>
  41d5ef:	48 f7 d8             	neg    %rax
  41d5f2:	48 83 e0 3f          	and    $0x3f,%rax
  41d5f6:	48 89 c1             	mov    %rax,%rcx
  41d5f9:	48 d3 ea             	shr    %cl,%rdx
  41d5fc:	49 09 d6             	or     %rdx,%r14
  41d5ff:	48 89 c1             	mov    %rax,%rcx
  41d602:	48 d3 ee             	shr    %cl,%rsi
  41d605:	48 09 f7             	or     %rsi,%rdi
  41d608:	4d 89 1a             	mov    %r11,(%r10)
  41d60b:	4d 89 31             	mov    %r14,(%r9)
  41d60e:	49 89 38             	mov    %rdi,(%r8)
  41d611:	5b                   	pop    %rbx
  41d612:	41 5e                	pop    %r14
  41d614:	c3                   	retq   
  41d615:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  41d61c:	00 00 00 00 

000000000041d620 <add128>:
  41d620:	48 01 ce             	add    %rcx,%rsi
  41d623:	48 19 c0             	sbb    %rax,%rax
  41d626:	49 89 31             	mov    %rsi,(%r9)
  41d629:	48 01 d7             	add    %rdx,%rdi
  41d62c:	48 29 c7             	sub    %rax,%rdi
  41d62f:	49 89 38             	mov    %rdi,(%r8)
  41d632:	c3                   	retq   
  41d633:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41d63a:	84 00 00 00 00 00 

000000000041d640 <add192>:
  41d640:	41 56                	push   %r14
  41d642:	53                   	push   %rbx
  41d643:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
  41d648:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
  41d64d:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  41d652:	4c 01 ca             	add    %r9,%rdx
  41d655:	48 19 c0             	sbb    %rax,%rax
  41d658:	48 83 e0 01          	and    $0x1,%rax
  41d65c:	4c 01 c6             	add    %r8,%rsi
  41d65f:	48 19 db             	sbb    %rbx,%rbx
  41d662:	48 01 cf             	add    %rcx,%rdi
  41d665:	48 01 c6             	add    %rax,%rsi
  41d668:	48 19 c0             	sbb    %rax,%rax
  41d66b:	48 29 df             	sub    %rbx,%rdi
  41d66e:	48 29 c7             	sub    %rax,%rdi
  41d671:	49 89 16             	mov    %rdx,(%r14)
  41d674:	49 89 33             	mov    %rsi,(%r11)
  41d677:	49 89 3a             	mov    %rdi,(%r10)
  41d67a:	5b                   	pop    %rbx
  41d67b:	41 5e                	pop    %r14
  41d67d:	c3                   	retq   
  41d67e:	66 90                	xchg   %ax,%ax

000000000041d680 <sub128>:
  41d680:	48 29 d7             	sub    %rdx,%rdi
  41d683:	48 29 ce             	sub    %rcx,%rsi
  41d686:	49 89 31             	mov    %rsi,(%r9)
  41d689:	48 19 c0             	sbb    %rax,%rax
  41d68c:	48 01 f8             	add    %rdi,%rax
  41d68f:	49 89 00             	mov    %rax,(%r8)
  41d692:	c3                   	retq   
  41d693:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41d69a:	84 00 00 00 00 00 

000000000041d6a0 <sub192>:
  41d6a0:	53                   	push   %rbx
  41d6a1:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
  41d6a6:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
  41d6ab:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
  41d6b0:	4c 29 ca             	sub    %r9,%rdx
  41d6b3:	48 19 c0             	sbb    %rax,%rax
  41d6b6:	48 83 e0 01          	and    $0x1,%rax
  41d6ba:	48 29 cf             	sub    %rcx,%rdi
  41d6bd:	4c 29 c6             	sub    %r8,%rsi
  41d6c0:	48 19 c9             	sbb    %rcx,%rcx
  41d6c3:	48 29 c6             	sub    %rax,%rsi
  41d6c6:	48 19 c0             	sbb    %rax,%rax
  41d6c9:	48 01 f9             	add    %rdi,%rcx
  41d6cc:	48 01 c1             	add    %rax,%rcx
  41d6cf:	48 89 13             	mov    %rdx,(%rbx)
  41d6d2:	49 89 33             	mov    %rsi,(%r11)
  41d6d5:	49 89 0a             	mov    %rcx,(%r10)
  41d6d8:	5b                   	pop    %rbx
  41d6d9:	c3                   	retq   
  41d6da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041d6e0 <mul64To128>:
  41d6e0:	49 89 c8             	mov    %rcx,%r8
  41d6e3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d6ea:	48 89 f8             	mov    %rdi,%rax
  41d6ed:	48 d3 e8             	shr    %cl,%rax
  41d6f0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d6f7:	49 89 f1             	mov    %rsi,%r9
  41d6fa:	49 d3 e9             	shr    %cl,%r9
  41d6fd:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  41d704:	00 00 00 
  41d707:	48 21 cf             	and    %rcx,%rdi
  41d70a:	48 21 ce             	and    %rcx,%rsi
  41d70d:	49 89 f2             	mov    %rsi,%r10
  41d710:	4c 0f af d7          	imul   %rdi,%r10
  41d714:	49 0f af f9          	imul   %r9,%rdi
  41d718:	48 0f af f0          	imul   %rax,%rsi
  41d71c:	4c 0f af c8          	imul   %rax,%r9
  41d720:	48 01 fe             	add    %rdi,%rsi
  41d723:	48 19 c0             	sbb    %rax,%rax
  41d726:	48 bf 00 00 00 00 01 	movabs $0x100000000,%rdi
  41d72d:	00 00 00 
  41d730:	48 21 c7             	and    %rax,%rdi
  41d733:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d73a:	48 89 f0             	mov    %rsi,%rax
  41d73d:	48 d3 e8             	shr    %cl,%rax
  41d740:	48 09 f8             	or     %rdi,%rax
  41d743:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d74a:	48 d3 e6             	shl    %cl,%rsi
  41d74d:	4c 01 d6             	add    %r10,%rsi
  41d750:	48 19 c9             	sbb    %rcx,%rcx
  41d753:	48 83 e1 01          	and    $0x1,%rcx
  41d757:	4c 01 c9             	add    %r9,%rcx
  41d75a:	48 01 c1             	add    %rax,%rcx
  41d75d:	49 89 30             	mov    %rsi,(%r8)
  41d760:	48 89 0a             	mov    %rcx,(%rdx)
  41d763:	c3                   	retq   
  41d764:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41d76b:	00 00 00 00 00 

000000000041d770 <mul128By64To192>:
  41d770:	41 57                	push   %r15
  41d772:	41 56                	push   %r14
  41d774:	41 55                	push   %r13
  41d776:	41 54                	push   %r12
  41d778:	53                   	push   %rbx
  41d779:	49 89 ca             	mov    %rcx,%r10
  41d77c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d783:	49 89 f5             	mov    %rsi,%r13
  41d786:	49 d3 ed             	shr    %cl,%r13
  41d789:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d790:	49 89 d3             	mov    %rdx,%r11
  41d793:	49 d3 eb             	shr    %cl,%r11
  41d796:	49 be ff ff ff ff 00 	movabs $0xffffffff,%r14
  41d79d:	00 00 00 
  41d7a0:	4c 21 f6             	and    %r14,%rsi
  41d7a3:	4c 21 f2             	and    %r14,%rdx
  41d7a6:	49 89 d4             	mov    %rdx,%r12
  41d7a9:	4c 0f af e6          	imul   %rsi,%r12
  41d7ad:	49 0f af f3          	imul   %r11,%rsi
  41d7b1:	48 89 d3             	mov    %rdx,%rbx
  41d7b4:	49 0f af dd          	imul   %r13,%rbx
  41d7b8:	4d 0f af eb          	imul   %r11,%r13
  41d7bc:	48 01 f3             	add    %rsi,%rbx
  41d7bf:	48 19 f6             	sbb    %rsi,%rsi
  41d7c2:	49 bf 00 00 00 00 01 	movabs $0x100000000,%r15
  41d7c9:	00 00 00 
  41d7cc:	4c 21 fe             	and    %r15,%rsi
  41d7cf:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d7d6:	48 89 d8             	mov    %rbx,%rax
  41d7d9:	48 d3 e8             	shr    %cl,%rax
  41d7dc:	48 09 f0             	or     %rsi,%rax
  41d7df:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d7e6:	48 d3 e3             	shl    %cl,%rbx
  41d7e9:	4c 01 e3             	add    %r12,%rbx
  41d7ec:	4d 19 e4             	sbb    %r12,%r12
  41d7ef:	49 83 e4 01          	and    $0x1,%r12
  41d7f3:	4d 01 ec             	add    %r13,%r12
  41d7f6:	49 01 c4             	add    %rax,%r12
  41d7f9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d800:	48 89 f8             	mov    %rdi,%rax
  41d803:	48 d3 e8             	shr    %cl,%rax
  41d806:	4c 21 f7             	and    %r14,%rdi
  41d809:	49 89 d6             	mov    %rdx,%r14
  41d80c:	4c 0f af f7          	imul   %rdi,%r14
  41d810:	49 0f af fb          	imul   %r11,%rdi
  41d814:	48 0f af d0          	imul   %rax,%rdx
  41d818:	49 0f af c3          	imul   %r11,%rax
  41d81c:	48 01 fa             	add    %rdi,%rdx
  41d81f:	48 19 ff             	sbb    %rdi,%rdi
  41d822:	4c 21 ff             	and    %r15,%rdi
  41d825:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d82c:	48 89 d6             	mov    %rdx,%rsi
  41d82f:	48 d3 ee             	shr    %cl,%rsi
  41d832:	48 09 fe             	or     %rdi,%rsi
  41d835:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d83c:	48 d3 e2             	shl    %cl,%rdx
  41d83f:	4c 01 f2             	add    %r14,%rdx
  41d842:	48 19 c9             	sbb    %rcx,%rcx
  41d845:	48 83 e1 01          	and    $0x1,%rcx
  41d849:	48 01 c1             	add    %rax,%rcx
  41d84c:	48 01 f1             	add    %rsi,%rcx
  41d84f:	4c 01 e2             	add    %r12,%rdx
  41d852:	48 19 c0             	sbb    %rax,%rax
  41d855:	48 29 c1             	sub    %rax,%rcx
  41d858:	49 89 19             	mov    %rbx,(%r9)
  41d85b:	49 89 10             	mov    %rdx,(%r8)
  41d85e:	49 89 0a             	mov    %rcx,(%r10)
  41d861:	5b                   	pop    %rbx
  41d862:	41 5c                	pop    %r12
  41d864:	41 5d                	pop    %r13
  41d866:	41 5e                	pop    %r14
  41d868:	41 5f                	pop    %r15
  41d86a:	c3                   	retq   
  41d86b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000041d870 <mul128To256>:
  41d870:	41 57                	push   %r15
  41d872:	41 56                	push   %r14
  41d874:	41 55                	push   %r13
  41d876:	41 54                	push   %r12
  41d878:	53                   	push   %rbx
  41d879:	4c 89 4c 24 f0       	mov    %r9,-0x10(%rsp)
  41d87e:	4c 89 44 24 f8       	mov    %r8,-0x8(%rsp)
  41d883:	48 89 c8             	mov    %rcx,%rax
  41d886:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d88d:	49 89 f5             	mov    %rsi,%r13
  41d890:	49 d3 ed             	shr    %cl,%r13
  41d893:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d89a:	48 89 c3             	mov    %rax,%rbx
  41d89d:	48 d3 eb             	shr    %cl,%rbx
  41d8a0:	48 89 5c 24 e8       	mov    %rbx,-0x18(%rsp)
  41d8a5:	49 bf ff ff ff ff 00 	movabs $0xffffffff,%r15
  41d8ac:	00 00 00 
  41d8af:	4c 21 fe             	and    %r15,%rsi
  41d8b2:	4c 21 f8             	and    %r15,%rax
  41d8b5:	49 89 c0             	mov    %rax,%r8
  41d8b8:	4c 0f af c6          	imul   %rsi,%r8
  41d8bc:	48 89 d9             	mov    %rbx,%rcx
  41d8bf:	48 0f af ce          	imul   %rsi,%rcx
  41d8c3:	49 89 c2             	mov    %rax,%r10
  41d8c6:	4d 0f af d5          	imul   %r13,%r10
  41d8ca:	49 89 de             	mov    %rbx,%r14
  41d8cd:	4d 0f af f5          	imul   %r13,%r14
  41d8d1:	49 01 ca             	add    %rcx,%r10
  41d8d4:	4d 19 e4             	sbb    %r12,%r12
  41d8d7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d8de:	4c 89 d3             	mov    %r10,%rbx
  41d8e1:	48 d3 eb             	shr    %cl,%rbx
  41d8e4:	48 b9 00 00 00 00 01 	movabs $0x100000000,%rcx
  41d8eb:	00 00 00 
  41d8ee:	49 21 cc             	and    %rcx,%r12
  41d8f1:	49 89 cb             	mov    %rcx,%r11
  41d8f4:	4c 09 e3             	or     %r12,%rbx
  41d8f7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d8fe:	49 d3 e2             	shl    %cl,%r10
  41d901:	4d 01 c2             	add    %r8,%r10
  41d904:	4d 19 c0             	sbb    %r8,%r8
  41d907:	49 83 e0 01          	and    $0x1,%r8
  41d90b:	4d 01 f0             	add    %r14,%r8
  41d90e:	49 01 d8             	add    %rbx,%r8
  41d911:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d918:	48 89 d3             	mov    %rdx,%rbx
  41d91b:	4c 21 fa             	and    %r15,%rdx
  41d91e:	48 d3 eb             	shr    %cl,%rbx
  41d921:	49 89 d6             	mov    %rdx,%r14
  41d924:	49 89 d1             	mov    %rdx,%r9
  41d927:	4c 0f af f6          	imul   %rsi,%r14
  41d92b:	48 0f af f3          	imul   %rbx,%rsi
  41d92f:	4d 0f af cd          	imul   %r13,%r9
  41d933:	4c 0f af eb          	imul   %rbx,%r13
  41d937:	49 01 f1             	add    %rsi,%r9
  41d93a:	48 19 f6             	sbb    %rsi,%rsi
  41d93d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d944:	4d 89 cc             	mov    %r9,%r12
  41d947:	49 d3 ec             	shr    %cl,%r12
  41d94a:	4c 21 de             	and    %r11,%rsi
  41d94d:	49 09 f4             	or     %rsi,%r12
  41d950:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d957:	49 d3 e1             	shl    %cl,%r9
  41d95a:	4d 01 f1             	add    %r14,%r9
  41d95d:	4d 19 f6             	sbb    %r14,%r14
  41d960:	49 83 e6 01          	and    $0x1,%r14
  41d964:	4d 01 ee             	add    %r13,%r14
  41d967:	4d 01 e6             	add    %r12,%r14
  41d96a:	4d 01 c1             	add    %r8,%r9
  41d96d:	48 19 c9             	sbb    %rcx,%rcx
  41d970:	49 29 ce             	sub    %rcx,%r14
  41d973:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d97a:	49 89 fd             	mov    %rdi,%r13
  41d97d:	49 d3 ed             	shr    %cl,%r13
  41d980:	4c 21 ff             	and    %r15,%rdi
  41d983:	49 89 d0             	mov    %rdx,%r8
  41d986:	4c 0f af c7          	imul   %rdi,%r8
  41d98a:	48 89 d9             	mov    %rbx,%rcx
  41d98d:	48 0f af cf          	imul   %rdi,%rcx
  41d991:	49 0f af d5          	imul   %r13,%rdx
  41d995:	49 0f af dd          	imul   %r13,%rbx
  41d999:	48 01 ca             	add    %rcx,%rdx
  41d99c:	4d 19 ff             	sbb    %r15,%r15
  41d99f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d9a6:	48 89 d6             	mov    %rdx,%rsi
  41d9a9:	48 d3 ee             	shr    %cl,%rsi
  41d9ac:	4d 89 dc             	mov    %r11,%r12
  41d9af:	4d 21 e7             	and    %r12,%r15
  41d9b2:	4c 09 fe             	or     %r15,%rsi
  41d9b5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41d9bc:	48 d3 e2             	shl    %cl,%rdx
  41d9bf:	4c 01 c2             	add    %r8,%rdx
  41d9c2:	4d 19 c0             	sbb    %r8,%r8
  41d9c5:	49 83 e0 01          	and    $0x1,%r8
  41d9c9:	49 01 d8             	add    %rbx,%r8
  41d9cc:	49 01 f0             	add    %rsi,%r8
  41d9cf:	4c 01 f2             	add    %r14,%rdx
  41d9d2:	48 19 c9             	sbb    %rcx,%rcx
  41d9d5:	49 29 c8             	sub    %rcx,%r8
  41d9d8:	48 89 c3             	mov    %rax,%rbx
  41d9db:	48 0f af df          	imul   %rdi,%rbx
  41d9df:	48 8b 4c 24 e8       	mov    -0x18(%rsp),%rcx
  41d9e4:	48 0f af f9          	imul   %rcx,%rdi
  41d9e8:	49 0f af c5          	imul   %r13,%rax
  41d9ec:	4c 0f af e9          	imul   %rcx,%r13
  41d9f0:	48 01 f8             	add    %rdi,%rax
  41d9f3:	48 19 f6             	sbb    %rsi,%rsi
  41d9f6:	4c 21 e6             	and    %r12,%rsi
  41d9f9:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
  41d9fe:	4c 89 11             	mov    %r10,(%rcx)
  41da01:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41da08:	48 89 c7             	mov    %rax,%rdi
  41da0b:	48 d3 ef             	shr    %cl,%rdi
  41da0e:	48 09 f7             	or     %rsi,%rdi
  41da11:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41da18:	48 d3 e0             	shl    %cl,%rax
  41da1b:	48 01 d8             	add    %rbx,%rax
  41da1e:	48 19 c9             	sbb    %rcx,%rcx
  41da21:	48 83 e1 01          	and    $0x1,%rcx
  41da25:	4c 01 e9             	add    %r13,%rcx
  41da28:	48 01 f9             	add    %rdi,%rcx
  41da2b:	4c 01 c8             	add    %r9,%rax
  41da2e:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  41da33:	48 89 06             	mov    %rax,(%rsi)
  41da36:	48 19 c0             	sbb    %rax,%rax
  41da39:	48 29 c1             	sub    %rax,%rcx
  41da3c:	48 01 d1             	add    %rdx,%rcx
  41da3f:	48 8b 44 24 f0       	mov    -0x10(%rsp),%rax
  41da44:	48 89 08             	mov    %rcx,(%rax)
  41da47:	48 19 c0             	sbb    %rax,%rax
  41da4a:	49 29 c0             	sub    %rax,%r8
  41da4d:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
  41da52:	4c 89 00             	mov    %r8,(%rax)
  41da55:	5b                   	pop    %rbx
  41da56:	41 5c                	pop    %r12
  41da58:	41 5d                	pop    %r13
  41da5a:	41 5e                	pop    %r14
  41da5c:	41 5f                	pop    %r15
  41da5e:	c3                   	retq   
  41da5f:	90                   	nop

000000000041da60 <eq128>:
  41da60:	48 39 d7             	cmp    %rdx,%rdi
  41da63:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  41da6a:	00 00 00 
  41da6d:	48 bf 01 00 00 00 00 	movabs $0x1,%rdi
  41da74:	00 00 00 
  41da77:	48 89 d0             	mov    %rdx,%rax
  41da7a:	75 03                	jne    41da7f <eq128+0x1f>
  41da7c:	48 89 f8             	mov    %rdi,%rax
  41da7f:	48 39 ce             	cmp    %rcx,%rsi
  41da82:	75 03                	jne    41da87 <eq128+0x27>
  41da84:	48 89 fa             	mov    %rdi,%rdx
  41da87:	48 21 d0             	and    %rdx,%rax
  41da8a:	c3                   	retq   
  41da8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000041da90 <le128>:
  41da90:	48 39 d7             	cmp    %rdx,%rdi
  41da93:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  41da9a:	72 27                	jb     41dac3 <le128+0x33>
  41da9c:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  41daa3:	00 00 00 
  41daa6:	48 bf 01 00 00 00 00 	movabs $0x1,%rdi
  41daad:	00 00 00 
  41dab0:	48 89 d0             	mov    %rdx,%rax
  41dab3:	75 03                	jne    41dab8 <le128+0x28>
  41dab5:	48 89 f8             	mov    %rdi,%rax
  41dab8:	48 39 ce             	cmp    %rcx,%rsi
  41dabb:	77 03                	ja     41dac0 <le128+0x30>
  41dabd:	48 89 fa             	mov    %rdi,%rdx
  41dac0:	48 21 d0             	and    %rdx,%rax
  41dac3:	c3                   	retq   
  41dac4:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41dacb:	00 00 00 00 00 

000000000041dad0 <lt128>:
  41dad0:	48 39 d7             	cmp    %rdx,%rdi
  41dad3:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  41dada:	72 21                	jb     41dafd <lt128+0x2d>
  41dadc:	75 0c                	jne    41daea <lt128+0x1a>
  41dade:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  41dae5:	00 00 00 
  41dae8:	eb 0a                	jmp    41daf4 <lt128+0x24>
  41daea:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  41daf1:	00 00 00 
  41daf4:	48 39 ce             	cmp    %rcx,%rsi
  41daf7:	48 19 c0             	sbb    %rax,%rax
  41dafa:	48 21 d0             	and    %rdx,%rax
  41dafd:	c3                   	retq   
  41dafe:	66 90                	xchg   %ax,%ax

000000000041db00 <ne128>:
  41db00:	48 39 ce             	cmp    %rcx,%rsi
  41db03:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41db0a:	00 00 00 
  41db0d:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  41db14:	00 00 00 
  41db17:	48 89 c8             	mov    %rcx,%rax
  41db1a:	74 03                	je     41db1f <ne128+0x1f>
  41db1c:	48 89 f0             	mov    %rsi,%rax
  41db1f:	48 39 d7             	cmp    %rdx,%rdi
  41db22:	74 03                	je     41db27 <ne128+0x27>
  41db24:	48 89 f1             	mov    %rsi,%rcx
  41db27:	48 09 c8             	or     %rcx,%rax
  41db2a:	c3                   	retq   
  41db2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000041db30 <float_raise>:
  41db30:	48 0f be 05 a9 eb 20 	movsbq 0x20eba9(%rip),%rax        # 62c6e1 <float_exception_flags>
  41db37:	00 
  41db38:	48 09 f8             	or     %rdi,%rax
  41db3b:	88 05 a0 eb 20 00    	mov    %al,0x20eba0(%rip)        # 62c6e1 <float_exception_flags>
  41db41:	c3                   	retq   
  41db42:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41db49:	1f 84 00 00 00 00 00 

000000000041db50 <float32_is_nan>:
  41db50:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  41db57:	48 81 ff 00 00 80 7f 	cmp    $0x7f800000,%rdi
  41db5e:	76 0b                	jbe    41db6b <float32_is_nan+0x1b>
  41db60:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  41db67:	00 00 00 
  41db6a:	c3                   	retq   
  41db6b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  41db72:	00 00 00 
  41db75:	c3                   	retq   
  41db76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41db7d:	00 00 00 

000000000041db80 <float32_is_signaling_nan>:
  41db80:	48 89 f9             	mov    %rdi,%rcx
  41db83:	48 81 e1 00 00 c0 7f 	and    $0x7fc00000,%rcx
  41db8a:	48 31 c0             	xor    %rax,%rax
  41db8d:	48 81 f9 00 00 80 7f 	cmp    $0x7f800000,%rcx
  41db94:	75 13                	jne    41dba9 <float32_is_signaling_nan+0x29>
  41db96:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  41db9d:	74 0b                	je     41dbaa <float32_is_signaling_nan+0x2a>
  41db9f:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  41dba6:	00 00 00 
  41dba9:	c3                   	retq   
  41dbaa:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  41dbb1:	00 00 00 
  41dbb4:	c3                   	retq   
  41dbb5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  41dbbc:	00 00 00 00 

000000000041dbc0 <float64_is_nan>:
  41dbc0:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  41dbc7:	ff ff 7f 
  41dbca:	48 21 f8             	and    %rdi,%rax
  41dbcd:	48 b9 00 00 00 00 00 	movabs $0x7ff0000000000000,%rcx
  41dbd4:	00 f0 7f 
  41dbd7:	48 39 c8             	cmp    %rcx,%rax
  41dbda:	76 0b                	jbe    41dbe7 <float64_is_nan+0x27>
  41dbdc:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  41dbe3:	00 00 00 
  41dbe6:	c3                   	retq   
  41dbe7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  41dbee:	00 00 00 
  41dbf1:	c3                   	retq   
  41dbf2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41dbf9:	1f 84 00 00 00 00 00 

000000000041dc00 <float64_is_signaling_nan>:
  41dc00:	48 b9 00 00 00 00 00 	movabs $0x7ff8000000000000,%rcx
  41dc07:	00 f8 7f 
  41dc0a:	48 21 f9             	and    %rdi,%rcx
  41dc0d:	48 31 c0             	xor    %rax,%rax
  41dc10:	48 ba 00 00 00 00 00 	movabs $0x7ff0000000000000,%rdx
  41dc17:	00 f0 7f 
  41dc1a:	48 39 d1             	cmp    %rdx,%rcx
  41dc1d:	75 19                	jne    41dc38 <float64_is_signaling_nan+0x38>
  41dc1f:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffff,%rax
  41dc26:	ff 07 00 
  41dc29:	48 85 c7             	test   %rax,%rdi
  41dc2c:	74 0b                	je     41dc39 <float64_is_signaling_nan+0x39>
  41dc2e:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  41dc35:	00 00 00 
  41dc38:	c3                   	retq   
  41dc39:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  41dc40:	00 00 00 
  41dc43:	c3                   	retq   
  41dc44:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41dc4b:	00 00 00 00 00 

000000000041dc50 <extractFloat32Frac>:
  41dc50:	48 81 e7 ff ff 7f 00 	and    $0x7fffff,%rdi
  41dc57:	48 89 f8             	mov    %rdi,%rax
  41dc5a:	c3                   	retq   
  41dc5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000041dc60 <extractFloat32Exp>:
  41dc60:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41dc67:	48 d3 ef             	shr    %cl,%rdi
  41dc6a:	48 81 e7 ff 00 00 00 	and    $0xff,%rdi
  41dc71:	48 89 f8             	mov    %rdi,%rax
  41dc74:	c3                   	retq   
  41dc75:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  41dc7c:	00 00 00 00 

000000000041dc80 <extractFloat32Sign>:
  41dc80:	48 b8 00 00 00 80 00 	movabs $0x80000000,%rax
  41dc87:	00 00 00 
  41dc8a:	48 21 f8             	and    %rdi,%rax
  41dc8d:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41dc94:	48 d3 e8             	shr    %cl,%rax
  41dc97:	c3                   	retq   
  41dc98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41dc9f:	00 

000000000041dca0 <packFloat32>:
  41dca0:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41dca7:	48 d3 e7             	shl    %cl,%rdi
  41dcaa:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41dcb1:	48 d3 e6             	shl    %cl,%rsi
  41dcb4:	48 01 fe             	add    %rdi,%rsi
  41dcb7:	48 8d 04 16          	lea    (%rsi,%rdx,1),%rax
  41dcbb:	c3                   	retq   
  41dcbc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041dcc0 <extractFloat64Frac>:
  41dcc0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
  41dcc7:	ff 0f 00 
  41dcca:	48 21 f8             	and    %rdi,%rax
  41dccd:	c3                   	retq   
  41dcce:	66 90                	xchg   %ax,%ax

000000000041dcd0 <extractFloat64Exp>:
  41dcd0:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  41dcd7:	48 d3 ef             	shr    %cl,%rdi
  41dcda:	48 81 e7 ff 07 00 00 	and    $0x7ff,%rdi
  41dce1:	48 89 f8             	mov    %rdi,%rax
  41dce4:	c3                   	retq   
  41dce5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  41dcec:	00 00 00 00 

000000000041dcf0 <extractFloat64Sign>:
  41dcf0:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  41dcf7:	48 d3 ef             	shr    %cl,%rdi
  41dcfa:	48 89 f8             	mov    %rdi,%rax
  41dcfd:	c3                   	retq   
  41dcfe:	66 90                	xchg   %ax,%ax

000000000041dd00 <packFloat64>:
  41dd00:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  41dd07:	48 d3 e7             	shl    %cl,%rdi
  41dd0a:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  41dd11:	48 d3 e6             	shl    %cl,%rsi
  41dd14:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
  41dd18:	48 01 f0             	add    %rsi,%rax
  41dd1b:	c3                   	retq   
  41dd1c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041dd20 <int32_to_float32>:
  41dd20:	49 89 f9             	mov    %rdi,%r9
  41dd23:	48 31 c0             	xor    %rax,%rax
  41dd26:	48 be ff ff ff ff 00 	movabs $0xffffffff,%rsi
  41dd2d:	00 00 00 
  41dd30:	49 85 f1             	test   %rsi,%r9
  41dd33:	74 1f                	je     41dd54 <int32_to_float32+0x34>
  41dd35:	4c 89 c8             	mov    %r9,%rax
  41dd38:	48 21 f0             	and    %rsi,%rax
  41dd3b:	48 bf 00 00 00 80 00 	movabs $0x80000000,%rdi
  41dd42:	00 00 00 
  41dd45:	48 39 f8             	cmp    %rdi,%rax
  41dd48:	75 0b                	jne    41dd55 <int32_to_float32+0x35>
  41dd4a:	48 b8 00 00 00 cf 00 	movabs $0xcf000000,%rax
  41dd51:	00 00 00 
  41dd54:	c3                   	retq   
  41dd55:	4c 21 cf             	and    %r9,%rdi
  41dd58:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41dd5f:	48 d3 ef             	shr    %cl,%rdi
  41dd62:	48 85 ff             	test   %rdi,%rdi
  41dd65:	74 03                	je     41dd6a <int32_to_float32+0x4a>
  41dd67:	49 f7 d9             	neg    %r9
  41dd6a:	4c 89 ca             	mov    %r9,%rdx
  41dd6d:	48 21 f2             	and    %rsi,%rdx
  41dd70:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
  41dd77:	4d 19 c0             	sbb    %r8,%r8
  41dd7a:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  41dd81:	4c 89 c8             	mov    %r9,%rax
  41dd84:	48 d3 e0             	shl    %cl,%rax
  41dd87:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
  41dd8e:	72 03                	jb     41dd93 <int32_to_float32+0x73>
  41dd90:	4c 89 c8             	mov    %r9,%rax
  41dd93:	48 21 c6             	and    %rax,%rsi
  41dd96:	49 83 e0 10          	and    $0x10,%r8
  41dd9a:	48 81 fe ff ff ff 00 	cmp    $0xffffff,%rsi
  41dda1:	77 0e                	ja     41ddb1 <int32_to_float32+0x91>
  41dda3:	49 83 c8 08          	or     $0x8,%r8
  41dda7:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41ddae:	48 d3 e0             	shl    %cl,%rax
  41ddb1:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
  41ddb8:	00 00 00 
  41ddbb:	48 21 c2             	and    %rax,%rdx
  41ddbe:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  41ddc5:	48 d3 ea             	shr    %cl,%rdx
  41ddc8:	48 0f be 82 f0 8e 42 	movsbq 0x428ef0(%rdx),%rax
  41ddcf:	00 
  41ddd0:	49 8d 44 00 ff       	lea    -0x1(%r8,%rax,1),%rax
  41ddd5:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41dddc:	48 d3 e0             	shl    %cl,%rax
  41dddf:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41dde6:	48 d3 f8             	sar    %cl,%rax
  41dde9:	48 c7 c6 9c 00 00 00 	mov    $0x9c,%rsi
  41ddf0:	48 29 c6             	sub    %rax,%rsi
  41ddf3:	48 89 c1             	mov    %rax,%rcx
  41ddf6:	49 d3 e1             	shl    %cl,%r9
  41ddf9:	4c 89 ca             	mov    %r9,%rdx
  41ddfc:	e9 8f 02 00 00       	jmpq   41e090 <roundAndPackFloat32>
  41de01:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41de08:	0f 1f 84 00 00 00 00 
  41de0f:	00 

000000000041de10 <int32_to_float64>:
  41de10:	48 31 c0             	xor    %rax,%rax
  41de13:	48 ba ff ff ff ff 00 	movabs $0xffffffff,%rdx
  41de1a:	00 00 00 
  41de1d:	48 85 d7             	test   %rdx,%rdi
  41de20:	0f 84 c8 00 00 00    	je     41deee <int32_to_float64+0xde>
  41de26:	48 b8 00 00 00 80 00 	movabs $0x80000000,%rax
  41de2d:	00 00 00 
  41de30:	48 21 f8             	and    %rdi,%rax
  41de33:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41de3a:	48 d3 e8             	shr    %cl,%rax
  41de3d:	48 85 c0             	test   %rax,%rax
  41de40:	74 03                	je     41de45 <int32_to_float64+0x35>
  41de42:	48 f7 df             	neg    %rdi
  41de45:	49 89 f9             	mov    %rdi,%r9
  41de48:	49 21 d1             	and    %rdx,%r9
  41de4b:	49 81 f9 00 00 01 00 	cmp    $0x10000,%r9
  41de52:	4d 19 c0             	sbb    %r8,%r8
  41de55:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  41de5c:	48 89 fe             	mov    %rdi,%rsi
  41de5f:	48 d3 e6             	shl    %cl,%rsi
  41de62:	49 81 f9 00 00 01 00 	cmp    $0x10000,%r9
  41de69:	72 03                	jb     41de6e <int32_to_float64+0x5e>
  41de6b:	48 89 fe             	mov    %rdi,%rsi
  41de6e:	48 21 f2             	and    %rsi,%rdx
  41de71:	49 83 e0 10          	and    $0x10,%r8
  41de75:	48 81 fa ff ff ff 00 	cmp    $0xffffff,%rdx
  41de7c:	77 0e                	ja     41de8c <int32_to_float64+0x7c>
  41de7e:	49 83 c8 08          	or     $0x8,%r8
  41de82:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41de89:	48 d3 e6             	shl    %cl,%rsi
  41de8c:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
  41de93:	00 00 00 
  41de96:	48 21 f2             	and    %rsi,%rdx
  41de99:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  41dea0:	48 d3 ea             	shr    %cl,%rdx
  41dea3:	48 0f be 8a f0 8e 42 	movsbq 0x428ef0(%rdx),%rcx
  41deaa:	00 
  41deab:	49 8d 54 08 15       	lea    0x15(%r8,%rcx,1),%rdx
  41deb0:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41deb7:	48 d3 e2             	shl    %cl,%rdx
  41deba:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41dec1:	48 d3 fa             	sar    %cl,%rdx
  41dec4:	48 c7 c6 32 04 00 00 	mov    $0x432,%rsi
  41decb:	48 29 d6             	sub    %rdx,%rsi
  41dece:	48 89 d1             	mov    %rdx,%rcx
  41ded1:	49 d3 e1             	shl    %cl,%r9
  41ded4:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  41dedb:	48 d3 e0             	shl    %cl,%rax
  41dede:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  41dee5:	48 d3 e6             	shl    %cl,%rsi
  41dee8:	4c 01 c8             	add    %r9,%rax
  41deeb:	48 01 f0             	add    %rsi,%rax
  41deee:	c3                   	retq   
  41deef:	90                   	nop

000000000041def0 <int64_to_float32>:
  41def0:	49 89 fa             	mov    %rdi,%r10
  41def3:	48 31 c0             	xor    %rax,%rax
  41def6:	4d 85 d2             	test   %r10,%r10
  41def9:	0f 84 0d 01 00 00    	je     41e00c <int64_to_float32+0x11c>
  41deff:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  41df06:	4c 89 d7             	mov    %r10,%rdi
  41df09:	48 d3 ef             	shr    %cl,%rdi
  41df0c:	48 85 ff             	test   %rdi,%rdi
  41df0f:	74 03                	je     41df14 <int64_to_float32+0x24>
  41df11:	49 f7 da             	neg    %r10
  41df14:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41df1b:	4c 89 d0             	mov    %r10,%rax
  41df1e:	48 d3 e8             	shr    %cl,%rax
  41df21:	48 85 c0             	test   %rax,%rax
  41df24:	75 0c                	jne    41df32 <int64_to_float32+0x42>
  41df26:	49 b9 01 00 00 00 00 	movabs $0x1,%r9
  41df2d:	00 00 00 
  41df30:	eb 0a                	jmp    41df3c <int64_to_float32+0x4c>
  41df32:	49 b9 00 00 00 00 00 	movabs $0x0,%r9
  41df39:	00 00 00 
  41df3c:	4d 89 d3             	mov    %r10,%r11
  41df3f:	74 03                	je     41df44 <int64_to_float32+0x54>
  41df41:	49 89 c3             	mov    %rax,%r11
  41df44:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  41df4b:	00 00 00 
  41df4e:	4c 89 de             	mov    %r11,%rsi
  41df51:	4c 21 c6             	and    %r8,%rsi
  41df54:	48 81 fe 00 00 01 00 	cmp    $0x10000,%rsi
  41df5b:	48 19 c0             	sbb    %rax,%rax
  41df5e:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  41df65:	4c 89 da             	mov    %r11,%rdx
  41df68:	48 d3 e2             	shl    %cl,%rdx
  41df6b:	48 81 fe 00 00 01 00 	cmp    $0x10000,%rsi
  41df72:	72 03                	jb     41df77 <int64_to_float32+0x87>
  41df74:	4c 89 da             	mov    %r11,%rdx
  41df77:	48 c7 c1 05 00 00 00 	mov    $0x5,%rcx
  41df7e:	49 d3 e1             	shl    %cl,%r9
  41df81:	48 89 d1             	mov    %rdx,%rcx
  41df84:	4c 21 c1             	and    %r8,%rcx
  41df87:	48 83 e0 10          	and    $0x10,%rax
  41df8b:	48 81 f9 ff ff ff 00 	cmp    $0xffffff,%rcx
  41df92:	77 0e                	ja     41dfa2 <int64_to_float32+0xb2>
  41df94:	48 83 c8 08          	or     $0x8,%rax
  41df98:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41df9f:	48 d3 e2             	shl    %cl,%rdx
  41dfa2:	48 be 00 00 00 ff 00 	movabs $0xff000000,%rsi
  41dfa9:	00 00 00 
  41dfac:	48 21 d6             	and    %rdx,%rsi
  41dfaf:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  41dfb6:	48 d3 ee             	shr    %cl,%rsi
  41dfb9:	48 0f be b6 f0 8e 42 	movsbq 0x428ef0(%rsi),%rsi
  41dfc0:	00 
  41dfc1:	4c 01 c8             	add    %r9,%rax
  41dfc4:	48 8d 54 06 d8       	lea    -0x28(%rsi,%rax,1),%rdx
  41dfc9:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41dfd0:	48 d3 e2             	shl    %cl,%rdx
  41dfd3:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41dfda:	48 d3 fa             	sar    %cl,%rdx
  41dfdd:	48 85 d2             	test   %rdx,%rdx
  41dfe0:	78 2b                	js     41e00d <int64_to_float32+0x11d>
  41dfe2:	48 c7 c0 95 00 00 00 	mov    $0x95,%rax
  41dfe9:	48 29 d0             	sub    %rdx,%rax
  41dfec:	48 89 d1             	mov    %rdx,%rcx
  41dfef:	49 d3 e2             	shl    %cl,%r10
  41dff2:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41dff9:	48 d3 e7             	shl    %cl,%rdi
  41dffc:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41e003:	48 d3 e0             	shl    %cl,%rax
  41e006:	48 01 f8             	add    %rdi,%rax
  41e009:	4c 01 d0             	add    %r10,%rax
  41e00c:	c3                   	retq   
  41e00d:	48 01 f0             	add    %rsi,%rax
  41e010:	48 83 c0 df          	add    $0xffffffffffffffdf,%rax
  41e014:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41e01b:	48 d3 e0             	shl    %cl,%rax
  41e01e:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41e025:	48 d3 f8             	sar    %cl,%rax
  41e028:	48 89 c1             	mov    %rax,%rcx
  41e02b:	48 85 c0             	test   %rax,%rax
  41e02e:	78 08                	js     41e038 <int64_to_float32+0x148>
  41e030:	49 d3 e2             	shl    %cl,%r10
  41e033:	4c 89 d2             	mov    %r10,%rdx
  41e036:	eb 40                	jmp    41e078 <int64_to_float32+0x188>
  41e038:	48 f7 d9             	neg    %rcx
  41e03b:	48 83 f9 3f          	cmp    $0x3f,%rcx
  41e03f:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  41e046:	7f 30                	jg     41e078 <int64_to_float32+0x188>
  41e048:	4c 21 c1             	and    %r8,%rcx
  41e04b:	4c 89 d6             	mov    %r10,%rsi
  41e04e:	48 d3 ee             	shr    %cl,%rsi
  41e051:	48 89 c1             	mov    %rax,%rcx
  41e054:	49 d3 e2             	shl    %cl,%r10
  41e057:	4d 85 d2             	test   %r10,%r10
  41e05a:	74 0f                	je     41e06b <int64_to_float32+0x17b>
  41e05c:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  41e063:	00 00 00 
  41e066:	48 09 f2             	or     %rsi,%rdx
  41e069:	eb 0d                	jmp    41e078 <int64_to_float32+0x188>
  41e06b:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  41e072:	00 00 00 
  41e075:	48 09 f2             	or     %rsi,%rdx
  41e078:	48 c7 c6 9c 00 00 00 	mov    $0x9c,%rsi
  41e07f:	48 29 c6             	sub    %rax,%rsi
  41e082:	eb 0c                	jmp    41e090 <roundAndPackFloat32>
  41e084:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41e08b:	00 00 00 00 00 

000000000041e090 <roundAndPackFloat32>:
  41e090:	41 57                	push   %r15
  41e092:	41 56                	push   %r14
  41e094:	53                   	push   %rbx
  41e095:	44 0f b6 15 43 e6 20 	movzbl 0x20e643(%rip),%r10d        # 62c6e0 <float_rounding_mode>
  41e09c:	00 
  41e09d:	4d 85 d2             	test   %r10,%r10
  41e0a0:	49 c7 c1 40 00 00 00 	mov    $0x40,%r9
  41e0a7:	74 2a                	je     41e0d3 <roundAndPackFloat32+0x43>
  41e0a9:	4d 31 c9             	xor    %r9,%r9
  41e0ac:	49 83 fa 03          	cmp    $0x3,%r10
  41e0b0:	74 21                	je     41e0d3 <roundAndPackFloat32+0x43>
  41e0b2:	4d 31 c9             	xor    %r9,%r9
  41e0b5:	48 f7 c7 ff 00 00 00 	test   $0xff,%rdi
  41e0bc:	74 08                	je     41e0c6 <roundAndPackFloat32+0x36>
  41e0be:	49 83 fa 02          	cmp    $0x2,%r10
  41e0c2:	75 08                	jne    41e0cc <roundAndPackFloat32+0x3c>
  41e0c4:	eb 0d                	jmp    41e0d3 <roundAndPackFloat32+0x43>
  41e0c6:	49 83 fa 01          	cmp    $0x1,%r10
  41e0ca:	74 07                	je     41e0d3 <roundAndPackFloat32+0x43>
  41e0cc:	49 c7 c1 7f 00 00 00 	mov    $0x7f,%r9
  41e0d3:	49 89 d0             	mov    %rdx,%r8
  41e0d6:	49 83 e0 7f          	and    $0x7f,%r8
  41e0da:	48 89 f0             	mov    %rsi,%rax
  41e0dd:	48 25 ff ff 00 00    	and    $0xffff,%rax
  41e0e3:	48 3d fd 00 00 00    	cmp    $0xfd,%rax
  41e0e9:	0f 82 d7 01 00 00    	jb     41e2c6 <roundAndPackFloat32+0x236>
  41e0ef:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e0f6:	48 89 f0             	mov    %rsi,%rax
  41e0f9:	48 d3 e0             	shl    %cl,%rax
  41e0fc:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e103:	48 d3 f8             	sar    %cl,%rax
  41e106:	48 3d fd 00 00 00    	cmp    $0xfd,%rax
  41e10c:	7f 38                	jg     41e146 <roundAndPackFloat32+0xb6>
  41e10e:	49 be ff ff ff ff 00 	movabs $0xffffffff,%r14
  41e115:	00 00 00 
  41e118:	48 89 f0             	mov    %rsi,%rax
  41e11b:	4c 21 f0             	and    %r14,%rax
  41e11e:	49 8d 1c 11          	lea    (%r9,%rdx,1),%rbx
  41e122:	48 3d fd 00 00 00    	cmp    $0xfd,%rax
  41e128:	75 72                	jne    41e19c <roundAndPackFloat32+0x10c>
  41e12a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e131:	48 89 d8             	mov    %rbx,%rax
  41e134:	48 d3 e0             	shl    %cl,%rax
  41e137:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e13e:	48 d3 f8             	sar    %cl,%rax
  41e141:	48 85 c0             	test   %rax,%rax
  41e144:	79 56                	jns    41e19c <roundAndPackFloat32+0x10c>
  41e146:	48 0f be 05 93 e5 20 	movsbq 0x20e593(%rip),%rax        # 62c6e1 <float_exception_flags>
  41e14d:	00 
  41e14e:	48 83 c8 28          	or     $0x28,%rax
  41e152:	88 05 89 e5 20 00    	mov    %al,0x20e589(%rip)        # 62c6e1 <float_exception_flags>
  41e158:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41e15f:	48 d3 e7             	shl    %cl,%rdi
  41e162:	48 81 cf 00 00 80 7f 	or     $0x7f800000,%rdi
  41e169:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  41e170:	00 00 00 
  41e173:	49 85 c1             	test   %rax,%r9
  41e176:	75 12                	jne    41e18a <roundAndPackFloat32+0xfa>
  41e178:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  41e17f:	00 00 00 
  41e182:	48 29 c7             	sub    %rax,%rdi
  41e185:	e9 ce 01 00 00       	jmpq   41e358 <roundAndPackFloat32+0x2c8>
  41e18a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  41e191:	00 00 00 
  41e194:	48 29 c7             	sub    %rax,%rdi
  41e197:	e9 bc 01 00 00       	jmpq   41e358 <roundAndPackFloat32+0x2c8>
  41e19c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e1a3:	48 89 f0             	mov    %rsi,%rax
  41e1a6:	48 d3 e0             	shl    %cl,%rax
  41e1a9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e1b0:	48 d3 f8             	sar    %cl,%rax
  41e1b3:	48 85 c0             	test   %rax,%rax
  41e1b6:	0f 89 0a 01 00 00    	jns    41e2c6 <roundAndPackFloat32+0x236>
  41e1bc:	0f b6 05 1f e5 20 00 	movzbl 0x20e51f(%rip),%eax        # 62c6e2 <float_detect_tininess>
  41e1c3:	48 83 f8 01          	cmp    $0x1,%rax
  41e1c7:	49 bf 00 00 00 00 00 	movabs $0x0,%r15
  41e1ce:	00 00 00 
  41e1d1:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  41e1d8:	00 00 00 
  41e1db:	4d 89 fb             	mov    %r15,%r11
  41e1de:	75 03                	jne    41e1e3 <roundAndPackFloat32+0x153>
  41e1e0:	4d 89 c3             	mov    %r8,%r11
  41e1e3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e1ea:	48 89 f0             	mov    %rsi,%rax
  41e1ed:	48 d3 e0             	shl    %cl,%rax
  41e1f0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e1f7:	48 d3 f8             	sar    %cl,%rax
  41e1fa:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  41e1fe:	4c 89 f9             	mov    %r15,%rcx
  41e201:	7d 03                	jge    41e206 <roundAndPackFloat32+0x176>
  41e203:	4c 89 c1             	mov    %r8,%rcx
  41e206:	49 09 cb             	or     %rcx,%r11
  41e209:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e210:	48 d3 e3             	shl    %cl,%rbx
  41e213:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e21a:	48 d3 fb             	sar    %cl,%rbx
  41e21d:	48 85 db             	test   %rbx,%rbx
  41e220:	78 03                	js     41e225 <roundAndPackFloat32+0x195>
  41e222:	4d 89 c7             	mov    %r8,%r15
  41e225:	4d 09 fb             	or     %r15,%r11
  41e228:	49 89 f0             	mov    %rsi,%r8
  41e22b:	49 f7 d8             	neg    %r8
  41e22e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e235:	4c 89 c0             	mov    %r8,%rax
  41e238:	48 d3 e0             	shl    %cl,%rax
  41e23b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e242:	48 d3 f8             	sar    %cl,%rax
  41e245:	48 83 f8 1f          	cmp    $0x1f,%rax
  41e249:	7f 2d                	jg     41e278 <roundAndPackFloat32+0x1e8>
  41e24b:	4d 21 f0             	and    %r14,%r8
  41e24e:	48 89 d0             	mov    %rdx,%rax
  41e251:	4c 21 f0             	and    %r14,%rax
  41e254:	4c 89 c1             	mov    %r8,%rcx
  41e257:	48 d3 e8             	shr    %cl,%rax
  41e25a:	48 83 e6 1f          	and    $0x1f,%rsi
  41e25e:	48 89 f1             	mov    %rsi,%rcx
  41e261:	48 d3 e2             	shl    %cl,%rdx
  41e264:	4c 85 f2             	test   %r14,%rdx
  41e267:	74 20                	je     41e289 <roundAndPackFloat32+0x1f9>
  41e269:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  41e270:	00 00 00 
  41e273:	48 09 c2             	or     %rax,%rdx
  41e276:	eb 2a                	jmp    41e2a2 <roundAndPackFloat32+0x212>
  41e278:	4c 85 f2             	test   %r14,%rdx
  41e27b:	74 1b                	je     41e298 <roundAndPackFloat32+0x208>
  41e27d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  41e284:	00 00 00 
  41e287:	eb 19                	jmp    41e2a2 <roundAndPackFloat32+0x212>
  41e289:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  41e290:	00 00 00 
  41e293:	48 09 c2             	or     %rax,%rdx
  41e296:	eb 0a                	jmp    41e2a2 <roundAndPackFloat32+0x212>
  41e298:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  41e29f:	00 00 00 
  41e2a2:	48 31 f6             	xor    %rsi,%rsi
  41e2a5:	49 89 d0             	mov    %rdx,%r8
  41e2a8:	49 83 e0 7f          	and    $0x7f,%r8
  41e2ac:	74 18                	je     41e2c6 <roundAndPackFloat32+0x236>
  41e2ae:	49 83 f3 01          	xor    $0x1,%r11
  41e2b2:	75 12                	jne    41e2c6 <roundAndPackFloat32+0x236>
  41e2b4:	48 0f be 05 25 e4 20 	movsbq 0x20e425(%rip),%rax        # 62c6e1 <float_exception_flags>
  41e2bb:	00 
  41e2bc:	48 83 c8 10          	or     $0x10,%rax
  41e2c0:	88 05 1b e4 20 00    	mov    %al,0x20e41b(%rip)        # 62c6e1 <float_exception_flags>
  41e2c6:	49 f7 c0 ff 00 00 00 	test   $0xff,%r8
  41e2cd:	74 12                	je     41e2e1 <roundAndPackFloat32+0x251>
  41e2cf:	48 0f be 05 0a e4 20 	movsbq 0x20e40a(%rip),%rax        # 62c6e1 <float_exception_flags>
  41e2d6:	00 
  41e2d7:	48 83 c8 20          	or     $0x20,%rax
  41e2db:	88 05 00 e4 20 00    	mov    %al,0x20e400(%rip)        # 62c6e1 <float_exception_flags>
  41e2e1:	4d 85 d2             	test   %r10,%r10
  41e2e4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  41e2eb:	00 00 00 
  41e2ee:	49 bb 01 00 00 00 00 	movabs $0x1,%r11
  41e2f5:	00 00 00 
  41e2f8:	49 89 c2             	mov    %rax,%r10
  41e2fb:	75 03                	jne    41e300 <roundAndPackFloat32+0x270>
  41e2fd:	4d 89 da             	mov    %r11,%r10
  41e300:	4c 01 ca             	add    %r9,%rdx
  41e303:	48 bb 80 ff ff ff 00 	movabs $0xffffff80,%rbx
  41e30a:	00 00 00 
  41e30d:	48 21 d3             	and    %rdx,%rbx
  41e310:	48 c7 c1 07 00 00 00 	mov    $0x7,%rcx
  41e317:	48 d3 eb             	shr    %cl,%rbx
  41e31a:	49 81 e0 ff 00 00 00 	and    $0xff,%r8
  41e321:	49 83 f8 40          	cmp    $0x40,%r8
  41e325:	75 03                	jne    41e32a <roundAndPackFloat32+0x29a>
  41e327:	4c 89 d8             	mov    %r11,%rax
  41e32a:	4c 21 d0             	and    %r10,%rax
  41e32d:	48 f7 d0             	not    %rax
  41e330:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41e337:	48 d3 e7             	shl    %cl,%rdi
  41e33a:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41e341:	48 d3 e6             	shl    %cl,%rsi
  41e344:	48 31 c9             	xor    %rcx,%rcx
  41e347:	48 21 c3             	and    %rax,%rbx
  41e34a:	74 03                	je     41e34f <roundAndPackFloat32+0x2bf>
  41e34c:	48 89 f1             	mov    %rsi,%rcx
  41e34f:	48 09 fb             	or     %rdi,%rbx
  41e352:	48 01 cb             	add    %rcx,%rbx
  41e355:	48 89 df             	mov    %rbx,%rdi
  41e358:	48 89 f8             	mov    %rdi,%rax
  41e35b:	5b                   	pop    %rbx
  41e35c:	41 5e                	pop    %r14
  41e35e:	41 5f                	pop    %r15
  41e360:	c3                   	retq   
  41e361:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41e368:	0f 1f 84 00 00 00 00 
  41e36f:	00 

000000000041e370 <int64_to_float64>:
  41e370:	48 89 fa             	mov    %rdi,%rdx
  41e373:	48 31 c0             	xor    %rax,%rax
  41e376:	48 85 d2             	test   %rdx,%rdx
  41e379:	74 19                	je     41e394 <int64_to_float64+0x24>
  41e37b:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
  41e382:	00 00 80 
  41e385:	48 39 c2             	cmp    %rax,%rdx
  41e388:	75 0b                	jne    41e395 <int64_to_float64+0x25>
  41e38a:	48 b8 00 00 00 00 00 	movabs $0xc3e0000000000000,%rax
  41e391:	00 e0 c3 
  41e394:	c3                   	retq   
  41e395:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  41e39c:	48 89 d7             	mov    %rdx,%rdi
  41e39f:	48 d3 ef             	shr    %cl,%rdi
  41e3a2:	48 85 ff             	test   %rdi,%rdi
  41e3a5:	74 03                	je     41e3aa <int64_to_float64+0x3a>
  41e3a7:	48 f7 da             	neg    %rdx
  41e3aa:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e3b1:	48 89 d0             	mov    %rdx,%rax
  41e3b4:	48 d3 e8             	shr    %cl,%rax
  41e3b7:	48 85 c0             	test   %rax,%rax
  41e3ba:	49 89 d1             	mov    %rdx,%r9
  41e3bd:	74 03                	je     41e3c2 <int64_to_float64+0x52>
  41e3bf:	49 89 c1             	mov    %rax,%r9
  41e3c2:	48 be ff ff ff ff 00 	movabs $0xffffffff,%rsi
  41e3c9:	00 00 00 
  41e3cc:	4c 89 c8             	mov    %r9,%rax
  41e3cf:	48 21 f0             	and    %rsi,%rax
  41e3d2:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
  41e3d8:	4d 19 c0             	sbb    %r8,%r8
  41e3db:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  41e3e2:	4d 89 ca             	mov    %r9,%r10
  41e3e5:	49 d3 e2             	shl    %cl,%r10
  41e3e8:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
  41e3ee:	72 03                	jb     41e3f3 <int64_to_float64+0x83>
  41e3f0:	4d 89 ca             	mov    %r9,%r10
  41e3f3:	4c 21 d6             	and    %r10,%rsi
  41e3f6:	49 83 e0 10          	and    $0x10,%r8
  41e3fa:	48 81 fe ff ff ff 00 	cmp    $0xffffff,%rsi
  41e401:	77 0e                	ja     41e411 <int64_to_float64+0xa1>
  41e403:	49 83 c8 08          	or     $0x8,%r8
  41e407:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41e40e:	49 d3 e2             	shl    %cl,%r10
  41e411:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e418:	48 89 d0             	mov    %rdx,%rax
  41e41b:	48 d3 e8             	shr    %cl,%rax
  41e41e:	48 be 00 00 00 ff 00 	movabs $0xff000000,%rsi
  41e425:	00 00 00 
  41e428:	4c 21 d6             	and    %r10,%rsi
  41e42b:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  41e432:	48 d3 ee             	shr    %cl,%rsi
  41e435:	48 0f be 8e f0 8e 42 	movsbq 0x428ef0(%rsi),%rcx
  41e43c:	00 
  41e43d:	48 83 f8 01          	cmp    $0x1,%rax
  41e441:	48 19 c0             	sbb    %rax,%rax
  41e444:	48 f7 d0             	not    %rax
  41e447:	48 83 c8 1f          	or     $0x1f,%rax
  41e44b:	4c 01 c0             	add    %r8,%rax
  41e44e:	48 01 c8             	add    %rcx,%rax
  41e451:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41e458:	48 d3 e0             	shl    %cl,%rax
  41e45b:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41e462:	48 d3 f8             	sar    %cl,%rax
  41e465:	48 c7 c6 3c 04 00 00 	mov    $0x43c,%rsi
  41e46c:	48 29 c6             	sub    %rax,%rsi
  41e46f:	48 89 c1             	mov    %rax,%rcx
  41e472:	48 d3 e2             	shl    %cl,%rdx
  41e475:	e9 46 56 00 00       	jmpq   423ac0 <roundAndPackFloat64>
  41e47a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041e480 <float32_to_int32>:
  41e480:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  41e487:	00 00 00 
  41e48a:	48 89 f8             	mov    %rdi,%rax
  41e48d:	4c 21 c0             	and    %r8,%rax
  41e490:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41e497:	48 89 c2             	mov    %rax,%rdx
  41e49a:	48 d3 ea             	shr    %cl,%rdx
  41e49d:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41e4a4:	48 d3 e8             	shr    %cl,%rax
  41e4a7:	48 81 e7 ff ff 7f 00 	and    $0x7fffff,%rdi
  41e4ae:	74 0c                	je     41e4bc <float32_to_int32+0x3c>
  41e4b0:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  41e4b7:	00 00 00 
  41e4ba:	eb 0a                	jmp    41e4c6 <float32_to_int32+0x46>
  41e4bc:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41e4c3:	00 00 00 
  41e4c6:	48 81 e2 ff 00 00 00 	and    $0xff,%rdx
  41e4cd:	74 07                	je     41e4d6 <float32_to_int32+0x56>
  41e4cf:	48 81 cf 00 00 80 00 	or     $0x800000,%rdi
  41e4d6:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
  41e4dd:	75 0c                	jne    41e4eb <float32_to_int32+0x6b>
  41e4df:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  41e4e6:	00 00 00 
  41e4e9:	eb 0a                	jmp    41e4f5 <float32_to_int32+0x75>
  41e4eb:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  41e4f2:	00 00 00 
  41e4f5:	4d 31 c9             	xor    %r9,%r9
  41e4f8:	48 85 ce             	test   %rcx,%rsi
  41e4fb:	75 03                	jne    41e500 <float32_to_int32+0x80>
  41e4fd:	49 89 c1             	mov    %rax,%r9
  41e500:	48 c7 c0 af 00 00 00 	mov    $0xaf,%rax
  41e507:	48 29 d0             	sub    %rdx,%rax
  41e50a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e511:	48 89 fa             	mov    %rdi,%rdx
  41e514:	48 d3 e2             	shl    %cl,%rdx
  41e517:	48 85 c0             	test   %rax,%rax
  41e51a:	7e 70                	jle    41e58c <float32_to_int32+0x10c>
  41e51c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e523:	48 89 c6             	mov    %rax,%rsi
  41e526:	48 d3 e6             	shl    %cl,%rsi
  41e529:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e530:	48 d3 fe             	sar    %cl,%rsi
  41e533:	48 83 fe 3f          	cmp    $0x3f,%rsi
  41e537:	7f 29                	jg     41e562 <float32_to_int32+0xe2>
  41e539:	48 89 c1             	mov    %rax,%rcx
  41e53c:	4c 21 c1             	and    %r8,%rcx
  41e53f:	48 89 d6             	mov    %rdx,%rsi
  41e542:	48 d3 ee             	shr    %cl,%rsi
  41e545:	48 f7 d8             	neg    %rax
  41e548:	48 89 c1             	mov    %rax,%rcx
  41e54b:	48 d3 e2             	shl    %cl,%rdx
  41e54e:	48 85 d2             	test   %rdx,%rdx
  41e551:	74 20                	je     41e573 <float32_to_int32+0xf3>
  41e553:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  41e55a:	00 00 00 
  41e55d:	48 09 f2             	or     %rsi,%rdx
  41e560:	eb 2a                	jmp    41e58c <float32_to_int32+0x10c>
  41e562:	4c 85 c7             	test   %r8,%rdi
  41e565:	74 1b                	je     41e582 <float32_to_int32+0x102>
  41e567:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  41e56e:	00 00 00 
  41e571:	eb 19                	jmp    41e58c <float32_to_int32+0x10c>
  41e573:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  41e57a:	00 00 00 
  41e57d:	48 09 f2             	or     %rsi,%rdx
  41e580:	eb 0a                	jmp    41e58c <float32_to_int32+0x10c>
  41e582:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  41e589:	00 00 00 
  41e58c:	0f b6 05 4d e1 20 00 	movzbl 0x20e14d(%rip),%eax        # 62c6e0 <float_rounding_mode>
  41e593:	48 85 c0             	test   %rax,%rax
  41e596:	48 c7 c7 40 00 00 00 	mov    $0x40,%rdi
  41e59d:	74 2a                	je     41e5c9 <float32_to_int32+0x149>
  41e59f:	48 31 ff             	xor    %rdi,%rdi
  41e5a2:	48 83 f8 03          	cmp    $0x3,%rax
  41e5a6:	74 21                	je     41e5c9 <float32_to_int32+0x149>
  41e5a8:	48 31 ff             	xor    %rdi,%rdi
  41e5ab:	49 f7 c1 ff 00 00 00 	test   $0xff,%r9
  41e5b2:	74 08                	je     41e5bc <float32_to_int32+0x13c>
  41e5b4:	48 83 f8 02          	cmp    $0x2,%rax
  41e5b8:	75 08                	jne    41e5c2 <float32_to_int32+0x142>
  41e5ba:	eb 0d                	jmp    41e5c9 <float32_to_int32+0x149>
  41e5bc:	48 83 f8 01          	cmp    $0x1,%rax
  41e5c0:	74 07                	je     41e5c9 <float32_to_int32+0x149>
  41e5c2:	48 c7 c7 7f 00 00 00 	mov    $0x7f,%rdi
  41e5c9:	48 85 c0             	test   %rax,%rax
  41e5cc:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  41e5d3:	00 00 00 
  41e5d6:	49 bb 01 00 00 00 00 	movabs $0x1,%r11
  41e5dd:	00 00 00 
  41e5e0:	49 89 f2             	mov    %rsi,%r10
  41e5e3:	75 03                	jne    41e5e8 <float32_to_int32+0x168>
  41e5e5:	4d 89 da             	mov    %r11,%r10
  41e5e8:	48 01 d7             	add    %rdx,%rdi
  41e5eb:	48 83 e2 7f          	and    $0x7f,%rdx
  41e5ef:	48 c7 c1 07 00 00 00 	mov    $0x7,%rcx
  41e5f6:	48 89 f8             	mov    %rdi,%rax
  41e5f9:	48 d3 e8             	shr    %cl,%rax
  41e5fc:	48 83 fa 40          	cmp    $0x40,%rdx
  41e600:	75 03                	jne    41e605 <float32_to_int32+0x185>
  41e602:	4c 89 de             	mov    %r11,%rsi
  41e605:	4c 21 d6             	and    %r10,%rsi
  41e608:	48 f7 d6             	not    %rsi
  41e60b:	48 21 f0             	and    %rsi,%rax
  41e60e:	49 f7 c1 ff 00 00 00 	test   $0xff,%r9
  41e615:	74 03                	je     41e61a <float32_to_int32+0x19a>
  41e617:	48 f7 d8             	neg    %rax
  41e61a:	48 c7 c1 27 00 00 00 	mov    $0x27,%rcx
  41e621:	48 d3 ef             	shr    %cl,%rdi
  41e624:	48 85 ff             	test   %rdi,%rdi
  41e627:	75 48                	jne    41e671 <float32_to_int32+0x1f1>
  41e629:	4c 85 c0             	test   %r8,%rax
  41e62c:	74 26                	je     41e654 <float32_to_int32+0x1d4>
  41e62e:	48 be 00 00 00 80 00 	movabs $0x80000000,%rsi
  41e635:	00 00 00 
  41e638:	48 21 c6             	and    %rax,%rsi
  41e63b:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41e642:	48 d3 ee             	shr    %cl,%rsi
  41e645:	4c 89 c9             	mov    %r9,%rcx
  41e648:	48 81 e1 ff 00 00 00 	and    $0xff,%rcx
  41e64f:	48 39 ce             	cmp    %rcx,%rsi
  41e652:	75 1d                	jne    41e671 <float32_to_int32+0x1f1>
  41e654:	48 f7 c2 ff 00 00 00 	test   $0xff,%rdx
  41e65b:	74 3e                	je     41e69b <float32_to_int32+0x21b>
  41e65d:	48 0f be 0d 7c e0 20 	movsbq 0x20e07c(%rip),%rcx        # 62c6e1 <float_exception_flags>
  41e664:	00 
  41e665:	48 83 c9 20          	or     $0x20,%rcx
  41e669:	88 0d 72 e0 20 00    	mov    %cl,0x20e072(%rip)        # 62c6e1 <float_exception_flags>
  41e66f:	eb 2a                	jmp    41e69b <float32_to_int32+0x21b>
  41e671:	48 0f be 05 68 e0 20 	movsbq 0x20e068(%rip),%rax        # 62c6e1 <float_exception_flags>
  41e678:	00 
  41e679:	48 83 c8 01          	or     $0x1,%rax
  41e67d:	88 05 5e e0 20 00    	mov    %al,0x20e05e(%rip)        # 62c6e1 <float_exception_flags>
  41e683:	49 f7 c1 ff 00 00 00 	test   $0xff,%r9
  41e68a:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
  41e691:	75 08                	jne    41e69b <float32_to_int32+0x21b>
  41e693:	48 c7 c0 ff ff ff 7f 	mov    $0x7fffffff,%rax
  41e69a:	c3                   	retq   
  41e69b:	c3                   	retq   
  41e69c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041e6a0 <float32_to_int32_round_to_zero>:
  41e6a0:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  41e6a7:	00 00 00 
  41e6aa:	48 89 f8             	mov    %rdi,%rax
  41e6ad:	4c 21 c0             	and    %r8,%rax
  41e6b0:	48 81 e7 ff ff 7f 00 	and    $0x7fffff,%rdi
  41e6b7:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41e6be:	48 89 c2             	mov    %rax,%rdx
  41e6c1:	48 d3 ea             	shr    %cl,%rdx
  41e6c4:	48 89 d6             	mov    %rdx,%rsi
  41e6c7:	48 81 e6 ff 00 00 00 	and    $0xff,%rsi
  41e6ce:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41e6d5:	49 89 c1             	mov    %rax,%r9
  41e6d8:	49 d3 e9             	shr    %cl,%r9
  41e6db:	48 89 f1             	mov    %rsi,%rcx
  41e6de:	48 81 c1 62 ff ff ff 	add    $0xffffffffffffff62,%rcx
  41e6e5:	78 4e                	js     41e735 <float32_to_int32_round_to_zero+0x95>
  41e6e7:	48 b9 00 00 00 cf 00 	movabs $0xcf000000,%rcx
  41e6ee:	00 00 00 
  41e6f1:	48 39 c8             	cmp    %rcx,%rax
  41e6f4:	74 34                	je     41e72a <float32_to_int32_round_to_zero+0x8a>
  41e6f6:	48 0f be 05 e3 df 20 	movsbq 0x20dfe3(%rip),%rax        # 62c6e1 <float_exception_flags>
  41e6fd:	00 
  41e6fe:	48 83 c8 01          	or     $0x1,%rax
  41e702:	4d 85 c9             	test   %r9,%r9
  41e705:	88 05 d6 df 20 00    	mov    %al,0x20dfd6(%rip)        # 62c6e1 <float_exception_flags>
  41e70b:	48 c7 c0 ff ff ff 7f 	mov    $0x7fffffff,%rax
  41e712:	0f 84 9c 00 00 00    	je     41e7b4 <float32_to_int32_round_to_zero+0x114>
  41e718:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
  41e71f:	75 09                	jne    41e72a <float32_to_int32_round_to_zero+0x8a>
  41e721:	4c 85 c7             	test   %r8,%rdi
  41e724:	0f 85 8a 00 00 00    	jne    41e7b4 <float32_to_int32_round_to_zero+0x114>
  41e72a:	48 b8 00 00 00 80 00 	movabs $0x80000000,%rax
  41e731:	00 00 00 
  41e734:	c3                   	retq   
  41e735:	48 83 fe 7e          	cmp    $0x7e,%rsi
  41e739:	77 1e                	ja     41e759 <float32_to_int32_round_to_zero+0xb9>
  41e73b:	48 09 fe             	or     %rdi,%rsi
  41e73e:	48 31 c0             	xor    %rax,%rax
  41e741:	4c 85 c6             	test   %r8,%rsi
  41e744:	74 6e                	je     41e7b4 <float32_to_int32_round_to_zero+0x114>
  41e746:	48 0f be 0d 93 df 20 	movsbq 0x20df93(%rip),%rcx        # 62c6e1 <float_exception_flags>
  41e74d:	00 
  41e74e:	48 83 c9 20          	or     $0x20,%rcx
  41e752:	88 0d 89 df 20 00    	mov    %cl,0x20df89(%rip)        # 62c6e1 <float_exception_flags>
  41e758:	c3                   	retq   
  41e759:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41e760:	48 d3 e7             	shl    %cl,%rdi
  41e763:	48 81 cf 00 00 00 80 	or     $0xffffffff80000000,%rdi
  41e76a:	48 b8 00 ff ff ff 00 	movabs $0xffffff00,%rax
  41e771:	00 00 00 
  41e774:	48 21 f8             	and    %rdi,%rax
  41e777:	48 c7 c1 9e 00 00 00 	mov    $0x9e,%rcx
  41e77e:	48 29 f1             	sub    %rsi,%rcx
  41e781:	4c 21 c1             	and    %r8,%rcx
  41e784:	48 d3 e8             	shr    %cl,%rax
  41e787:	48 83 c2 02          	add    $0x2,%rdx
  41e78b:	48 83 e2 1f          	and    $0x1f,%rdx
  41e78f:	48 89 d1             	mov    %rdx,%rcx
  41e792:	48 d3 e7             	shl    %cl,%rdi
  41e795:	4c 85 c7             	test   %r8,%rdi
  41e798:	74 12                	je     41e7ac <float32_to_int32_round_to_zero+0x10c>
  41e79a:	48 0f be 0d 3f df 20 	movsbq 0x20df3f(%rip),%rcx        # 62c6e1 <float_exception_flags>
  41e7a1:	00 
  41e7a2:	48 83 c9 20          	or     $0x20,%rcx
  41e7a6:	88 0d 35 df 20 00    	mov    %cl,0x20df35(%rip)        # 62c6e1 <float_exception_flags>
  41e7ac:	4d 85 c9             	test   %r9,%r9
  41e7af:	74 03                	je     41e7b4 <float32_to_int32_round_to_zero+0x114>
  41e7b1:	48 f7 d8             	neg    %rax
  41e7b4:	c3                   	retq   
  41e7b5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  41e7bc:	00 00 00 00 

000000000041e7c0 <float32_to_int64>:
  41e7c0:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  41e7c7:	00 00 00 
  41e7ca:	49 89 fa             	mov    %rdi,%r10
  41e7cd:	4d 21 c2             	and    %r8,%r10
  41e7d0:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  41e7d7:	ff ff 7f 
  41e7da:	49 89 fb             	mov    %rdi,%r11
  41e7dd:	49 81 e3 ff ff 7f 00 	and    $0x7fffff,%r11
  41e7e4:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41e7eb:	4c 89 d2             	mov    %r10,%rdx
  41e7ee:	48 d3 ea             	shr    %cl,%rdx
  41e7f1:	48 81 e2 ff 00 00 00 	and    $0xff,%rdx
  41e7f8:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41e7ff:	49 d3 ea             	shr    %cl,%r10
  41e802:	48 c7 c6 be 00 00 00 	mov    $0xbe,%rsi
  41e809:	48 29 d6             	sub    %rdx,%rsi
  41e80c:	78 2d                	js     41e83b <float32_to_int64+0x7b>
  41e80e:	48 85 d2             	test   %rdx,%rdx
  41e811:	74 0a                	je     41e81d <float32_to_int64+0x5d>
  41e813:	48 81 cf 00 00 80 00 	or     $0x800000,%rdi
  41e81a:	49 89 fb             	mov    %rdi,%r11
  41e81d:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  41e824:	49 d3 e3             	shl    %cl,%r11
  41e827:	4d 31 c9             	xor    %r9,%r9
  41e82a:	48 81 fa be 00 00 00 	cmp    $0xbe,%rdx
  41e831:	75 57                	jne    41e88a <float32_to_int64+0xca>
  41e833:	4c 89 df             	mov    %r11,%rdi
  41e836:	e9 c4 00 00 00       	jmpq   41e8ff <float32_to_int64+0x13f>
  41e83b:	48 0f be 0d 9e de 20 	movsbq 0x20de9e(%rip),%rcx        # 62c6e1 <float_exception_flags>
  41e842:	00 
  41e843:	48 83 c9 01          	or     $0x1,%rcx
  41e847:	4d 85 d2             	test   %r10,%r10
  41e84a:	88 0d 91 de 20 00    	mov    %cl,0x20de91(%rip)        # 62c6e1 <float_exception_flags>
  41e850:	0f 84 80 00 00 00    	je     41e8d6 <float32_to_int64+0x116>
  41e856:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
  41e85d:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41e864:	00 00 00 
  41e867:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  41e86e:	00 00 00 
  41e871:	48 89 ca             	mov    %rcx,%rdx
  41e874:	75 03                	jne    41e879 <float32_to_int64+0xb9>
  41e876:	48 89 f2             	mov    %rsi,%rdx
  41e879:	4d 85 c3             	test   %r8,%r11
  41e87c:	74 03                	je     41e881 <float32_to_int64+0xc1>
  41e87e:	48 89 f1             	mov    %rsi,%rcx
  41e881:	48 85 ca             	test   %rcx,%rdx
  41e884:	75 03                	jne    41e889 <float32_to_int64+0xc9>
  41e886:	48 ff c0             	inc    %rax
  41e889:	c3                   	retq   
  41e88a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e891:	48 89 f2             	mov    %rsi,%rdx
  41e894:	48 d3 e2             	shl    %cl,%rdx
  41e897:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41e89e:	48 d3 fa             	sar    %cl,%rdx
  41e8a1:	48 83 fa 3f          	cmp    $0x3f,%rdx
  41e8a5:	7f 1e                	jg     41e8c5 <float32_to_int64+0x105>
  41e8a7:	48 89 f1             	mov    %rsi,%rcx
  41e8aa:	48 f7 d9             	neg    %rcx
  41e8ad:	48 83 e1 3f          	and    $0x3f,%rcx
  41e8b1:	4d 89 d9             	mov    %r11,%r9
  41e8b4:	49 d3 e1             	shl    %cl,%r9
  41e8b7:	49 21 f0             	and    %rsi,%r8
  41e8ba:	4c 89 c1             	mov    %r8,%rcx
  41e8bd:	49 d3 eb             	shr    %cl,%r11
  41e8c0:	4c 89 df             	mov    %r11,%rdi
  41e8c3:	eb 3a                	jmp    41e8ff <float32_to_int64+0x13f>
  41e8c5:	4c 21 c6             	and    %r8,%rsi
  41e8c8:	48 31 ff             	xor    %rdi,%rdi
  41e8cb:	48 83 fe 40          	cmp    $0x40,%rsi
  41e8cf:	75 13                	jne    41e8e4 <float32_to_int64+0x124>
  41e8d1:	4d 89 d9             	mov    %r11,%r9
  41e8d4:	eb 29                	jmp    41e8ff <float32_to_int64+0x13f>
  41e8d6:	48 bf ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rdi
  41e8dd:	ff ff 7f 
  41e8e0:	48 89 f8             	mov    %rdi,%rax
  41e8e3:	c3                   	retq   
  41e8e4:	4d 85 db             	test   %r11,%r11
  41e8e7:	74 0c                	je     41e8f5 <float32_to_int64+0x135>
  41e8e9:	49 b9 01 00 00 00 00 	movabs $0x1,%r9
  41e8f0:	00 00 00 
  41e8f3:	eb 0a                	jmp    41e8ff <float32_to_int64+0x13f>
  41e8f5:	49 b9 00 00 00 00 00 	movabs $0x0,%r9
  41e8fc:	00 00 00 
  41e8ff:	0f b6 15 da dd 20 00 	movzbl 0x20ddda(%rip),%edx        # 62c6e0 <float_rounding_mode>
  41e906:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  41e90d:	4c 89 ce             	mov    %r9,%rsi
  41e910:	48 d3 ee             	shr    %cl,%rsi
  41e913:	48 85 d2             	test   %rdx,%rdx
  41e916:	74 3c                	je     41e954 <float32_to_int64+0x194>
  41e918:	48 83 fa 03          	cmp    $0x3,%rdx
  41e91c:	74 67                	je     41e985 <float32_to_int64+0x1c5>
  41e91e:	4d 85 d2             	test   %r10,%r10
  41e921:	74 06                	je     41e929 <float32_to_int64+0x169>
  41e923:	48 83 fa 01          	cmp    $0x1,%rdx
  41e927:	eb 04                	jmp    41e92d <float32_to_int64+0x16d>
  41e929:	48 83 fa 02          	cmp    $0x2,%rdx
  41e92d:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41e934:	00 00 00 
  41e937:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  41e93e:	00 00 00 
  41e941:	48 89 ce             	mov    %rcx,%rsi
  41e944:	75 03                	jne    41e949 <float32_to_int64+0x189>
  41e946:	4c 89 c6             	mov    %r8,%rsi
  41e949:	4d 85 c9             	test   %r9,%r9
  41e94c:	74 03                	je     41e951 <float32_to_int64+0x191>
  41e94e:	4c 89 c1             	mov    %r8,%rcx
  41e951:	48 21 ce             	and    %rcx,%rsi
  41e954:	48 85 f6             	test   %rsi,%rsi
  41e957:	74 2c                	je     41e985 <float32_to_int64+0x1c5>
  41e959:	48 ff c7             	inc    %rdi
  41e95c:	74 61                	je     41e9bf <float32_to_int64+0x1ff>
  41e95e:	4c 89 c9             	mov    %r9,%rcx
  41e961:	48 21 c1             	and    %rax,%rcx
  41e964:	48 09 d1             	or     %rdx,%rcx
  41e967:	75 0c                	jne    41e975 <float32_to_int64+0x1b5>
  41e969:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  41e970:	00 00 00 
  41e973:	eb 0a                	jmp    41e97f <float32_to_int64+0x1bf>
  41e975:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41e97c:	00 00 00 
  41e97f:	48 f7 d1             	not    %rcx
  41e982:	48 21 cf             	and    %rcx,%rdi
  41e985:	4d 85 d2             	test   %r10,%r10
  41e988:	74 03                	je     41e98d <float32_to_int64+0x1cd>
  41e98a:	48 f7 df             	neg    %rdi
  41e98d:	48 85 ff             	test   %rdi,%rdi
  41e990:	74 12                	je     41e9a4 <float32_to_int64+0x1e4>
  41e992:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  41e999:	48 89 fa             	mov    %rdi,%rdx
  41e99c:	48 d3 ea             	shr    %cl,%rdx
  41e99f:	4c 39 d2             	cmp    %r10,%rdx
  41e9a2:	75 1b                	jne    41e9bf <float32_to_int64+0x1ff>
  41e9a4:	4d 85 c9             	test   %r9,%r9
  41e9a7:	74 12                	je     41e9bb <float32_to_int64+0x1fb>
  41e9a9:	48 0f be 05 30 dd 20 	movsbq 0x20dd30(%rip),%rax        # 62c6e1 <float_exception_flags>
  41e9b0:	00 
  41e9b1:	48 83 c8 20          	or     $0x20,%rax
  41e9b5:	88 05 26 dd 20 00    	mov    %al,0x20dd26(%rip)        # 62c6e1 <float_exception_flags>
  41e9bb:	48 89 f8             	mov    %rdi,%rax
  41e9be:	c3                   	retq   
  41e9bf:	48 0f be 0d 1a dd 20 	movsbq 0x20dd1a(%rip),%rcx        # 62c6e1 <float_exception_flags>
  41e9c6:	00 
  41e9c7:	48 83 c9 01          	or     $0x1,%rcx
  41e9cb:	4d 85 d2             	test   %r10,%r10
  41e9ce:	88 0d 0d dd 20 00    	mov    %cl,0x20dd0d(%rip)        # 62c6e1 <float_exception_flags>
  41e9d4:	74 03                	je     41e9d9 <float32_to_int64+0x219>
  41e9d6:	48 ff c0             	inc    %rax
  41e9d9:	c3                   	retq   
  41e9da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000041e9e0 <float32_to_int64_round_to_zero>:
  41e9e0:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  41e9e7:	00 00 00 
  41e9ea:	49 89 f9             	mov    %rdi,%r9
  41e9ed:	4d 21 c1             	and    %r8,%r9
  41e9f0:	49 89 fa             	mov    %rdi,%r10
  41e9f3:	49 81 e2 ff ff 7f 00 	and    $0x7fffff,%r10
  41e9fa:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41ea01:	4c 89 ca             	mov    %r9,%rdx
  41ea04:	48 d3 ea             	shr    %cl,%rdx
  41ea07:	48 89 d6             	mov    %rdx,%rsi
  41ea0a:	48 81 e6 ff 00 00 00 	and    $0xff,%rsi
  41ea11:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41ea18:	49 d3 e9             	shr    %cl,%r9
  41ea1b:	48 89 f0             	mov    %rsi,%rax
  41ea1e:	48 05 42 ff ff ff    	add    $0xffffffffffffff42,%rax
  41ea24:	78 50                	js     41ea76 <float32_to_int64_round_to_zero+0x96>
  41ea26:	4c 21 c7             	and    %r8,%rdi
  41ea29:	48 b8 00 00 00 df 00 	movabs $0xdf000000,%rax
  41ea30:	00 00 00 
  41ea33:	48 39 c7             	cmp    %rax,%rdi
  41ea36:	74 33                	je     41ea6b <float32_to_int64_round_to_zero+0x8b>
  41ea38:	48 0f be 05 a1 dc 20 	movsbq 0x20dca1(%rip),%rax        # 62c6e1 <float_exception_flags>
  41ea3f:	00 
  41ea40:	48 83 c8 01          	or     $0x1,%rax
  41ea44:	4d 85 c9             	test   %r9,%r9
  41ea47:	88 05 94 dc 20 00    	mov    %al,0x20dc94(%rip)        # 62c6e1 <float_exception_flags>
  41ea4d:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  41ea54:	ff ff 7f 
  41ea57:	0f 84 8a 00 00 00    	je     41eae7 <float32_to_int64_round_to_zero+0x107>
  41ea5d:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
  41ea64:	75 05                	jne    41ea6b <float32_to_int64_round_to_zero+0x8b>
  41ea66:	4d 85 c2             	test   %r8,%r10
  41ea69:	75 7c                	jne    41eae7 <float32_to_int64_round_to_zero+0x107>
  41ea6b:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
  41ea72:	00 00 80 
  41ea75:	c3                   	retq   
  41ea76:	48 83 fe 7e          	cmp    $0x7e,%rsi
  41ea7a:	77 1e                	ja     41ea9a <float32_to_int64_round_to_zero+0xba>
  41ea7c:	4c 09 d6             	or     %r10,%rsi
  41ea7f:	48 31 c0             	xor    %rax,%rax
  41ea82:	4c 85 c6             	test   %r8,%rsi
  41ea85:	74 60                	je     41eae7 <float32_to_int64_round_to_zero+0x107>
  41ea87:	48 0f be 0d 52 dc 20 	movsbq 0x20dc52(%rip),%rcx        # 62c6e1 <float_exception_flags>
  41ea8e:	00 
  41ea8f:	48 83 c9 20          	or     $0x20,%rcx
  41ea93:	88 0d 48 dc 20 00    	mov    %cl,0x20dc48(%rip)        # 62c6e1 <float_exception_flags>
  41ea99:	c3                   	retq   
  41ea9a:	48 81 cf 00 00 80 00 	or     $0x800000,%rdi
  41eaa1:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  41eaa8:	48 d3 e7             	shl    %cl,%rdi
  41eaab:	48 c7 c1 be 00 00 00 	mov    $0xbe,%rcx
  41eab2:	48 29 f1             	sub    %rsi,%rcx
  41eab5:	4c 21 c1             	and    %r8,%rcx
  41eab8:	48 89 f8             	mov    %rdi,%rax
  41eabb:	48 d3 e8             	shr    %cl,%rax
  41eabe:	48 83 c2 02          	add    $0x2,%rdx
  41eac2:	48 89 d1             	mov    %rdx,%rcx
  41eac5:	48 d3 e7             	shl    %cl,%rdi
  41eac8:	48 85 ff             	test   %rdi,%rdi
  41eacb:	74 12                	je     41eadf <float32_to_int64_round_to_zero+0xff>
  41eacd:	48 0f be 0d 0c dc 20 	movsbq 0x20dc0c(%rip),%rcx        # 62c6e1 <float_exception_flags>
  41ead4:	00 
  41ead5:	48 83 c9 20          	or     $0x20,%rcx
  41ead9:	88 0d 02 dc 20 00    	mov    %cl,0x20dc02(%rip)        # 62c6e1 <float_exception_flags>
  41eadf:	4d 85 c9             	test   %r9,%r9
  41eae2:	74 03                	je     41eae7 <float32_to_int64_round_to_zero+0x107>
  41eae4:	48 f7 d8             	neg    %rax
  41eae7:	c3                   	retq   
  41eae8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  41eaef:	00 

000000000041eaf0 <float32_to_float64>:
  41eaf0:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  41eaf7:	00 00 00 
  41eafa:	48 89 fa             	mov    %rdi,%rdx
  41eafd:	4c 21 c2             	and    %r8,%rdx
  41eb00:	48 89 fe             	mov    %rdi,%rsi
  41eb03:	48 81 e6 ff ff 7f 00 	and    $0x7fffff,%rsi
  41eb0a:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41eb11:	48 89 d0             	mov    %rdx,%rax
  41eb14:	48 d3 e8             	shr    %cl,%rax
  41eb17:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41eb1e:	48 d3 ea             	shr    %cl,%rdx
  41eb21:	48 25 ff 00 00 00    	and    $0xff,%rax
  41eb27:	0f 85 90 00 00 00    	jne    41ebbd <float32_to_float64+0xcd>
  41eb2d:	4c 85 c6             	test   %r8,%rsi
  41eb30:	0f 84 28 01 00 00    	je     41ec5e <float32_to_float64+0x16e>
  41eb36:	48 89 f0             	mov    %rsi,%rax
  41eb39:	4c 21 c0             	and    %r8,%rax
  41eb3c:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
  41eb42:	4d 19 c9             	sbb    %r9,%r9
  41eb45:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  41eb4c:	48 d3 e7             	shl    %cl,%rdi
  41eb4f:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
  41eb55:	72 03                	jb     41eb5a <float32_to_float64+0x6a>
  41eb57:	48 89 f7             	mov    %rsi,%rdi
  41eb5a:	48 89 f8             	mov    %rdi,%rax
  41eb5d:	4c 21 c0             	and    %r8,%rax
  41eb60:	49 83 e1 10          	and    $0x10,%r9
  41eb64:	48 3d ff ff ff 00    	cmp    $0xffffff,%rax
  41eb6a:	77 0e                	ja     41eb7a <float32_to_float64+0x8a>
  41eb6c:	49 83 c9 08          	or     $0x8,%r9
  41eb70:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41eb77:	48 d3 e7             	shl    %cl,%rdi
  41eb7a:	48 b8 00 00 00 ff 00 	movabs $0xff000000,%rax
  41eb81:	00 00 00 
  41eb84:	48 21 f8             	and    %rdi,%rax
  41eb87:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  41eb8e:	48 d3 e8             	shr    %cl,%rax
  41eb91:	48 0f be 80 f0 8e 42 	movsbq 0x428ef0(%rax),%rax
  41eb98:	00 
  41eb99:	49 8d 44 01 f8       	lea    -0x8(%r9,%rax,1),%rax
  41eb9e:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41eba5:	48 d3 e0             	shl    %cl,%rax
  41eba8:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41ebaf:	48 d3 f8             	sar    %cl,%rax
  41ebb2:	48 89 c1             	mov    %rax,%rcx
  41ebb5:	48 d3 e6             	shl    %cl,%rsi
  41ebb8:	48 f7 d8             	neg    %rax
  41ebbb:	eb 6c                	jmp    41ec29 <float32_to_float64+0x139>
  41ebbd:	48 89 c1             	mov    %rax,%rcx
  41ebc0:	4c 21 c1             	and    %r8,%rcx
  41ebc3:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
  41ebca:	75 5d                	jne    41ec29 <float32_to_float64+0x139>
  41ebcc:	4c 85 c6             	test   %r8,%rsi
  41ebcf:	0f 84 97 00 00 00    	je     41ec6c <float32_to_float64+0x17c>
  41ebd5:	48 89 f8             	mov    %rdi,%rax
  41ebd8:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41ebde:	48 81 e7 ff ff 3f 00 	and    $0x3fffff,%rdi
  41ebe5:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41ebeb:	75 17                	jne    41ec04 <float32_to_float64+0x114>
  41ebed:	4c 85 c7             	test   %r8,%rdi
  41ebf0:	74 12                	je     41ec04 <float32_to_float64+0x114>
  41ebf2:	48 0f be 05 e7 da 20 	movsbq 0x20dae7(%rip),%rax        # 62c6e1 <float_exception_flags>
  41ebf9:	00 
  41ebfa:	48 83 c8 01          	or     $0x1,%rax
  41ebfe:	88 05 dd da 20 00    	mov    %al,0x20dadd(%rip)        # 62c6e1 <float_exception_flags>
  41ec04:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  41ec0b:	48 d3 e2             	shl    %cl,%rdx
  41ec0e:	48 c7 c1 1d 00 00 00 	mov    $0x1d,%rcx
  41ec15:	48 d3 e7             	shl    %cl,%rdi
  41ec18:	48 09 d7             	or     %rdx,%rdi
  41ec1b:	48 b8 00 00 00 00 00 	movabs $0x7ff8000000000000,%rax
  41ec22:	00 f8 7f 
  41ec25:	48 09 f8             	or     %rdi,%rax
  41ec28:	c3                   	retq   
  41ec29:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  41ec30:	48 d3 e0             	shl    %cl,%rax
  41ec33:	4c 21 c6             	and    %r8,%rsi
  41ec36:	48 c7 c1 1d 00 00 00 	mov    $0x1d,%rcx
  41ec3d:	48 d3 e6             	shl    %cl,%rsi
  41ec40:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  41ec47:	48 d3 e2             	shl    %cl,%rdx
  41ec4a:	48 09 f2             	or     %rsi,%rdx
  41ec4d:	48 01 c2             	add    %rax,%rdx
  41ec50:	48 b8 00 00 00 00 00 	movabs $0x3800000000000000,%rax
  41ec57:	00 00 38 
  41ec5a:	48 01 d0             	add    %rdx,%rax
  41ec5d:	c3                   	retq   
  41ec5e:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  41ec65:	48 d3 e2             	shl    %cl,%rdx
  41ec68:	48 89 d0             	mov    %rdx,%rax
  41ec6b:	c3                   	retq   
  41ec6c:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  41ec73:	48 d3 e2             	shl    %cl,%rdx
  41ec76:	48 b8 00 00 00 00 00 	movabs $0x7ff0000000000000,%rax
  41ec7d:	00 f0 7f 
  41ec80:	48 09 d0             	or     %rdx,%rax
  41ec83:	c3                   	retq   
  41ec84:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41ec8b:	00 00 00 00 00 

000000000041ec90 <float32_round_to_int>:
  41ec90:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41ec97:	48 89 fa             	mov    %rdi,%rdx
  41ec9a:	48 d3 ea             	shr    %cl,%rdx
  41ec9d:	48 81 e2 ff 00 00 00 	and    $0xff,%rdx
  41eca4:	48 81 fa 96 00 00 00 	cmp    $0x96,%rdx
  41ecab:	72 5f                	jb     41ed0c <float32_round_to_int+0x7c>
  41ecad:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
  41ecb4:	0f 85 11 02 00 00    	jne    41eecb <float32_round_to_int+0x23b>
  41ecba:	48 89 f8             	mov    %rdi,%rax
  41ecbd:	48 25 ff ff 7f 00    	and    $0x7fffff,%rax
  41ecc3:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  41ecca:	00 00 00 
  41eccd:	48 85 c8             	test   %rcx,%rax
  41ecd0:	0f 84 f5 01 00 00    	je     41eecb <float32_round_to_int+0x23b>
  41ecd6:	48 89 f9             	mov    %rdi,%rcx
  41ecd9:	48 81 e1 00 00 c0 7f 	and    $0x7fc00000,%rcx
  41ece0:	48 31 c0             	xor    %rax,%rax
  41ece3:	48 81 f9 00 00 80 7f 	cmp    $0x7f800000,%rcx
  41ecea:	0f 85 0b 01 00 00    	jne    41edfb <float32_round_to_int+0x16b>
  41ecf0:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  41ecf7:	0f 84 f4 00 00 00    	je     41edf1 <float32_round_to_int+0x161>
  41ecfd:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  41ed04:	00 00 00 
  41ed07:	e9 ef 00 00 00       	jmpq   41edfb <float32_round_to_int+0x16b>
  41ed0c:	48 83 fa 7e          	cmp    $0x7e,%rdx
  41ed10:	77 6f                	ja     41ed81 <float32_round_to_int+0xf1>
  41ed12:	48 f7 c7 ff ff ff 7f 	test   $0x7fffffff,%rdi
  41ed19:	0f 84 ac 01 00 00    	je     41eecb <float32_round_to_int+0x23b>
  41ed1f:	48 0f be 05 ba d9 20 	movsbq 0x20d9ba(%rip),%rax        # 62c6e1 <float_exception_flags>
  41ed26:	00 
  41ed27:	48 83 c8 20          	or     $0x20,%rax
  41ed2b:	88 05 b0 d9 20 00    	mov    %al,0x20d9b0(%rip)        # 62c6e1 <float_exception_flags>
  41ed31:	48 b8 00 00 00 80 00 	movabs $0x80000000,%rax
  41ed38:	00 00 00 
  41ed3b:	4c 0f be 05 9d d9 20 	movsbq 0x20d99d(%rip),%r8        # 62c6e0 <float_rounding_mode>
  41ed42:	00 
  41ed43:	48 21 f8             	and    %rdi,%rax
  41ed46:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41ed4d:	48 d3 e8             	shr    %cl,%rax
  41ed50:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  41ed57:	00 00 00 
  41ed5a:	4c 89 c6             	mov    %r8,%rsi
  41ed5d:	48 21 ce             	and    %rcx,%rsi
  41ed60:	48 83 fe 02          	cmp    $0x2,%rsi
  41ed64:	0f 84 e1 00 00 00    	je     41ee4b <float32_round_to_int+0x1bb>
  41ed6a:	48 83 fe 01          	cmp    $0x1,%rsi
  41ed6e:	0f 85 ee 00 00 00    	jne    41ee62 <float32_round_to_int+0x1d2>
  41ed74:	48 85 c0             	test   %rax,%rax
  41ed77:	74 07                	je     41ed80 <float32_round_to_int+0xf0>
  41ed79:	48 c7 c0 00 00 80 bf 	mov    $0xffffffffbf800000,%rax
  41ed80:	c3                   	retq   
  41ed81:	48 c7 c1 96 00 00 00 	mov    $0x96,%rcx
  41ed88:	44 0f b6 0d 50 d9 20 	movzbl 0x20d950(%rip),%r9d        # 62c6e0 <float_rounding_mode>
  41ed8f:	00 
  41ed90:	48 29 d1             	sub    %rdx,%rcx
  41ed93:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  41ed9a:	48 d3 e0             	shl    %cl,%rax
  41ed9d:	49 83 f9 03          	cmp    $0x3,%r9
  41eda1:	48 89 fe             	mov    %rdi,%rsi
  41eda4:	0f 84 03 01 00 00    	je     41eead <float32_round_to_int+0x21d>
  41edaa:	4c 8d 40 ff          	lea    -0x1(%rax),%r8
  41edae:	4d 85 c9             	test   %r9,%r9
  41edb1:	75 6f                	jne    41ee22 <float32_round_to_int+0x192>
  41edb3:	48 be fe ff ff ff 00 	movabs $0xfffffffe,%rsi
  41edba:	00 00 00 
  41edbd:	48 21 c6             	and    %rax,%rsi
  41edc0:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  41edc7:	48 d3 ee             	shr    %cl,%rsi
  41edca:	48 01 fe             	add    %rdi,%rsi
  41edcd:	49 21 f0             	and    %rsi,%r8
  41edd0:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  41edd7:	00 00 00 
  41edda:	49 85 c8             	test   %rcx,%r8
  41eddd:	0f 85 ca 00 00 00    	jne    41eead <float32_round_to_int+0x21d>
  41ede3:	48 89 c1             	mov    %rax,%rcx
  41ede6:	48 f7 d1             	not    %rcx
  41ede9:	48 21 ce             	and    %rcx,%rsi
  41edec:	e9 bc 00 00 00       	jmpq   41eead <float32_round_to_int+0x21d>
  41edf1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  41edf8:	00 00 00 
  41edfb:	48 81 cf 00 00 40 00 	or     $0x400000,%rdi
  41ee02:	48 85 c0             	test   %rax,%rax
  41ee05:	0f 84 c0 00 00 00    	je     41eecb <float32_round_to_int+0x23b>
  41ee0b:	48 0f be 05 ce d8 20 	movsbq 0x20d8ce(%rip),%rax        # 62c6e1 <float_exception_flags>
  41ee12:	00 
  41ee13:	48 83 c8 01          	or     $0x1,%rax
  41ee17:	88 05 c4 d8 20 00    	mov    %al,0x20d8c4(%rip)        # 62c6e1 <float_exception_flags>
  41ee1d:	e9 a9 00 00 00       	jmpq   41eecb <float32_round_to_int+0x23b>
  41ee22:	48 ba 00 00 00 80 00 	movabs $0x80000000,%rdx
  41ee29:	00 00 00 
  41ee2c:	48 21 fa             	and    %rdi,%rdx
  41ee2f:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41ee36:	48 d3 ea             	shr    %cl,%rdx
  41ee39:	49 83 f9 02          	cmp    $0x2,%r9
  41ee3d:	75 56                	jne    41ee95 <float32_round_to_int+0x205>
  41ee3f:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  41ee46:	00 00 00 
  41ee49:	eb 54                	jmp    41ee9f <float32_round_to_int+0x20f>
  41ee4b:	48 85 c0             	test   %rax,%rax
  41ee4e:	48 c7 c7 00 00 00 80 	mov    $0xffffffff80000000,%rdi
  41ee55:	75 74                	jne    41eecb <float32_round_to_int+0x23b>
  41ee57:	48 c7 c7 00 00 80 3f 	mov    $0x3f800000,%rdi
  41ee5e:	48 89 f8             	mov    %rdi,%rax
  41ee61:	c3                   	retq   
  41ee62:	49 85 c8             	test   %rcx,%r8
  41ee65:	75 23                	jne    41ee8a <float32_round_to_int+0x1fa>
  41ee67:	48 83 fa 7e          	cmp    $0x7e,%rdx
  41ee6b:	75 1d                	jne    41ee8a <float32_round_to_int+0x1fa>
  41ee6d:	48 81 e7 ff ff 7f 00 	and    $0x7fffff,%rdi
  41ee74:	48 85 cf             	test   %rcx,%rdi
  41ee77:	74 11                	je     41ee8a <float32_round_to_int+0x1fa>
  41ee79:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41ee80:	48 d3 e0             	shl    %cl,%rax
  41ee83:	48 0d 00 00 80 3f    	or     $0x3f800000,%rax
  41ee89:	c3                   	retq   
  41ee8a:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41ee91:	48 d3 e0             	shl    %cl,%rax
  41ee94:	c3                   	retq   
  41ee95:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41ee9c:	00 00 00 
  41ee9f:	48 31 f6             	xor    %rsi,%rsi
  41eea2:	48 39 ca             	cmp    %rcx,%rdx
  41eea5:	74 03                	je     41eeaa <float32_round_to_int+0x21a>
  41eea7:	4c 89 c6             	mov    %r8,%rsi
  41eeaa:	48 01 fe             	add    %rdi,%rsi
  41eead:	48 f7 d8             	neg    %rax
  41eeb0:	48 21 f0             	and    %rsi,%rax
  41eeb3:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  41eeba:	00 00 00 
  41eebd:	48 89 c2             	mov    %rax,%rdx
  41eec0:	48 21 ca             	and    %rcx,%rdx
  41eec3:	48 21 f9             	and    %rdi,%rcx
  41eec6:	48 39 ca             	cmp    %rcx,%rdx
  41eec9:	75 04                	jne    41eecf <float32_round_to_int+0x23f>
  41eecb:	48 89 f8             	mov    %rdi,%rax
  41eece:	c3                   	retq   
  41eecf:	48 0f be 0d 0a d8 20 	movsbq 0x20d80a(%rip),%rcx        # 62c6e1 <float_exception_flags>
  41eed6:	00 
  41eed7:	48 83 c9 20          	or     $0x20,%rcx
  41eedb:	88 0d 00 d8 20 00    	mov    %cl,0x20d800(%rip)        # 62c6e1 <float_exception_flags>
  41eee1:	c3                   	retq   
  41eee2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41eee9:	1f 84 00 00 00 00 00 

000000000041eef0 <float32_add>:
  41eef0:	48 ba 00 00 00 80 00 	movabs $0x80000000,%rdx
  41eef7:	00 00 00 
  41eefa:	48 89 f0             	mov    %rsi,%rax
  41eefd:	48 21 d0             	and    %rdx,%rax
  41ef00:	48 21 fa             	and    %rdi,%rdx
  41ef03:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41ef0a:	48 d3 ea             	shr    %cl,%rdx
  41ef0d:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41ef14:	48 d3 e8             	shr    %cl,%rax
  41ef17:	48 39 c2             	cmp    %rax,%rdx
  41ef1a:	75 02                	jne    41ef1e <float32_add+0x2e>
  41ef1c:	eb 12                	jmp    41ef30 <addFloat32Sigs>
  41ef1e:	e9 ad 06 00 00       	jmpq   41f5d0 <subFloat32Sigs>
  41ef23:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  41ef2a:	84 00 00 00 00 00 

000000000041ef30 <addFloat32Sigs>:
  41ef30:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41ef37:	49 89 f9             	mov    %rdi,%r9
  41ef3a:	49 d3 e9             	shr    %cl,%r9
  41ef3d:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41ef44:	49 89 f3             	mov    %rsi,%r11
  41ef47:	49 d3 eb             	shr    %cl,%r11
  41ef4a:	48 c7 c1 06 00 00 00 	mov    $0x6,%rcx
  41ef51:	49 89 f8             	mov    %rdi,%r8
  41ef54:	49 d3 e0             	shl    %cl,%r8
  41ef57:	48 c7 c1 06 00 00 00 	mov    $0x6,%rcx
  41ef5e:	49 89 f2             	mov    %rsi,%r10
  41ef61:	49 d3 e2             	shl    %cl,%r10
  41ef64:	49 81 e1 ff 00 00 00 	and    $0xff,%r9
  41ef6b:	49 81 e3 ff 00 00 00 	and    $0xff,%r11
  41ef72:	4c 89 c8             	mov    %r9,%rax
  41ef75:	4c 29 d8             	sub    %r11,%rax
  41ef78:	49 81 e0 c0 ff ff 1f 	and    $0x1fffffc0,%r8
  41ef7f:	49 81 e2 c0 ff ff 1f 	and    $0x1fffffc0,%r10
  41ef86:	48 85 c0             	test   %rax,%rax
  41ef89:	7e 5e                	jle    41efe9 <addFloat32Sigs+0xb9>
  41ef8b:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
  41ef92:	0f 85 8c 00 00 00    	jne    41f024 <addFloat32Sigs+0xf4>
  41ef98:	49 b9 ff ff ff ff 00 	movabs $0xffffffff,%r9
  41ef9f:	00 00 00 
  41efa2:	4d 85 c8             	test   %r9,%r8
  41efa5:	0f 84 18 06 00 00    	je     41f5c3 <addFloat32Sigs+0x693>
  41efab:	48 89 f8             	mov    %rdi,%rax
  41efae:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41efb4:	4d 31 c0             	xor    %r8,%r8
  41efb7:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41efbd:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41efc4:	00 00 00 
  41efc7:	0f 85 e7 01 00 00    	jne    41f1b4 <addFloat32Sigs+0x284>
  41efcd:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  41efd4:	0f 84 d0 01 00 00    	je     41f1aa <addFloat32Sigs+0x27a>
  41efda:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  41efe1:	00 00 00 
  41efe4:	e9 cb 01 00 00       	jmpq   41f1b4 <addFloat32Sigs+0x284>
  41efe9:	0f 88 b3 00 00 00    	js     41f0a2 <addFloat32Sigs+0x172>
  41efef:	4d 85 c9             	test   %r9,%r9
  41eff2:	0f 85 08 01 00 00    	jne    41f100 <addFloat32Sigs+0x1d0>
  41eff8:	4d 01 c2             	add    %r8,%r10
  41effb:	48 b8 c0 ff ff ff 00 	movabs $0xffffffc0,%rax
  41f002:	00 00 00 
  41f005:	4c 21 d0             	and    %r10,%rax
  41f008:	48 c7 c1 06 00 00 00 	mov    $0x6,%rcx
  41f00f:	48 d3 e8             	shr    %cl,%rax
  41f012:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41f019:	48 d3 e2             	shl    %cl,%rdx
  41f01c:	48 09 c2             	or     %rax,%rdx
  41f01f:	e9 9c 05 00 00       	jmpq   41f5c0 <addFloat32Sigs+0x690>
  41f024:	4c 89 d1             	mov    %r10,%rcx
  41f027:	48 81 c9 00 00 00 20 	or     $0x20000000,%rcx
  41f02e:	4d 85 db             	test   %r11,%r11
  41f031:	75 0c                	jne    41f03f <addFloat32Sigs+0x10f>
  41f033:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  41f03a:	00 00 00 
  41f03d:	eb 0a                	jmp    41f049 <addFloat32Sigs+0x119>
  41f03f:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  41f046:	00 00 00 
  41f049:	74 03                	je     41f04e <addFloat32Sigs+0x11e>
  41f04b:	49 89 ca             	mov    %rcx,%r10
  41f04e:	48 29 f0             	sub    %rsi,%rax
  41f051:	48 bf ff ff ff ff 00 	movabs $0xffffffff,%rdi
  41f058:	00 00 00 
  41f05b:	48 85 f8             	test   %rdi,%rax
  41f05e:	0f 84 4a 03 00 00    	je     41f3ae <addFloat32Sigs+0x47e>
  41f064:	48 83 f8 1f          	cmp    $0x1f,%rax
  41f068:	0f 8f f3 00 00 00    	jg     41f161 <addFloat32Sigs+0x231>
  41f06e:	48 89 c1             	mov    %rax,%rcx
  41f071:	48 21 f9             	and    %rdi,%rcx
  41f074:	4c 89 d6             	mov    %r10,%rsi
  41f077:	48 21 fe             	and    %rdi,%rsi
  41f07a:	48 d3 ee             	shr    %cl,%rsi
  41f07d:	48 f7 d8             	neg    %rax
  41f080:	48 83 e0 1f          	and    $0x1f,%rax
  41f084:	48 89 c1             	mov    %rax,%rcx
  41f087:	49 d3 e2             	shl    %cl,%r10
  41f08a:	49 85 fa             	test   %rdi,%r10
  41f08d:	0f 84 47 01 00 00    	je     41f1da <addFloat32Sigs+0x2aa>
  41f093:	49 ba 01 00 00 00 00 	movabs $0x1,%r10
  41f09a:	00 00 00 
  41f09d:	e9 42 01 00 00       	jmpq   41f1e4 <addFloat32Sigs+0x2b4>
  41f0a2:	49 81 fb ff 00 00 00 	cmp    $0xff,%r11
  41f0a9:	0f 85 ca 00 00 00    	jne    41f179 <addFloat32Sigs+0x249>
  41f0af:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  41f0b6:	00 00 00 
  41f0b9:	4d 85 c2             	test   %r8,%r10
  41f0bc:	0f 84 66 02 00 00    	je     41f328 <addFloat32Sigs+0x3f8>
  41f0c2:	48 89 f8             	mov    %rdi,%rax
  41f0c5:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41f0cb:	4d 31 c9             	xor    %r9,%r9
  41f0ce:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41f0d4:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41f0db:	00 00 00 
  41f0de:	0f 85 7d 02 00 00    	jne    41f361 <addFloat32Sigs+0x431>
  41f0e4:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  41f0eb:	0f 84 66 02 00 00    	je     41f357 <addFloat32Sigs+0x427>
  41f0f1:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  41f0f8:	00 00 00 
  41f0fb:	e9 61 02 00 00       	jmpq   41f361 <addFloat32Sigs+0x431>
  41f100:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
  41f107:	0f 85 8e 00 00 00    	jne    41f19b <addFloat32Sigs+0x26b>
  41f10d:	4d 09 c2             	or     %r8,%r10
  41f110:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  41f117:	00 00 00 
  41f11a:	4d 85 c2             	test   %r8,%r10
  41f11d:	0f 84 a0 04 00 00    	je     41f5c3 <addFloat32Sigs+0x693>
  41f123:	48 89 f8             	mov    %rdi,%rax
  41f126:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41f12c:	4d 31 c9             	xor    %r9,%r9
  41f12f:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41f135:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41f13c:	00 00 00 
  41f13f:	0f 85 76 03 00 00    	jne    41f4bb <addFloat32Sigs+0x58b>
  41f145:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  41f14c:	0f 84 5f 03 00 00    	je     41f4b1 <addFloat32Sigs+0x581>
  41f152:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  41f159:	00 00 00 
  41f15c:	e9 5a 03 00 00       	jmpq   41f4bb <addFloat32Sigs+0x58b>
  41f161:	49 85 fa             	test   %rdi,%r10
  41f164:	0f 84 82 00 00 00    	je     41f1ec <addFloat32Sigs+0x2bc>
  41f16a:	49 ba 01 00 00 00 00 	movabs $0x1,%r10
  41f171:	00 00 00 
  41f174:	e9 35 02 00 00       	jmpq   41f3ae <addFloat32Sigs+0x47e>
  41f179:	4c 89 c1             	mov    %r8,%rcx
  41f17c:	48 81 c9 00 00 00 20 	or     $0x20000000,%rcx
  41f183:	4d 85 c9             	test   %r9,%r9
  41f186:	0f 85 18 01 00 00    	jne    41f2a4 <addFloat32Sigs+0x374>
  41f18c:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  41f193:	00 00 00 
  41f196:	e9 13 01 00 00       	jmpq   41f2ae <addFloat32Sigs+0x37e>
  41f19b:	49 81 c8 00 00 00 40 	or     $0x40000000,%r8
  41f1a2:	4d 01 d0             	add    %r10,%r8
  41f1a5:	e9 4c 02 00 00       	jmpq   41f3f6 <addFloat32Sigs+0x4c6>
  41f1aa:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41f1b1:	00 00 00 
  41f1b4:	48 89 f0             	mov    %rsi,%rax
  41f1b7:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41f1bd:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41f1c3:	75 40                	jne    41f205 <addFloat32Sigs+0x2d5>
  41f1c5:	48 f7 c6 ff ff 3f 00 	test   $0x3fffff,%rsi
  41f1cc:	74 2d                	je     41f1fb <addFloat32Sigs+0x2cb>
  41f1ce:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  41f1d5:	00 00 00 
  41f1d8:	eb 2b                	jmp    41f205 <addFloat32Sigs+0x2d5>
  41f1da:	49 ba 00 00 00 00 00 	movabs $0x0,%r10
  41f1e1:	00 00 00 
  41f1e4:	49 09 f2             	or     %rsi,%r10
  41f1e7:	e9 c2 01 00 00       	jmpq   41f3ae <addFloat32Sigs+0x47e>
  41f1ec:	49 ba 00 00 00 00 00 	movabs $0x0,%r10
  41f1f3:	00 00 00 
  41f1f6:	e9 b3 01 00 00       	jmpq   41f3ae <addFloat32Sigs+0x47e>
  41f1fb:	49 b8 00 00 00 00 00 	movabs $0x0,%r8
  41f202:	00 00 00 
  41f205:	48 89 c8             	mov    %rcx,%rax
  41f208:	4c 09 c0             	or     %r8,%rax
  41f20b:	48 83 f8 01          	cmp    $0x1,%rax
  41f20f:	75 12                	jne    41f223 <addFloat32Sigs+0x2f3>
  41f211:	48 0f be 05 c8 d4 20 	movsbq 0x20d4c8(%rip),%rax        # 62c6e1 <float_exception_flags>
  41f218:	00 
  41f219:	48 83 c8 01          	or     $0x1,%rax
  41f21d:	88 05 be d4 20 00    	mov    %al,0x20d4be(%rip)        # 62c6e1 <float_exception_flags>
  41f223:	48 89 fa             	mov    %rdi,%rdx
  41f226:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
  41f22d:	48 89 f0             	mov    %rsi,%rax
  41f230:	48 0d 00 00 40 00    	or     $0x400000,%rax
  41f236:	48 85 c9             	test   %rcx,%rcx
  41f239:	74 19                	je     41f254 <addFloat32Sigs+0x324>
  41f23b:	4d 85 c0             	test   %r8,%r8
  41f23e:	75 42                	jne    41f282 <addFloat32Sigs+0x352>
  41f240:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  41f247:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  41f24e:	77 03                	ja     41f253 <addFloat32Sigs+0x323>
  41f250:	48 89 d0             	mov    %rdx,%rax
  41f253:	c3                   	retq   
  41f254:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  41f25b:	48 81 ff 01 00 80 7f 	cmp    $0x7f800001,%rdi
  41f262:	72 3f                	jb     41f2a3 <addFloat32Sigs+0x373>
  41f264:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  41f26b:	48 81 fe 01 00 80 7f 	cmp    $0x7f800001,%rsi
  41f272:	48 19 c9             	sbb    %rcx,%rcx
  41f275:	48 83 e1 01          	and    $0x1,%rcx
  41f279:	49 09 c8             	or     %rcx,%r8
  41f27c:	0f 85 3e 03 00 00    	jne    41f5c0 <addFloat32Sigs+0x690>
  41f282:	4c 8d 04 12          	lea    (%rdx,%rdx,1),%r8
  41f286:	48 bf fe ff ff ff 00 	movabs $0xfffffffe,%rdi
  41f28d:	00 00 00 
  41f290:	4c 89 c1             	mov    %r8,%rcx
  41f293:	48 21 f9             	and    %rdi,%rcx
  41f296:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  41f29a:	48 21 f7             	and    %rsi,%rdi
  41f29d:	48 39 f9             	cmp    %rdi,%rcx
  41f2a0:	73 5d                	jae    41f2ff <addFloat32Sigs+0x3cf>
  41f2a2:	c3                   	retq   
  41f2a3:	c3                   	retq   
  41f2a4:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  41f2ab:	00 00 00 
  41f2ae:	74 03                	je     41f2b3 <addFloat32Sigs+0x383>
  41f2b0:	49 89 c8             	mov    %rcx,%r8
  41f2b3:	48 01 f0             	add    %rsi,%rax
  41f2b6:	48 be ff ff ff ff 00 	movabs $0xffffffff,%rsi
  41f2bd:	00 00 00 
  41f2c0:	48 85 f0             	test   %rsi,%rax
  41f2c3:	74 79                	je     41f33e <addFloat32Sigs+0x40e>
  41f2c5:	48 89 c1             	mov    %rax,%rcx
  41f2c8:	48 f7 d9             	neg    %rcx
  41f2cb:	48 83 f9 1f          	cmp    $0x1f,%rcx
  41f2cf:	7f 72                	jg     41f343 <addFloat32Sigs+0x413>
  41f2d1:	48 21 f1             	and    %rsi,%rcx
  41f2d4:	4c 89 c7             	mov    %r8,%rdi
  41f2d7:	48 21 f7             	and    %rsi,%rdi
  41f2da:	48 d3 ef             	shr    %cl,%rdi
  41f2dd:	48 83 e0 1f          	and    $0x1f,%rax
  41f2e1:	48 89 c1             	mov    %rax,%rcx
  41f2e4:	49 d3 e0             	shl    %cl,%r8
  41f2e7:	49 85 f0             	test   %rsi,%r8
  41f2ea:	0f 84 9f 00 00 00    	je     41f38f <addFloat32Sigs+0x45f>
  41f2f0:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  41f2f7:	00 00 00 
  41f2fa:	e9 9a 00 00 00       	jmpq   41f399 <addFloat32Sigs+0x469>
  41f2ff:	4d 21 c8             	and    %r9,%r8
  41f302:	4c 21 ce             	and    %r9,%rsi
  41f305:	4c 39 c6             	cmp    %r8,%rsi
  41f308:	0f 82 b2 02 00 00    	jb     41f5c0 <addFloat32Sigs+0x690>
  41f30e:	48 89 c1             	mov    %rax,%rcx
  41f311:	4c 21 c9             	and    %r9,%rcx
  41f314:	49 21 d1             	and    %rdx,%r9
  41f317:	49 39 c9             	cmp    %rcx,%r9
  41f31a:	0f 82 a0 02 00 00    	jb     41f5c0 <addFloat32Sigs+0x690>
  41f320:	48 89 c2             	mov    %rax,%rdx
  41f323:	e9 98 02 00 00       	jmpq   41f5c0 <addFloat32Sigs+0x690>
  41f328:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41f32f:	48 d3 e2             	shl    %cl,%rdx
  41f332:	48 81 ca 00 00 80 7f 	or     $0x7f800000,%rdx
  41f339:	e9 82 02 00 00       	jmpq   41f5c0 <addFloat32Sigs+0x690>
  41f33e:	4d 89 d9             	mov    %r11,%r9
  41f341:	eb 6b                	jmp    41f3ae <addFloat32Sigs+0x47e>
  41f343:	49 85 f0             	test   %rsi,%r8
  41f346:	74 59                	je     41f3a1 <addFloat32Sigs+0x471>
  41f348:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  41f34f:	00 00 00 
  41f352:	4d 89 d9             	mov    %r11,%r9
  41f355:	eb 57                	jmp    41f3ae <addFloat32Sigs+0x47e>
  41f357:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41f35e:	00 00 00 
  41f361:	48 89 f0             	mov    %rsi,%rax
  41f364:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41f36a:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41f370:	0f 85 98 00 00 00    	jne    41f40e <addFloat32Sigs+0x4de>
  41f376:	48 f7 c6 ff ff 3f 00 	test   $0x3fffff,%rsi
  41f37d:	0f 84 81 00 00 00    	je     41f404 <addFloat32Sigs+0x4d4>
  41f383:	49 b9 01 00 00 00 00 	movabs $0x1,%r9
  41f38a:	00 00 00 
  41f38d:	eb 7f                	jmp    41f40e <addFloat32Sigs+0x4de>
  41f38f:	49 b8 00 00 00 00 00 	movabs $0x0,%r8
  41f396:	00 00 00 
  41f399:	49 09 f8             	or     %rdi,%r8
  41f39c:	4d 89 d9             	mov    %r11,%r9
  41f39f:	eb 0d                	jmp    41f3ae <addFloat32Sigs+0x47e>
  41f3a1:	49 b8 00 00 00 00 00 	movabs $0x0,%r8
  41f3a8:	00 00 00 
  41f3ab:	4d 89 d9             	mov    %r11,%r9
  41f3ae:	49 81 c8 00 00 00 20 	or     $0x20000000,%r8
  41f3b5:	4d 01 d0             	add    %r10,%r8
  41f3b8:	48 c7 c1 21 00 00 00 	mov    $0x21,%rcx
  41f3bf:	4c 89 c0             	mov    %r8,%rax
  41f3c2:	48 d3 e0             	shl    %cl,%rax
  41f3c5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  41f3cc:	48 d3 f8             	sar    %cl,%rax
  41f3cf:	48 85 c0             	test   %rax,%rax
  41f3d2:	4b 8d 0c 00          	lea    (%r8,%r8,1),%rcx
  41f3d6:	78 0c                	js     41f3e4 <addFloat32Sigs+0x4b4>
  41f3d8:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  41f3df:	00 00 00 
  41f3e2:	eb 0a                	jmp    41f3ee <addFloat32Sigs+0x4be>
  41f3e4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  41f3eb:	00 00 00 
  41f3ee:	78 03                	js     41f3f3 <addFloat32Sigs+0x4c3>
  41f3f0:	49 89 c8             	mov    %rcx,%r8
  41f3f3:	49 29 c1             	sub    %rax,%r9
  41f3f6:	48 89 d7             	mov    %rdx,%rdi
  41f3f9:	4c 89 ce             	mov    %r9,%rsi
  41f3fc:	4c 89 c2             	mov    %r8,%rdx
  41f3ff:	e9 8c ec ff ff       	jmpq   41e090 <roundAndPackFloat32>
  41f404:	49 b9 00 00 00 00 00 	movabs $0x0,%r9
  41f40b:	00 00 00 
  41f40e:	48 89 c8             	mov    %rcx,%rax
  41f411:	4c 09 c8             	or     %r9,%rax
  41f414:	48 83 f8 01          	cmp    $0x1,%rax
  41f418:	75 12                	jne    41f42c <addFloat32Sigs+0x4fc>
  41f41a:	48 0f be 05 bf d2 20 	movsbq 0x20d2bf(%rip),%rax        # 62c6e1 <float_exception_flags>
  41f421:	00 
  41f422:	48 83 c8 01          	or     $0x1,%rax
  41f426:	88 05 b5 d2 20 00    	mov    %al,0x20d2b5(%rip)        # 62c6e1 <float_exception_flags>
  41f42c:	48 89 fa             	mov    %rdi,%rdx
  41f42f:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
  41f436:	48 89 f0             	mov    %rsi,%rax
  41f439:	48 0d 00 00 40 00    	or     $0x400000,%rax
  41f43f:	48 85 c9             	test   %rcx,%rcx
  41f442:	74 19                	je     41f45d <addFloat32Sigs+0x52d>
  41f444:	4d 85 c9             	test   %r9,%r9
  41f447:	75 42                	jne    41f48b <addFloat32Sigs+0x55b>
  41f449:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  41f450:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  41f457:	77 03                	ja     41f45c <addFloat32Sigs+0x52c>
  41f459:	48 89 d0             	mov    %rdx,%rax
  41f45c:	c3                   	retq   
  41f45d:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  41f464:	48 81 ff 01 00 80 7f 	cmp    $0x7f800001,%rdi
  41f46b:	72 43                	jb     41f4b0 <addFloat32Sigs+0x580>
  41f46d:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  41f474:	48 81 fe 01 00 80 7f 	cmp    $0x7f800001,%rsi
  41f47b:	48 19 c9             	sbb    %rcx,%rcx
  41f47e:	48 83 e1 01          	and    $0x1,%rcx
  41f482:	49 09 c9             	or     %rcx,%r9
  41f485:	0f 85 35 01 00 00    	jne    41f5c0 <addFloat32Sigs+0x690>
  41f48b:	4c 8d 0c 12          	lea    (%rdx,%rdx,1),%r9
  41f48f:	48 bf fe ff ff ff 00 	movabs $0xfffffffe,%rdi
  41f496:	00 00 00 
  41f499:	4c 89 c9             	mov    %r9,%rcx
  41f49c:	48 21 f9             	and    %rdi,%rcx
  41f49f:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  41f4a3:	48 21 f7             	and    %rsi,%rdi
  41f4a6:	48 39 f9             	cmp    %rdi,%rcx
  41f4a9:	0f 83 d7 00 00 00    	jae    41f586 <addFloat32Sigs+0x656>
  41f4af:	c3                   	retq   
  41f4b0:	c3                   	retq   
  41f4b1:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41f4b8:	00 00 00 
  41f4bb:	48 89 f0             	mov    %rsi,%rax
  41f4be:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41f4c4:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41f4ca:	75 1f                	jne    41f4eb <addFloat32Sigs+0x5bb>
  41f4cc:	48 f7 c6 ff ff 3f 00 	test   $0x3fffff,%rsi
  41f4d3:	74 0c                	je     41f4e1 <addFloat32Sigs+0x5b1>
  41f4d5:	49 b9 01 00 00 00 00 	movabs $0x1,%r9
  41f4dc:	00 00 00 
  41f4df:	eb 0a                	jmp    41f4eb <addFloat32Sigs+0x5bb>
  41f4e1:	49 b9 00 00 00 00 00 	movabs $0x0,%r9
  41f4e8:	00 00 00 
  41f4eb:	48 89 c8             	mov    %rcx,%rax
  41f4ee:	4c 09 c8             	or     %r9,%rax
  41f4f1:	48 83 f8 01          	cmp    $0x1,%rax
  41f4f5:	75 12                	jne    41f509 <addFloat32Sigs+0x5d9>
  41f4f7:	48 0f be 05 e2 d1 20 	movsbq 0x20d1e2(%rip),%rax        # 62c6e1 <float_exception_flags>
  41f4fe:	00 
  41f4ff:	48 83 c8 01          	or     $0x1,%rax
  41f503:	88 05 d8 d1 20 00    	mov    %al,0x20d1d8(%rip)        # 62c6e1 <float_exception_flags>
  41f509:	48 89 fa             	mov    %rdi,%rdx
  41f50c:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
  41f513:	48 89 f0             	mov    %rsi,%rax
  41f516:	48 0d 00 00 40 00    	or     $0x400000,%rax
  41f51c:	48 85 c9             	test   %rcx,%rcx
  41f51f:	74 19                	je     41f53a <addFloat32Sigs+0x60a>
  41f521:	4d 85 c9             	test   %r9,%r9
  41f524:	75 3e                	jne    41f564 <addFloat32Sigs+0x634>
  41f526:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  41f52d:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  41f534:	77 03                	ja     41f539 <addFloat32Sigs+0x609>
  41f536:	48 89 d0             	mov    %rdx,%rax
  41f539:	c3                   	retq   
  41f53a:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  41f541:	48 81 ff 01 00 80 7f 	cmp    $0x7f800001,%rdi
  41f548:	72 3b                	jb     41f585 <addFloat32Sigs+0x655>
  41f54a:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  41f551:	48 81 fe 01 00 80 7f 	cmp    $0x7f800001,%rsi
  41f558:	48 19 c9             	sbb    %rcx,%rcx
  41f55b:	48 83 e1 01          	and    $0x1,%rcx
  41f55f:	49 09 c9             	or     %rcx,%r9
  41f562:	75 5c                	jne    41f5c0 <addFloat32Sigs+0x690>
  41f564:	4c 8d 0c 12          	lea    (%rdx,%rdx,1),%r9
  41f568:	48 bf fe ff ff ff 00 	movabs $0xfffffffe,%rdi
  41f56f:	00 00 00 
  41f572:	4c 89 c9             	mov    %r9,%rcx
  41f575:	48 21 f9             	and    %rdi,%rcx
  41f578:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  41f57c:	48 21 f7             	and    %rsi,%rdi
  41f57f:	48 39 f9             	cmp    %rdi,%rcx
  41f582:	73 20                	jae    41f5a4 <addFloat32Sigs+0x674>
  41f584:	c3                   	retq   
  41f585:	c3                   	retq   
  41f586:	4d 21 c1             	and    %r8,%r9
  41f589:	4c 21 c6             	and    %r8,%rsi
  41f58c:	4c 39 ce             	cmp    %r9,%rsi
  41f58f:	72 2f                	jb     41f5c0 <addFloat32Sigs+0x690>
  41f591:	48 89 c1             	mov    %rax,%rcx
  41f594:	4c 21 c1             	and    %r8,%rcx
  41f597:	49 21 d0             	and    %rdx,%r8
  41f59a:	49 39 c8             	cmp    %rcx,%r8
  41f59d:	72 21                	jb     41f5c0 <addFloat32Sigs+0x690>
  41f59f:	48 89 c2             	mov    %rax,%rdx
  41f5a2:	eb 1c                	jmp    41f5c0 <addFloat32Sigs+0x690>
  41f5a4:	4d 21 c1             	and    %r8,%r9
  41f5a7:	4c 21 c6             	and    %r8,%rsi
  41f5aa:	4c 39 ce             	cmp    %r9,%rsi
  41f5ad:	72 11                	jb     41f5c0 <addFloat32Sigs+0x690>
  41f5af:	48 89 c1             	mov    %rax,%rcx
  41f5b2:	4c 21 c1             	and    %r8,%rcx
  41f5b5:	49 21 d0             	and    %rdx,%r8
  41f5b8:	49 39 c8             	cmp    %rcx,%r8
  41f5bb:	72 03                	jb     41f5c0 <addFloat32Sigs+0x690>
  41f5bd:	48 89 c2             	mov    %rax,%rdx
  41f5c0:	48 89 d7             	mov    %rdx,%rdi
  41f5c3:	48 89 f8             	mov    %rdi,%rax
  41f5c6:	c3                   	retq   
  41f5c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  41f5ce:	00 00 

000000000041f5d0 <subFloat32Sigs>:
  41f5d0:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41f5d7:	49 89 fb             	mov    %rdi,%r11
  41f5da:	49 d3 eb             	shr    %cl,%r11
  41f5dd:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41f5e4:	49 89 f1             	mov    %rsi,%r9
  41f5e7:	49 d3 e9             	shr    %cl,%r9
  41f5ea:	48 c7 c1 07 00 00 00 	mov    $0x7,%rcx
  41f5f1:	49 89 fa             	mov    %rdi,%r10
  41f5f4:	49 d3 e2             	shl    %cl,%r10
  41f5f7:	48 c7 c1 07 00 00 00 	mov    $0x7,%rcx
  41f5fe:	49 89 f0             	mov    %rsi,%r8
  41f601:	49 d3 e0             	shl    %cl,%r8
  41f604:	49 81 e3 ff 00 00 00 	and    $0xff,%r11
  41f60b:	49 81 e1 ff 00 00 00 	and    $0xff,%r9
  41f612:	4c 89 d8             	mov    %r11,%rax
  41f615:	4c 29 c8             	sub    %r9,%rax
  41f618:	49 81 e2 80 ff ff 3f 	and    $0x3fffff80,%r10
  41f61f:	49 81 e0 80 ff ff 3f 	and    $0x3fffff80,%r8
  41f626:	48 85 c0             	test   %rax,%rax
  41f629:	7e 5a                	jle    41f685 <subFloat32Sigs+0xb5>
  41f62b:	49 81 fb ff 00 00 00 	cmp    $0xff,%r11
  41f632:	75 73                	jne    41f6a7 <subFloat32Sigs+0xd7>
  41f634:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  41f63b:	00 00 00 
  41f63e:	4d 85 c2             	test   %r8,%r10
  41f641:	0f 84 3f 01 00 00    	je     41f786 <subFloat32Sigs+0x1b6>
  41f647:	48 89 f8             	mov    %rdi,%rax
  41f64a:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41f650:	4d 31 c9             	xor    %r9,%r9
  41f653:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41f659:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41f660:	00 00 00 
  41f663:	0f 85 03 02 00 00    	jne    41f86c <subFloat32Sigs+0x29c>
  41f669:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  41f670:	0f 84 ec 01 00 00    	je     41f862 <subFloat32Sigs+0x292>
  41f676:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  41f67d:	00 00 00 
  41f680:	e9 e7 01 00 00       	jmpq   41f86c <subFloat32Sigs+0x29c>
  41f685:	0f 88 9d 00 00 00    	js     41f728 <subFloat32Sigs+0x158>
  41f68b:	4d 85 db             	test   %r11,%r11
  41f68e:	0f 85 f9 00 00 00    	jne    41f78d <subFloat32Sigs+0x1bd>
  41f694:	49 c7 c3 01 00 00 00 	mov    $0x1,%r11
  41f69b:	49 c7 c1 01 00 00 00 	mov    $0x1,%r9
  41f6a2:	e9 43 01 00 00       	jmpq   41f7ea <subFloat32Sigs+0x21a>
  41f6a7:	4c 89 c1             	mov    %r8,%rcx
  41f6aa:	48 81 c9 00 00 00 40 	or     $0x40000000,%rcx
  41f6b1:	4d 85 c9             	test   %r9,%r9
  41f6b4:	75 0c                	jne    41f6c2 <subFloat32Sigs+0xf2>
  41f6b6:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  41f6bd:	00 00 00 
  41f6c0:	eb 0a                	jmp    41f6cc <subFloat32Sigs+0xfc>
  41f6c2:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  41f6c9:	00 00 00 
  41f6cc:	74 03                	je     41f6d1 <subFloat32Sigs+0x101>
  41f6ce:	49 89 c8             	mov    %rcx,%r8
  41f6d1:	48 29 f0             	sub    %rsi,%rax
  41f6d4:	48 bf ff ff ff ff 00 	movabs $0xffffffff,%rdi
  41f6db:	00 00 00 
  41f6de:	48 85 f8             	test   %rdi,%rax
  41f6e1:	0f 84 c4 01 00 00    	je     41f8ab <subFloat32Sigs+0x2db>
  41f6e7:	48 83 f8 1f          	cmp    $0x1f,%rax
  41f6eb:	0f 8f 3e 01 00 00    	jg     41f82f <subFloat32Sigs+0x25f>
  41f6f1:	48 89 c1             	mov    %rax,%rcx
  41f6f4:	48 21 f9             	and    %rdi,%rcx
  41f6f7:	4c 89 c6             	mov    %r8,%rsi
  41f6fa:	48 21 fe             	and    %rdi,%rsi
  41f6fd:	48 d3 ee             	shr    %cl,%rsi
  41f700:	48 f7 d8             	neg    %rax
  41f703:	48 83 e0 1f          	and    $0x1f,%rax
  41f707:	48 89 c1             	mov    %rax,%rcx
  41f70a:	49 d3 e0             	shl    %cl,%r8
  41f70d:	49 85 f8             	test   %rdi,%r8
  41f710:	0f 84 7c 01 00 00    	je     41f892 <subFloat32Sigs+0x2c2>
  41f716:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  41f71d:	00 00 00 
  41f720:	49 09 f0             	or     %rsi,%r8
  41f723:	e9 83 01 00 00       	jmpq   41f8ab <subFloat32Sigs+0x2db>
  41f728:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
  41f72f:	0f 85 0b 01 00 00    	jne    41f840 <subFloat32Sigs+0x270>
  41f735:	49 b9 ff ff ff ff 00 	movabs $0xffffffff,%r9
  41f73c:	00 00 00 
  41f73f:	4d 85 c8             	test   %r9,%r8
  41f742:	0f 84 9b 02 00 00    	je     41f9e3 <subFloat32Sigs+0x413>
  41f748:	48 89 f8             	mov    %rdi,%rax
  41f74b:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41f751:	4d 31 c0             	xor    %r8,%r8
  41f754:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41f75a:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41f761:	00 00 00 
  41f764:	0f 85 f7 02 00 00    	jne    41fa61 <subFloat32Sigs+0x491>
  41f76a:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  41f771:	0f 84 e0 02 00 00    	je     41fa57 <subFloat32Sigs+0x487>
  41f777:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  41f77e:	00 00 00 
  41f781:	e9 db 02 00 00       	jmpq   41fa61 <subFloat32Sigs+0x491>
  41f786:	48 89 fa             	mov    %rdi,%rdx
  41f789:	48 89 d0             	mov    %rdx,%rax
  41f78c:	c3                   	retq   
  41f78d:	49 81 fb ff 00 00 00 	cmp    $0xff,%r11
  41f794:	75 54                	jne    41f7ea <subFloat32Sigs+0x21a>
  41f796:	4d 09 d0             	or     %r10,%r8
  41f799:	49 b9 ff ff ff ff 00 	movabs $0xffffffff,%r9
  41f7a0:	00 00 00 
  41f7a3:	4d 85 c8             	test   %r9,%r8
  41f7a6:	0f 84 4f 02 00 00    	je     41f9fb <subFloat32Sigs+0x42b>
  41f7ac:	48 89 f8             	mov    %rdi,%rax
  41f7af:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41f7b5:	4d 31 c0             	xor    %r8,%r8
  41f7b8:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41f7be:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41f7c5:	00 00 00 
  41f7c8:	0f 85 53 04 00 00    	jne    41fc21 <subFloat32Sigs+0x651>
  41f7ce:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  41f7d5:	0f 84 3c 04 00 00    	je     41fc17 <subFloat32Sigs+0x647>
  41f7db:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  41f7e2:	00 00 00 
  41f7e5:	e9 37 04 00 00       	jmpq   41fc21 <subFloat32Sigs+0x651>
  41f7ea:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  41f7f1:	00 00 00 
  41f7f4:	4c 89 d1             	mov    %r10,%rcx
  41f7f7:	48 21 c1             	and    %rax,%rcx
  41f7fa:	4c 21 c0             	and    %r8,%rax
  41f7fd:	48 39 c8             	cmp    %rcx,%rax
  41f800:	0f 82 ac 00 00 00    	jb     41f8b2 <subFloat32Sigs+0x2e2>
  41f806:	48 39 c1             	cmp    %rax,%rcx
  41f809:	0f 82 a3 02 00 00    	jb     41fab2 <subFloat32Sigs+0x4e2>
  41f80f:	0f b6 05 ca ce 20 00 	movzbl 0x20ceca(%rip),%eax        # 62c6e0 <float_rounding_mode>
  41f816:	48 83 f8 01          	cmp    $0x1,%rax
  41f81a:	0f 85 fc 01 00 00    	jne    41fa1c <subFloat32Sigs+0x44c>
  41f820:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  41f827:	00 00 00 
  41f82a:	e9 f7 01 00 00       	jmpq   41fa26 <subFloat32Sigs+0x456>
  41f82f:	49 85 f8             	test   %rdi,%r8
  41f832:	74 6d                	je     41f8a1 <subFloat32Sigs+0x2d1>
  41f834:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  41f83b:	00 00 00 
  41f83e:	eb 6b                	jmp    41f8ab <subFloat32Sigs+0x2db>
  41f840:	4c 89 d1             	mov    %r10,%rcx
  41f843:	48 81 c9 00 00 00 40 	or     $0x40000000,%rcx
  41f84a:	4d 85 db             	test   %r11,%r11
  41f84d:	0f 85 2a 01 00 00    	jne    41f97d <subFloat32Sigs+0x3ad>
  41f853:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  41f85a:	00 00 00 
  41f85d:	e9 25 01 00 00       	jmpq   41f987 <subFloat32Sigs+0x3b7>
  41f862:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41f869:	00 00 00 
  41f86c:	48 89 f0             	mov    %rsi,%rax
  41f86f:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41f875:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41f87b:	75 4d                	jne    41f8ca <subFloat32Sigs+0x2fa>
  41f87d:	48 f7 c6 ff ff 3f 00 	test   $0x3fffff,%rsi
  41f884:	74 3a                	je     41f8c0 <subFloat32Sigs+0x2f0>
  41f886:	49 b9 01 00 00 00 00 	movabs $0x1,%r9
  41f88d:	00 00 00 
  41f890:	eb 38                	jmp    41f8ca <subFloat32Sigs+0x2fa>
  41f892:	49 b8 00 00 00 00 00 	movabs $0x0,%r8
  41f899:	00 00 00 
  41f89c:	49 09 f0             	or     %rsi,%r8
  41f89f:	eb 0a                	jmp    41f8ab <subFloat32Sigs+0x2db>
  41f8a1:	49 b8 00 00 00 00 00 	movabs $0x0,%r8
  41f8a8:	00 00 00 
  41f8ab:	49 81 ca 00 00 00 40 	or     $0x40000000,%r10
  41f8b2:	4d 29 c2             	sub    %r8,%r10
  41f8b5:	4d 89 d9             	mov    %r11,%r9
  41f8b8:	4d 89 d0             	mov    %r10,%r8
  41f8bb:	e9 f9 01 00 00       	jmpq   41fab9 <subFloat32Sigs+0x4e9>
  41f8c0:	49 b9 00 00 00 00 00 	movabs $0x0,%r9
  41f8c7:	00 00 00 
  41f8ca:	48 89 c8             	mov    %rcx,%rax
  41f8cd:	4c 09 c8             	or     %r9,%rax
  41f8d0:	48 83 f8 01          	cmp    $0x1,%rax
  41f8d4:	75 12                	jne    41f8e8 <subFloat32Sigs+0x318>
  41f8d6:	48 0f be 05 03 ce 20 	movsbq 0x20ce03(%rip),%rax        # 62c6e1 <float_exception_flags>
  41f8dd:	00 
  41f8de:	48 83 c8 01          	or     $0x1,%rax
  41f8e2:	88 05 f9 cd 20 00    	mov    %al,0x20cdf9(%rip)        # 62c6e1 <float_exception_flags>
  41f8e8:	48 89 f8             	mov    %rdi,%rax
  41f8eb:	48 0d 00 00 40 00    	or     $0x400000,%rax
  41f8f1:	48 89 f2             	mov    %rsi,%rdx
  41f8f4:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
  41f8fb:	48 85 c9             	test   %rcx,%rcx
  41f8fe:	74 1a                	je     41f91a <subFloat32Sigs+0x34a>
  41f900:	4d 85 c9             	test   %r9,%r9
  41f903:	75 44                	jne    41f949 <subFloat32Sigs+0x379>
  41f905:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  41f90c:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  41f913:	0f 87 cf 03 00 00    	ja     41fce8 <subFloat32Sigs+0x718>
  41f919:	c3                   	retq   
  41f91a:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  41f921:	48 81 ff 01 00 80 7f 	cmp    $0x7f800001,%rdi
  41f928:	0f 82 ba 03 00 00    	jb     41fce8 <subFloat32Sigs+0x718>
  41f92e:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  41f935:	48 81 fe 01 00 80 7f 	cmp    $0x7f800001,%rsi
  41f93c:	48 19 c9             	sbb    %rcx,%rcx
  41f93f:	48 83 e1 01          	and    $0x1,%rcx
  41f943:	49 09 c9             	or     %rcx,%r9
  41f946:	74 01                	je     41f949 <subFloat32Sigs+0x379>
  41f948:	c3                   	retq   
  41f949:	4c 8d 0c 00          	lea    (%rax,%rax,1),%r9
  41f94d:	48 bf fe ff ff ff 00 	movabs $0xfffffffe,%rdi
  41f954:	00 00 00 
  41f957:	4c 89 c9             	mov    %r9,%rcx
  41f95a:	48 21 f9             	and    %rdi,%rcx
  41f95d:	48 8d 34 12          	lea    (%rdx,%rdx,1),%rsi
  41f961:	48 21 f7             	and    %rsi,%rdi
  41f964:	48 39 f9             	cmp    %rdi,%rcx
  41f967:	0f 82 7b 03 00 00    	jb     41fce8 <subFloat32Sigs+0x718>
  41f96d:	4d 21 c1             	and    %r8,%r9
  41f970:	4c 21 c6             	and    %r8,%rsi
  41f973:	4c 39 ce             	cmp    %r9,%rsi
  41f976:	0f 83 c9 00 00 00    	jae    41fa45 <subFloat32Sigs+0x475>
  41f97c:	c3                   	retq   
  41f97d:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  41f984:	00 00 00 
  41f987:	74 03                	je     41f98c <subFloat32Sigs+0x3bc>
  41f989:	49 89 ca             	mov    %rcx,%r10
  41f98c:	48 01 f0             	add    %rsi,%rax
  41f98f:	48 be ff ff ff ff 00 	movabs $0xffffffff,%rsi
  41f996:	00 00 00 
  41f999:	48 85 f0             	test   %rsi,%rax
  41f99c:	0f 84 09 01 00 00    	je     41faab <subFloat32Sigs+0x4db>
  41f9a2:	48 89 c1             	mov    %rax,%rcx
  41f9a5:	48 f7 d9             	neg    %rcx
  41f9a8:	48 83 f9 1f          	cmp    $0x1f,%rcx
  41f9ac:	0f 8f 82 00 00 00    	jg     41fa34 <subFloat32Sigs+0x464>
  41f9b2:	48 21 f1             	and    %rsi,%rcx
  41f9b5:	4c 89 d7             	mov    %r10,%rdi
  41f9b8:	48 21 f7             	and    %rsi,%rdi
  41f9bb:	48 d3 ef             	shr    %cl,%rdi
  41f9be:	48 83 e0 1f          	and    $0x1f,%rax
  41f9c2:	48 89 c1             	mov    %rax,%rcx
  41f9c5:	49 d3 e2             	shl    %cl,%r10
  41f9c8:	49 85 f2             	test   %rsi,%r10
  41f9cb:	0f 84 c1 00 00 00    	je     41fa92 <subFloat32Sigs+0x4c2>
  41f9d1:	49 ba 01 00 00 00 00 	movabs $0x1,%r10
  41f9d8:	00 00 00 
  41f9db:	49 09 fa             	or     %rdi,%r10
  41f9de:	e9 c8 00 00 00       	jmpq   41faab <subFloat32Sigs+0x4db>
  41f9e3:	48 f7 d2             	not    %rdx
  41f9e6:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41f9ed:	48 d3 e2             	shl    %cl,%rdx
  41f9f0:	48 81 ca 00 00 80 7f 	or     $0x7f800000,%rdx
  41f9f7:	48 89 d0             	mov    %rdx,%rax
  41f9fa:	c3                   	retq   
  41f9fb:	48 0f be 05 de cc 20 	movsbq 0x20ccde(%rip),%rax        # 62c6e1 <float_exception_flags>
  41fa02:	00 
  41fa03:	48 83 c8 01          	or     $0x1,%rax
  41fa07:	88 05 d4 cc 20 00    	mov    %al,0x20ccd4(%rip)        # 62c6e1 <float_exception_flags>
  41fa0d:	48 ba 00 00 c0 ff 00 	movabs $0xffc00000,%rdx
  41fa14:	00 00 00 
  41fa17:	e9 cc 02 00 00       	jmpq   41fce8 <subFloat32Sigs+0x718>
  41fa1c:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  41fa23:	00 00 00 
  41fa26:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41fa2d:	48 d3 e2             	shl    %cl,%rdx
  41fa30:	48 89 d0             	mov    %rdx,%rax
  41fa33:	c3                   	retq   
  41fa34:	49 85 f2             	test   %rsi,%r10
  41fa37:	74 68                	je     41faa1 <subFloat32Sigs+0x4d1>
  41fa39:	49 ba 01 00 00 00 00 	movabs $0x1,%r10
  41fa40:	00 00 00 
  41fa43:	eb 66                	jmp    41faab <subFloat32Sigs+0x4db>
  41fa45:	48 89 d1             	mov    %rdx,%rcx
  41fa48:	4c 21 c1             	and    %r8,%rcx
  41fa4b:	49 21 c0             	and    %rax,%r8
  41fa4e:	49 39 c8             	cmp    %rcx,%r8
  41fa51:	72 03                	jb     41fa56 <subFloat32Sigs+0x486>
  41fa53:	48 89 d0             	mov    %rdx,%rax
  41fa56:	c3                   	retq   
  41fa57:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41fa5e:	00 00 00 
  41fa61:	48 89 f0             	mov    %rsi,%rax
  41fa64:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41fa6a:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41fa70:	0f 85 ee 00 00 00    	jne    41fb64 <subFloat32Sigs+0x594>
  41fa76:	48 f7 c6 ff ff 3f 00 	test   $0x3fffff,%rsi
  41fa7d:	0f 84 d7 00 00 00    	je     41fb5a <subFloat32Sigs+0x58a>
  41fa83:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  41fa8a:	00 00 00 
  41fa8d:	e9 d2 00 00 00       	jmpq   41fb64 <subFloat32Sigs+0x594>
  41fa92:	49 ba 00 00 00 00 00 	movabs $0x0,%r10
  41fa99:	00 00 00 
  41fa9c:	49 09 fa             	or     %rdi,%r10
  41fa9f:	eb 0a                	jmp    41faab <subFloat32Sigs+0x4db>
  41faa1:	49 ba 00 00 00 00 00 	movabs $0x0,%r10
  41faa8:	00 00 00 
  41faab:	49 81 c8 00 00 00 40 	or     $0x40000000,%r8
  41fab2:	4d 29 d0             	sub    %r10,%r8
  41fab5:	48 83 f2 01          	xor    $0x1,%rdx
  41fab9:	48 bf ff ff ff ff 00 	movabs $0xffffffff,%rdi
  41fac0:	00 00 00 
  41fac3:	4c 89 c0             	mov    %r8,%rax
  41fac6:	48 21 f8             	and    %rdi,%rax
  41fac9:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
  41facf:	4d 19 d2             	sbb    %r10,%r10
  41fad2:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  41fad9:	4c 89 c6             	mov    %r8,%rsi
  41fadc:	48 d3 e6             	shl    %cl,%rsi
  41fadf:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
  41fae5:	72 03                	jb     41faea <subFloat32Sigs+0x51a>
  41fae7:	4c 89 c6             	mov    %r8,%rsi
  41faea:	49 ff c9             	dec    %r9
  41faed:	48 21 f7             	and    %rsi,%rdi
  41faf0:	49 83 e2 10          	and    $0x10,%r10
  41faf4:	48 81 ff ff ff ff 00 	cmp    $0xffffff,%rdi
  41fafb:	77 0e                	ja     41fb0b <subFloat32Sigs+0x53b>
  41fafd:	49 83 ca 08          	or     $0x8,%r10
  41fb01:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41fb08:	48 d3 e6             	shl    %cl,%rsi
  41fb0b:	48 b8 00 00 00 ff 00 	movabs $0xff000000,%rax
  41fb12:	00 00 00 
  41fb15:	48 21 f0             	and    %rsi,%rax
  41fb18:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  41fb1f:	48 d3 e8             	shr    %cl,%rax
  41fb22:	48 0f be 80 f0 8e 42 	movsbq 0x428ef0(%rax),%rax
  41fb29:	00 
  41fb2a:	49 8d 44 02 ff       	lea    -0x1(%r10,%rax,1),%rax
  41fb2f:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41fb36:	48 d3 e0             	shl    %cl,%rax
  41fb39:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41fb40:	48 d3 f8             	sar    %cl,%rax
  41fb43:	49 29 c1             	sub    %rax,%r9
  41fb46:	48 89 c1             	mov    %rax,%rcx
  41fb49:	49 d3 e0             	shl    %cl,%r8
  41fb4c:	48 89 d7             	mov    %rdx,%rdi
  41fb4f:	4c 89 ce             	mov    %r9,%rsi
  41fb52:	4c 89 c2             	mov    %r8,%rdx
  41fb55:	e9 36 e5 ff ff       	jmpq   41e090 <roundAndPackFloat32>
  41fb5a:	49 b8 00 00 00 00 00 	movabs $0x0,%r8
  41fb61:	00 00 00 
  41fb64:	48 89 c8             	mov    %rcx,%rax
  41fb67:	4c 09 c0             	or     %r8,%rax
  41fb6a:	48 83 f8 01          	cmp    $0x1,%rax
  41fb6e:	75 12                	jne    41fb82 <subFloat32Sigs+0x5b2>
  41fb70:	48 0f be 05 69 cb 20 	movsbq 0x20cb69(%rip),%rax        # 62c6e1 <float_exception_flags>
  41fb77:	00 
  41fb78:	48 83 c8 01          	or     $0x1,%rax
  41fb7c:	88 05 5f cb 20 00    	mov    %al,0x20cb5f(%rip)        # 62c6e1 <float_exception_flags>
  41fb82:	48 89 f8             	mov    %rdi,%rax
  41fb85:	48 0d 00 00 40 00    	or     $0x400000,%rax
  41fb8b:	48 89 f2             	mov    %rsi,%rdx
  41fb8e:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
  41fb95:	48 85 c9             	test   %rcx,%rcx
  41fb98:	74 1a                	je     41fbb4 <subFloat32Sigs+0x5e4>
  41fb9a:	4d 85 c0             	test   %r8,%r8
  41fb9d:	75 44                	jne    41fbe3 <subFloat32Sigs+0x613>
  41fb9f:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  41fba6:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  41fbad:	0f 87 35 01 00 00    	ja     41fce8 <subFloat32Sigs+0x718>
  41fbb3:	c3                   	retq   
  41fbb4:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  41fbbb:	48 81 ff 01 00 80 7f 	cmp    $0x7f800001,%rdi
  41fbc2:	0f 82 20 01 00 00    	jb     41fce8 <subFloat32Sigs+0x718>
  41fbc8:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  41fbcf:	48 81 fe 01 00 80 7f 	cmp    $0x7f800001,%rsi
  41fbd6:	48 19 c9             	sbb    %rcx,%rcx
  41fbd9:	48 83 e1 01          	and    $0x1,%rcx
  41fbdd:	49 09 c8             	or     %rcx,%r8
  41fbe0:	74 01                	je     41fbe3 <subFloat32Sigs+0x613>
  41fbe2:	c3                   	retq   
  41fbe3:	4c 8d 04 00          	lea    (%rax,%rax,1),%r8
  41fbe7:	48 bf fe ff ff ff 00 	movabs $0xfffffffe,%rdi
  41fbee:	00 00 00 
  41fbf1:	4c 89 c1             	mov    %r8,%rcx
  41fbf4:	48 21 f9             	and    %rdi,%rcx
  41fbf7:	48 8d 34 12          	lea    (%rdx,%rdx,1),%rsi
  41fbfb:	48 21 f7             	and    %rsi,%rdi
  41fbfe:	48 39 f9             	cmp    %rdi,%rcx
  41fc01:	0f 82 e1 00 00 00    	jb     41fce8 <subFloat32Sigs+0x718>
  41fc07:	4d 21 c8             	and    %r9,%r8
  41fc0a:	4c 21 ce             	and    %r9,%rsi
  41fc0d:	4c 39 c6             	cmp    %r8,%rsi
  41fc10:	0f 83 e2 00 00 00    	jae    41fcf8 <subFloat32Sigs+0x728>
  41fc16:	c3                   	retq   
  41fc17:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  41fc1e:	00 00 00 
  41fc21:	48 89 f0             	mov    %rsi,%rax
  41fc24:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41fc2a:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41fc30:	75 1f                	jne    41fc51 <subFloat32Sigs+0x681>
  41fc32:	48 f7 c6 ff ff 3f 00 	test   $0x3fffff,%rsi
  41fc39:	74 0c                	je     41fc47 <subFloat32Sigs+0x677>
  41fc3b:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  41fc42:	00 00 00 
  41fc45:	eb 0a                	jmp    41fc51 <subFloat32Sigs+0x681>
  41fc47:	49 b8 00 00 00 00 00 	movabs $0x0,%r8
  41fc4e:	00 00 00 
  41fc51:	48 89 c8             	mov    %rcx,%rax
  41fc54:	4c 09 c0             	or     %r8,%rax
  41fc57:	48 83 f8 01          	cmp    $0x1,%rax
  41fc5b:	75 12                	jne    41fc6f <subFloat32Sigs+0x69f>
  41fc5d:	48 0f be 05 7c ca 20 	movsbq 0x20ca7c(%rip),%rax        # 62c6e1 <float_exception_flags>
  41fc64:	00 
  41fc65:	48 83 c8 01          	or     $0x1,%rax
  41fc69:	88 05 72 ca 20 00    	mov    %al,0x20ca72(%rip)        # 62c6e1 <float_exception_flags>
  41fc6f:	48 89 f8             	mov    %rdi,%rax
  41fc72:	48 0d 00 00 40 00    	or     $0x400000,%rax
  41fc78:	48 89 f2             	mov    %rsi,%rdx
  41fc7b:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
  41fc82:	48 85 c9             	test   %rcx,%rcx
  41fc85:	74 16                	je     41fc9d <subFloat32Sigs+0x6cd>
  41fc87:	4d 85 c0             	test   %r8,%r8
  41fc8a:	75 3c                	jne    41fcc8 <subFloat32Sigs+0x6f8>
  41fc8c:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  41fc93:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  41fc9a:	77 4c                	ja     41fce8 <subFloat32Sigs+0x718>
  41fc9c:	c3                   	retq   
  41fc9d:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  41fca4:	48 81 ff 01 00 80 7f 	cmp    $0x7f800001,%rdi
  41fcab:	72 3b                	jb     41fce8 <subFloat32Sigs+0x718>
  41fcad:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  41fcb4:	48 81 fe 01 00 80 7f 	cmp    $0x7f800001,%rsi
  41fcbb:	48 19 c9             	sbb    %rcx,%rcx
  41fcbe:	48 83 e1 01          	and    $0x1,%rcx
  41fcc2:	49 09 c8             	or     %rcx,%r8
  41fcc5:	74 01                	je     41fcc8 <subFloat32Sigs+0x6f8>
  41fcc7:	c3                   	retq   
  41fcc8:	4c 8d 04 00          	lea    (%rax,%rax,1),%r8
  41fccc:	48 bf fe ff ff ff 00 	movabs $0xfffffffe,%rdi
  41fcd3:	00 00 00 
  41fcd6:	4c 89 c1             	mov    %r8,%rcx
  41fcd9:	48 21 f9             	and    %rdi,%rcx
  41fcdc:	48 8d 34 12          	lea    (%rdx,%rdx,1),%rsi
  41fce0:	48 21 f7             	and    %rsi,%rdi
  41fce3:	48 39 f9             	cmp    %rdi,%rcx
  41fce6:	73 04                	jae    41fcec <subFloat32Sigs+0x71c>
  41fce8:	48 89 d0             	mov    %rdx,%rax
  41fceb:	c3                   	retq   
  41fcec:	4d 21 c8             	and    %r9,%r8
  41fcef:	4c 21 ce             	and    %r9,%rsi
  41fcf2:	4c 39 c6             	cmp    %r8,%rsi
  41fcf5:	73 13                	jae    41fd0a <subFloat32Sigs+0x73a>
  41fcf7:	c3                   	retq   
  41fcf8:	48 89 d1             	mov    %rdx,%rcx
  41fcfb:	4c 21 c9             	and    %r9,%rcx
  41fcfe:	49 21 c1             	and    %rax,%r9
  41fd01:	49 39 c9             	cmp    %rcx,%r9
  41fd04:	72 03                	jb     41fd09 <subFloat32Sigs+0x739>
  41fd06:	48 89 d0             	mov    %rdx,%rax
  41fd09:	c3                   	retq   
  41fd0a:	48 89 d1             	mov    %rdx,%rcx
  41fd0d:	4c 21 c9             	and    %r9,%rcx
  41fd10:	49 21 c1             	and    %rax,%r9
  41fd13:	49 39 c9             	cmp    %rcx,%r9
  41fd16:	72 03                	jb     41fd1b <subFloat32Sigs+0x74b>
  41fd18:	48 89 d0             	mov    %rdx,%rax
  41fd1b:	c3                   	retq   
  41fd1c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000041fd20 <float32_sub>:
  41fd20:	48 ba 00 00 00 80 00 	movabs $0x80000000,%rdx
  41fd27:	00 00 00 
  41fd2a:	48 89 f0             	mov    %rsi,%rax
  41fd2d:	48 21 d0             	and    %rdx,%rax
  41fd30:	48 21 fa             	and    %rdi,%rdx
  41fd33:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41fd3a:	48 d3 ea             	shr    %cl,%rdx
  41fd3d:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41fd44:	48 d3 e8             	shr    %cl,%rax
  41fd47:	48 39 c2             	cmp    %rax,%rdx
  41fd4a:	75 05                	jne    41fd51 <float32_sub+0x31>
  41fd4c:	e9 7f f8 ff ff       	jmpq   41f5d0 <subFloat32Sigs>
  41fd51:	e9 da f1 ff ff       	jmpq   41ef30 <addFloat32Sigs>
  41fd56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41fd5d:	00 00 00 

000000000041fd60 <float32_mul>:
  41fd60:	53                   	push   %rbx
  41fd61:	48 89 f2             	mov    %rsi,%rdx
  41fd64:	48 31 fa             	xor    %rdi,%rdx
  41fd67:	49 89 fa             	mov    %rdi,%r10
  41fd6a:	49 81 e2 ff ff 7f 00 	and    $0x7fffff,%r10
  41fd71:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41fd78:	49 89 fb             	mov    %rdi,%r11
  41fd7b:	49 d3 eb             	shr    %cl,%r11
  41fd7e:	49 81 e3 ff 00 00 00 	and    $0xff,%r11
  41fd85:	49 89 f0             	mov    %rsi,%r8
  41fd88:	49 81 e0 ff ff 7f 00 	and    $0x7fffff,%r8
  41fd8f:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  41fd96:	49 89 f1             	mov    %rsi,%r9
  41fd99:	49 d3 e9             	shr    %cl,%r9
  41fd9c:	49 81 e1 ff 00 00 00 	and    $0xff,%r9
  41fda3:	48 b8 00 00 00 80 00 	movabs $0x80000000,%rax
  41fdaa:	00 00 00 
  41fdad:	48 21 d0             	and    %rdx,%rax
  41fdb0:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  41fdb7:	48 d3 e8             	shr    %cl,%rax
  41fdba:	49 81 fb ff 00 00 00 	cmp    $0xff,%r11
  41fdc1:	75 63                	jne    41fe26 <float32_mul+0xc6>
  41fdc3:	49 bb ff ff ff ff 00 	movabs $0xffffffff,%r11
  41fdca:	00 00 00 
  41fdcd:	4d 85 da             	test   %r11,%r10
  41fdd0:	75 16                	jne    41fde8 <float32_mul+0x88>
  41fdd2:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
  41fdd9:	0f 85 56 03 00 00    	jne    420135 <float32_mul+0x3d5>
  41fddf:	4d 85 d8             	test   %r11,%r8
  41fde2:	0f 84 4d 03 00 00    	je     420135 <float32_mul+0x3d5>
  41fde8:	48 89 f8             	mov    %rdi,%rax
  41fdeb:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41fdf1:	4d 31 c0             	xor    %r8,%r8
  41fdf4:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41fdfa:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  41fe01:	00 00 00 
  41fe04:	0f 85 3c 02 00 00    	jne    420046 <float32_mul+0x2e6>
  41fe0a:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  41fe11:	0f 84 25 02 00 00    	je     42003c <float32_mul+0x2dc>
  41fe17:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  41fe1e:	00 00 00 
  41fe21:	e9 20 02 00 00       	jmpq   420046 <float32_mul+0x2e6>
  41fe26:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
  41fe2d:	75 51                	jne    41fe80 <float32_mul+0x120>
  41fe2f:	49 b9 ff ff ff ff 00 	movabs $0xffffffff,%r9
  41fe36:	00 00 00 
  41fe39:	4d 85 c8             	test   %r9,%r8
  41fe3c:	0f 84 fd 02 00 00    	je     42013f <float32_mul+0x3df>
  41fe42:	48 89 f8             	mov    %rdi,%rax
  41fe45:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  41fe4b:	4d 31 c0             	xor    %r8,%r8
  41fe4e:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  41fe54:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  41fe5b:	00 00 00 
  41fe5e:	0f 85 77 03 00 00    	jne    4201db <float32_mul+0x47b>
  41fe64:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  41fe6b:	0f 84 60 03 00 00    	je     4201d1 <float32_mul+0x471>
  41fe71:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  41fe78:	00 00 00 
  41fe7b:	e9 5b 03 00 00       	jmpq   4201db <float32_mul+0x47b>
  41fe80:	4d 85 db             	test   %r11,%r11
  41fe83:	0f 85 9f 00 00 00    	jne    41ff28 <float32_mul+0x1c8>
  41fe89:	48 ba ff ff ff ff 00 	movabs $0xffffffff,%rdx
  41fe90:	00 00 00 
  41fe93:	49 85 d2             	test   %rdx,%r10
  41fe96:	0f 84 26 03 00 00    	je     4201c2 <float32_mul+0x462>
  41fe9c:	4c 89 d3             	mov    %r10,%rbx
  41fe9f:	48 21 d3             	and    %rdx,%rbx
  41fea2:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  41fea9:	4d 19 db             	sbb    %r11,%r11
  41feac:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  41feb3:	48 d3 e7             	shl    %cl,%rdi
  41feb6:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  41febd:	72 03                	jb     41fec2 <float32_mul+0x162>
  41febf:	4c 89 d7             	mov    %r10,%rdi
  41fec2:	48 21 fa             	and    %rdi,%rdx
  41fec5:	49 83 e3 10          	and    $0x10,%r11
  41fec9:	48 81 fa ff ff ff 00 	cmp    $0xffffff,%rdx
  41fed0:	77 0e                	ja     41fee0 <float32_mul+0x180>
  41fed2:	49 83 cb 08          	or     $0x8,%r11
  41fed6:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41fedd:	48 d3 e7             	shl    %cl,%rdi
  41fee0:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
  41fee7:	00 00 00 
  41feea:	48 21 fa             	and    %rdi,%rdx
  41feed:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  41fef4:	48 d3 ea             	shr    %cl,%rdx
  41fef7:	48 0f be 8a f0 8e 42 	movsbq 0x428ef0(%rdx),%rcx
  41fefe:	00 
  41feff:	49 8d 7c 0b f8       	lea    -0x8(%r11,%rcx,1),%rdi
  41ff04:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41ff0b:	48 d3 e7             	shl    %cl,%rdi
  41ff0e:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41ff15:	48 d3 ff             	sar    %cl,%rdi
  41ff18:	48 89 f9             	mov    %rdi,%rcx
  41ff1b:	49 d3 e2             	shl    %cl,%r10
  41ff1e:	49 c7 c3 01 00 00 00 	mov    $0x1,%r11
  41ff25:	49 29 fb             	sub    %rdi,%r11
  41ff28:	4d 85 c9             	test   %r9,%r9
  41ff2b:	0f 85 9f 00 00 00    	jne    41ffd0 <float32_mul+0x270>
  41ff31:	48 bf ff ff ff ff 00 	movabs $0xffffffff,%rdi
  41ff38:	00 00 00 
  41ff3b:	49 85 f8             	test   %rdi,%r8
  41ff3e:	0f 84 7e 02 00 00    	je     4201c2 <float32_mul+0x462>
  41ff44:	4c 89 c2             	mov    %r8,%rdx
  41ff47:	48 21 fa             	and    %rdi,%rdx
  41ff4a:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
  41ff51:	4d 19 c9             	sbb    %r9,%r9
  41ff54:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  41ff5b:	48 d3 e6             	shl    %cl,%rsi
  41ff5e:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
  41ff65:	72 03                	jb     41ff6a <float32_mul+0x20a>
  41ff67:	4c 89 c6             	mov    %r8,%rsi
  41ff6a:	48 21 f7             	and    %rsi,%rdi
  41ff6d:	49 83 e1 10          	and    $0x10,%r9
  41ff71:	48 81 ff ff ff ff 00 	cmp    $0xffffff,%rdi
  41ff78:	77 0e                	ja     41ff88 <float32_mul+0x228>
  41ff7a:	49 83 c9 08          	or     $0x8,%r9
  41ff7e:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  41ff85:	48 d3 e6             	shl    %cl,%rsi
  41ff88:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
  41ff8f:	00 00 00 
  41ff92:	48 21 f2             	and    %rsi,%rdx
  41ff95:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  41ff9c:	48 d3 ea             	shr    %cl,%rdx
  41ff9f:	48 0f be 8a f0 8e 42 	movsbq 0x428ef0(%rdx),%rcx
  41ffa6:	00 
  41ffa7:	49 8d 74 09 f8       	lea    -0x8(%r9,%rcx,1),%rsi
  41ffac:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41ffb3:	48 d3 e6             	shl    %cl,%rsi
  41ffb6:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  41ffbd:	48 d3 fe             	sar    %cl,%rsi
  41ffc0:	48 89 f1             	mov    %rsi,%rcx
  41ffc3:	49 d3 e0             	shl    %cl,%r8
  41ffc6:	49 c7 c1 01 00 00 00 	mov    $0x1,%r9
  41ffcd:	49 29 f1             	sub    %rsi,%r9
  41ffd0:	4d 01 d9             	add    %r11,%r9
  41ffd3:	48 c7 c1 07 00 00 00 	mov    $0x7,%rcx
  41ffda:	49 d3 e2             	shl    %cl,%r10
  41ffdd:	49 81 ca 00 00 00 40 	or     $0x40000000,%r10
  41ffe4:	49 81 c8 00 00 80 00 	or     $0x800000,%r8
  41ffeb:	49 c1 e0 08          	shl    $0x8,%r8
  41ffef:	48 b9 80 ff ff ff 00 	movabs $0xffffff80,%rcx
  41fff6:	00 00 00 
  41fff9:	4c 21 d1             	and    %r10,%rcx
  41fffc:	48 ba 00 ff ff ff 00 	movabs $0xffffff00,%rdx
  420003:	00 00 00 
  420006:	4c 21 c2             	and    %r8,%rdx
  420009:	48 0f af d1          	imul   %rcx,%rdx
  42000d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  420014:	48 89 d6             	mov    %rdx,%rsi
  420017:	48 d3 ee             	shr    %cl,%rsi
  42001a:	48 b9 00 80 ff ff 00 	movabs $0xffff8000,%rcx
  420021:	00 00 00 
  420024:	48 85 ca             	test   %rcx,%rdx
  420027:	0f 84 2c 01 00 00    	je     420159 <float32_mul+0x3f9>
  42002d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  420034:	00 00 00 
  420037:	e9 27 01 00 00       	jmpq   420163 <float32_mul+0x403>
  42003c:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  420043:	00 00 00 
  420046:	48 89 f0             	mov    %rsi,%rax
  420049:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  42004f:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  420055:	75 1f                	jne    420076 <float32_mul+0x316>
  420057:	48 f7 c6 ff ff 3f 00 	test   $0x3fffff,%rsi
  42005e:	74 0c                	je     42006c <float32_mul+0x30c>
  420060:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  420067:	00 00 00 
  42006a:	eb 0a                	jmp    420076 <float32_mul+0x316>
  42006c:	49 b8 00 00 00 00 00 	movabs $0x0,%r8
  420073:	00 00 00 
  420076:	48 89 d0             	mov    %rdx,%rax
  420079:	4c 09 c0             	or     %r8,%rax
  42007c:	48 83 f8 01          	cmp    $0x1,%rax
  420080:	75 12                	jne    420094 <float32_mul+0x334>
  420082:	48 0f be 05 57 c6 20 	movsbq 0x20c657(%rip),%rax        # 62c6e1 <float_exception_flags>
  420089:	00 
  42008a:	48 83 c8 01          	or     $0x1,%rax
  42008e:	88 05 4d c6 20 00    	mov    %al,0x20c64d(%rip)        # 62c6e1 <float_exception_flags>
  420094:	48 89 f9             	mov    %rdi,%rcx
  420097:	48 81 c9 00 00 40 00 	or     $0x400000,%rcx
  42009e:	48 89 f0             	mov    %rsi,%rax
  4200a1:	48 0d 00 00 40 00    	or     $0x400000,%rax
  4200a7:	48 85 d2             	test   %rdx,%rdx
  4200aa:	74 1e                	je     4200ca <float32_mul+0x36a>
  4200ac:	4d 85 c0             	test   %r8,%r8
  4200af:	75 4c                	jne    4200fd <float32_mul+0x39d>
  4200b1:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  4200b8:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  4200bf:	0f 87 e5 01 00 00    	ja     4202aa <float32_mul+0x54a>
  4200c5:	48 89 c8             	mov    %rcx,%rax
  4200c8:	5b                   	pop    %rbx
  4200c9:	c3                   	retq   
  4200ca:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  4200d1:	48 81 ff 01 00 80 7f 	cmp    $0x7f800001,%rdi
  4200d8:	0f 82 cc 01 00 00    	jb     4202aa <float32_mul+0x54a>
  4200de:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  4200e5:	48 81 fe 01 00 80 7f 	cmp    $0x7f800001,%rsi
  4200ec:	48 19 d2             	sbb    %rdx,%rdx
  4200ef:	48 83 e2 01          	and    $0x1,%rdx
  4200f3:	49 09 d0             	or     %rdx,%r8
  4200f6:	74 05                	je     4200fd <float32_mul+0x39d>
  4200f8:	48 89 c8             	mov    %rcx,%rax
  4200fb:	5b                   	pop    %rbx
  4200fc:	c3                   	retq   
  4200fd:	4c 8d 04 09          	lea    (%rcx,%rcx,1),%r8
  420101:	48 bf fe ff ff ff 00 	movabs $0xfffffffe,%rdi
  420108:	00 00 00 
  42010b:	4c 89 c2             	mov    %r8,%rdx
  42010e:	48 21 fa             	and    %rdi,%rdx
  420111:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  420115:	48 21 f7             	and    %rsi,%rdi
  420118:	48 39 fa             	cmp    %rdi,%rdx
  42011b:	0f 82 89 01 00 00    	jb     4202aa <float32_mul+0x54a>
  420121:	4d 21 d8             	and    %r11,%r8
  420124:	4c 21 de             	and    %r11,%rsi
  420127:	4c 39 c6             	cmp    %r8,%rsi
  42012a:	0f 83 7c 01 00 00    	jae    4202ac <float32_mul+0x54c>
  420130:	48 89 c8             	mov    %rcx,%rax
  420133:	5b                   	pop    %rbx
  420134:	c3                   	retq   
  420135:	4d 09 c1             	or     %r8,%r9
  420138:	4d 85 d9             	test   %r11,%r9
  42013b:	75 0a                	jne    420147 <float32_mul+0x3e7>
  42013d:	eb 65                	jmp    4201a4 <float32_mul+0x444>
  42013f:	4d 09 d3             	or     %r10,%r11
  420142:	4d 85 cb             	test   %r9,%r11
  420145:	74 5d                	je     4201a4 <float32_mul+0x444>
  420147:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  42014e:	48 d3 e0             	shl    %cl,%rax
  420151:	48 0d 00 00 80 7f    	or     $0x7f800000,%rax
  420157:	5b                   	pop    %rbx
  420158:	c3                   	retq   
  420159:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  420160:	00 00 00 
  420163:	48 09 f2             	or     %rsi,%rdx
  420166:	48 c7 c1 21 00 00 00 	mov    $0x21,%rcx
  42016d:	48 89 d6             	mov    %rdx,%rsi
  420170:	48 d3 e6             	shl    %cl,%rsi
  420173:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  42017a:	48 d3 fe             	sar    %cl,%rsi
  42017d:	48 c7 c1 1e 00 00 00 	mov    $0x1e,%rcx
  420184:	48 89 d7             	mov    %rdx,%rdi
  420187:	48 d3 ef             	shr    %cl,%rdi
  42018a:	48 83 e7 01          	and    $0x1,%rdi
  42018e:	48 85 f6             	test   %rsi,%rsi
  420191:	4a 8d 74 0f 80       	lea    -0x80(%rdi,%r9,1),%rsi
  420196:	78 03                	js     42019b <float32_mul+0x43b>
  420198:	48 01 d2             	add    %rdx,%rdx
  42019b:	48 89 c7             	mov    %rax,%rdi
  42019e:	5b                   	pop    %rbx
  42019f:	e9 ec de ff ff       	jmpq   41e090 <roundAndPackFloat32>
  4201a4:	48 0f be 05 35 c5 20 	movsbq 0x20c535(%rip),%rax        # 62c6e1 <float_exception_flags>
  4201ab:	00 
  4201ac:	48 83 c8 01          	or     $0x1,%rax
  4201b0:	88 05 2b c5 20 00    	mov    %al,0x20c52b(%rip)        # 62c6e1 <float_exception_flags>
  4201b6:	48 b8 00 00 c0 ff 00 	movabs $0xffc00000,%rax
  4201bd:	00 00 00 
  4201c0:	5b                   	pop    %rbx
  4201c1:	c3                   	retq   
  4201c2:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  4201c9:	48 d3 e0             	shl    %cl,%rax
  4201cc:	e9 d9 00 00 00       	jmpq   4202aa <float32_mul+0x54a>
  4201d1:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  4201d8:	00 00 00 
  4201db:	48 89 f0             	mov    %rsi,%rax
  4201de:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  4201e4:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  4201ea:	75 1f                	jne    42020b <float32_mul+0x4ab>
  4201ec:	48 f7 c6 ff ff 3f 00 	test   $0x3fffff,%rsi
  4201f3:	74 0c                	je     420201 <float32_mul+0x4a1>
  4201f5:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  4201fc:	00 00 00 
  4201ff:	eb 0a                	jmp    42020b <float32_mul+0x4ab>
  420201:	49 b8 00 00 00 00 00 	movabs $0x0,%r8
  420208:	00 00 00 
  42020b:	48 89 d0             	mov    %rdx,%rax
  42020e:	4c 09 c0             	or     %r8,%rax
  420211:	48 83 f8 01          	cmp    $0x1,%rax
  420215:	75 12                	jne    420229 <float32_mul+0x4c9>
  420217:	48 0f be 05 c2 c4 20 	movsbq 0x20c4c2(%rip),%rax        # 62c6e1 <float_exception_flags>
  42021e:	00 
  42021f:	48 83 c8 01          	or     $0x1,%rax
  420223:	88 05 b8 c4 20 00    	mov    %al,0x20c4b8(%rip)        # 62c6e1 <float_exception_flags>
  420229:	48 89 f9             	mov    %rdi,%rcx
  42022c:	48 81 c9 00 00 40 00 	or     $0x400000,%rcx
  420233:	48 89 f0             	mov    %rsi,%rax
  420236:	48 0d 00 00 40 00    	or     $0x400000,%rax
  42023c:	48 85 d2             	test   %rdx,%rdx
  42023f:	74 1a                	je     42025b <float32_mul+0x4fb>
  420241:	4d 85 c0             	test   %r8,%r8
  420244:	75 44                	jne    42028a <float32_mul+0x52a>
  420246:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  42024d:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  420254:	77 54                	ja     4202aa <float32_mul+0x54a>
  420256:	48 89 c8             	mov    %rcx,%rax
  420259:	5b                   	pop    %rbx
  42025a:	c3                   	retq   
  42025b:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  420262:	48 81 ff 01 00 80 7f 	cmp    $0x7f800001,%rdi
  420269:	72 3f                	jb     4202aa <float32_mul+0x54a>
  42026b:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  420272:	48 81 fe 01 00 80 7f 	cmp    $0x7f800001,%rsi
  420279:	48 19 d2             	sbb    %rdx,%rdx
  42027c:	48 83 e2 01          	and    $0x1,%rdx
  420280:	49 09 d0             	or     %rdx,%r8
  420283:	74 05                	je     42028a <float32_mul+0x52a>
  420285:	48 89 c8             	mov    %rcx,%rax
  420288:	5b                   	pop    %rbx
  420289:	c3                   	retq   
  42028a:	4c 8d 04 09          	lea    (%rcx,%rcx,1),%r8
  42028e:	48 bf fe ff ff ff 00 	movabs $0xfffffffe,%rdi
  420295:	00 00 00 
  420298:	4c 89 c2             	mov    %r8,%rdx
  42029b:	48 21 fa             	and    %rdi,%rdx
  42029e:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  4202a2:	48 21 f7             	and    %rsi,%rdi
  4202a5:	48 39 fa             	cmp    %rdi,%rdx
  4202a8:	73 18                	jae    4202c2 <float32_mul+0x562>
  4202aa:	5b                   	pop    %rbx
  4202ab:	c3                   	retq   
  4202ac:	48 89 c2             	mov    %rax,%rdx
  4202af:	4c 21 da             	and    %r11,%rdx
  4202b2:	49 21 cb             	and    %rcx,%r11
  4202b5:	49 39 d3             	cmp    %rdx,%r11
  4202b8:	72 03                	jb     4202bd <float32_mul+0x55d>
  4202ba:	48 89 c1             	mov    %rax,%rcx
  4202bd:	48 89 c8             	mov    %rcx,%rax
  4202c0:	5b                   	pop    %rbx
  4202c1:	c3                   	retq   
  4202c2:	4d 21 c8             	and    %r9,%r8
  4202c5:	4c 21 ce             	and    %r9,%rsi
  4202c8:	4c 39 c6             	cmp    %r8,%rsi
  4202cb:	73 05                	jae    4202d2 <float32_mul+0x572>
  4202cd:	48 89 c8             	mov    %rcx,%rax
  4202d0:	5b                   	pop    %rbx
  4202d1:	c3                   	retq   
  4202d2:	48 89 c2             	mov    %rax,%rdx
  4202d5:	4c 21 ca             	and    %r9,%rdx
  4202d8:	49 21 c9             	and    %rcx,%r9
  4202db:	49 39 d1             	cmp    %rdx,%r9
  4202de:	72 03                	jb     4202e3 <float32_mul+0x583>
  4202e0:	48 89 c1             	mov    %rax,%rcx
  4202e3:	48 89 c8             	mov    %rcx,%rax
  4202e6:	5b                   	pop    %rbx
  4202e7:	c3                   	retq   
  4202e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4202ef:	00 

00000000004202f0 <float32_div>:
  4202f0:	53                   	push   %rbx
  4202f1:	48 89 f0             	mov    %rsi,%rax
  4202f4:	48 31 f8             	xor    %rdi,%rax
  4202f7:	49 89 f9             	mov    %rdi,%r9
  4202fa:	49 81 e1 ff ff 7f 00 	and    $0x7fffff,%r9
  420301:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  420308:	49 89 fa             	mov    %rdi,%r10
  42030b:	49 d3 ea             	shr    %cl,%r10
  42030e:	49 81 e2 ff 00 00 00 	and    $0xff,%r10
  420315:	49 89 f3             	mov    %rsi,%r11
  420318:	49 81 e3 ff ff 7f 00 	and    $0x7fffff,%r11
  42031f:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  420326:	48 89 f2             	mov    %rsi,%rdx
  420329:	48 d3 ea             	shr    %cl,%rdx
  42032c:	48 81 e2 ff 00 00 00 	and    $0xff,%rdx
  420333:	49 b8 00 00 00 80 00 	movabs $0x80000000,%r8
  42033a:	00 00 00 
  42033d:	49 21 c0             	and    %rax,%r8
  420340:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  420347:	49 d3 e8             	shr    %cl,%r8
  42034a:	49 81 fa ff 00 00 00 	cmp    $0xff,%r10
  420351:	75 51                	jne    4203a4 <float32_div+0xb4>
  420353:	49 ba ff ff ff ff 00 	movabs $0xffffffff,%r10
  42035a:	00 00 00 
  42035d:	4d 85 d1             	test   %r10,%r9
  420360:	0f 84 34 02 00 00    	je     42059a <float32_div+0x2aa>
  420366:	48 89 f8             	mov    %rdi,%rax
  420369:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  42036f:	48 31 c9             	xor    %rcx,%rcx
  420372:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  420378:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  42037f:	00 00 00 
  420382:	0f 85 19 03 00 00    	jne    4206a1 <float32_div+0x3b1>
  420388:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  42038f:	0f 84 02 03 00 00    	je     420697 <float32_div+0x3a7>
  420395:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  42039c:	00 00 00 
  42039f:	e9 fd 02 00 00       	jmpq   4206a1 <float32_div+0x3b1>
  4203a4:	48 85 d2             	test   %rdx,%rdx
  4203a7:	0f 85 a1 00 00 00    	jne    42044e <float32_div+0x15e>
  4203ad:	48 ba ff ff ff ff 00 	movabs $0xffffffff,%rdx
  4203b4:	00 00 00 
  4203b7:	49 85 d3             	test   %rdx,%r11
  4203ba:	0f 84 94 02 00 00    	je     420654 <float32_div+0x364>
  4203c0:	4c 89 db             	mov    %r11,%rbx
  4203c3:	48 21 d3             	and    %rdx,%rbx
  4203c6:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  4203cd:	48 19 c0             	sbb    %rax,%rax
  4203d0:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  4203d7:	48 d3 e6             	shl    %cl,%rsi
  4203da:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  4203e1:	72 03                	jb     4203e6 <float32_div+0xf6>
  4203e3:	4c 89 de             	mov    %r11,%rsi
  4203e6:	48 21 f2             	and    %rsi,%rdx
  4203e9:	48 83 e0 10          	and    $0x10,%rax
  4203ed:	48 81 fa ff ff ff 00 	cmp    $0xffffff,%rdx
  4203f4:	77 0e                	ja     420404 <float32_div+0x114>
  4203f6:	48 83 c8 08          	or     $0x8,%rax
  4203fa:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  420401:	48 d3 e6             	shl    %cl,%rsi
  420404:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
  42040b:	00 00 00 
  42040e:	48 21 f2             	and    %rsi,%rdx
  420411:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  420418:	48 d3 ea             	shr    %cl,%rdx
  42041b:	48 0f be 8a f0 8e 42 	movsbq 0x428ef0(%rdx),%rcx
  420422:	00 
  420423:	48 8d 44 08 f8       	lea    -0x8(%rax,%rcx,1),%rax
  420428:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  42042f:	48 d3 e0             	shl    %cl,%rax
  420432:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  420439:	48 d3 f8             	sar    %cl,%rax
  42043c:	48 89 c1             	mov    %rax,%rcx
  42043f:	49 d3 e3             	shl    %cl,%r11
  420442:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  420449:	48 29 c2             	sub    %rax,%rdx
  42044c:	eb 5a                	jmp    4204a8 <float32_div+0x1b8>
  42044e:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
  420455:	75 51                	jne    4204a8 <float32_div+0x1b8>
  420457:	49 b9 ff ff ff ff 00 	movabs $0xffffffff,%r9
  42045e:	00 00 00 
  420461:	4d 85 cb             	test   %r9,%r11
  420464:	0f 84 1e 02 00 00    	je     420688 <float32_div+0x398>
  42046a:	48 89 f8             	mov    %rdi,%rax
  42046d:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  420473:	48 31 c9             	xor    %rcx,%rcx
  420476:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  42047c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  420483:	00 00 00 
  420486:	0f 85 6c 03 00 00    	jne    4207f8 <float32_div+0x508>
  42048c:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  420493:	0f 84 55 03 00 00    	je     4207ee <float32_div+0x4fe>
  420499:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  4204a0:	00 00 00 
  4204a3:	e9 50 03 00 00       	jmpq   4207f8 <float32_div+0x508>
  4204a8:	4d 85 d2             	test   %r10,%r10
  4204ab:	0f 85 9f 00 00 00    	jne    420550 <float32_div+0x260>
  4204b1:	48 be ff ff ff ff 00 	movabs $0xffffffff,%rsi
  4204b8:	00 00 00 
  4204bb:	49 85 f1             	test   %rsi,%r9
  4204be:	0f 84 c4 01 00 00    	je     420688 <float32_div+0x398>
  4204c4:	4c 89 cb             	mov    %r9,%rbx
  4204c7:	48 21 f3             	and    %rsi,%rbx
  4204ca:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  4204d1:	48 19 c0             	sbb    %rax,%rax
  4204d4:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  4204db:	48 d3 e7             	shl    %cl,%rdi
  4204de:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  4204e5:	72 03                	jb     4204ea <float32_div+0x1fa>
  4204e7:	4c 89 cf             	mov    %r9,%rdi
  4204ea:	48 21 fe             	and    %rdi,%rsi
  4204ed:	48 83 e0 10          	and    $0x10,%rax
  4204f1:	48 81 fe ff ff ff 00 	cmp    $0xffffff,%rsi
  4204f8:	77 0e                	ja     420508 <float32_div+0x218>
  4204fa:	48 83 c8 08          	or     $0x8,%rax
  4204fe:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  420505:	48 d3 e7             	shl    %cl,%rdi
  420508:	48 be 00 00 00 ff 00 	movabs $0xff000000,%rsi
  42050f:	00 00 00 
  420512:	48 21 fe             	and    %rdi,%rsi
  420515:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  42051c:	48 d3 ee             	shr    %cl,%rsi
  42051f:	48 0f be 8e f0 8e 42 	movsbq 0x428ef0(%rsi),%rcx
  420526:	00 
  420527:	48 8d 44 08 f8       	lea    -0x8(%rax,%rcx,1),%rax
  42052c:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  420533:	48 d3 e0             	shl    %cl,%rax
  420536:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  42053d:	48 d3 f8             	sar    %cl,%rax
  420540:	48 89 c1             	mov    %rax,%rcx
  420543:	49 d3 e1             	shl    %cl,%r9
  420546:	49 c7 c2 01 00 00 00 	mov    $0x1,%r10
  42054d:	49 29 c2             	sub    %rax,%r10
  420550:	49 29 d2             	sub    %rdx,%r10
  420553:	48 c7 c1 07 00 00 00 	mov    $0x7,%rcx
  42055a:	49 d3 e1             	shl    %cl,%r9
  42055d:	49 81 c9 00 00 00 40 	or     $0x40000000,%r9
  420564:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  42056b:	49 d3 e3             	shl    %cl,%r11
  42056e:	49 81 cb 00 00 00 80 	or     $0xffffffff80000000,%r11
  420575:	48 b8 00 ff ff ff 00 	movabs $0xffffff00,%rax
  42057c:	00 00 00 
  42057f:	4c 21 d8             	and    %r11,%rax
  420582:	4c 89 c9             	mov    %r9,%rcx
  420585:	48 81 e1 80 ff ff 7f 	and    $0x7fffff80,%rcx
  42058c:	48 d1 e1             	shl    %rcx
  42058f:	48 39 c8             	cmp    %rcx,%rax
  420592:	76 5a                	jbe    4205ee <float32_div+0x2fe>
  420594:	49 83 c2 7d          	add    $0x7d,%r10
  420598:	eb 6f                	jmp    420609 <float32_div+0x319>
  42059a:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
  4205a1:	0f 85 cb 00 00 00    	jne    420672 <float32_div+0x382>
  4205a7:	4d 85 d3             	test   %r10,%r11
  4205aa:	0f 84 04 02 00 00    	je     4207b4 <float32_div+0x4c4>
  4205b0:	48 89 f8             	mov    %rdi,%rax
  4205b3:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  4205b9:	48 31 c9             	xor    %rcx,%rcx
  4205bc:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  4205c2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4205c9:	00 00 00 
  4205cc:	0f 85 2b 03 00 00    	jne    4208fd <float32_div+0x60d>
  4205d2:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  4205d9:	0f 84 14 03 00 00    	je     4208f3 <float32_div+0x603>
  4205df:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  4205e6:	00 00 00 
  4205e9:	e9 0f 03 00 00       	jmpq   4208fd <float32_div+0x60d>
  4205ee:	48 b8 fe ff ff ff 00 	movabs $0xfffffffe,%rax
  4205f5:	00 00 00 
  4205f8:	49 21 c1             	and    %rax,%r9
  4205fb:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  420602:	49 d3 e9             	shr    %cl,%r9
  420605:	49 83 c2 7e          	add    $0x7e,%r10
  420609:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  420610:	49 d3 e1             	shl    %cl,%r9
  420613:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  42061a:	00 00 00 
  42061d:	49 21 cb             	and    %rcx,%r11
  420620:	48 31 d2             	xor    %rdx,%rdx
  420623:	4c 89 c8             	mov    %r9,%rax
  420626:	49 f7 f3             	div    %r11
  420629:	48 a9 3f 00 00 00    	test   $0x3f,%rax
  42062f:	0f 85 70 01 00 00    	jne    4207a5 <float32_div+0x4b5>
  420635:	48 21 c1             	and    %rax,%rcx
  420638:	49 0f af cb          	imul   %r11,%rcx
  42063c:	4c 39 c9             	cmp    %r9,%rcx
  42063f:	0f 84 53 01 00 00    	je     420798 <float32_div+0x4a8>
  420645:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  42064c:	00 00 00 
  42064f:	e9 4e 01 00 00       	jmpq   4207a2 <float32_div+0x4b2>
  420654:	48 0f be 05 85 c0 20 	movsbq 0x20c085(%rip),%rax        # 62c6e1 <float_exception_flags>
  42065b:	00 
  42065c:	4d 09 ca             	or     %r9,%r10
  42065f:	49 85 d2             	test   %rdx,%r10
  420662:	0f 84 54 01 00 00    	je     4207bc <float32_div+0x4cc>
  420668:	48 83 c8 04          	or     $0x4,%rax
  42066c:	88 05 6f c0 20 00    	mov    %al,0x20c06f(%rip)        # 62c6e1 <float_exception_flags>
  420672:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  420679:	49 d3 e0             	shl    %cl,%r8
  42067c:	49 81 c8 00 00 80 7f 	or     $0x7f800000,%r8
  420683:	e9 88 03 00 00       	jmpq   420a10 <float32_div+0x720>
  420688:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  42068f:	49 d3 e0             	shl    %cl,%r8
  420692:	e9 79 03 00 00       	jmpq   420a10 <float32_div+0x720>
  420697:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  42069e:	00 00 00 
  4206a1:	48 89 f2             	mov    %rsi,%rdx
  4206a4:	48 81 e2 00 00 c0 7f 	and    $0x7fc00000,%rdx
  4206ab:	48 81 fa 00 00 80 7f 	cmp    $0x7f800000,%rdx
  4206b2:	75 1f                	jne    4206d3 <float32_div+0x3e3>
  4206b4:	48 f7 c6 ff ff 3f 00 	test   $0x3fffff,%rsi
  4206bb:	74 0c                	je     4206c9 <float32_div+0x3d9>
  4206bd:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  4206c4:	00 00 00 
  4206c7:	eb 0a                	jmp    4206d3 <float32_div+0x3e3>
  4206c9:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  4206d0:	00 00 00 
  4206d3:	48 89 c2             	mov    %rax,%rdx
  4206d6:	48 09 ca             	or     %rcx,%rdx
  4206d9:	48 83 fa 01          	cmp    $0x1,%rdx
  4206dd:	75 12                	jne    4206f1 <float32_div+0x401>
  4206df:	48 0f be 15 fa bf 20 	movsbq 0x20bffa(%rip),%rdx        # 62c6e1 <float_exception_flags>
  4206e6:	00 
  4206e7:	48 83 ca 01          	or     $0x1,%rdx
  4206eb:	88 15 f0 bf 20 00    	mov    %dl,0x20bff0(%rip)        # 62c6e1 <float_exception_flags>
  4206f1:	48 89 fa             	mov    %rdi,%rdx
  4206f4:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
  4206fb:	49 89 f0             	mov    %rsi,%r8
  4206fe:	49 81 c8 00 00 40 00 	or     $0x400000,%r8
  420705:	48 85 c0             	test   %rax,%rax
  420708:	74 21                	je     42072b <float32_div+0x43b>
  42070a:	48 85 c9             	test   %rcx,%rcx
  42070d:	75 52                	jne    420761 <float32_div+0x471>
  42070f:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  420716:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  42071d:	0f 87 ed 02 00 00    	ja     420a10 <float32_div+0x720>
  420723:	49 89 d0             	mov    %rdx,%r8
  420726:	e9 e5 02 00 00       	jmpq   420a10 <float32_div+0x720>
  42072b:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  420732:	48 81 ff 01 00 80 7f 	cmp    $0x7f800001,%rdi
  420739:	0f 82 d1 02 00 00    	jb     420a10 <float32_div+0x720>
  42073f:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  420746:	48 81 fe 01 00 80 7f 	cmp    $0x7f800001,%rsi
  42074d:	48 19 c0             	sbb    %rax,%rax
  420750:	48 83 e0 01          	and    $0x1,%rax
  420754:	48 09 c1             	or     %rax,%rcx
  420757:	74 08                	je     420761 <float32_div+0x471>
  420759:	49 89 d0             	mov    %rdx,%r8
  42075c:	e9 af 02 00 00       	jmpq   420a10 <float32_div+0x720>
  420761:	48 8d 04 12          	lea    (%rdx,%rdx,1),%rax
  420765:	48 be fe ff ff ff 00 	movabs $0xfffffffe,%rsi
  42076c:	00 00 00 
  42076f:	48 89 c7             	mov    %rax,%rdi
  420772:	48 21 f7             	and    %rsi,%rdi
  420775:	4b 8d 0c 00          	lea    (%r8,%r8,1),%rcx
  420779:	48 21 ce             	and    %rcx,%rsi
  42077c:	48 39 f7             	cmp    %rsi,%rdi
  42077f:	0f 82 8b 02 00 00    	jb     420a10 <float32_div+0x720>
  420785:	4c 21 d0             	and    %r10,%rax
  420788:	4c 21 d1             	and    %r10,%rcx
  42078b:	48 39 c1             	cmp    %rax,%rcx
  42078e:	73 45                	jae    4207d5 <float32_div+0x4e5>
  420790:	49 89 d0             	mov    %rdx,%r8
  420793:	e9 78 02 00 00       	jmpq   420a10 <float32_div+0x720>
  420798:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  42079f:	00 00 00 
  4207a2:	48 09 c8             	or     %rcx,%rax
  4207a5:	4c 89 c7             	mov    %r8,%rdi
  4207a8:	4c 89 d6             	mov    %r10,%rsi
  4207ab:	48 89 c2             	mov    %rax,%rdx
  4207ae:	5b                   	pop    %rbx
  4207af:	e9 dc d8 ff ff       	jmpq   41e090 <roundAndPackFloat32>
  4207b4:	48 0f be 05 25 bf 20 	movsbq 0x20bf25(%rip),%rax        # 62c6e1 <float_exception_flags>
  4207bb:	00 
  4207bc:	48 83 c8 01          	or     $0x1,%rax
  4207c0:	88 05 1b bf 20 00    	mov    %al,0x20bf1b(%rip)        # 62c6e1 <float_exception_flags>
  4207c6:	49 b8 00 00 c0 ff 00 	movabs $0xffc00000,%r8
  4207cd:	00 00 00 
  4207d0:	e9 3b 02 00 00       	jmpq   420a10 <float32_div+0x720>
  4207d5:	4c 89 c0             	mov    %r8,%rax
  4207d8:	4c 21 d0             	and    %r10,%rax
  4207db:	49 21 d2             	and    %rdx,%r10
  4207de:	49 39 c2             	cmp    %rax,%r10
  4207e1:	72 03                	jb     4207e6 <float32_div+0x4f6>
  4207e3:	4c 89 c2             	mov    %r8,%rdx
  4207e6:	49 89 d0             	mov    %rdx,%r8
  4207e9:	e9 22 02 00 00       	jmpq   420a10 <float32_div+0x720>
  4207ee:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4207f5:	00 00 00 
  4207f8:	48 89 f2             	mov    %rsi,%rdx
  4207fb:	48 81 e2 00 00 c0 7f 	and    $0x7fc00000,%rdx
  420802:	48 81 fa 00 00 80 7f 	cmp    $0x7f800000,%rdx
  420809:	75 1f                	jne    42082a <float32_div+0x53a>
  42080b:	48 f7 c6 ff ff 3f 00 	test   $0x3fffff,%rsi
  420812:	74 0c                	je     420820 <float32_div+0x530>
  420814:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  42081b:	00 00 00 
  42081e:	eb 0a                	jmp    42082a <float32_div+0x53a>
  420820:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  420827:	00 00 00 
  42082a:	48 89 c2             	mov    %rax,%rdx
  42082d:	48 09 ca             	or     %rcx,%rdx
  420830:	48 83 fa 01          	cmp    $0x1,%rdx
  420834:	75 12                	jne    420848 <float32_div+0x558>
  420836:	48 0f be 15 a3 be 20 	movsbq 0x20bea3(%rip),%rdx        # 62c6e1 <float_exception_flags>
  42083d:	00 
  42083e:	48 83 ca 01          	or     $0x1,%rdx
  420842:	88 15 99 be 20 00    	mov    %dl,0x20be99(%rip)        # 62c6e1 <float_exception_flags>
  420848:	48 89 fa             	mov    %rdi,%rdx
  42084b:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
  420852:	49 89 f0             	mov    %rsi,%r8
  420855:	49 81 c8 00 00 40 00 	or     $0x400000,%r8
  42085c:	48 85 c0             	test   %rax,%rax
  42085f:	74 21                	je     420882 <float32_div+0x592>
  420861:	48 85 c9             	test   %rcx,%rcx
  420864:	75 52                	jne    4208b8 <float32_div+0x5c8>
  420866:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  42086d:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  420874:	0f 87 96 01 00 00    	ja     420a10 <float32_div+0x720>
  42087a:	49 89 d0             	mov    %rdx,%r8
  42087d:	e9 8e 01 00 00       	jmpq   420a10 <float32_div+0x720>
  420882:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  420889:	48 81 ff 01 00 80 7f 	cmp    $0x7f800001,%rdi
  420890:	0f 82 7a 01 00 00    	jb     420a10 <float32_div+0x720>
  420896:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  42089d:	48 81 fe 01 00 80 7f 	cmp    $0x7f800001,%rsi
  4208a4:	48 19 c0             	sbb    %rax,%rax
  4208a7:	48 83 e0 01          	and    $0x1,%rax
  4208ab:	48 09 c1             	or     %rax,%rcx
  4208ae:	74 08                	je     4208b8 <float32_div+0x5c8>
  4208b0:	49 89 d0             	mov    %rdx,%r8
  4208b3:	e9 58 01 00 00       	jmpq   420a10 <float32_div+0x720>
  4208b8:	48 8d 04 12          	lea    (%rdx,%rdx,1),%rax
  4208bc:	48 be fe ff ff ff 00 	movabs $0xfffffffe,%rsi
  4208c3:	00 00 00 
  4208c6:	48 89 c7             	mov    %rax,%rdi
  4208c9:	48 21 f7             	and    %rsi,%rdi
  4208cc:	4b 8d 0c 00          	lea    (%r8,%r8,1),%rcx
  4208d0:	48 21 ce             	and    %rcx,%rsi
  4208d3:	48 39 f7             	cmp    %rsi,%rdi
  4208d6:	0f 82 34 01 00 00    	jb     420a10 <float32_div+0x720>
  4208dc:	4c 21 c8             	and    %r9,%rax
  4208df:	4c 21 c9             	and    %r9,%rcx
  4208e2:	48 39 c1             	cmp    %rax,%rcx
  4208e5:	0f 83 fb 00 00 00    	jae    4209e6 <float32_div+0x6f6>
  4208eb:	49 89 d0             	mov    %rdx,%r8
  4208ee:	e9 1d 01 00 00       	jmpq   420a10 <float32_div+0x720>
  4208f3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4208fa:	00 00 00 
  4208fd:	48 89 f2             	mov    %rsi,%rdx
  420900:	48 81 e2 00 00 c0 7f 	and    $0x7fc00000,%rdx
  420907:	48 81 fa 00 00 80 7f 	cmp    $0x7f800000,%rdx
  42090e:	75 1f                	jne    42092f <float32_div+0x63f>
  420910:	48 f7 c6 ff ff 3f 00 	test   $0x3fffff,%rsi
  420917:	74 0c                	je     420925 <float32_div+0x635>
  420919:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  420920:	00 00 00 
  420923:	eb 0a                	jmp    42092f <float32_div+0x63f>
  420925:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  42092c:	00 00 00 
  42092f:	48 89 c2             	mov    %rax,%rdx
  420932:	48 09 ca             	or     %rcx,%rdx
  420935:	48 83 fa 01          	cmp    $0x1,%rdx
  420939:	75 12                	jne    42094d <float32_div+0x65d>
  42093b:	48 0f be 15 9e bd 20 	movsbq 0x20bd9e(%rip),%rdx        # 62c6e1 <float_exception_flags>
  420942:	00 
  420943:	48 83 ca 01          	or     $0x1,%rdx
  420947:	88 15 94 bd 20 00    	mov    %dl,0x20bd94(%rip)        # 62c6e1 <float_exception_flags>
  42094d:	48 89 fa             	mov    %rdi,%rdx
  420950:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
  420957:	49 89 f0             	mov    %rsi,%r8
  42095a:	49 81 c8 00 00 40 00 	or     $0x400000,%r8
  420961:	48 85 c0             	test   %rax,%rax
  420964:	74 21                	je     420987 <float32_div+0x697>
  420966:	48 85 c9             	test   %rcx,%rcx
  420969:	75 4b                	jne    4209b6 <float32_div+0x6c6>
  42096b:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  420972:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  420979:	0f 87 91 00 00 00    	ja     420a10 <float32_div+0x720>
  42097f:	49 89 d0             	mov    %rdx,%r8
  420982:	e9 89 00 00 00       	jmpq   420a10 <float32_div+0x720>
  420987:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  42098e:	48 81 ff 01 00 80 7f 	cmp    $0x7f800001,%rdi
  420995:	72 79                	jb     420a10 <float32_div+0x720>
  420997:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  42099e:	48 81 fe 01 00 80 7f 	cmp    $0x7f800001,%rsi
  4209a5:	48 19 c0             	sbb    %rax,%rax
  4209a8:	48 83 e0 01          	and    $0x1,%rax
  4209ac:	48 09 c1             	or     %rax,%rcx
  4209af:	74 05                	je     4209b6 <float32_div+0x6c6>
  4209b1:	49 89 d0             	mov    %rdx,%r8
  4209b4:	eb 5a                	jmp    420a10 <float32_div+0x720>
  4209b6:	48 8d 04 12          	lea    (%rdx,%rdx,1),%rax
  4209ba:	48 be fe ff ff ff 00 	movabs $0xfffffffe,%rsi
  4209c1:	00 00 00 
  4209c4:	48 89 c7             	mov    %rax,%rdi
  4209c7:	48 21 f7             	and    %rsi,%rdi
  4209ca:	4b 8d 0c 00          	lea    (%r8,%r8,1),%rcx
  4209ce:	48 21 ce             	and    %rcx,%rsi
  4209d1:	48 39 f7             	cmp    %rsi,%rdi
  4209d4:	72 3a                	jb     420a10 <float32_div+0x720>
  4209d6:	4c 21 d0             	and    %r10,%rax
  4209d9:	4c 21 d1             	and    %r10,%rcx
  4209dc:	48 39 c1             	cmp    %rax,%rcx
  4209df:	73 1b                	jae    4209fc <float32_div+0x70c>
  4209e1:	49 89 d0             	mov    %rdx,%r8
  4209e4:	eb 2a                	jmp    420a10 <float32_div+0x720>
  4209e6:	4c 89 c0             	mov    %r8,%rax
  4209e9:	4c 21 c8             	and    %r9,%rax
  4209ec:	49 21 d1             	and    %rdx,%r9
  4209ef:	49 39 c1             	cmp    %rax,%r9
  4209f2:	72 03                	jb     4209f7 <float32_div+0x707>
  4209f4:	4c 89 c2             	mov    %r8,%rdx
  4209f7:	49 89 d0             	mov    %rdx,%r8
  4209fa:	eb 14                	jmp    420a10 <float32_div+0x720>
  4209fc:	4c 89 c0             	mov    %r8,%rax
  4209ff:	4c 21 d0             	and    %r10,%rax
  420a02:	49 21 d2             	and    %rdx,%r10
  420a05:	49 39 c2             	cmp    %rax,%r10
  420a08:	72 03                	jb     420a0d <float32_div+0x71d>
  420a0a:	4c 89 c2             	mov    %r8,%rdx
  420a0d:	49 89 d0             	mov    %rdx,%r8
  420a10:	4c 89 c0             	mov    %r8,%rax
  420a13:	5b                   	pop    %rbx
  420a14:	c3                   	retq   
  420a15:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  420a1c:	00 00 00 00 

0000000000420a20 <float32_rem>:
  420a20:	41 57                	push   %r15
  420a22:	41 56                	push   %r14
  420a24:	41 55                	push   %r13
  420a26:	41 54                	push   %r12
  420a28:	53                   	push   %rbx
  420a29:	48 89 f0             	mov    %rsi,%rax
  420a2c:	49 89 f8             	mov    %rdi,%r8
  420a2f:	49 81 e0 ff ff 7f 00 	and    $0x7fffff,%r8
  420a36:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  420a3d:	49 89 f9             	mov    %rdi,%r9
  420a40:	49 d3 e9             	shr    %cl,%r9
  420a43:	49 81 e1 ff 00 00 00 	and    $0xff,%r9
  420a4a:	49 89 c7             	mov    %rax,%r15
  420a4d:	49 81 e7 ff ff 7f 00 	and    $0x7fffff,%r15
  420a54:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  420a5b:	48 d3 ee             	shr    %cl,%rsi
  420a5e:	48 81 e6 ff 00 00 00 	and    $0xff,%rsi
  420a65:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
  420a6c:	75 65                	jne    420ad3 <float32_rem+0xb3>
  420a6e:	49 b9 ff ff ff ff 00 	movabs $0xffffffff,%r9
  420a75:	00 00 00 
  420a78:	4d 85 c8             	test   %r9,%r8
  420a7b:	75 16                	jne    420a93 <float32_rem+0x73>
  420a7d:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
  420a84:	0f 85 e6 02 00 00    	jne    420d70 <float32_rem+0x350>
  420a8a:	4d 85 cf             	test   %r9,%r15
  420a8d:	0f 84 dd 02 00 00    	je     420d70 <float32_rem+0x350>
  420a93:	48 89 fe             	mov    %rdi,%rsi
  420a96:	48 81 e6 00 00 c0 7f 	and    $0x7fc00000,%rsi
  420a9d:	48 31 d2             	xor    %rdx,%rdx
  420aa0:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  420aa7:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  420aae:	00 00 00 
  420ab1:	0f 85 6d 04 00 00    	jne    420f24 <float32_rem+0x504>
  420ab7:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  420abe:	0f 84 56 04 00 00    	je     420f1a <float32_rem+0x4fa>
  420ac4:	48 bb 01 00 00 00 00 	movabs $0x1,%rbx
  420acb:	00 00 00 
  420ace:	e9 51 04 00 00       	jmpq   420f24 <float32_rem+0x504>
  420ad3:	48 85 f6             	test   %rsi,%rsi
  420ad6:	0f 85 a1 00 00 00    	jne    420b7d <float32_rem+0x15d>
  420adc:	48 be ff ff ff ff 00 	movabs $0xffffffff,%rsi
  420ae3:	00 00 00 
  420ae6:	49 85 f7             	test   %rsi,%r15
  420ae9:	0f 84 81 02 00 00    	je     420d70 <float32_rem+0x350>
  420aef:	4c 89 fb             	mov    %r15,%rbx
  420af2:	48 21 f3             	and    %rsi,%rbx
  420af5:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  420afc:	48 19 d2             	sbb    %rdx,%rdx
  420aff:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  420b06:	48 d3 e0             	shl    %cl,%rax
  420b09:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  420b10:	72 03                	jb     420b15 <float32_rem+0xf5>
  420b12:	4c 89 f8             	mov    %r15,%rax
  420b15:	48 21 c6             	and    %rax,%rsi
  420b18:	48 83 e2 10          	and    $0x10,%rdx
  420b1c:	48 81 fe ff ff ff 00 	cmp    $0xffffff,%rsi
  420b23:	77 0e                	ja     420b33 <float32_rem+0x113>
  420b25:	48 83 ca 08          	or     $0x8,%rdx
  420b29:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  420b30:	48 d3 e0             	shl    %cl,%rax
  420b33:	48 be 00 00 00 ff 00 	movabs $0xff000000,%rsi
  420b3a:	00 00 00 
  420b3d:	48 21 c6             	and    %rax,%rsi
  420b40:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  420b47:	48 d3 ee             	shr    %cl,%rsi
  420b4a:	48 0f be 86 f0 8e 42 	movsbq 0x428ef0(%rsi),%rax
  420b51:	00 
  420b52:	48 8d 44 02 f8       	lea    -0x8(%rdx,%rax,1),%rax
  420b57:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  420b5e:	48 d3 e0             	shl    %cl,%rax
  420b61:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  420b68:	48 d3 f8             	sar    %cl,%rax
  420b6b:	48 89 c1             	mov    %rax,%rcx
  420b6e:	49 d3 e7             	shl    %cl,%r15
  420b71:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  420b78:	48 29 c6             	sub    %rax,%rsi
  420b7b:	eb 5c                	jmp    420bd9 <float32_rem+0x1b9>
  420b7d:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
  420b84:	75 53                	jne    420bd9 <float32_rem+0x1b9>
  420b86:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  420b8d:	00 00 00 
  420b90:	4d 85 c7             	test   %r8,%r15
  420b93:	0f 84 3e 07 00 00    	je     4212d7 <float32_rem+0x8b7>
  420b99:	48 89 fe             	mov    %rdi,%rsi
  420b9c:	48 81 e6 00 00 c0 7f 	and    $0x7fc00000,%rsi
  420ba3:	48 31 d2             	xor    %rdx,%rdx
  420ba6:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  420bad:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  420bb4:	00 00 00 
  420bb7:	0f 85 9c 04 00 00    	jne    421059 <float32_rem+0x639>
  420bbd:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  420bc4:	0f 84 85 04 00 00    	je     42104f <float32_rem+0x62f>
  420bca:	48 bb 01 00 00 00 00 	movabs $0x1,%rbx
  420bd1:	00 00 00 
  420bd4:	e9 80 04 00 00       	jmpq   421059 <float32_rem+0x639>
  420bd9:	4d 85 c9             	test   %r9,%r9
  420bdc:	0f 85 a0 00 00 00    	jne    420c82 <float32_rem+0x262>
  420be2:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  420be9:	00 00 00 
  420bec:	49 85 d8             	test   %rbx,%r8
  420bef:	0f 84 e2 06 00 00    	je     4212d7 <float32_rem+0x8b7>
  420bf5:	4c 89 c0             	mov    %r8,%rax
  420bf8:	48 21 d8             	and    %rbx,%rax
  420bfb:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
  420c01:	4d 19 c9             	sbb    %r9,%r9
  420c04:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  420c0b:	48 89 fa             	mov    %rdi,%rdx
  420c0e:	48 d3 e2             	shl    %cl,%rdx
  420c11:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
  420c17:	72 03                	jb     420c1c <float32_rem+0x1fc>
  420c19:	4c 89 c2             	mov    %r8,%rdx
  420c1c:	48 21 d3             	and    %rdx,%rbx
  420c1f:	49 83 e1 10          	and    $0x10,%r9
  420c23:	48 81 fb ff ff ff 00 	cmp    $0xffffff,%rbx
  420c2a:	77 0e                	ja     420c3a <float32_rem+0x21a>
  420c2c:	49 83 c9 08          	or     $0x8,%r9
  420c30:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  420c37:	48 d3 e2             	shl    %cl,%rdx
  420c3a:	48 b8 00 00 00 ff 00 	movabs $0xff000000,%rax
  420c41:	00 00 00 
  420c44:	48 21 d0             	and    %rdx,%rax
  420c47:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  420c4e:	48 d3 e8             	shr    %cl,%rax
  420c51:	48 0f be 80 f0 8e 42 	movsbq 0x428ef0(%rax),%rax
  420c58:	00 
  420c59:	49 8d 44 01 f8       	lea    -0x8(%r9,%rax,1),%rax
  420c5e:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  420c65:	48 d3 e0             	shl    %cl,%rax
  420c68:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  420c6f:	48 d3 f8             	sar    %cl,%rax
  420c72:	48 89 c1             	mov    %rax,%rcx
  420c75:	49 d3 e0             	shl    %cl,%r8
  420c78:	49 c7 c1 01 00 00 00 	mov    $0x1,%r9
  420c7f:	49 29 c1             	sub    %rax,%r9
  420c82:	49 29 f1             	sub    %rsi,%r9
  420c85:	49 81 c8 00 00 80 00 	or     $0x800000,%r8
  420c8c:	49 81 cf 00 00 80 00 	or     $0x800000,%r15
  420c93:	49 83 f9 1f          	cmp    $0x1f,%r9
  420c97:	0f 8f f4 00 00 00    	jg     420d91 <float32_rem+0x371>
  420c9d:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  420ca4:	4d 89 c2             	mov    %r8,%r10
  420ca7:	49 d3 e2             	shl    %cl,%r10
  420caa:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  420cb1:	4c 89 f8             	mov    %r15,%rax
  420cb4:	48 d3 e0             	shl    %cl,%rax
  420cb7:	4d 85 c9             	test   %r9,%r9
  420cba:	79 1e                	jns    420cda <float32_rem+0x2ba>
  420cbc:	49 83 f9 ff          	cmp    $0xffffffffffffffff,%r9
  420cc0:	0f 8c 11 06 00 00    	jl     4212d7 <float32_rem+0x8b7>
  420cc6:	48 c7 c1 07 00 00 00 	mov    $0x7,%rcx
  420ccd:	49 d3 e0             	shl    %cl,%r8
  420cd0:	49 81 e0 80 ff ff 7f 	and    $0x7fffff80,%r8
  420cd7:	4d 89 c2             	mov    %r8,%r10
  420cda:	49 bb ff ff ff ff 00 	movabs $0xffffffff,%r11
  420ce1:	00 00 00 
  420ce4:	49 89 c6             	mov    %rax,%r14
  420ce7:	4d 21 de             	and    %r11,%r14
  420cea:	4c 89 d1             	mov    %r10,%rcx
  420ced:	4c 21 d9             	and    %r11,%rcx
  420cf0:	4c 39 f1             	cmp    %r14,%rcx
  420cf3:	73 03                	jae    420cf8 <float32_rem+0x2d8>
  420cf5:	48 31 c0             	xor    %rax,%rax
  420cf8:	49 29 c2             	sub    %rax,%r10
  420cfb:	4d 85 c9             	test   %r9,%r9
  420cfe:	0f 8e 1a 03 00 00    	jle    42101e <float32_rem+0x5fe>
  420d04:	48 bb fe ff ff ff 00 	movabs $0xfffffffe,%rbx
  420d0b:	00 00 00 
  420d0e:	4c 21 d3             	and    %r10,%rbx
  420d11:	49 c7 c0 20 00 00 00 	mov    $0x20,%r8
  420d18:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  420d1f:	49 d3 e2             	shl    %cl,%r10
  420d22:	48 31 d2             	xor    %rdx,%rdx
  420d25:	4c 89 d0             	mov    %r10,%rax
  420d28:	49 f7 f6             	div    %r14
  420d2b:	4c 21 d8             	and    %r11,%rax
  420d2e:	4d 29 c8             	sub    %r9,%r8
  420d31:	4d 21 d8             	and    %r11,%r8
  420d34:	4c 89 c1             	mov    %r8,%rcx
  420d37:	48 d3 e8             	shr    %cl,%rax
  420d3a:	48 c7 c1 06 00 00 00 	mov    $0x6,%rcx
  420d41:	49 d3 e7             	shl    %cl,%r15
  420d44:	49 81 e7 c0 ff ff 3f 	and    $0x3fffffc0,%r15
  420d4b:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  420d52:	48 d3 eb             	shr    %cl,%rbx
  420d55:	49 ff c9             	dec    %r9
  420d58:	4c 89 c9             	mov    %r9,%rcx
  420d5b:	48 d3 e3             	shl    %cl,%rbx
  420d5e:	48 89 c1             	mov    %rax,%rcx
  420d61:	49 0f af cf          	imul   %r15,%rcx
  420d65:	48 29 cb             	sub    %rcx,%rbx
  420d68:	49 89 da             	mov    %rbx,%r10
  420d6b:	e9 10 04 00 00       	jmpq   421180 <float32_rem+0x760>
  420d70:	48 0f be 05 69 b9 20 	movsbq 0x20b969(%rip),%rax        # 62c6e1 <float_exception_flags>
  420d77:	00 
  420d78:	48 83 c8 01          	or     $0x1,%rax
  420d7c:	88 05 5f b9 20 00    	mov    %al,0x20b95f(%rip)        # 62c6e1 <float_exception_flags>
  420d82:	48 bf 00 00 c0 ff 00 	movabs $0xffc00000,%rdi
  420d89:	00 00 00 
  420d8c:	e9 46 05 00 00       	jmpq   4212d7 <float32_rem+0x8b7>
  420d91:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
  420d96:	48 bf ff ff ff ff 00 	movabs $0xffffffff,%rdi
  420d9d:	00 00 00 
  420da0:	4c 89 c1             	mov    %r8,%rcx
  420da3:	48 21 f9             	and    %rdi,%rcx
  420da6:	4d 89 fd             	mov    %r15,%r13
  420da9:	49 21 fd             	and    %rdi,%r13
  420dac:	48 31 c0             	xor    %rax,%rax
  420daf:	4c 39 e9             	cmp    %r13,%rcx
  420db2:	72 03                	jb     420db7 <float32_rem+0x397>
  420db4:	4c 89 f8             	mov    %r15,%rax
  420db7:	4c 89 7c 24 f0       	mov    %r15,-0x10(%rsp)
  420dbc:	49 29 c0             	sub    %rax,%r8
  420dbf:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  420dc6:	49 d3 e0             	shl    %cl,%r8
  420dc9:	48 c7 c1 28 00 00 00 	mov    $0x28,%rcx
  420dd0:	4d 89 ec             	mov    %r13,%r12
  420dd3:	49 d3 e4             	shl    %cl,%r12
  420dd6:	49 83 c1 c0          	add    $0xffffffffffffffc0,%r9
  420dda:	4c 89 eb             	mov    %r13,%rbx
  420ddd:	48 81 e3 ff ff ff 00 	and    $0xffffff,%rbx
  420de4:	48 c1 e3 08          	shl    $0x8,%rbx
  420de8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  420def:	49 89 de             	mov    %rbx,%r14
  420df2:	49 d3 e6             	shl    %cl,%r14
  420df5:	48 c7 c1 26 00 00 00 	mov    $0x26,%rcx
  420dfc:	49 d3 e5             	shl    %cl,%r13
  420dff:	49 f7 dd             	neg    %r13
  420e02:	49 bf 00 00 00 00 ff 	movabs $0xffffffff00000000,%r15
  420e09:	ff ff ff 
  420e0c:	eb 0d                	jmp    420e1b <float32_rem+0x3fb>
  420e0e:	66 90                	xchg   %ax,%ax
  420e10:	49 0f af c5          	imul   %r13,%rax
  420e14:	49 83 c1 c2          	add    $0xffffffffffffffc2,%r9
  420e18:	49 89 c0             	mov    %rax,%r8
  420e1b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  420e22:	4d 39 c4             	cmp    %r8,%r12
  420e25:	76 5f                	jbe    420e86 <float32_rem+0x466>
  420e27:	4d 39 c6             	cmp    %r8,%r14
  420e2a:	4d 89 fa             	mov    %r15,%r10
  420e2d:	76 16                	jbe    420e45 <float32_rem+0x425>
  420e2f:	48 31 d2             	xor    %rdx,%rdx
  420e32:	4c 89 c0             	mov    %r8,%rax
  420e35:	48 f7 f3             	div    %rbx
  420e38:	49 89 c2             	mov    %rax,%r10
  420e3b:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  420e42:	49 d3 e2             	shl    %cl,%r10
  420e45:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  420e4c:	4c 89 d0             	mov    %r10,%rax
  420e4f:	48 d3 e8             	shr    %cl,%rax
  420e52:	48 0f af c3          	imul   %rbx,%rax
  420e56:	4d 89 c3             	mov    %r8,%r11
  420e59:	49 29 c3             	sub    %rax,%r11
  420e5c:	79 0a                	jns    420e68 <float32_rem+0x448>
  420e5e:	66 90                	xchg   %ax,%ax
  420e60:	4d 01 fa             	add    %r15,%r10
  420e63:	49 01 db             	add    %rbx,%r11
  420e66:	78 f8                	js     420e60 <float32_rem+0x440>
  420e68:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  420e6f:	49 d3 e3             	shl    %cl,%r11
  420e72:	4d 39 de             	cmp    %r11,%r14
  420e75:	48 89 f8             	mov    %rdi,%rax
  420e78:	76 09                	jbe    420e83 <float32_rem+0x463>
  420e7a:	48 31 d2             	xor    %rdx,%rdx
  420e7d:	4c 89 d8             	mov    %r11,%rax
  420e80:	48 f7 f3             	div    %rbx
  420e83:	4c 09 d0             	or     %r10,%rax
  420e86:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  420e8d:	4c 89 ca             	mov    %r9,%rdx
  420e90:	48 d3 e2             	shl    %cl,%rdx
  420e93:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  420e9a:	48 d3 fa             	sar    %cl,%rdx
  420e9d:	48 83 f8 02          	cmp    $0x2,%rax
  420ea1:	77 0d                	ja     420eb0 <float32_rem+0x490>
  420ea3:	48 31 c0             	xor    %rax,%rax
  420ea6:	eb 0c                	jmp    420eb4 <float32_rem+0x494>
  420ea8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  420eaf:	00 
  420eb0:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
  420eb4:	48 85 d2             	test   %rdx,%rdx
  420eb7:	0f 8f 53 ff ff ff    	jg     420e10 <float32_rem+0x3f0>
  420ebd:	4c 89 ca             	mov    %r9,%rdx
  420ec0:	48 f7 da             	neg    %rdx
  420ec3:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  420eca:	00 00 00 
  420ecd:	48 21 d1             	and    %rdx,%rcx
  420ed0:	48 d3 e8             	shr    %cl,%rax
  420ed3:	48 c7 c1 06 00 00 00 	mov    $0x6,%rcx
  420eda:	4c 8b 7c 24 f0       	mov    -0x10(%rsp),%r15
  420edf:	49 d3 e7             	shl    %cl,%r15
  420ee2:	48 c7 c1 21 00 00 00 	mov    $0x21,%rcx
  420ee9:	49 d3 e8             	shr    %cl,%r8
  420eec:	49 83 c1 3f          	add    $0x3f,%r9
  420ef0:	4c 89 c9             	mov    %r9,%rcx
  420ef3:	49 d3 e0             	shl    %cl,%r8
  420ef6:	48 89 c1             	mov    %rax,%rcx
  420ef9:	49 0f af cf          	imul   %r15,%rcx
  420efd:	48 ba c0 ff ff ff 00 	movabs $0xffffffc0,%rdx
  420f04:	00 00 00 
  420f07:	48 21 ca             	and    %rcx,%rdx
  420f0a:	49 29 d0             	sub    %rdx,%r8
  420f0d:	4d 89 c2             	mov    %r8,%r10
  420f10:	48 8b 7c 24 f8       	mov    -0x8(%rsp),%rdi
  420f15:	e9 66 02 00 00       	jmpq   421180 <float32_rem+0x760>
  420f1a:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  420f21:	00 00 00 
  420f24:	48 89 c6             	mov    %rax,%rsi
  420f27:	48 81 e6 00 00 c0 7f 	and    $0x7fc00000,%rsi
  420f2e:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  420f35:	75 1e                	jne    420f55 <float32_rem+0x535>
  420f37:	48 a9 ff ff 3f 00    	test   $0x3fffff,%rax
  420f3d:	74 0c                	je     420f4b <float32_rem+0x52b>
  420f3f:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  420f46:	00 00 00 
  420f49:	eb 0a                	jmp    420f55 <float32_rem+0x535>
  420f4b:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  420f52:	00 00 00 
  420f55:	48 89 de             	mov    %rbx,%rsi
  420f58:	48 09 d6             	or     %rdx,%rsi
  420f5b:	48 83 fe 01          	cmp    $0x1,%rsi
  420f5f:	75 13                	jne    420f74 <float32_rem+0x554>
  420f61:	48 0f be 35 78 b7 20 	movsbq 0x20b778(%rip),%rsi        # 62c6e1 <float_exception_flags>
  420f68:	00 
  420f69:	48 83 ce 01          	or     $0x1,%rsi
  420f6d:	40 88 35 6d b7 20 00 	mov    %sil,0x20b76d(%rip)        # 62c6e1 <float_exception_flags>
  420f74:	48 89 fe             	mov    %rdi,%rsi
  420f77:	48 81 ce 00 00 40 00 	or     $0x400000,%rsi
  420f7e:	48 89 c1             	mov    %rax,%rcx
  420f81:	48 81 c9 00 00 40 00 	or     $0x400000,%rcx
  420f88:	48 85 db             	test   %rbx,%rbx
  420f8b:	74 1e                	je     420fab <float32_rem+0x58b>
  420f8d:	48 85 d2             	test   %rdx,%rdx
  420f90:	75 49                	jne    420fdb <float32_rem+0x5bb>
  420f92:	48 25 ff ff ff 7f    	and    $0x7fffffff,%rax
  420f98:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  420f9e:	77 03                	ja     420fa3 <float32_rem+0x583>
  420fa0:	48 89 f1             	mov    %rsi,%rcx
  420fa3:	48 89 cf             	mov    %rcx,%rdi
  420fa6:	e9 2c 03 00 00       	jmpq   4212d7 <float32_rem+0x8b7>
  420fab:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  420fb2:	48 81 ff 01 00 80 7f 	cmp    $0x7f800001,%rdi
  420fb9:	72 48                	jb     421003 <float32_rem+0x5e3>
  420fbb:	48 25 ff ff ff 7f    	and    $0x7fffffff,%rax
  420fc1:	48 3d 01 00 80 7f    	cmp    $0x7f800001,%rax
  420fc7:	48 19 c0             	sbb    %rax,%rax
  420fca:	48 83 e0 01          	and    $0x1,%rax
  420fce:	48 09 c2             	or     %rax,%rdx
  420fd1:	74 08                	je     420fdb <float32_rem+0x5bb>
  420fd3:	48 89 f7             	mov    %rsi,%rdi
  420fd6:	e9 fc 02 00 00       	jmpq   4212d7 <float32_rem+0x8b7>
  420fdb:	48 8d 3c 36          	lea    (%rsi,%rsi,1),%rdi
  420fdf:	48 bb fe ff ff ff 00 	movabs $0xfffffffe,%rbx
  420fe6:	00 00 00 
  420fe9:	48 89 f8             	mov    %rdi,%rax
  420fec:	48 21 d8             	and    %rbx,%rax
  420fef:	48 8d 14 09          	lea    (%rcx,%rcx,1),%rdx
  420ff3:	48 21 d3             	and    %rdx,%rbx
  420ff6:	48 39 d8             	cmp    %rbx,%rax
  420ff9:	73 10                	jae    42100b <float32_rem+0x5eb>
  420ffb:	48 89 cf             	mov    %rcx,%rdi
  420ffe:	e9 d4 02 00 00       	jmpq   4212d7 <float32_rem+0x8b7>
  421003:	48 89 cf             	mov    %rcx,%rdi
  421006:	e9 cc 02 00 00       	jmpq   4212d7 <float32_rem+0x8b7>
  42100b:	4c 21 cf             	and    %r9,%rdi
  42100e:	4c 21 ca             	and    %r9,%rdx
  421011:	48 39 fa             	cmp    %rdi,%rdx
  421014:	73 20                	jae    421036 <float32_rem+0x616>
  421016:	48 89 f7             	mov    %rsi,%rdi
  421019:	e9 b9 02 00 00       	jmpq   4212d7 <float32_rem+0x8b7>
  42101e:	4c 39 f1             	cmp    %r14,%rcx
  421021:	0f 82 1d 01 00 00    	jb     421144 <float32_rem+0x724>
  421027:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  42102e:	00 00 00 
  421031:	e9 18 01 00 00       	jmpq   42114e <float32_rem+0x72e>
  421036:	48 89 c8             	mov    %rcx,%rax
  421039:	4c 21 c8             	and    %r9,%rax
  42103c:	49 21 f1             	and    %rsi,%r9
  42103f:	49 39 c1             	cmp    %rax,%r9
  421042:	72 03                	jb     421047 <float32_rem+0x627>
  421044:	48 89 ce             	mov    %rcx,%rsi
  421047:	48 89 f7             	mov    %rsi,%rdi
  42104a:	e9 88 02 00 00       	jmpq   4212d7 <float32_rem+0x8b7>
  42104f:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  421056:	00 00 00 
  421059:	48 89 c6             	mov    %rax,%rsi
  42105c:	48 81 e6 00 00 c0 7f 	and    $0x7fc00000,%rsi
  421063:	48 81 fe 00 00 80 7f 	cmp    $0x7f800000,%rsi
  42106a:	75 1e                	jne    42108a <float32_rem+0x66a>
  42106c:	48 a9 ff ff 3f 00    	test   $0x3fffff,%rax
  421072:	74 0c                	je     421080 <float32_rem+0x660>
  421074:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  42107b:	00 00 00 
  42107e:	eb 0a                	jmp    42108a <float32_rem+0x66a>
  421080:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  421087:	00 00 00 
  42108a:	48 89 de             	mov    %rbx,%rsi
  42108d:	48 09 d6             	or     %rdx,%rsi
  421090:	48 83 fe 01          	cmp    $0x1,%rsi
  421094:	75 13                	jne    4210a9 <float32_rem+0x689>
  421096:	48 0f be 35 43 b6 20 	movsbq 0x20b643(%rip),%rsi        # 62c6e1 <float_exception_flags>
  42109d:	00 
  42109e:	48 83 ce 01          	or     $0x1,%rsi
  4210a2:	40 88 35 38 b6 20 00 	mov    %sil,0x20b638(%rip)        # 62c6e1 <float_exception_flags>
  4210a9:	48 89 fe             	mov    %rdi,%rsi
  4210ac:	48 81 ce 00 00 40 00 	or     $0x400000,%rsi
  4210b3:	48 89 c1             	mov    %rax,%rcx
  4210b6:	48 81 c9 00 00 40 00 	or     $0x400000,%rcx
  4210bd:	48 85 db             	test   %rbx,%rbx
  4210c0:	74 1e                	je     4210e0 <float32_rem+0x6c0>
  4210c2:	48 85 d2             	test   %rdx,%rdx
  4210c5:	75 49                	jne    421110 <float32_rem+0x6f0>
  4210c7:	48 25 ff ff ff 7f    	and    $0x7fffffff,%rax
  4210cd:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  4210d3:	77 03                	ja     4210d8 <float32_rem+0x6b8>
  4210d5:	48 89 f1             	mov    %rsi,%rcx
  4210d8:	48 89 cf             	mov    %rcx,%rdi
  4210db:	e9 f7 01 00 00       	jmpq   4212d7 <float32_rem+0x8b7>
  4210e0:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  4210e7:	48 81 ff 01 00 80 7f 	cmp    $0x7f800001,%rdi
  4210ee:	72 4c                	jb     42113c <float32_rem+0x71c>
  4210f0:	48 25 ff ff ff 7f    	and    $0x7fffffff,%rax
  4210f6:	48 3d 01 00 80 7f    	cmp    $0x7f800001,%rax
  4210fc:	48 19 c0             	sbb    %rax,%rax
  4210ff:	48 83 e0 01          	and    $0x1,%rax
  421103:	48 09 c2             	or     %rax,%rdx
  421106:	74 08                	je     421110 <float32_rem+0x6f0>
  421108:	48 89 f7             	mov    %rsi,%rdi
  42110b:	e9 c7 01 00 00       	jmpq   4212d7 <float32_rem+0x8b7>
  421110:	48 8d 3c 36          	lea    (%rsi,%rsi,1),%rdi
  421114:	48 bb fe ff ff ff 00 	movabs $0xfffffffe,%rbx
  42111b:	00 00 00 
  42111e:	48 89 f8             	mov    %rdi,%rax
  421121:	48 21 d8             	and    %rbx,%rax
  421124:	48 8d 14 09          	lea    (%rcx,%rcx,1),%rdx
  421128:	48 21 d3             	and    %rdx,%rbx
  42112b:	48 39 d8             	cmp    %rbx,%rax
  42112e:	0f 83 7f 01 00 00    	jae    4212b3 <float32_rem+0x893>
  421134:	48 89 cf             	mov    %rcx,%rdi
  421137:	e9 9b 01 00 00       	jmpq   4212d7 <float32_rem+0x8b7>
  42113c:	48 89 cf             	mov    %rcx,%rdi
  42113f:	e9 93 01 00 00       	jmpq   4212d7 <float32_rem+0x8b7>
  421144:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  42114b:	00 00 00 
  42114e:	48 b9 fc ff ff ff 00 	movabs $0xfffffffc,%rcx
  421155:	00 00 00 
  421158:	49 21 ca             	and    %rcx,%r10
  42115b:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  421162:	49 d3 ea             	shr    %cl,%r10
  421165:	48 c7 c1 06 00 00 00 	mov    $0x6,%rcx
  42116c:	49 d3 e7             	shl    %cl,%r15
  42116f:	49 81 e7 c0 ff ff 3f 	and    $0x3fffffc0,%r15
  421176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  42117d:	00 00 00 
  421180:	4c 89 d2             	mov    %r10,%rdx
  421183:	48 ff c0             	inc    %rax
  421186:	4d 29 fa             	sub    %r15,%r10
  421189:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  421190:	4c 89 d3             	mov    %r10,%rbx
  421193:	48 d3 e3             	shl    %cl,%rbx
  421196:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  42119d:	48 d3 fb             	sar    %cl,%rbx
  4211a0:	48 85 db             	test   %rbx,%rbx
  4211a3:	79 db                	jns    421180 <float32_rem+0x760>
  4211a5:	4d 8d 04 12          	lea    (%r10,%rdx,1),%r8
  4211a9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4211b0:	4c 89 c3             	mov    %r8,%rbx
  4211b3:	48 d3 e3             	shl    %cl,%rbx
  4211b6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4211bd:	48 d3 fb             	sar    %cl,%rbx
  4211c0:	48 85 db             	test   %rbx,%rbx
  4211c3:	78 15                	js     4211da <float32_rem+0x7ba>
  4211c5:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4211cc:	00 00 00 
  4211cf:	49 85 c8             	test   %rcx,%r8
  4211d2:	75 09                	jne    4211dd <float32_rem+0x7bd>
  4211d4:	48 83 e0 01          	and    $0x1,%rax
  4211d8:	74 03                	je     4211dd <float32_rem+0x7bd>
  4211da:	49 89 d2             	mov    %rdx,%r10
  4211dd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4211e4:	4c 89 d0             	mov    %r10,%rax
  4211e7:	48 d3 e0             	shl    %cl,%rax
  4211ea:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4211f1:	48 d3 f8             	sar    %cl,%rax
  4211f4:	49 8d 14 02          	lea    (%r10,%rax,1),%rdx
  4211f8:	48 31 c2             	xor    %rax,%rdx
  4211fb:	49 b9 ff ff ff ff 00 	movabs $0xffffffff,%r9
  421202:	00 00 00 
  421205:	48 89 d0             	mov    %rdx,%rax
  421208:	4c 21 c8             	and    %r9,%rax
  42120b:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
  421211:	4d 19 c0             	sbb    %r8,%r8
  421214:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  42121b:	48 89 d3             	mov    %rdx,%rbx
  42121e:	48 d3 e3             	shl    %cl,%rbx
  421221:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
  421227:	72 03                	jb     42122c <float32_rem+0x80c>
  421229:	48 89 d3             	mov    %rdx,%rbx
  42122c:	49 31 fa             	xor    %rdi,%r10
  42122f:	48 bf 00 00 00 80 00 	movabs $0x80000000,%rdi
  421236:	00 00 00 
  421239:	4c 21 d7             	and    %r10,%rdi
  42123c:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  421243:	48 d3 ef             	shr    %cl,%rdi
  421246:	49 21 d9             	and    %rbx,%r9
  421249:	49 83 e0 10          	and    $0x10,%r8
  42124d:	49 81 f9 ff ff ff 00 	cmp    $0xffffff,%r9
  421254:	77 0e                	ja     421264 <float32_rem+0x844>
  421256:	49 83 c8 08          	or     $0x8,%r8
  42125a:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  421261:	48 d3 e3             	shl    %cl,%rbx
  421264:	48 b8 00 00 00 ff 00 	movabs $0xff000000,%rax
  42126b:	00 00 00 
  42126e:	48 21 d8             	and    %rbx,%rax
  421271:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  421278:	48 d3 e8             	shr    %cl,%rax
  42127b:	48 0f be 80 f0 8e 42 	movsbq 0x428ef0(%rax),%rax
  421282:	00 
  421283:	49 8d 44 00 ff       	lea    -0x1(%r8,%rax,1),%rax
  421288:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  42128f:	48 d3 e0             	shl    %cl,%rax
  421292:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  421299:	48 d3 f8             	sar    %cl,%rax
  42129c:	48 29 c6             	sub    %rax,%rsi
  42129f:	48 89 c1             	mov    %rax,%rcx
  4212a2:	48 d3 e2             	shl    %cl,%rdx
  4212a5:	5b                   	pop    %rbx
  4212a6:	41 5c                	pop    %r12
  4212a8:	41 5d                	pop    %r13
  4212aa:	41 5e                	pop    %r14
  4212ac:	41 5f                	pop    %r15
  4212ae:	e9 dd cd ff ff       	jmpq   41e090 <roundAndPackFloat32>
  4212b3:	4c 21 c7             	and    %r8,%rdi
  4212b6:	4c 21 c2             	and    %r8,%rdx
  4212b9:	48 39 fa             	cmp    %rdi,%rdx
  4212bc:	73 05                	jae    4212c3 <float32_rem+0x8a3>
  4212be:	48 89 f7             	mov    %rsi,%rdi
  4212c1:	eb 14                	jmp    4212d7 <float32_rem+0x8b7>
  4212c3:	48 89 c8             	mov    %rcx,%rax
  4212c6:	4c 21 c0             	and    %r8,%rax
  4212c9:	49 21 f0             	and    %rsi,%r8
  4212cc:	49 39 c0             	cmp    %rax,%r8
  4212cf:	72 03                	jb     4212d4 <float32_rem+0x8b4>
  4212d1:	48 89 ce             	mov    %rcx,%rsi
  4212d4:	48 89 f7             	mov    %rsi,%rdi
  4212d7:	48 89 f8             	mov    %rdi,%rax
  4212da:	5b                   	pop    %rbx
  4212db:	41 5c                	pop    %r12
  4212dd:	41 5d                	pop    %r13
  4212df:	41 5e                	pop    %r14
  4212e1:	41 5f                	pop    %r15
  4212e3:	c3                   	retq   
  4212e4:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4212eb:	00 00 00 00 00 

00000000004212f0 <float32_sqrt>:
  4212f0:	49 b9 ff ff ff ff 00 	movabs $0xffffffff,%r9
  4212f7:	00 00 00 
  4212fa:	48 89 f8             	mov    %rdi,%rax
  4212fd:	4c 21 c8             	and    %r9,%rax
  421300:	48 89 fa             	mov    %rdi,%rdx
  421303:	48 81 e2 ff ff 7f 00 	and    $0x7fffff,%rdx
  42130a:	48 c7 c1 17 00 00 00 	mov    $0x17,%rcx
  421311:	49 89 c0             	mov    %rax,%r8
  421314:	49 d3 e8             	shr    %cl,%r8
  421317:	49 81 e0 ff 00 00 00 	and    $0xff,%r8
  42131e:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  421325:	48 d3 e8             	shr    %cl,%rax
  421328:	49 81 f8 ff 00 00 00 	cmp    $0xff,%r8
  42132f:	75 47                	jne    421378 <float32_sqrt+0x88>
  421331:	4c 85 ca             	test   %r9,%rdx
  421334:	74 4f                	je     421385 <float32_sqrt+0x95>
  421336:	48 89 f8             	mov    %rdi,%rax
  421339:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  42133f:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  421345:	0f 85 ad 01 00 00    	jne    4214f8 <float32_sqrt+0x208>
  42134b:	48 89 f8             	mov    %rdi,%rax
  42134e:	48 0d 00 00 40 00    	or     $0x400000,%rax
  421354:	48 f7 c7 ff ff 3f 00 	test   $0x3fffff,%rdi
  42135b:	0f 84 a0 01 00 00    	je     421501 <float32_sqrt+0x211>
  421361:	48 0f be 0d 78 b3 20 	movsbq 0x20b378(%rip),%rcx        # 62c6e1 <float_exception_flags>
  421368:	00 
  421369:	48 83 c9 01          	or     $0x1,%rcx
  42136d:	88 0d 6e b3 20 00    	mov    %cl,0x20b36e(%rip)        # 62c6e1 <float_exception_flags>
  421373:	e9 7f 01 00 00       	jmpq   4214f7 <float32_sqrt+0x207>
  421378:	48 85 c0             	test   %rax,%rax
  42137b:	74 31                	je     4213ae <float32_sqrt+0xbe>
  42137d:	49 09 d0             	or     %rdx,%r8
  421380:	4d 85 c8             	test   %r9,%r8
  421383:	eb 03                	jmp    421388 <float32_sqrt+0x98>
  421385:	48 85 c0             	test   %rax,%rax
  421388:	48 89 f8             	mov    %rdi,%rax
  42138b:	0f 84 66 01 00 00    	je     4214f7 <float32_sqrt+0x207>
  421391:	48 0f be 05 48 b3 20 	movsbq 0x20b348(%rip),%rax        # 62c6e1 <float_exception_flags>
  421398:	00 
  421399:	48 83 c8 01          	or     $0x1,%rax
  42139d:	88 05 3e b3 20 00    	mov    %al,0x20b33e(%rip)        # 62c6e1 <float_exception_flags>
  4213a3:	48 b8 00 00 c0 ff 00 	movabs $0xffc00000,%rax
  4213aa:	00 00 00 
  4213ad:	c3                   	retq   
  4213ae:	4d 85 c0             	test   %r8,%r8
  4213b1:	0f 85 9b 00 00 00    	jne    421452 <float32_sqrt+0x162>
  4213b7:	48 31 c0             	xor    %rax,%rax
  4213ba:	4c 85 ca             	test   %r9,%rdx
  4213bd:	0f 84 34 01 00 00    	je     4214f7 <float32_sqrt+0x207>
  4213c3:	48 89 d6             	mov    %rdx,%rsi
  4213c6:	4c 21 ce             	and    %r9,%rsi
  4213c9:	48 81 fe 00 00 01 00 	cmp    $0x10000,%rsi
  4213d0:	48 19 c0             	sbb    %rax,%rax
  4213d3:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  4213da:	48 d3 e7             	shl    %cl,%rdi
  4213dd:	48 81 fe 00 00 01 00 	cmp    $0x10000,%rsi
  4213e4:	72 03                	jb     4213e9 <float32_sqrt+0xf9>
  4213e6:	48 89 d7             	mov    %rdx,%rdi
  4213e9:	48 89 f9             	mov    %rdi,%rcx
  4213ec:	4c 21 c9             	and    %r9,%rcx
  4213ef:	48 83 e0 10          	and    $0x10,%rax
  4213f3:	48 81 f9 ff ff ff 00 	cmp    $0xffffff,%rcx
  4213fa:	77 0e                	ja     42140a <float32_sqrt+0x11a>
  4213fc:	48 83 c8 08          	or     $0x8,%rax
  421400:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  421407:	48 d3 e7             	shl    %cl,%rdi
  42140a:	48 be 00 00 00 ff 00 	movabs $0xff000000,%rsi
  421411:	00 00 00 
  421414:	48 21 fe             	and    %rdi,%rsi
  421417:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  42141e:	48 d3 ee             	shr    %cl,%rsi
  421421:	48 0f be 8e f0 8e 42 	movsbq 0x428ef0(%rsi),%rcx
  421428:	00 
  421429:	48 8d 44 08 f8       	lea    -0x8(%rax,%rcx,1),%rax
  42142e:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  421435:	48 d3 e0             	shl    %cl,%rax
  421438:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  42143f:	48 d3 f8             	sar    %cl,%rax
  421442:	48 89 c1             	mov    %rax,%rcx
  421445:	48 d3 e2             	shl    %cl,%rdx
  421448:	49 c7 c0 01 00 00 00 	mov    $0x1,%r8
  42144f:	49 29 c0             	sub    %rax,%r8
  421452:	49 8d 70 81          	lea    -0x7f(%r8),%rsi
  421456:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  42145d:	48 d3 fe             	sar    %cl,%rsi
  421460:	48 83 c6 7e          	add    $0x7e,%rsi
  421464:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  42146b:	49 89 d3             	mov    %rdx,%r11
  42146e:	49 d3 e3             	shl    %cl,%r11
  421471:	49 81 cb 00 00 00 80 	or     $0xffffffff80000000,%r11
  421478:	48 bf 00 00 fe ff 00 	movabs $0xfffe0000,%rdi
  42147f:	00 00 00 
  421482:	4c 21 df             	and    %r11,%rdi
  421485:	48 c7 c1 13 00 00 00 	mov    $0x13,%rcx
  42148c:	48 d3 ea             	shr    %cl,%rdx
  42148f:	48 83 e2 0f          	and    $0xf,%rdx
  421493:	48 c7 c1 11 00 00 00 	mov    $0x11,%rcx
  42149a:	48 d3 ef             	shr    %cl,%rdi
  42149d:	49 83 e0 01          	and    $0x1,%r8
  4214a1:	74 76                	je     421519 <float32_sqrt+0x229>
  4214a3:	48 81 c7 00 40 00 00 	add    $0x4000,%rdi
  4214aa:	48 81 e2 ff 00 00 00 	and    $0xff,%rdx
  4214b1:	0f b6 84 12 b0 8e 42 	movzbl 0x428eb0(%rdx,%rdx,1),%eax
  4214b8:	00 
  4214b9:	48 29 c7             	sub    %rax,%rdi
  4214bc:	48 89 f9             	mov    %rdi,%rcx
  4214bf:	4c 21 c9             	and    %r9,%rcx
  4214c2:	4d 89 da             	mov    %r11,%r10
  4214c5:	4d 21 ca             	and    %r9,%r10
  4214c8:	48 31 d2             	xor    %rdx,%rdx
  4214cb:	4c 89 d0             	mov    %r10,%rax
  4214ce:	48 f7 f1             	div    %rcx
  4214d1:	48 c7 c1 0e 00 00 00 	mov    $0xe,%rcx
  4214d8:	48 d3 e0             	shl    %cl,%rax
  4214db:	48 c7 c1 0f 00 00 00 	mov    $0xf,%rcx
  4214e2:	48 d3 e7             	shl    %cl,%rdi
  4214e5:	48 01 c7             	add    %rax,%rdi
  4214e8:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  4214ef:	49 d3 ea             	shr    %cl,%r10
  4214f2:	e9 8b 00 00 00       	jmpq   421582 <float32_sqrt+0x292>
  4214f7:	c3                   	retq   
  4214f8:	48 89 f8             	mov    %rdi,%rax
  4214fb:	48 0d 00 00 40 00    	or     $0x400000,%rax
  421501:	48 81 e7 ff ff ff 7f 	and    $0x7fffffff,%rdi
  421508:	48 81 ff 00 00 80 7f 	cmp    $0x7f800000,%rdi
  42150f:	77 07                	ja     421518 <float32_sqrt+0x228>
  421511:	48 c7 c0 00 00 40 00 	mov    $0x400000,%rax
  421518:	c3                   	retq   
  421519:	48 81 e2 ff 00 00 00 	and    $0xff,%rdx
  421520:	0f b6 84 12 d0 8e 42 	movzbl 0x428ed0(%rdx,%rdx,1),%eax
  421527:	00 
  421528:	48 81 cf 00 80 00 00 	or     $0x8000,%rdi
  42152f:	48 29 c7             	sub    %rax,%rdi
  421532:	48 89 f9             	mov    %rdi,%rcx
  421535:	4c 21 c9             	and    %r9,%rcx
  421538:	4d 89 da             	mov    %r11,%r10
  42153b:	4d 21 ca             	and    %r9,%r10
  42153e:	48 31 d2             	xor    %rdx,%rdx
  421541:	4c 89 d0             	mov    %r10,%rax
  421544:	48 f7 f1             	div    %rcx
  421547:	48 01 f8             	add    %rdi,%rax
  42154a:	48 89 c2             	mov    %rax,%rdx
  42154d:	4c 21 ca             	and    %r9,%rdx
  421550:	48 c7 c1 0f 00 00 00 	mov    $0xf,%rcx
  421557:	48 d3 e0             	shl    %cl,%rax
  42155a:	48 81 fa ff ff 01 00 	cmp    $0x1ffff,%rdx
  421561:	48 c7 c7 00 80 ff ff 	mov    $0xffffffffffff8000,%rdi
  421568:	77 03                	ja     42156d <float32_sqrt+0x27d>
  42156a:	48 89 c7             	mov    %rax,%rdi
  42156d:	48 b8 00 80 ff ff 00 	movabs $0xffff8000,%rax
  421574:	00 00 00 
  421577:	48 21 f8             	and    %rdi,%rax
  42157a:	4c 39 d0             	cmp    %r10,%rax
  42157d:	4d 89 da             	mov    %r11,%r10
  421580:	76 28                	jbe    4215aa <float32_sqrt+0x2ba>
  421582:	4d 21 ca             	and    %r9,%r10
  421585:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  42158c:	49 d3 e2             	shl    %cl,%r10
  42158f:	4c 21 cf             	and    %r9,%rdi
  421592:	48 31 d2             	xor    %rdx,%rdx
  421595:	4c 89 d0             	mov    %r10,%rax
  421598:	48 f7 f7             	div    %rdi
  42159b:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  4215a2:	48 d3 ef             	shr    %cl,%rdi
  4215a5:	48 01 c7             	add    %rax,%rdi
  4215a8:	eb 0d                	jmp    4215b7 <float32_sqrt+0x2c7>
  4215aa:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  4215b1:	4c 89 df             	mov    %r11,%rdi
  4215b4:	48 d3 ff             	sar    %cl,%rdi
  4215b7:	48 8d 47 02          	lea    0x2(%rdi),%rax
  4215bb:	48 89 c1             	mov    %rax,%rcx
  4215be:	48 83 e1 7e          	and    $0x7e,%rcx
  4215c2:	48 83 f9 05          	cmp    $0x5,%rcx
  4215c6:	0f 87 85 00 00 00    	ja     421651 <float32_sqrt+0x361>
  4215cc:	48 b9 fe ff ff ff 00 	movabs $0xfffffffe,%rcx
  4215d3:	00 00 00 
  4215d6:	48 21 cf             	and    %rcx,%rdi
  4215d9:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  4215e0:	48 d3 ef             	shr    %cl,%rdi
  4215e3:	48 c7 c2 ff ff ff 7f 	mov    $0x7fffffff,%rdx
  4215ea:	48 81 ff fe ff ff 7f 	cmp    $0x7ffffffe,%rdi
  4215f1:	77 7f                	ja     421672 <float32_sqrt+0x382>
  4215f3:	4d 21 c8             	and    %r9,%r8
  4215f6:	4d 21 cb             	and    %r9,%r11
  4215f9:	4c 89 c1             	mov    %r8,%rcx
  4215fc:	49 d3 eb             	shr    %cl,%r11
  4215ff:	48 89 c2             	mov    %rax,%rdx
  421602:	4c 21 ca             	and    %r9,%rdx
  421605:	48 0f af d2          	imul   %rdx,%rdx
  421609:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  421610:	49 d3 e3             	shl    %cl,%r11
  421613:	49 29 d3             	sub    %rdx,%r11
  421616:	79 1b                	jns    421633 <float32_sqrt+0x343>
  421618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42161f:	00 
  421620:	48 ff c8             	dec    %rax
  421623:	48 89 c1             	mov    %rax,%rcx
  421626:	4c 21 c9             	and    %r9,%rcx
  421629:	48 8d 4c 09 01       	lea    0x1(%rcx,%rcx,1),%rcx
  42162e:	49 01 cb             	add    %rcx,%r11
  421631:	78 ed                	js     421620 <float32_sqrt+0x330>
  421633:	4d 85 db             	test   %r11,%r11
  421636:	74 0c                	je     421644 <float32_sqrt+0x354>
  421638:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  42163f:	00 00 00 
  421642:	eb 0a                	jmp    42164e <float32_sqrt+0x35e>
  421644:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  42164b:	00 00 00 
  42164e:	48 09 c8             	or     %rcx,%rax
  421651:	48 ba fe ff ff ff 00 	movabs $0xfffffffe,%rdx
  421658:	00 00 00 
  42165b:	48 21 c2             	and    %rax,%rdx
  42165e:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  421665:	48 d3 ea             	shr    %cl,%rdx
  421668:	48 83 e0 01          	and    $0x1,%rax
  42166c:	48 09 d0             	or     %rdx,%rax
  42166f:	48 89 c2             	mov    %rax,%rdx
  421672:	48 31 ff             	xor    %rdi,%rdi
  421675:	e9 16 ca ff ff       	jmpq   41e090 <roundAndPackFloat32>
  42167a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000421680 <float32_eq>:
  421680:	48 89 f8             	mov    %rdi,%rax
  421683:	48 25 00 00 80 7f    	and    $0x7f800000,%rax
  421689:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  42168f:	75 18                	jne    4216a9 <float32_eq+0x29>
  421691:	48 89 f8             	mov    %rdi,%rax
  421694:	48 25 ff ff 7f 00    	and    $0x7fffff,%rax
  42169a:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4216a1:	00 00 00 
  4216a4:	48 85 c8             	test   %rcx,%rax
  4216a7:	75 2d                	jne    4216d6 <float32_eq+0x56>
  4216a9:	48 89 f0             	mov    %rsi,%rax
  4216ac:	48 25 00 00 80 7f    	and    $0x7f800000,%rax
  4216b2:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  4216b8:	0f 85 81 00 00 00    	jne    42173f <float32_eq+0xbf>
  4216be:	48 89 f0             	mov    %rsi,%rax
  4216c1:	48 25 ff ff 7f 00    	and    $0x7fffff,%rax
  4216c7:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4216ce:	00 00 00 
  4216d1:	48 85 c8             	test   %rcx,%rax
  4216d4:	74 69                	je     42173f <float32_eq+0xbf>
  4216d6:	48 89 f8             	mov    %rdi,%rax
  4216d9:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  4216df:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  4216e5:	75 16                	jne    4216fd <float32_eq+0x7d>
  4216e7:	48 81 e7 ff ff 3f 00 	and    $0x3fffff,%rdi
  4216ee:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  4216f5:	00 00 00 
  4216f8:	48 85 c7             	test   %rax,%rdi
  4216fb:	75 2c                	jne    421729 <float32_eq+0xa9>
  4216fd:	48 89 f1             	mov    %rsi,%rcx
  421700:	48 81 e1 00 00 c0 7f 	and    $0x7fc00000,%rcx
  421707:	48 31 c0             	xor    %rax,%rax
  42170a:	48 81 f9 00 00 80 7f 	cmp    $0x7f800000,%rcx
  421711:	75 61                	jne    421774 <float32_eq+0xf4>
  421713:	48 81 e6 ff ff 3f 00 	and    $0x3fffff,%rsi
  42171a:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  421721:	00 00 00 
  421724:	48 85 ce             	test   %rcx,%rsi
  421727:	74 4b                	je     421774 <float32_eq+0xf4>
  421729:	48 0f be 05 b0 af 20 	movsbq 0x20afb0(%rip),%rax        # 62c6e1 <float_exception_flags>
  421730:	00 
  421731:	48 83 c8 01          	or     $0x1,%rax
  421735:	88 05 a6 af 20 00    	mov    %al,0x20afa6(%rip)        # 62c6e1 <float_exception_flags>
  42173b:	48 31 c0             	xor    %rax,%rax
  42173e:	c3                   	retq   
  42173f:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  421746:	00 00 00 
  421749:	48 89 f2             	mov    %rsi,%rdx
  42174c:	48 21 ca             	and    %rcx,%rdx
  42174f:	48 21 f9             	and    %rdi,%rcx
  421752:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  421759:	48 39 d1             	cmp    %rdx,%rcx
  42175c:	74 16                	je     421774 <float32_eq+0xf4>
  42175e:	48 09 fe             	or     %rdi,%rsi
  421761:	48 f7 c6 ff ff ff 7f 	test   $0x7fffffff,%rsi
  421768:	75 0b                	jne    421775 <float32_eq+0xf5>
  42176a:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  421771:	00 00 00 
  421774:	c3                   	retq   
  421775:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  42177c:	00 00 00 
  42177f:	c3                   	retq   

0000000000421780 <float32_le>:
  421780:	48 89 f8             	mov    %rdi,%rax
  421783:	48 25 00 00 80 7f    	and    $0x7f800000,%rax
  421789:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  42178f:	75 18                	jne    4217a9 <float32_le+0x29>
  421791:	48 89 f8             	mov    %rdi,%rax
  421794:	48 25 ff ff 7f 00    	and    $0x7fffff,%rax
  42179a:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4217a1:	00 00 00 
  4217a4:	48 85 c8             	test   %rcx,%rax
  4217a7:	75 29                	jne    4217d2 <float32_le+0x52>
  4217a9:	48 89 f0             	mov    %rsi,%rax
  4217ac:	48 25 00 00 80 7f    	and    $0x7f800000,%rax
  4217b2:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  4217b8:	75 2e                	jne    4217e8 <float32_le+0x68>
  4217ba:	48 89 f0             	mov    %rsi,%rax
  4217bd:	48 25 ff ff 7f 00    	and    $0x7fffff,%rax
  4217c3:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4217ca:	00 00 00 
  4217cd:	48 85 c8             	test   %rcx,%rax
  4217d0:	74 16                	je     4217e8 <float32_le+0x68>
  4217d2:	48 0f be 05 07 af 20 	movsbq 0x20af07(%rip),%rax        # 62c6e1 <float_exception_flags>
  4217d9:	00 
  4217da:	48 83 c8 01          	or     $0x1,%rax
  4217de:	88 05 fd ae 20 00    	mov    %al,0x20aefd(%rip)        # 62c6e1 <float_exception_flags>
  4217e4:	48 31 c0             	xor    %rax,%rax
  4217e7:	c3                   	retq   
  4217e8:	48 b8 00 00 00 80 00 	movabs $0x80000000,%rax
  4217ef:	00 00 00 
  4217f2:	48 89 fa             	mov    %rdi,%rdx
  4217f5:	48 21 c2             	and    %rax,%rdx
  4217f8:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  4217ff:	48 d3 ea             	shr    %cl,%rdx
  421802:	48 21 f0             	and    %rsi,%rax
  421805:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  42180c:	48 d3 e8             	shr    %cl,%rax
  42180f:	48 39 c2             	cmp    %rax,%rdx
  421812:	75 33                	jne    421847 <float32_le+0xc7>
  421814:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  42181b:	00 00 00 
  42181e:	48 21 c6             	and    %rax,%rsi
  421821:	48 21 c7             	and    %rax,%rdi
  421824:	48 39 f7             	cmp    %rsi,%rdi
  421827:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  42182e:	74 39                	je     421869 <float32_le+0xe9>
  421830:	48 19 c0             	sbb    %rax,%rax
  421833:	48 83 e0 01          	and    $0x1,%rax
  421837:	48 39 c2             	cmp    %rax,%rdx
  42183a:	75 23                	jne    42185f <float32_le+0xdf>
  42183c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  421843:	00 00 00 
  421846:	c3                   	retq   
  421847:	48 85 d2             	test   %rdx,%rdx
  42184a:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  421851:	75 16                	jne    421869 <float32_le+0xe9>
  421853:	48 09 fe             	or     %rdi,%rsi
  421856:	48 f7 c6 ff ff ff 7f 	test   $0x7fffffff,%rsi
  42185d:	75 0b                	jne    42186a <float32_le+0xea>
  42185f:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  421866:	00 00 00 
  421869:	c3                   	retq   
  42186a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  421871:	00 00 00 
  421874:	c3                   	retq   
  421875:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  42187c:	00 00 00 00 

0000000000421880 <float32_lt>:
  421880:	48 89 f8             	mov    %rdi,%rax
  421883:	48 25 00 00 80 7f    	and    $0x7f800000,%rax
  421889:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  42188f:	75 18                	jne    4218a9 <float32_lt+0x29>
  421891:	48 89 f8             	mov    %rdi,%rax
  421894:	48 25 ff ff 7f 00    	and    $0x7fffff,%rax
  42189a:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4218a1:	00 00 00 
  4218a4:	48 85 c8             	test   %rcx,%rax
  4218a7:	75 29                	jne    4218d2 <float32_lt+0x52>
  4218a9:	48 89 f0             	mov    %rsi,%rax
  4218ac:	48 25 00 00 80 7f    	and    $0x7f800000,%rax
  4218b2:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  4218b8:	75 2e                	jne    4218e8 <float32_lt+0x68>
  4218ba:	48 89 f0             	mov    %rsi,%rax
  4218bd:	48 25 ff ff 7f 00    	and    $0x7fffff,%rax
  4218c3:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4218ca:	00 00 00 
  4218cd:	48 85 c8             	test   %rcx,%rax
  4218d0:	74 16                	je     4218e8 <float32_lt+0x68>
  4218d2:	48 0f be 05 07 ae 20 	movsbq 0x20ae07(%rip),%rax        # 62c6e1 <float_exception_flags>
  4218d9:	00 
  4218da:	48 83 c8 01          	or     $0x1,%rax
  4218de:	88 05 fd ad 20 00    	mov    %al,0x20adfd(%rip)        # 62c6e1 <float_exception_flags>
  4218e4:	48 31 c0             	xor    %rax,%rax
  4218e7:	c3                   	retq   
  4218e8:	48 b8 00 00 00 80 00 	movabs $0x80000000,%rax
  4218ef:	00 00 00 
  4218f2:	48 89 fa             	mov    %rdi,%rdx
  4218f5:	48 21 c2             	and    %rax,%rdx
  4218f8:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  4218ff:	48 d3 ea             	shr    %cl,%rdx
  421902:	48 21 f0             	and    %rsi,%rax
  421905:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  42190c:	48 d3 e8             	shr    %cl,%rax
  42190f:	48 39 c2             	cmp    %rax,%rdx
  421912:	75 2f                	jne    421943 <float32_lt+0xc3>
  421914:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  42191b:	00 00 00 
  42191e:	48 21 c6             	and    %rax,%rsi
  421921:	48 21 c7             	and    %rax,%rdi
  421924:	48 31 c0             	xor    %rax,%rax
  421927:	48 39 f7             	cmp    %rsi,%rdi
  42192a:	74 35                	je     421961 <float32_lt+0xe1>
  42192c:	48 19 c0             	sbb    %rax,%rax
  42192f:	48 83 e0 01          	and    $0x1,%rax
  421933:	48 39 c2             	cmp    %rax,%rdx
  421936:	75 1f                	jne    421957 <float32_lt+0xd7>
  421938:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  42193f:	00 00 00 
  421942:	c3                   	retq   
  421943:	48 31 c0             	xor    %rax,%rax
  421946:	48 85 d2             	test   %rdx,%rdx
  421949:	74 16                	je     421961 <float32_lt+0xe1>
  42194b:	48 09 fe             	or     %rdi,%rsi
  42194e:	48 f7 c6 ff ff ff 7f 	test   $0x7fffffff,%rsi
  421955:	74 0b                	je     421962 <float32_lt+0xe2>
  421957:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  42195e:	00 00 00 
  421961:	c3                   	retq   
  421962:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  421969:	00 00 00 
  42196c:	c3                   	retq   
  42196d:	0f 1f 00             	nopl   (%rax)

0000000000421970 <float32_eq_signaling>:
  421970:	48 89 f8             	mov    %rdi,%rax
  421973:	48 25 00 00 80 7f    	and    $0x7f800000,%rax
  421979:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  42197f:	75 18                	jne    421999 <float32_eq_signaling+0x29>
  421981:	48 89 f8             	mov    %rdi,%rax
  421984:	48 25 ff ff 7f 00    	and    $0x7fffff,%rax
  42198a:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  421991:	00 00 00 
  421994:	48 85 c8             	test   %rcx,%rax
  421997:	75 29                	jne    4219c2 <float32_eq_signaling+0x52>
  421999:	48 89 f0             	mov    %rsi,%rax
  42199c:	48 25 00 00 80 7f    	and    $0x7f800000,%rax
  4219a2:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  4219a8:	75 2e                	jne    4219d8 <float32_eq_signaling+0x68>
  4219aa:	48 89 f0             	mov    %rsi,%rax
  4219ad:	48 25 ff ff 7f 00    	and    $0x7fffff,%rax
  4219b3:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4219ba:	00 00 00 
  4219bd:	48 85 c8             	test   %rcx,%rax
  4219c0:	74 16                	je     4219d8 <float32_eq_signaling+0x68>
  4219c2:	48 0f be 05 17 ad 20 	movsbq 0x20ad17(%rip),%rax        # 62c6e1 <float_exception_flags>
  4219c9:	00 
  4219ca:	48 83 c8 01          	or     $0x1,%rax
  4219ce:	88 05 0d ad 20 00    	mov    %al,0x20ad0d(%rip)        # 62c6e1 <float_exception_flags>
  4219d4:	48 31 c0             	xor    %rax,%rax
  4219d7:	c3                   	retq   
  4219d8:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4219df:	00 00 00 
  4219e2:	48 89 f2             	mov    %rsi,%rdx
  4219e5:	48 21 ca             	and    %rcx,%rdx
  4219e8:	48 21 f9             	and    %rdi,%rcx
  4219eb:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4219f2:	48 39 d1             	cmp    %rdx,%rcx
  4219f5:	74 16                	je     421a0d <float32_eq_signaling+0x9d>
  4219f7:	48 09 fe             	or     %rdi,%rsi
  4219fa:	48 f7 c6 ff ff ff 7f 	test   $0x7fffffff,%rsi
  421a01:	75 0b                	jne    421a0e <float32_eq_signaling+0x9e>
  421a03:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  421a0a:	00 00 00 
  421a0d:	c3                   	retq   
  421a0e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  421a15:	00 00 00 
  421a18:	c3                   	retq   
  421a19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000421a20 <float32_le_quiet>:
  421a20:	48 89 f8             	mov    %rdi,%rax
  421a23:	48 25 00 00 80 7f    	and    $0x7f800000,%rax
  421a29:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  421a2f:	75 18                	jne    421a49 <float32_le_quiet+0x29>
  421a31:	48 89 f8             	mov    %rdi,%rax
  421a34:	48 25 ff ff 7f 00    	and    $0x7fffff,%rax
  421a3a:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  421a41:	00 00 00 
  421a44:	48 85 c8             	test   %rcx,%rax
  421a47:	75 2d                	jne    421a76 <float32_le_quiet+0x56>
  421a49:	48 89 f0             	mov    %rsi,%rax
  421a4c:	48 25 00 00 80 7f    	and    $0x7f800000,%rax
  421a52:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  421a58:	0f 85 89 00 00 00    	jne    421ae7 <float32_le_quiet+0xc7>
  421a5e:	48 89 f0             	mov    %rsi,%rax
  421a61:	48 25 ff ff 7f 00    	and    $0x7fffff,%rax
  421a67:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  421a6e:	00 00 00 
  421a71:	48 85 c8             	test   %rcx,%rax
  421a74:	74 71                	je     421ae7 <float32_le_quiet+0xc7>
  421a76:	48 89 f8             	mov    %rdi,%rax
  421a79:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  421a7f:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  421a85:	75 16                	jne    421a9d <float32_le_quiet+0x7d>
  421a87:	48 81 e7 ff ff 3f 00 	and    $0x3fffff,%rdi
  421a8e:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  421a95:	00 00 00 
  421a98:	48 85 c7             	test   %rax,%rdi
  421a9b:	75 34                	jne    421ad1 <float32_le_quiet+0xb1>
  421a9d:	48 89 f1             	mov    %rsi,%rcx
  421aa0:	48 81 e1 00 00 c0 7f 	and    $0x7fc00000,%rcx
  421aa7:	48 31 c0             	xor    %rax,%rax
  421aaa:	48 81 f9 00 00 80 7f 	cmp    $0x7f800000,%rcx
  421ab1:	0f 85 b1 00 00 00    	jne    421b68 <float32_le_quiet+0x148>
  421ab7:	48 81 e6 ff ff 3f 00 	and    $0x3fffff,%rsi
  421abe:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  421ac5:	00 00 00 
  421ac8:	48 85 ce             	test   %rcx,%rsi
  421acb:	0f 84 97 00 00 00    	je     421b68 <float32_le_quiet+0x148>
  421ad1:	48 0f be 05 08 ac 20 	movsbq 0x20ac08(%rip),%rax        # 62c6e1 <float_exception_flags>
  421ad8:	00 
  421ad9:	48 83 c8 01          	or     $0x1,%rax
  421add:	88 05 fe ab 20 00    	mov    %al,0x20abfe(%rip)        # 62c6e1 <float_exception_flags>
  421ae3:	48 31 c0             	xor    %rax,%rax
  421ae6:	c3                   	retq   
  421ae7:	48 b8 00 00 00 80 00 	movabs $0x80000000,%rax
  421aee:	00 00 00 
  421af1:	48 89 fa             	mov    %rdi,%rdx
  421af4:	48 21 c2             	and    %rax,%rdx
  421af7:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  421afe:	48 d3 ea             	shr    %cl,%rdx
  421b01:	48 21 f0             	and    %rsi,%rax
  421b04:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  421b0b:	48 d3 e8             	shr    %cl,%rax
  421b0e:	48 39 c2             	cmp    %rax,%rdx
  421b11:	75 33                	jne    421b46 <float32_le_quiet+0x126>
  421b13:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  421b1a:	00 00 00 
  421b1d:	48 21 c6             	and    %rax,%rsi
  421b20:	48 21 f8             	and    %rdi,%rax
  421b23:	48 39 f0             	cmp    %rsi,%rax
  421b26:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  421b2d:	74 39                	je     421b68 <float32_le_quiet+0x148>
  421b2f:	48 19 c0             	sbb    %rax,%rax
  421b32:	48 83 e0 01          	and    $0x1,%rax
  421b36:	48 39 c2             	cmp    %rax,%rdx
  421b39:	75 23                	jne    421b5e <float32_le_quiet+0x13e>
  421b3b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  421b42:	00 00 00 
  421b45:	c3                   	retq   
  421b46:	48 85 d2             	test   %rdx,%rdx
  421b49:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  421b50:	75 16                	jne    421b68 <float32_le_quiet+0x148>
  421b52:	48 09 fe             	or     %rdi,%rsi
  421b55:	48 f7 c6 ff ff ff 7f 	test   $0x7fffffff,%rsi
  421b5c:	75 0b                	jne    421b69 <float32_le_quiet+0x149>
  421b5e:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  421b65:	00 00 00 
  421b68:	c3                   	retq   
  421b69:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  421b70:	00 00 00 
  421b73:	c3                   	retq   
  421b74:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  421b7b:	00 00 00 00 00 

0000000000421b80 <float32_lt_quiet>:
  421b80:	48 89 f8             	mov    %rdi,%rax
  421b83:	48 25 00 00 80 7f    	and    $0x7f800000,%rax
  421b89:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  421b8f:	75 18                	jne    421ba9 <float32_lt_quiet+0x29>
  421b91:	48 89 f8             	mov    %rdi,%rax
  421b94:	48 25 ff ff 7f 00    	and    $0x7fffff,%rax
  421b9a:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  421ba1:	00 00 00 
  421ba4:	48 85 c8             	test   %rcx,%rax
  421ba7:	75 2d                	jne    421bd6 <float32_lt_quiet+0x56>
  421ba9:	48 89 f0             	mov    %rsi,%rax
  421bac:	48 25 00 00 80 7f    	and    $0x7f800000,%rax
  421bb2:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  421bb8:	0f 85 89 00 00 00    	jne    421c47 <float32_lt_quiet+0xc7>
  421bbe:	48 89 f0             	mov    %rsi,%rax
  421bc1:	48 25 ff ff 7f 00    	and    $0x7fffff,%rax
  421bc7:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  421bce:	00 00 00 
  421bd1:	48 85 c8             	test   %rcx,%rax
  421bd4:	74 71                	je     421c47 <float32_lt_quiet+0xc7>
  421bd6:	48 89 f8             	mov    %rdi,%rax
  421bd9:	48 25 00 00 c0 7f    	and    $0x7fc00000,%rax
  421bdf:	48 3d 00 00 80 7f    	cmp    $0x7f800000,%rax
  421be5:	75 16                	jne    421bfd <float32_lt_quiet+0x7d>
  421be7:	48 81 e7 ff ff 3f 00 	and    $0x3fffff,%rdi
  421bee:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  421bf5:	00 00 00 
  421bf8:	48 85 c7             	test   %rax,%rdi
  421bfb:	75 34                	jne    421c31 <float32_lt_quiet+0xb1>
  421bfd:	48 89 f1             	mov    %rsi,%rcx
  421c00:	48 81 e1 00 00 c0 7f 	and    $0x7fc00000,%rcx
  421c07:	48 31 c0             	xor    %rax,%rax
  421c0a:	48 81 f9 00 00 80 7f 	cmp    $0x7f800000,%rcx
  421c11:	0f 85 a9 00 00 00    	jne    421cc0 <float32_lt_quiet+0x140>
  421c17:	48 81 e6 ff ff 3f 00 	and    $0x3fffff,%rsi
  421c1e:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  421c25:	00 00 00 
  421c28:	48 85 ce             	test   %rcx,%rsi
  421c2b:	0f 84 8f 00 00 00    	je     421cc0 <float32_lt_quiet+0x140>
  421c31:	48 0f be 05 a8 aa 20 	movsbq 0x20aaa8(%rip),%rax        # 62c6e1 <float_exception_flags>
  421c38:	00 
  421c39:	48 83 c8 01          	or     $0x1,%rax
  421c3d:	88 05 9e aa 20 00    	mov    %al,0x20aa9e(%rip)        # 62c6e1 <float_exception_flags>
  421c43:	48 31 c0             	xor    %rax,%rax
  421c46:	c3                   	retq   
  421c47:	48 b8 00 00 00 80 00 	movabs $0x80000000,%rax
  421c4e:	00 00 00 
  421c51:	48 89 fa             	mov    %rdi,%rdx
  421c54:	48 21 c2             	and    %rax,%rdx
  421c57:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  421c5e:	48 d3 ea             	shr    %cl,%rdx
  421c61:	48 21 f0             	and    %rsi,%rax
  421c64:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  421c6b:	48 d3 e8             	shr    %cl,%rax
  421c6e:	48 39 c2             	cmp    %rax,%rdx
  421c71:	75 2f                	jne    421ca2 <float32_lt_quiet+0x122>
  421c73:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  421c7a:	00 00 00 
  421c7d:	48 21 ce             	and    %rcx,%rsi
  421c80:	48 21 f9             	and    %rdi,%rcx
  421c83:	48 31 c0             	xor    %rax,%rax
  421c86:	48 39 f1             	cmp    %rsi,%rcx
  421c89:	74 35                	je     421cc0 <float32_lt_quiet+0x140>
  421c8b:	48 19 c0             	sbb    %rax,%rax
  421c8e:	48 83 e0 01          	and    $0x1,%rax
  421c92:	48 39 c2             	cmp    %rax,%rdx
  421c95:	75 1f                	jne    421cb6 <float32_lt_quiet+0x136>
  421c97:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  421c9e:	00 00 00 
  421ca1:	c3                   	retq   
  421ca2:	48 31 c0             	xor    %rax,%rax
  421ca5:	48 85 d2             	test   %rdx,%rdx
  421ca8:	74 16                	je     421cc0 <float32_lt_quiet+0x140>
  421caa:	48 09 fe             	or     %rdi,%rsi
  421cad:	48 f7 c6 ff ff ff 7f 	test   $0x7fffffff,%rsi
  421cb4:	74 0b                	je     421cc1 <float32_lt_quiet+0x141>
  421cb6:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  421cbd:	00 00 00 
  421cc0:	c3                   	retq   
  421cc1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  421cc8:	00 00 00 
  421ccb:	c3                   	retq   
  421ccc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000421cd0 <float64_to_int32>:
  421cd0:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  421cd7:	48 89 fe             	mov    %rdi,%rsi
  421cda:	48 d3 ee             	shr    %cl,%rsi
  421cdd:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  421ce4:	48 89 f8             	mov    %rdi,%rax
  421ce7:	48 d3 e8             	shr    %cl,%rax
  421cea:	48 ba ff ff ff ff ff 	movabs $0xfffffffffffff,%rdx
  421cf1:	ff 0f 00 
  421cf4:	48 21 d7             	and    %rdx,%rdi
  421cf7:	74 0c                	je     421d05 <float64_to_int32+0x35>
  421cf9:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  421d00:	00 00 00 
  421d03:	eb 0a                	jmp    421d0f <float64_to_int32+0x3f>
  421d05:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  421d0c:	00 00 00 
  421d0f:	48 81 e6 ff 07 00 00 	and    $0x7ff,%rsi
  421d16:	74 06                	je     421d1e <float64_to_int32+0x4e>
  421d18:	48 ff c2             	inc    %rdx
  421d1b:	48 09 d7             	or     %rdx,%rdi
  421d1e:	48 81 fe ff 07 00 00 	cmp    $0x7ff,%rsi
  421d25:	75 0c                	jne    421d33 <float64_to_int32+0x63>
  421d27:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  421d2e:	00 00 00 
  421d31:	eb 0a                	jmp    421d3d <float64_to_int32+0x6d>
  421d33:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  421d3a:	00 00 00 
  421d3d:	4d 31 c0             	xor    %r8,%r8
  421d40:	48 85 ca             	test   %rcx,%rdx
  421d43:	75 03                	jne    421d48 <float64_to_int32+0x78>
  421d45:	49 89 c0             	mov    %rax,%r8
  421d48:	48 c7 c0 2c 04 00 00 	mov    $0x42c,%rax
  421d4f:	48 29 f0             	sub    %rsi,%rax
  421d52:	48 85 c0             	test   %rax,%rax
  421d55:	7e 77                	jle    421dce <float64_to_int32+0xfe>
  421d57:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  421d5e:	48 89 c2             	mov    %rax,%rdx
  421d61:	48 d3 e2             	shl    %cl,%rdx
  421d64:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  421d6b:	48 d3 fa             	sar    %cl,%rdx
  421d6e:	48 83 fa 3f          	cmp    $0x3f,%rdx
  421d72:	7f 30                	jg     421da4 <float64_to_int32+0xd4>
  421d74:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  421d7b:	00 00 00 
  421d7e:	48 21 c1             	and    %rax,%rcx
  421d81:	48 89 fa             	mov    %rdi,%rdx
  421d84:	48 d3 ea             	shr    %cl,%rdx
  421d87:	48 f7 d8             	neg    %rax
  421d8a:	48 89 c1             	mov    %rax,%rcx
  421d8d:	48 d3 e7             	shl    %cl,%rdi
  421d90:	48 85 ff             	test   %rdi,%rdi
  421d93:	74 20                	je     421db5 <float64_to_int32+0xe5>
  421d95:	48 bf 01 00 00 00 00 	movabs $0x1,%rdi
  421d9c:	00 00 00 
  421d9f:	48 09 d7             	or     %rdx,%rdi
  421da2:	eb 2a                	jmp    421dce <float64_to_int32+0xfe>
  421da4:	48 85 ff             	test   %rdi,%rdi
  421da7:	74 1b                	je     421dc4 <float64_to_int32+0xf4>
  421da9:	48 bf 01 00 00 00 00 	movabs $0x1,%rdi
  421db0:	00 00 00 
  421db3:	eb 19                	jmp    421dce <float64_to_int32+0xfe>
  421db5:	48 bf 00 00 00 00 00 	movabs $0x0,%rdi
  421dbc:	00 00 00 
  421dbf:	48 09 d7             	or     %rdx,%rdi
  421dc2:	eb 0a                	jmp    421dce <float64_to_int32+0xfe>
  421dc4:	48 bf 00 00 00 00 00 	movabs $0x0,%rdi
  421dcb:	00 00 00 
  421dce:	0f b6 05 0b a9 20 00 	movzbl 0x20a90b(%rip),%eax        # 62c6e0 <float_rounding_mode>
  421dd5:	48 85 c0             	test   %rax,%rax
  421dd8:	48 c7 c6 40 00 00 00 	mov    $0x40,%rsi
  421ddf:	74 2a                	je     421e0b <float64_to_int32+0x13b>
  421de1:	48 31 f6             	xor    %rsi,%rsi
  421de4:	48 83 f8 03          	cmp    $0x3,%rax
  421de8:	74 21                	je     421e0b <float64_to_int32+0x13b>
  421dea:	48 31 f6             	xor    %rsi,%rsi
  421ded:	49 f7 c0 ff 00 00 00 	test   $0xff,%r8
  421df4:	74 08                	je     421dfe <float64_to_int32+0x12e>
  421df6:	48 83 f8 02          	cmp    $0x2,%rax
  421dfa:	75 08                	jne    421e04 <float64_to_int32+0x134>
  421dfc:	eb 0d                	jmp    421e0b <float64_to_int32+0x13b>
  421dfe:	48 83 f8 01          	cmp    $0x1,%rax
  421e02:	74 07                	je     421e0b <float64_to_int32+0x13b>
  421e04:	48 c7 c6 7f 00 00 00 	mov    $0x7f,%rsi
  421e0b:	48 85 c0             	test   %rax,%rax
  421e0e:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  421e15:	00 00 00 
  421e18:	49 ba 01 00 00 00 00 	movabs $0x1,%r10
  421e1f:	00 00 00 
  421e22:	49 89 d1             	mov    %rdx,%r9
  421e25:	75 03                	jne    421e2a <float64_to_int32+0x15a>
  421e27:	4d 89 d1             	mov    %r10,%r9
  421e2a:	48 01 fe             	add    %rdi,%rsi
  421e2d:	48 83 e7 7f          	and    $0x7f,%rdi
  421e31:	48 c7 c1 07 00 00 00 	mov    $0x7,%rcx
  421e38:	48 89 f0             	mov    %rsi,%rax
  421e3b:	48 d3 e8             	shr    %cl,%rax
  421e3e:	48 83 ff 40          	cmp    $0x40,%rdi
  421e42:	75 03                	jne    421e47 <float64_to_int32+0x177>
  421e44:	4c 89 d2             	mov    %r10,%rdx
  421e47:	4c 21 ca             	and    %r9,%rdx
  421e4a:	48 f7 d2             	not    %rdx
  421e4d:	48 21 d0             	and    %rdx,%rax
  421e50:	49 f7 c0 ff 00 00 00 	test   $0xff,%r8
  421e57:	74 03                	je     421e5c <float64_to_int32+0x18c>
  421e59:	48 f7 d8             	neg    %rax
  421e5c:	48 c7 c1 27 00 00 00 	mov    $0x27,%rcx
  421e63:	48 d3 ee             	shr    %cl,%rsi
  421e66:	48 85 f6             	test   %rsi,%rsi
  421e69:	75 52                	jne    421ebd <float64_to_int32+0x1ed>
  421e6b:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  421e72:	00 00 00 
  421e75:	48 85 c8             	test   %rcx,%rax
  421e78:	74 26                	je     421ea0 <float64_to_int32+0x1d0>
  421e7a:	48 ba 00 00 00 80 00 	movabs $0x80000000,%rdx
  421e81:	00 00 00 
  421e84:	48 21 c2             	and    %rax,%rdx
  421e87:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  421e8e:	48 d3 ea             	shr    %cl,%rdx
  421e91:	4c 89 c1             	mov    %r8,%rcx
  421e94:	48 81 e1 ff 00 00 00 	and    $0xff,%rcx
  421e9b:	48 39 ca             	cmp    %rcx,%rdx
  421e9e:	75 1d                	jne    421ebd <float64_to_int32+0x1ed>
  421ea0:	48 f7 c7 ff 00 00 00 	test   $0xff,%rdi
  421ea7:	74 3e                	je     421ee7 <float64_to_int32+0x217>
  421ea9:	48 0f be 0d 30 a8 20 	movsbq 0x20a830(%rip),%rcx        # 62c6e1 <float_exception_flags>
  421eb0:	00 
  421eb1:	48 83 c9 20          	or     $0x20,%rcx
  421eb5:	88 0d 26 a8 20 00    	mov    %cl,0x20a826(%rip)        # 62c6e1 <float_exception_flags>
  421ebb:	eb 2a                	jmp    421ee7 <float64_to_int32+0x217>
  421ebd:	48 0f be 05 1c a8 20 	movsbq 0x20a81c(%rip),%rax        # 62c6e1 <float_exception_flags>
  421ec4:	00 
  421ec5:	48 83 c8 01          	or     $0x1,%rax
  421ec9:	88 05 12 a8 20 00    	mov    %al,0x20a812(%rip)        # 62c6e1 <float_exception_flags>
  421ecf:	49 f7 c0 ff 00 00 00 	test   $0xff,%r8
  421ed6:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
  421edd:	75 08                	jne    421ee7 <float64_to_int32+0x217>
  421edf:	48 c7 c0 ff ff ff 7f 	mov    $0x7fffffff,%rax
  421ee6:	c3                   	retq   
  421ee7:	c3                   	retq   
  421ee8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  421eef:	00 

0000000000421ef0 <float64_to_int32_round_to_zero>:
  421ef0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
  421ef7:	ff 0f 00 
  421efa:	49 89 f9             	mov    %rdi,%r9
  421efd:	49 21 c1             	and    %rax,%r9
  421f00:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  421f07:	48 89 fe             	mov    %rdi,%rsi
  421f0a:	48 d3 ee             	shr    %cl,%rsi
  421f0d:	48 81 e6 ff 07 00 00 	and    $0x7ff,%rsi
  421f14:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  421f1b:	48 d3 ef             	shr    %cl,%rdi
  421f1e:	48 81 fe 1f 04 00 00 	cmp    $0x41f,%rsi
  421f25:	72 4b                	jb     421f72 <float64_to_int32_round_to_zero+0x82>
  421f27:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  421f2e:	00 00 00 
  421f31:	48 21 c6             	and    %rax,%rsi
  421f34:	48 81 fe ff 07 00 00 	cmp    $0x7ff,%rsi
  421f3b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  421f42:	00 00 00 
  421f45:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  421f4c:	00 00 00 
  421f4f:	48 89 c1             	mov    %rax,%rcx
  421f52:	75 03                	jne    421f57 <float64_to_int32_round_to_zero+0x67>
  421f54:	48 89 d1             	mov    %rdx,%rcx
  421f57:	4d 85 c9             	test   %r9,%r9
  421f5a:	74 03                	je     421f5f <float64_to_int32_round_to_zero+0x6f>
  421f5c:	48 89 d0             	mov    %rdx,%rax
  421f5f:	48 31 d2             	xor    %rdx,%rdx
  421f62:	48 85 c1             	test   %rax,%rcx
  421f65:	75 03                	jne    421f6a <float64_to_int32_round_to_zero+0x7a>
  421f67:	48 89 fa             	mov    %rdi,%rdx
  421f6a:	48 89 d7             	mov    %rdx,%rdi
  421f6d:	e9 91 00 00 00       	jmpq   422003 <float64_to_int32_round_to_zero+0x113>
  421f72:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  421f79:	00 00 00 
  421f7c:	48 89 f2             	mov    %rsi,%rdx
  421f7f:	48 21 ca             	and    %rcx,%rdx
  421f82:	48 81 fa fe 03 00 00 	cmp    $0x3fe,%rdx
  421f89:	77 13                	ja     421f9e <float64_to_int32_round_to_zero+0xae>
  421f8b:	48 31 c0             	xor    %rax,%rax
  421f8e:	48 85 ce             	test   %rcx,%rsi
  421f91:	75 5c                	jne    421fef <float64_to_int32_round_to_zero+0xff>
  421f93:	4d 85 c9             	test   %r9,%r9
  421f96:	0f 84 91 00 00 00    	je     42202d <float64_to_int32_round_to_zero+0x13d>
  421f9c:	eb 51                	jmp    421fef <float64_to_int32_round_to_zero+0xff>
  421f9e:	48 ff c0             	inc    %rax
  421fa1:	49 09 c1             	or     %rax,%r9
  421fa4:	49 c7 c0 33 04 00 00 	mov    $0x433,%r8
  421fab:	49 29 f0             	sub    %rsi,%r8
  421fae:	49 21 c8             	and    %rcx,%r8
  421fb1:	4c 89 ca             	mov    %r9,%rdx
  421fb4:	4c 89 c1             	mov    %r8,%rcx
  421fb7:	48 d3 ea             	shr    %cl,%rdx
  421fba:	48 85 ff             	test   %rdi,%rdi
  421fbd:	48 89 d0             	mov    %rdx,%rax
  421fc0:	74 06                	je     421fc8 <float64_to_int32_round_to_zero+0xd8>
  421fc2:	48 89 d0             	mov    %rdx,%rax
  421fc5:	48 f7 d8             	neg    %rax
  421fc8:	48 be 00 00 00 80 00 	movabs $0x80000000,%rsi
  421fcf:	00 00 00 
  421fd2:	48 21 c6             	and    %rax,%rsi
  421fd5:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  421fdc:	48 d3 ee             	shr    %cl,%rsi
  421fdf:	48 39 fe             	cmp    %rdi,%rsi
  421fe2:	75 1f                	jne    422003 <float64_to_int32_round_to_zero+0x113>
  421fe4:	4c 89 c1             	mov    %r8,%rcx
  421fe7:	48 d3 e2             	shl    %cl,%rdx
  421fea:	4c 39 ca             	cmp    %r9,%rdx
  421fed:	74 3e                	je     42202d <float64_to_int32_round_to_zero+0x13d>
  421fef:	48 0f be 0d ea a6 20 	movsbq 0x20a6ea(%rip),%rcx        # 62c6e1 <float_exception_flags>
  421ff6:	00 
  421ff7:	48 83 c9 20          	or     $0x20,%rcx
  421ffb:	88 0d e0 a6 20 00    	mov    %cl,0x20a6e0(%rip)        # 62c6e1 <float_exception_flags>
  422001:	eb 2a                	jmp    42202d <float64_to_int32_round_to_zero+0x13d>
  422003:	48 0f be 05 d6 a6 20 	movsbq 0x20a6d6(%rip),%rax        # 62c6e1 <float_exception_flags>
  42200a:	00 
  42200b:	48 83 c8 01          	or     $0x1,%rax
  42200f:	88 05 cc a6 20 00    	mov    %al,0x20a6cc(%rip)        # 62c6e1 <float_exception_flags>
  422015:	48 f7 c7 ff 00 00 00 	test   $0xff,%rdi
  42201c:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
  422023:	75 08                	jne    42202d <float64_to_int32_round_to_zero+0x13d>
  422025:	48 c7 c0 ff ff ff 7f 	mov    $0x7fffffff,%rax
  42202c:	c3                   	retq   
  42202d:	c3                   	retq   
  42202e:	66 90                	xchg   %ax,%ax

0000000000422030 <float64_to_int64>:
  422030:	49 b8 00 00 00 00 00 	movabs $0x10000000000000,%r8
  422037:	00 10 00 
  42203a:	4d 8d 48 ff          	lea    -0x1(%r8),%r9
  42203e:	49 21 f9             	and    %rdi,%r9
  422041:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  422048:	48 89 fa             	mov    %rdi,%rdx
  42204b:	48 d3 ea             	shr    %cl,%rdx
  42204e:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  422055:	48 d3 ef             	shr    %cl,%rdi
  422058:	48 81 e2 ff 07 00 00 	and    $0x7ff,%rdx
  42205f:	74 03                	je     422064 <float64_to_int64+0x34>
  422061:	4d 09 c1             	or     %r8,%r9
  422064:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  42206b:	ff ff 7f 
  42206e:	48 c7 c6 33 04 00 00 	mov    $0x433,%rsi
  422075:	48 29 d6             	sub    %rdx,%rsi
  422078:	48 85 f6             	test   %rsi,%rsi
  42207b:	7e 48                	jle    4220c5 <float64_to_int64+0x95>
  42207d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  422084:	48 89 f2             	mov    %rsi,%rdx
  422087:	48 d3 e2             	shl    %cl,%rdx
  42208a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  422091:	48 d3 fa             	sar    %cl,%rdx
  422094:	48 83 fa 3f          	cmp    $0x3f,%rdx
  422098:	0f 8f 8c 00 00 00    	jg     42212a <float64_to_int64+0xfa>
  42209e:	48 89 f1             	mov    %rsi,%rcx
  4220a1:	48 f7 d9             	neg    %rcx
  4220a4:	4c 89 ca             	mov    %r9,%rdx
  4220a7:	48 d3 e2             	shl    %cl,%rdx
  4220aa:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4220b1:	00 00 00 
  4220b4:	48 21 f1             	and    %rsi,%rcx
  4220b7:	49 d3 e9             	shr    %cl,%r9
  4220ba:	4d 89 c8             	mov    %r9,%r8
  4220bd:	49 89 d1             	mov    %rdx,%r9
  4220c0:	e9 a7 00 00 00       	jmpq   42216c <float64_to_int64+0x13c>
  4220c5:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4220cc:	00 00 00 
  4220cf:	48 21 ca             	and    %rcx,%rdx
  4220d2:	48 81 fa 3f 04 00 00 	cmp    $0x43f,%rdx
  4220d9:	72 76                	jb     422151 <float64_to_int64+0x121>
  4220db:	48 0f be 0d fe a5 20 	movsbq 0x20a5fe(%rip),%rcx        # 62c6e1 <float_exception_flags>
  4220e2:	00 
  4220e3:	48 83 c9 01          	or     $0x1,%rcx
  4220e7:	48 85 ff             	test   %rdi,%rdi
  4220ea:	88 0d f1 a5 20 00    	mov    %cl,0x20a5f1(%rip)        # 62c6e1 <float_exception_flags>
  4220f0:	0f 84 51 01 00 00    	je     422247 <float64_to_int64+0x217>
  4220f6:	48 81 fa ff 07 00 00 	cmp    $0x7ff,%rdx
  4220fd:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  422104:	00 00 00 
  422107:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  42210e:	00 00 00 
  422111:	48 89 ca             	mov    %rcx,%rdx
  422114:	75 03                	jne    422119 <float64_to_int64+0xe9>
  422116:	48 89 f2             	mov    %rsi,%rdx
  422119:	4d 39 c1             	cmp    %r8,%r9
  42211c:	74 03                	je     422121 <float64_to_int64+0xf1>
  42211e:	48 89 f1             	mov    %rsi,%rcx
  422121:	48 85 ca             	test   %rcx,%rdx
  422124:	75 03                	jne    422129 <float64_to_int64+0xf9>
  422126:	48 ff c0             	inc    %rax
  422129:	c3                   	retq   
  42212a:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  422131:	00 00 00 
  422134:	48 21 ce             	and    %rcx,%rsi
  422137:	4d 31 c0             	xor    %r8,%r8
  42213a:	48 83 fe 40          	cmp    $0x40,%rsi
  42213e:	74 2c                	je     42216c <float64_to_int64+0x13c>
  422140:	4d 85 c9             	test   %r9,%r9
  422143:	74 1d                	je     422162 <float64_to_int64+0x132>
  422145:	49 b9 01 00 00 00 00 	movabs $0x1,%r9
  42214c:	00 00 00 
  42214f:	eb 1b                	jmp    42216c <float64_to_int64+0x13c>
  422151:	48 f7 de             	neg    %rsi
  422154:	48 89 f1             	mov    %rsi,%rcx
  422157:	49 d3 e1             	shl    %cl,%r9
  42215a:	4d 89 c8             	mov    %r9,%r8
  42215d:	4d 31 c9             	xor    %r9,%r9
  422160:	eb 0a                	jmp    42216c <float64_to_int64+0x13c>
  422162:	49 b9 00 00 00 00 00 	movabs $0x0,%r9
  422169:	00 00 00 
  42216c:	0f b6 35 6d a5 20 00 	movzbl 0x20a56d(%rip),%esi        # 62c6e0 <float_rounding_mode>
  422173:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  42217a:	4c 89 ca             	mov    %r9,%rdx
  42217d:	48 d3 ea             	shr    %cl,%rdx
  422180:	48 85 f6             	test   %rsi,%rsi
  422183:	74 3c                	je     4221c1 <float64_to_int64+0x191>
  422185:	48 83 fe 03          	cmp    $0x3,%rsi
  422189:	74 67                	je     4221f2 <float64_to_int64+0x1c2>
  42218b:	48 85 ff             	test   %rdi,%rdi
  42218e:	74 06                	je     422196 <float64_to_int64+0x166>
  422190:	48 83 fe 01          	cmp    $0x1,%rsi
  422194:	eb 04                	jmp    42219a <float64_to_int64+0x16a>
  422196:	48 83 fe 02          	cmp    $0x2,%rsi
  42219a:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  4221a1:	00 00 00 
  4221a4:	49 ba 01 00 00 00 00 	movabs $0x1,%r10
  4221ab:	00 00 00 
  4221ae:	48 89 ca             	mov    %rcx,%rdx
  4221b1:	75 03                	jne    4221b6 <float64_to_int64+0x186>
  4221b3:	4c 89 d2             	mov    %r10,%rdx
  4221b6:	4d 85 c9             	test   %r9,%r9
  4221b9:	74 03                	je     4221be <float64_to_int64+0x18e>
  4221bb:	4c 89 d1             	mov    %r10,%rcx
  4221be:	48 21 ca             	and    %rcx,%rdx
  4221c1:	48 85 d2             	test   %rdx,%rdx
  4221c4:	74 2c                	je     4221f2 <float64_to_int64+0x1c2>
  4221c6:	49 ff c0             	inc    %r8
  4221c9:	74 61                	je     42222c <float64_to_int64+0x1fc>
  4221cb:	4c 89 c9             	mov    %r9,%rcx
  4221ce:	48 21 c1             	and    %rax,%rcx
  4221d1:	48 09 f1             	or     %rsi,%rcx
  4221d4:	75 0c                	jne    4221e2 <float64_to_int64+0x1b2>
  4221d6:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  4221dd:	00 00 00 
  4221e0:	eb 0a                	jmp    4221ec <float64_to_int64+0x1bc>
  4221e2:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  4221e9:	00 00 00 
  4221ec:	48 f7 d1             	not    %rcx
  4221ef:	49 21 c8             	and    %rcx,%r8
  4221f2:	48 85 ff             	test   %rdi,%rdi
  4221f5:	74 03                	je     4221fa <float64_to_int64+0x1ca>
  4221f7:	49 f7 d8             	neg    %r8
  4221fa:	4d 85 c0             	test   %r8,%r8
  4221fd:	74 12                	je     422211 <float64_to_int64+0x1e1>
  4221ff:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  422206:	4c 89 c2             	mov    %r8,%rdx
  422209:	48 d3 ea             	shr    %cl,%rdx
  42220c:	48 39 fa             	cmp    %rdi,%rdx
  42220f:	75 1b                	jne    42222c <float64_to_int64+0x1fc>
  422211:	4d 85 c9             	test   %r9,%r9
  422214:	74 12                	je     422228 <float64_to_int64+0x1f8>
  422216:	48 0f be 05 c3 a4 20 	movsbq 0x20a4c3(%rip),%rax        # 62c6e1 <float_exception_flags>
  42221d:	00 
  42221e:	48 83 c8 20          	or     $0x20,%rax
  422222:	88 05 b9 a4 20 00    	mov    %al,0x20a4b9(%rip)        # 62c6e1 <float_exception_flags>
  422228:	4c 89 c0             	mov    %r8,%rax
  42222b:	c3                   	retq   
  42222c:	48 0f be 0d ad a4 20 	movsbq 0x20a4ad(%rip),%rcx        # 62c6e1 <float_exception_flags>
  422233:	00 
  422234:	48 83 c9 01          	or     $0x1,%rcx
  422238:	48 85 ff             	test   %rdi,%rdi
  42223b:	88 0d a0 a4 20 00    	mov    %cl,0x20a4a0(%rip)        # 62c6e1 <float_exception_flags>
  422241:	74 03                	je     422246 <float64_to_int64+0x216>
  422243:	48 ff c0             	inc    %rax
  422246:	c3                   	retq   
  422247:	49 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%r8
  42224e:	ff ff 7f 
  422251:	4c 89 c0             	mov    %r8,%rax
  422254:	c3                   	retq   
  422255:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  42225c:	00 00 00 00 

0000000000422260 <float64_to_int64_round_to_zero>:
  422260:	49 b9 00 00 00 00 00 	movabs $0x10000000000000,%r9
  422267:	00 10 00 
  42226a:	4d 8d 51 ff          	lea    -0x1(%r9),%r10
  42226e:	49 21 fa             	and    %rdi,%r10
  422271:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  422278:	48 89 fe             	mov    %rdi,%rsi
  42227b:	48 d3 ee             	shr    %cl,%rsi
  42227e:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  422285:	49 89 f8             	mov    %rdi,%r8
  422288:	49 d3 e8             	shr    %cl,%r8
  42228b:	48 89 f2             	mov    %rsi,%rdx
  42228e:	48 81 e2 ff 07 00 00 	and    $0x7ff,%rdx
  422295:	74 03                	je     42229a <float64_to_int64_round_to_zero+0x3a>
  422297:	4d 09 ca             	or     %r9,%r10
  42229a:	48 89 d1             	mov    %rdx,%rcx
  42229d:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  4222a4:	00 00 00 
  4222a7:	48 81 c1 cd fb ff ff 	add    $0xfffffffffffffbcd,%rcx
  4222ae:	78 59                	js     422309 <float64_to_int64_round_to_zero+0xa9>
  4222b0:	48 21 c2             	and    %rax,%rdx
  4222b3:	48 81 fa 3e 04 00 00 	cmp    $0x43e,%rdx
  4222ba:	72 77                	jb     422333 <float64_to_int64_round_to_zero+0xd3>
  4222bc:	48 b8 00 00 00 00 00 	movabs $0xc3e0000000000000,%rax
  4222c3:	00 e0 c3 
  4222c6:	48 39 c7             	cmp    %rax,%rdi
  4222c9:	74 33                	je     4222fe <float64_to_int64_round_to_zero+0x9e>
  4222cb:	48 0f be 05 0e a4 20 	movsbq 0x20a40e(%rip),%rax        # 62c6e1 <float_exception_flags>
  4222d2:	00 
  4222d3:	48 83 c8 01          	or     $0x1,%rax
  4222d7:	4d 85 c0             	test   %r8,%r8
  4222da:	88 05 01 a4 20 00    	mov    %al,0x20a401(%rip)        # 62c6e1 <float_exception_flags>
  4222e0:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  4222e7:	ff ff 7f 
  4222ea:	0f 84 87 00 00 00    	je     422377 <float64_to_int64_round_to_zero+0x117>
  4222f0:	48 81 fa ff 07 00 00 	cmp    $0x7ff,%rdx
  4222f7:	75 05                	jne    4222fe <float64_to_int64_round_to_zero+0x9e>
  4222f9:	4d 39 ca             	cmp    %r9,%r10
  4222fc:	75 79                	jne    422377 <float64_to_int64_round_to_zero+0x117>
  4222fe:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
  422305:	00 00 80 
  422308:	c3                   	retq   
  422309:	48 89 d1             	mov    %rdx,%rcx
  42230c:	48 21 c1             	and    %rax,%rcx
  42230f:	48 81 f9 fd 03 00 00 	cmp    $0x3fd,%rcx
  422316:	77 23                	ja     42233b <float64_to_int64_round_to_zero+0xdb>
  422318:	48 31 c0             	xor    %rax,%rax
  42231b:	49 09 ca             	or     %rcx,%r10
  42231e:	74 57                	je     422377 <float64_to_int64_round_to_zero+0x117>
  422320:	48 0f be 0d b9 a3 20 	movsbq 0x20a3b9(%rip),%rcx        # 62c6e1 <float_exception_flags>
  422327:	00 
  422328:	48 83 c9 20          	or     $0x20,%rcx
  42232c:	88 0d af a3 20 00    	mov    %cl,0x20a3af(%rip)        # 62c6e1 <float_exception_flags>
  422332:	c3                   	retq   
  422333:	49 d3 e2             	shl    %cl,%r10
  422336:	4c 89 d0             	mov    %r10,%rax
  422339:	eb 34                	jmp    42236f <float64_to_int64_round_to_zero+0x10f>
  42233b:	48 c7 c1 33 04 00 00 	mov    $0x433,%rcx
  422342:	48 29 d1             	sub    %rdx,%rcx
  422345:	48 21 c1             	and    %rax,%rcx
  422348:	4c 89 d0             	mov    %r10,%rax
  42234b:	48 d3 e8             	shr    %cl,%rax
  42234e:	48 83 c6 0d          	add    $0xd,%rsi
  422352:	48 89 f1             	mov    %rsi,%rcx
  422355:	49 d3 e2             	shl    %cl,%r10
  422358:	4d 85 d2             	test   %r10,%r10
  42235b:	74 12                	je     42236f <float64_to_int64_round_to_zero+0x10f>
  42235d:	48 0f be 0d 7c a3 20 	movsbq 0x20a37c(%rip),%rcx        # 62c6e1 <float_exception_flags>
  422364:	00 
  422365:	48 83 c9 20          	or     $0x20,%rcx
  422369:	88 0d 72 a3 20 00    	mov    %cl,0x20a372(%rip)        # 62c6e1 <float_exception_flags>
  42236f:	4d 85 c0             	test   %r8,%r8
  422372:	74 03                	je     422377 <float64_to_int64_round_to_zero+0x117>
  422374:	48 f7 d8             	neg    %rax
  422377:	c3                   	retq   
  422378:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  42237f:	00 

0000000000422380 <float64_to_float32>:
  422380:	48 89 f8             	mov    %rdi,%rax
  422383:	49 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%r8
  42238a:	ff 0f 00 
  42238d:	49 21 c0             	and    %rax,%r8
  422390:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  422397:	48 89 c6             	mov    %rax,%rsi
  42239a:	48 d3 ee             	shr    %cl,%rsi
  42239d:	48 81 e6 ff 07 00 00 	and    $0x7ff,%rsi
  4223a4:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4223ab:	48 d3 ef             	shr    %cl,%rdi
  4223ae:	48 81 fe ff 07 00 00 	cmp    $0x7ff,%rsi
  4223b5:	75 6a                	jne    422421 <float64_to_float32+0xa1>
  4223b7:	4d 85 c0             	test   %r8,%r8
  4223ba:	0f 84 b4 00 00 00    	je     422474 <float64_to_float32+0xf4>
  4223c0:	48 b9 00 00 00 00 00 	movabs $0x7ff8000000000000,%rcx
  4223c7:	00 f8 7f 
  4223ca:	48 21 c1             	and    %rax,%rcx
  4223cd:	48 ba 00 00 00 00 00 	movabs $0x7ff0000000000000,%rdx
  4223d4:	00 f0 7f 
  4223d7:	48 39 d1             	cmp    %rdx,%rcx
  4223da:	75 21                	jne    4223fd <float64_to_float32+0x7d>
  4223dc:	48 b9 ff ff ff ff ff 	movabs $0x7ffffffffffff,%rcx
  4223e3:	ff 07 00 
  4223e6:	48 21 c1             	and    %rax,%rcx
  4223e9:	74 12                	je     4223fd <float64_to_float32+0x7d>
  4223eb:	48 0f be 0d ee a2 20 	movsbq 0x20a2ee(%rip),%rcx        # 62c6e1 <float_exception_flags>
  4223f2:	00 
  4223f3:	48 83 c9 01          	or     $0x1,%rcx
  4223f7:	88 0d e4 a2 20 00    	mov    %cl,0x20a2e4(%rip)        # 62c6e1 <float_exception_flags>
  4223fd:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  422404:	48 d3 e7             	shl    %cl,%rdi
  422407:	48 c7 c1 1d 00 00 00 	mov    $0x1d,%rcx
  42240e:	48 d3 e8             	shr    %cl,%rax
  422411:	48 25 ff ff 3f 00    	and    $0x3fffff,%rax
  422417:	48 09 f8             	or     %rdi,%rax
  42241a:	48 0d 00 00 c0 7f    	or     $0x7fc00000,%rax
  422420:	c3                   	retq   
  422421:	48 c7 c1 16 00 00 00 	mov    $0x16,%rcx
  422428:	49 d3 e8             	shr    %cl,%r8
  42242b:	48 a9 ff ff 3f 00    	test   $0x3fffff,%rax
  422431:	74 0c                	je     42243f <float64_to_float32+0xbf>
  422433:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  42243a:	00 00 00 
  42243d:	eb 0a                	jmp    422449 <float64_to_float32+0xc9>
  42243f:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  422446:	00 00 00 
  422449:	4c 09 c2             	or     %r8,%rdx
  42244c:	48 89 d0             	mov    %rdx,%rax
  42244f:	48 09 f0             	or     %rsi,%rax
  422452:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  422459:	00 00 00 
  42245c:	48 85 c8             	test   %rcx,%rax
  42245f:	74 0e                	je     42246f <float64_to_float32+0xef>
  422461:	48 81 ca 00 00 00 40 	or     $0x40000000,%rdx
  422468:	48 81 c6 7f fc ff ff 	add    $0xfffffffffffffc7f,%rsi
  42246f:	e9 1c bc ff ff       	jmpq   41e090 <roundAndPackFloat32>
  422474:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  42247b:	48 d3 e7             	shl    %cl,%rdi
  42247e:	48 81 cf 00 00 80 7f 	or     $0x7f800000,%rdi
  422485:	48 89 f8             	mov    %rdi,%rax
  422488:	c3                   	retq   
  422489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000422490 <float64_round_to_int>:
  422490:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
  422497:	ff 0f 00 
  42249a:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  4224a1:	48 89 fe             	mov    %rdi,%rsi
  4224a4:	48 d3 ee             	shr    %cl,%rsi
  4224a7:	48 81 e6 ff 07 00 00 	and    $0x7ff,%rsi
  4224ae:	48 81 fe 33 04 00 00 	cmp    $0x433,%rsi
  4224b5:	72 68                	jb     42251f <float64_round_to_int+0x8f>
  4224b7:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4224be:	00 00 00 
  4224c1:	48 21 ce             	and    %rcx,%rsi
  4224c4:	48 81 fe ff 07 00 00 	cmp    $0x7ff,%rsi
  4224cb:	0f 85 f0 01 00 00    	jne    4226c1 <float64_round_to_int+0x231>
  4224d1:	48 21 f8             	and    %rdi,%rax
  4224d4:	0f 84 e7 01 00 00    	je     4226c1 <float64_round_to_int+0x231>
  4224da:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffff,%rax
  4224e1:	ff 07 00 
  4224e4:	48 ba 00 00 00 00 00 	movabs $0x7ff8000000000000,%rdx
  4224eb:	00 f8 7f 
  4224ee:	48 21 fa             	and    %rdi,%rdx
  4224f1:	48 31 c9             	xor    %rcx,%rcx
  4224f4:	48 be 00 00 00 00 00 	movabs $0x7ff0000000000000,%rsi
  4224fb:	00 f0 7f 
  4224fe:	48 39 f2             	cmp    %rsi,%rdx
  422501:	0f 85 08 01 00 00    	jne    42260f <float64_round_to_int+0x17f>
  422507:	48 85 c7             	test   %rax,%rdi
  42250a:	0f 84 f5 00 00 00    	je     422605 <float64_round_to_int+0x175>
  422510:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  422517:	00 00 00 
  42251a:	e9 f0 00 00 00       	jmpq   42260f <float64_round_to_int+0x17f>
  42251f:	49 b9 ff ff ff ff 00 	movabs $0xffffffff,%r9
  422526:	00 00 00 
  422529:	48 89 f2             	mov    %rsi,%rdx
  42252c:	4c 21 ca             	and    %r9,%rdx
  42252f:	48 81 fa fe 03 00 00 	cmp    $0x3fe,%rdx
  422536:	77 74                	ja     4225ac <float64_round_to_int+0x11c>
  422538:	49 ba ff ff ff ff ff 	movabs $0x7fffffffffffffff,%r10
  42253f:	ff ff 7f 
  422542:	4c 85 d7             	test   %r10,%rdi
  422545:	0f 84 76 01 00 00    	je     4226c1 <float64_round_to_int+0x231>
  42254b:	49 b8 00 00 00 00 00 	movabs $0x3ff0000000000000,%r8
  422552:	00 f0 3f 
  422555:	48 0f be 0d 84 a1 20 	movsbq 0x20a184(%rip),%rcx        # 62c6e1 <float_exception_flags>
  42255c:	00 
  42255d:	4c 0f be 1d 7b a1 20 	movsbq 0x20a17b(%rip),%r11        # 62c6e0 <float_rounding_mode>
  422564:	00 
  422565:	48 83 c9 20          	or     $0x20,%rcx
  422569:	88 0d 72 a1 20 00    	mov    %cl,0x20a172(%rip)        # 62c6e1 <float_exception_flags>
  42256f:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  422576:	48 89 fe             	mov    %rdi,%rsi
  422579:	48 d3 ee             	shr    %cl,%rsi
  42257c:	4c 89 d9             	mov    %r11,%rcx
  42257f:	4c 21 c9             	and    %r9,%rcx
  422582:	48 83 f9 02          	cmp    $0x2,%rcx
  422586:	0f 84 c8 00 00 00    	je     422654 <float64_round_to_int+0x1c4>
  42258c:	48 83 f9 01          	cmp    $0x1,%rcx
  422590:	0f 85 d0 00 00 00    	jne    422666 <float64_round_to_int+0x1d6>
  422596:	48 85 f6             	test   %rsi,%rsi
  422599:	74 0a                	je     4225a5 <float64_round_to_int+0x115>
  42259b:	48 be 00 00 00 00 00 	movabs $0xbff0000000000000,%rsi
  4225a2:	00 f0 bf 
  4225a5:	48 89 f7             	mov    %rsi,%rdi
  4225a8:	48 89 f8             	mov    %rdi,%rax
  4225ab:	c3                   	retq   
  4225ac:	48 c7 c1 33 04 00 00 	mov    $0x433,%rcx
  4225b3:	44 0f b6 05 25 a1 20 	movzbl 0x20a125(%rip),%r8d        # 62c6e0 <float_rounding_mode>
  4225ba:	00 
  4225bb:	48 29 f1             	sub    %rsi,%rcx
  4225be:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4225c5:	48 d3 e0             	shl    %cl,%rax
  4225c8:	49 83 f8 03          	cmp    $0x3,%r8
  4225cc:	48 89 fa             	mov    %rdi,%rdx
  4225cf:	0f 84 e1 00 00 00    	je     4226b6 <float64_round_to_int+0x226>
  4225d5:	4c 8d 48 ff          	lea    -0x1(%rax),%r9
  4225d9:	4d 85 c0             	test   %r8,%r8
  4225dc:	75 57                	jne    422635 <float64_round_to_int+0x1a5>
  4225de:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  4225e5:	48 89 c2             	mov    %rax,%rdx
  4225e8:	48 d3 ea             	shr    %cl,%rdx
  4225eb:	48 01 fa             	add    %rdi,%rdx
  4225ee:	4c 85 ca             	test   %r9,%rdx
  4225f1:	0f 85 bf 00 00 00    	jne    4226b6 <float64_round_to_int+0x226>
  4225f7:	48 89 c1             	mov    %rax,%rcx
  4225fa:	48 f7 d1             	not    %rcx
  4225fd:	48 21 ca             	and    %rcx,%rdx
  422600:	e9 b1 00 00 00       	jmpq   4226b6 <float64_round_to_int+0x226>
  422605:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  42260c:	00 00 00 
  42260f:	48 ff c0             	inc    %rax
  422612:	48 09 c7             	or     %rax,%rdi
  422615:	48 85 c9             	test   %rcx,%rcx
  422618:	0f 84 a3 00 00 00    	je     4226c1 <float64_round_to_int+0x231>
  42261e:	48 0f be 05 bb a0 20 	movsbq 0x20a0bb(%rip),%rax        # 62c6e1 <float_exception_flags>
  422625:	00 
  422626:	48 83 c8 01          	or     $0x1,%rax
  42262a:	88 05 b1 a0 20 00    	mov    %al,0x20a0b1(%rip)        # 62c6e1 <float_exception_flags>
  422630:	e9 8c 00 00 00       	jmpq   4226c1 <float64_round_to_int+0x231>
  422635:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  42263c:	48 89 fe             	mov    %rdi,%rsi
  42263f:	48 d3 ee             	shr    %cl,%rsi
  422642:	49 83 f8 02          	cmp    $0x2,%r8
  422646:	75 56                	jne    42269e <float64_round_to_int+0x20e>
  422648:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  42264f:	00 00 00 
  422652:	eb 54                	jmp    4226a8 <float64_round_to_int+0x218>
  422654:	48 85 f6             	test   %rsi,%rsi
  422657:	74 06                	je     42265f <float64_round_to_int+0x1cf>
  422659:	49 ff c2             	inc    %r10
  42265c:	4d 89 d0             	mov    %r10,%r8
  42265f:	4c 89 c7             	mov    %r8,%rdi
  422662:	48 89 f8             	mov    %rdi,%rax
  422665:	c3                   	retq   
  422666:	4d 85 cb             	test   %r9,%r11
  422669:	75 22                	jne    42268d <float64_round_to_int+0x1fd>
  42266b:	48 81 fa fe 03 00 00 	cmp    $0x3fe,%rdx
  422672:	75 19                	jne    42268d <float64_round_to_int+0x1fd>
  422674:	48 21 c7             	and    %rax,%rdi
  422677:	74 14                	je     42268d <float64_round_to_int+0x1fd>
  422679:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  422680:	48 d3 e6             	shl    %cl,%rsi
  422683:	4c 09 c6             	or     %r8,%rsi
  422686:	48 89 f7             	mov    %rsi,%rdi
  422689:	48 89 f8             	mov    %rdi,%rax
  42268c:	c3                   	retq   
  42268d:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  422694:	48 d3 e6             	shl    %cl,%rsi
  422697:	48 89 f7             	mov    %rsi,%rdi
  42269a:	48 89 f8             	mov    %rdi,%rax
  42269d:	c3                   	retq   
  42269e:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  4226a5:	00 00 00 
  4226a8:	48 31 d2             	xor    %rdx,%rdx
  4226ab:	48 39 ce             	cmp    %rcx,%rsi
  4226ae:	74 03                	je     4226b3 <float64_round_to_int+0x223>
  4226b0:	4c 89 ca             	mov    %r9,%rdx
  4226b3:	48 01 fa             	add    %rdi,%rdx
  4226b6:	48 f7 d8             	neg    %rax
  4226b9:	48 21 d0             	and    %rdx,%rax
  4226bc:	48 39 f8             	cmp    %rdi,%rax
  4226bf:	75 04                	jne    4226c5 <float64_round_to_int+0x235>
  4226c1:	48 89 f8             	mov    %rdi,%rax
  4226c4:	c3                   	retq   
  4226c5:	48 0f be 0d 14 a0 20 	movsbq 0x20a014(%rip),%rcx        # 62c6e1 <float_exception_flags>
  4226cc:	00 
  4226cd:	48 83 c9 20          	or     $0x20,%rcx
  4226d1:	88 0d 0a a0 20 00    	mov    %cl,0x20a00a(%rip)        # 62c6e1 <float_exception_flags>
  4226d7:	c3                   	retq   
  4226d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4226df:	00 

00000000004226e0 <float64_add>:
  4226e0:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4226e7:	48 89 fa             	mov    %rdi,%rdx
  4226ea:	48 d3 ea             	shr    %cl,%rdx
  4226ed:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4226f4:	48 89 f0             	mov    %rsi,%rax
  4226f7:	48 d3 e8             	shr    %cl,%rax
  4226fa:	48 39 c2             	cmp    %rax,%rdx
  4226fd:	75 02                	jne    422701 <float64_add+0x21>
  4226ff:	eb 0f                	jmp    422710 <addFloat64Sigs>
  422701:	e9 6a 06 00 00       	jmpq   422d70 <subFloat64Sigs>
  422706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  42270d:	00 00 00 

0000000000422710 <addFloat64Sigs>:
  422710:	41 57                	push   %r15
  422712:	41 56                	push   %r14
  422714:	41 55                	push   %r13
  422716:	41 54                	push   %r12
  422718:	53                   	push   %rbx
  422719:	49 bf 00 00 00 00 00 	movabs $0x7ff8000000000000,%r15
  422720:	00 f8 7f 
  422723:	49 bb 00 00 00 00 00 	movabs $0x7ff0000000000000,%r11
  42272a:	00 f0 7f 
  42272d:	49 be 00 00 00 00 00 	movabs $0x2000000000000000,%r14
  422734:	00 00 20 
  422737:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  42273e:	49 89 f9             	mov    %rdi,%r9
  422741:	49 d3 e9             	shr    %cl,%r9
  422744:	49 81 e1 ff 07 00 00 	and    $0x7ff,%r9
  42274b:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  422752:	48 89 f3             	mov    %rsi,%rbx
  422755:	48 d3 eb             	shr    %cl,%rbx
  422758:	48 81 e3 ff 07 00 00 	and    $0x7ff,%rbx
  42275f:	4d 89 cd             	mov    %r9,%r13
  422762:	49 29 dd             	sub    %rbx,%r13
  422765:	48 c7 c1 09 00 00 00 	mov    $0x9,%rcx
  42276c:	49 89 f8             	mov    %rdi,%r8
  42276f:	49 d3 e0             	shl    %cl,%r8
  422772:	49 8d 86 00 fe ff ff 	lea    -0x200(%r14),%rax
  422779:	49 21 c0             	and    %rax,%r8
  42277c:	48 c7 c1 09 00 00 00 	mov    $0x9,%rcx
  422783:	49 89 f4             	mov    %rsi,%r12
  422786:	49 d3 e4             	shl    %cl,%r12
  422789:	49 21 c4             	and    %rax,%r12
  42278c:	4d 85 ed             	test   %r13,%r13
  42278f:	49 ba ff ff ff ff ff 	movabs $0x7ffffffffffff,%r10
  422796:	ff 07 00 
  422799:	7e 55                	jle    4227f0 <addFloat64Sigs+0xe0>
  42279b:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4227a2:	00 00 00 
  4227a5:	4c 89 c8             	mov    %r9,%rax
  4227a8:	48 21 c8             	and    %rcx,%rax
  4227ab:	48 3d ff 07 00 00    	cmp    $0x7ff,%rax
  4227b1:	75 75                	jne    422828 <addFloat64Sigs+0x118>
  4227b3:	4d 85 c0             	test   %r8,%r8
  4227b6:	0f 84 9b 05 00 00    	je     422d57 <addFloat64Sigs+0x647>
  4227bc:	48 89 f9             	mov    %rdi,%rcx
  4227bf:	4c 21 f9             	and    %r15,%rcx
  4227c2:	48 31 c0             	xor    %rax,%rax
  4227c5:	4c 39 d9             	cmp    %r11,%rcx
  4227c8:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  4227cf:	00 00 00 
  4227d2:	0f 85 a0 01 00 00    	jne    422978 <addFloat64Sigs+0x268>
  4227d8:	4c 85 d7             	test   %r10,%rdi
  4227db:	0f 84 8d 01 00 00    	je     42296e <addFloat64Sigs+0x25e>
  4227e1:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  4227e8:	00 00 00 
  4227eb:	e9 88 01 00 00       	jmpq   422978 <addFloat64Sigs+0x268>
  4227f0:	0f 88 95 00 00 00    	js     42288b <addFloat64Sigs+0x17b>
  4227f6:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  4227fd:	00 00 00 
  422800:	49 85 c1             	test   %rax,%r9
  422803:	0f 85 dc 00 00 00    	jne    4228e5 <addFloat64Sigs+0x1d5>
  422809:	4d 01 c4             	add    %r8,%r12
  42280c:	48 c7 c1 09 00 00 00 	mov    $0x9,%rcx
  422813:	49 d3 ec             	shr    %cl,%r12
  422816:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  42281d:	48 d3 e2             	shl    %cl,%rdx
  422820:	4c 09 e2             	or     %r12,%rdx
  422823:	e9 77 02 00 00       	jmpq   422a9f <addFloat64Sigs+0x38f>
  422828:	48 21 cb             	and    %rcx,%rbx
  42282b:	75 0c                	jne    422839 <addFloat64Sigs+0x129>
  42282d:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  422834:	00 00 00 
  422837:	eb 0a                	jmp    422843 <addFloat64Sigs+0x133>
  422839:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  422840:	00 00 00 
  422843:	48 85 db             	test   %rbx,%rbx
  422846:	74 03                	je     42284b <addFloat64Sigs+0x13b>
  422848:	4d 09 f4             	or     %r14,%r12
  42284b:	49 29 f5             	sub    %rsi,%r13
  42284e:	49 85 cd             	test   %rcx,%r13
  422851:	0f 84 f7 02 00 00    	je     422b4e <addFloat64Sigs+0x43e>
  422857:	49 83 fd 3f          	cmp    $0x3f,%r13
  42285b:	0f 8f cc 00 00 00    	jg     42292d <addFloat64Sigs+0x21d>
  422861:	4c 21 e9             	and    %r13,%rcx
  422864:	4c 89 e6             	mov    %r12,%rsi
  422867:	48 d3 ee             	shr    %cl,%rsi
  42286a:	49 f7 dd             	neg    %r13
  42286d:	4c 89 e9             	mov    %r13,%rcx
  422870:	49 d3 e4             	shl    %cl,%r12
  422873:	4d 85 e4             	test   %r12,%r12
  422876:	0f 84 15 01 00 00    	je     422991 <addFloat64Sigs+0x281>
  42287c:	49 bc 01 00 00 00 00 	movabs $0x1,%r12
  422883:	00 00 00 
  422886:	e9 10 01 00 00       	jmpq   42299b <addFloat64Sigs+0x28b>
  42288b:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  422892:	00 00 00 
  422895:	48 89 d9             	mov    %rbx,%rcx
  422898:	48 21 c1             	and    %rax,%rcx
  42289b:	48 81 f9 ff 07 00 00 	cmp    $0x7ff,%rcx
  4228a2:	0f 85 99 00 00 00    	jne    422941 <addFloat64Sigs+0x231>
  4228a8:	4d 85 e4             	test   %r12,%r12
  4228ab:	0f 84 e1 01 00 00    	je     422a92 <addFloat64Sigs+0x382>
  4228b1:	48 89 f9             	mov    %rdi,%rcx
  4228b4:	4c 21 f9             	and    %r15,%rcx
  4228b7:	48 31 c0             	xor    %rax,%rax
  4228ba:	4c 39 d9             	cmp    %r11,%rcx
  4228bd:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  4228c4:	00 00 00 
  4228c7:	0f 85 49 02 00 00    	jne    422b16 <addFloat64Sigs+0x406>
  4228cd:	4c 85 d7             	test   %r10,%rdi
  4228d0:	0f 84 36 02 00 00    	je     422b0c <addFloat64Sigs+0x3fc>
  4228d6:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  4228dd:	00 00 00 
  4228e0:	e9 31 02 00 00       	jmpq   422b16 <addFloat64Sigs+0x406>
  4228e5:	4c 21 c8             	and    %r9,%rax
  4228e8:	48 3d ff 07 00 00    	cmp    $0x7ff,%rax
  4228ee:	75 69                	jne    422959 <addFloat64Sigs+0x249>
  4228f0:	4d 09 c4             	or     %r8,%r12
  4228f3:	0f 84 5e 04 00 00    	je     422d57 <addFloat64Sigs+0x647>
  4228f9:	48 89 f9             	mov    %rdi,%rcx
  4228fc:	4c 21 f9             	and    %r15,%rcx
  4228ff:	48 31 c0             	xor    %rax,%rax
  422902:	4c 39 d9             	cmp    %r11,%rcx
  422905:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  42290c:	00 00 00 
  42290f:	0f 85 21 03 00 00    	jne    422c36 <addFloat64Sigs+0x526>
  422915:	4c 85 d7             	test   %r10,%rdi
  422918:	0f 84 0e 03 00 00    	je     422c2c <addFloat64Sigs+0x51c>
  42291e:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  422925:	00 00 00 
  422928:	e9 09 03 00 00       	jmpq   422c36 <addFloat64Sigs+0x526>
  42292d:	4d 85 e4             	test   %r12,%r12
  422930:	74 71                	je     4229a3 <addFloat64Sigs+0x293>
  422932:	49 bc 01 00 00 00 00 	movabs $0x1,%r12
  422939:	00 00 00 
  42293c:	e9 0d 02 00 00       	jmpq   422b4e <addFloat64Sigs+0x43e>
  422941:	49 21 c1             	and    %rax,%r9
  422944:	0f 85 fb 00 00 00    	jne    422a45 <addFloat64Sigs+0x335>
  42294a:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  422951:	00 00 00 
  422954:	e9 f6 00 00 00       	jmpq   422a4f <addFloat64Sigs+0x33f>
  422959:	48 b8 00 00 00 00 00 	movabs $0x4000000000000000,%rax
  422960:	00 00 40 
  422963:	49 09 c0             	or     %rax,%r8
  422966:	4d 01 e0             	add    %r12,%r8
  422969:	e9 0d 02 00 00       	jmpq   422b7b <addFloat64Sigs+0x46b>
  42296e:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  422975:	00 00 00 
  422978:	49 21 f7             	and    %rsi,%r15
  42297b:	4d 39 df             	cmp    %r11,%r15
  42297e:	75 3c                	jne    4229bc <addFloat64Sigs+0x2ac>
  422980:	4c 85 d6             	test   %r10,%rsi
  422983:	74 2d                	je     4229b2 <addFloat64Sigs+0x2a2>
  422985:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  42298c:	00 00 00 
  42298f:	eb 2b                	jmp    4229bc <addFloat64Sigs+0x2ac>
  422991:	49 bc 00 00 00 00 00 	movabs $0x0,%r12
  422998:	00 00 00 
  42299b:	49 09 f4             	or     %rsi,%r12
  42299e:	e9 ab 01 00 00       	jmpq   422b4e <addFloat64Sigs+0x43e>
  4229a3:	49 bc 00 00 00 00 00 	movabs $0x0,%r12
  4229aa:	00 00 00 
  4229ad:	e9 9c 01 00 00       	jmpq   422b4e <addFloat64Sigs+0x43e>
  4229b2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4229b9:	00 00 00 
  4229bc:	49 ff c2             	inc    %r10
  4229bf:	48 89 d1             	mov    %rdx,%rcx
  4229c2:	48 09 c1             	or     %rax,%rcx
  4229c5:	48 83 f9 01          	cmp    $0x1,%rcx
  4229c9:	75 12                	jne    4229dd <addFloat64Sigs+0x2cd>
  4229cb:	48 0f be 0d 0e 9d 20 	movsbq 0x209d0e(%rip),%rcx        # 62c6e1 <float_exception_flags>
  4229d2:	00 
  4229d3:	48 83 c9 01          	or     $0x1,%rcx
  4229d7:	88 0d 04 9d 20 00    	mov    %cl,0x209d04(%rip)        # 62c6e1 <float_exception_flags>
  4229dd:	48 89 f9             	mov    %rdi,%rcx
  4229e0:	4c 09 d1             	or     %r10,%rcx
  4229e3:	49 09 f2             	or     %rsi,%r10
  4229e6:	48 85 d2             	test   %rdx,%rdx
  4229e9:	74 29                	je     422a14 <addFloat64Sigs+0x304>
  4229eb:	48 85 c0             	test   %rax,%rax
  4229ee:	0f 85 d2 00 00 00    	jne    422ac6 <addFloat64Sigs+0x3b6>
  4229f4:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  4229fb:	ff ff 7f 
  4229fe:	48 21 c6             	and    %rax,%rsi
  422a01:	49 21 c3             	and    %rax,%r11
  422a04:	4c 39 de             	cmp    %r11,%rsi
  422a07:	77 03                	ja     422a0c <addFloat64Sigs+0x2fc>
  422a09:	49 89 ca             	mov    %rcx,%r10
  422a0c:	4c 89 d7             	mov    %r10,%rdi
  422a0f:	e9 43 03 00 00       	jmpq   422d57 <addFloat64Sigs+0x647>
  422a14:	48 ba ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rdx
  422a1b:	ff ff 7f 
  422a1e:	48 21 d7             	and    %rdx,%rdi
  422a21:	49 21 d3             	and    %rdx,%r11
  422a24:	4c 39 df             	cmp    %r11,%rdi
  422a27:	76 14                	jbe    422a3d <addFloat64Sigs+0x32d>
  422a29:	48 21 d6             	and    %rdx,%rsi
  422a2c:	4c 39 de             	cmp    %r11,%rsi
  422a2f:	77 7e                	ja     422aaf <addFloat64Sigs+0x39f>
  422a31:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  422a38:	00 00 00 
  422a3b:	eb 7c                	jmp    422ab9 <addFloat64Sigs+0x3a9>
  422a3d:	4c 89 d7             	mov    %r10,%rdi
  422a40:	e9 12 03 00 00       	jmpq   422d57 <addFloat64Sigs+0x647>
  422a45:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  422a4c:	00 00 00 
  422a4f:	4d 85 c9             	test   %r9,%r9
  422a52:	74 03                	je     422a57 <addFloat64Sigs+0x347>
  422a54:	4d 09 f0             	or     %r14,%r8
  422a57:	49 01 cd             	add    %rcx,%r13
  422a5a:	49 85 c5             	test   %rax,%r13
  422a5d:	74 48                	je     422aa7 <addFloat64Sigs+0x397>
  422a5f:	4c 89 e9             	mov    %r13,%rcx
  422a62:	48 f7 d9             	neg    %rcx
  422a65:	48 83 f9 3f          	cmp    $0x3f,%rcx
  422a69:	7f 7d                	jg     422ae8 <addFloat64Sigs+0x3d8>
  422a6b:	48 21 c1             	and    %rax,%rcx
  422a6e:	4c 89 c6             	mov    %r8,%rsi
  422a71:	48 d3 ee             	shr    %cl,%rsi
  422a74:	4c 89 e9             	mov    %r13,%rcx
  422a77:	49 d3 e0             	shl    %cl,%r8
  422a7a:	4d 85 c0             	test   %r8,%r8
  422a7d:	0f 84 ac 00 00 00    	je     422b2f <addFloat64Sigs+0x41f>
  422a83:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  422a8a:	00 00 00 
  422a8d:	e9 a7 00 00 00       	jmpq   422b39 <addFloat64Sigs+0x429>
  422a92:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  422a99:	48 d3 e2             	shl    %cl,%rdx
  422a9c:	4c 09 da             	or     %r11,%rdx
  422a9f:	48 89 d7             	mov    %rdx,%rdi
  422aa2:	e9 b0 02 00 00       	jmpq   422d57 <addFloat64Sigs+0x647>
  422aa7:	49 89 d9             	mov    %rbx,%r9
  422aaa:	e9 9f 00 00 00       	jmpq   422b4e <addFloat64Sigs+0x43e>
  422aaf:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  422ab6:	00 00 00 
  422ab9:	48 09 d0             	or     %rdx,%rax
  422abc:	74 08                	je     422ac6 <addFloat64Sigs+0x3b6>
  422abe:	48 89 cf             	mov    %rcx,%rdi
  422ac1:	e9 91 02 00 00       	jmpq   422d57 <addFloat64Sigs+0x647>
  422ac6:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
  422aca:	4b 8d 14 12          	lea    (%r10,%r10,1),%rdx
  422ace:	48 39 d0             	cmp    %rdx,%rax
  422ad1:	73 08                	jae    422adb <addFloat64Sigs+0x3cb>
  422ad3:	4c 89 d7             	mov    %r10,%rdi
  422ad6:	e9 7c 02 00 00       	jmpq   422d57 <addFloat64Sigs+0x647>
  422adb:	48 39 c2             	cmp    %rax,%rdx
  422ade:	73 1c                	jae    422afc <addFloat64Sigs+0x3ec>
  422ae0:	48 89 cf             	mov    %rcx,%rdi
  422ae3:	e9 6f 02 00 00       	jmpq   422d57 <addFloat64Sigs+0x647>
  422ae8:	4d 85 c0             	test   %r8,%r8
  422aeb:	74 54                	je     422b41 <addFloat64Sigs+0x431>
  422aed:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  422af4:	00 00 00 
  422af7:	49 89 d9             	mov    %rbx,%r9
  422afa:	eb 52                	jmp    422b4e <addFloat64Sigs+0x43e>
  422afc:	4c 39 d1             	cmp    %r10,%rcx
  422aff:	72 03                	jb     422b04 <addFloat64Sigs+0x3f4>
  422b01:	4c 89 d1             	mov    %r10,%rcx
  422b04:	48 89 cf             	mov    %rcx,%rdi
  422b07:	e9 4b 02 00 00       	jmpq   422d57 <addFloat64Sigs+0x647>
  422b0c:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  422b13:	00 00 00 
  422b16:	49 21 f7             	and    %rsi,%r15
  422b19:	4d 39 df             	cmp    %r11,%r15
  422b1c:	75 7e                	jne    422b9c <addFloat64Sigs+0x48c>
  422b1e:	4c 85 d6             	test   %r10,%rsi
  422b21:	74 6f                	je     422b92 <addFloat64Sigs+0x482>
  422b23:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  422b2a:	00 00 00 
  422b2d:	eb 6d                	jmp    422b9c <addFloat64Sigs+0x48c>
  422b2f:	49 b8 00 00 00 00 00 	movabs $0x0,%r8
  422b36:	00 00 00 
  422b39:	49 09 f0             	or     %rsi,%r8
  422b3c:	49 89 d9             	mov    %rbx,%r9
  422b3f:	eb 0d                	jmp    422b4e <addFloat64Sigs+0x43e>
  422b41:	49 b8 00 00 00 00 00 	movabs $0x0,%r8
  422b48:	00 00 00 
  422b4b:	49 89 d9             	mov    %rbx,%r9
  422b4e:	4d 09 f0             	or     %r14,%r8
  422b51:	4d 01 e0             	add    %r12,%r8
  422b54:	4b 8d 04 00          	lea    (%r8,%r8,1),%rax
  422b58:	48 85 c0             	test   %rax,%rax
  422b5b:	78 0c                	js     422b69 <addFloat64Sigs+0x459>
  422b5d:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  422b64:	00 00 00 
  422b67:	eb 0a                	jmp    422b73 <addFloat64Sigs+0x463>
  422b69:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  422b70:	00 00 00 
  422b73:	78 03                	js     422b78 <addFloat64Sigs+0x468>
  422b75:	49 89 c0             	mov    %rax,%r8
  422b78:	49 29 c9             	sub    %rcx,%r9
  422b7b:	48 89 d7             	mov    %rdx,%rdi
  422b7e:	4c 89 ce             	mov    %r9,%rsi
  422b81:	4c 89 c2             	mov    %r8,%rdx
  422b84:	5b                   	pop    %rbx
  422b85:	41 5c                	pop    %r12
  422b87:	41 5d                	pop    %r13
  422b89:	41 5e                	pop    %r14
  422b8b:	41 5f                	pop    %r15
  422b8d:	e9 2e 0f 00 00       	jmpq   423ac0 <roundAndPackFloat64>
  422b92:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  422b99:	00 00 00 
  422b9c:	49 ff c2             	inc    %r10
  422b9f:	48 89 d1             	mov    %rdx,%rcx
  422ba2:	48 09 c1             	or     %rax,%rcx
  422ba5:	48 83 f9 01          	cmp    $0x1,%rcx
  422ba9:	75 12                	jne    422bbd <addFloat64Sigs+0x4ad>
  422bab:	48 0f be 0d 2e 9b 20 	movsbq 0x209b2e(%rip),%rcx        # 62c6e1 <float_exception_flags>
  422bb2:	00 
  422bb3:	48 83 c9 01          	or     $0x1,%rcx
  422bb7:	88 0d 24 9b 20 00    	mov    %cl,0x209b24(%rip)        # 62c6e1 <float_exception_flags>
  422bbd:	48 89 f9             	mov    %rdi,%rcx
  422bc0:	4c 09 d1             	or     %r10,%rcx
  422bc3:	49 09 f2             	or     %rsi,%r10
  422bc6:	48 85 d2             	test   %rdx,%rdx
  422bc9:	74 29                	je     422bf4 <addFloat64Sigs+0x4e4>
  422bcb:	48 85 c0             	test   %rax,%rax
  422bce:	0f 85 1f 01 00 00    	jne    422cf3 <addFloat64Sigs+0x5e3>
  422bd4:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  422bdb:	ff ff 7f 
  422bde:	48 21 c6             	and    %rax,%rsi
  422be1:	49 21 c3             	and    %rax,%r11
  422be4:	4c 39 de             	cmp    %r11,%rsi
  422be7:	77 03                	ja     422bec <addFloat64Sigs+0x4dc>
  422be9:	49 89 ca             	mov    %rcx,%r10
  422bec:	4c 89 d7             	mov    %r10,%rdi
  422bef:	e9 63 01 00 00       	jmpq   422d57 <addFloat64Sigs+0x647>
  422bf4:	48 ba ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rdx
  422bfb:	ff ff 7f 
  422bfe:	48 21 d7             	and    %rdx,%rdi
  422c01:	49 21 d3             	and    %rdx,%r11
  422c04:	4c 39 df             	cmp    %r11,%rdi
  422c07:	76 1b                	jbe    422c24 <addFloat64Sigs+0x514>
  422c09:	48 21 d6             	and    %rdx,%rsi
  422c0c:	4c 39 de             	cmp    %r11,%rsi
  422c0f:	0f 87 ca 00 00 00    	ja     422cdf <addFloat64Sigs+0x5cf>
  422c15:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  422c1c:	00 00 00 
  422c1f:	e9 c5 00 00 00       	jmpq   422ce9 <addFloat64Sigs+0x5d9>
  422c24:	4c 89 d7             	mov    %r10,%rdi
  422c27:	e9 2b 01 00 00       	jmpq   422d57 <addFloat64Sigs+0x647>
  422c2c:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  422c33:	00 00 00 
  422c36:	49 21 f7             	and    %rsi,%r15
  422c39:	4d 39 df             	cmp    %r11,%r15
  422c3c:	75 1b                	jne    422c59 <addFloat64Sigs+0x549>
  422c3e:	4c 85 d6             	test   %r10,%rsi
  422c41:	74 0c                	je     422c4f <addFloat64Sigs+0x53f>
  422c43:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  422c4a:	00 00 00 
  422c4d:	eb 0a                	jmp    422c59 <addFloat64Sigs+0x549>
  422c4f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  422c56:	00 00 00 
  422c59:	49 ff c2             	inc    %r10
  422c5c:	48 89 d1             	mov    %rdx,%rcx
  422c5f:	48 09 c1             	or     %rax,%rcx
  422c62:	48 83 f9 01          	cmp    $0x1,%rcx
  422c66:	75 12                	jne    422c7a <addFloat64Sigs+0x56a>
  422c68:	48 0f be 0d 71 9a 20 	movsbq 0x209a71(%rip),%rcx        # 62c6e1 <float_exception_flags>
  422c6f:	00 
  422c70:	48 83 c9 01          	or     $0x1,%rcx
  422c74:	88 0d 67 9a 20 00    	mov    %cl,0x209a67(%rip)        # 62c6e1 <float_exception_flags>
  422c7a:	48 89 f9             	mov    %rdi,%rcx
  422c7d:	4c 09 d1             	or     %r10,%rcx
  422c80:	49 09 f2             	or     %rsi,%r10
  422c83:	48 85 d2             	test   %rdx,%rdx
  422c86:	74 29                	je     422cb1 <addFloat64Sigs+0x5a1>
  422c88:	48 85 c0             	test   %rax,%rax
  422c8b:	0f 85 92 00 00 00    	jne    422d23 <addFloat64Sigs+0x613>
  422c91:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  422c98:	ff ff 7f 
  422c9b:	48 21 c6             	and    %rax,%rsi
  422c9e:	49 21 c3             	and    %rax,%r11
  422ca1:	4c 39 de             	cmp    %r11,%rsi
  422ca4:	77 03                	ja     422ca9 <addFloat64Sigs+0x599>
  422ca6:	49 89 ca             	mov    %rcx,%r10
  422ca9:	4c 89 d7             	mov    %r10,%rdi
  422cac:	e9 a6 00 00 00       	jmpq   422d57 <addFloat64Sigs+0x647>
  422cb1:	48 ba ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rdx
  422cb8:	ff ff 7f 
  422cbb:	48 21 d7             	and    %rdx,%rdi
  422cbe:	49 21 d3             	and    %rdx,%r11
  422cc1:	4c 39 df             	cmp    %r11,%rdi
  422cc4:	76 14                	jbe    422cda <addFloat64Sigs+0x5ca>
  422cc6:	48 21 d6             	and    %rdx,%rsi
  422cc9:	4c 39 de             	cmp    %r11,%rsi
  422ccc:	77 41                	ja     422d0f <addFloat64Sigs+0x5ff>
  422cce:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  422cd5:	00 00 00 
  422cd8:	eb 3f                	jmp    422d19 <addFloat64Sigs+0x609>
  422cda:	4c 89 d7             	mov    %r10,%rdi
  422cdd:	eb 78                	jmp    422d57 <addFloat64Sigs+0x647>
  422cdf:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  422ce6:	00 00 00 
  422ce9:	48 09 d0             	or     %rdx,%rax
  422cec:	74 05                	je     422cf3 <addFloat64Sigs+0x5e3>
  422cee:	48 89 cf             	mov    %rcx,%rdi
  422cf1:	eb 64                	jmp    422d57 <addFloat64Sigs+0x647>
  422cf3:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
  422cf7:	4b 8d 14 12          	lea    (%r10,%r10,1),%rdx
  422cfb:	48 39 d0             	cmp    %rdx,%rax
  422cfe:	73 05                	jae    422d05 <addFloat64Sigs+0x5f5>
  422d00:	4c 89 d7             	mov    %r10,%rdi
  422d03:	eb 52                	jmp    422d57 <addFloat64Sigs+0x647>
  422d05:	48 39 c2             	cmp    %rax,%rdx
  422d08:	73 35                	jae    422d3f <addFloat64Sigs+0x62f>
  422d0a:	48 89 cf             	mov    %rcx,%rdi
  422d0d:	eb 48                	jmp    422d57 <addFloat64Sigs+0x647>
  422d0f:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  422d16:	00 00 00 
  422d19:	48 09 d0             	or     %rdx,%rax
  422d1c:	74 05                	je     422d23 <addFloat64Sigs+0x613>
  422d1e:	48 89 cf             	mov    %rcx,%rdi
  422d21:	eb 34                	jmp    422d57 <addFloat64Sigs+0x647>
  422d23:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
  422d27:	4b 8d 14 12          	lea    (%r10,%r10,1),%rdx
  422d2b:	48 39 d0             	cmp    %rdx,%rax
  422d2e:	73 05                	jae    422d35 <addFloat64Sigs+0x625>
  422d30:	4c 89 d7             	mov    %r10,%rdi
  422d33:	eb 22                	jmp    422d57 <addFloat64Sigs+0x647>
  422d35:	48 39 c2             	cmp    %rax,%rdx
  422d38:	73 12                	jae    422d4c <addFloat64Sigs+0x63c>
  422d3a:	48 89 cf             	mov    %rcx,%rdi
  422d3d:	eb 18                	jmp    422d57 <addFloat64Sigs+0x647>
  422d3f:	4c 39 d1             	cmp    %r10,%rcx
  422d42:	72 03                	jb     422d47 <addFloat64Sigs+0x637>
  422d44:	4c 89 d1             	mov    %r10,%rcx
  422d47:	48 89 cf             	mov    %rcx,%rdi
  422d4a:	eb 0b                	jmp    422d57 <addFloat64Sigs+0x647>
  422d4c:	4c 39 d1             	cmp    %r10,%rcx
  422d4f:	72 03                	jb     422d54 <addFloat64Sigs+0x644>
  422d51:	4c 89 d1             	mov    %r10,%rcx
  422d54:	48 89 cf             	mov    %rcx,%rdi
  422d57:	48 89 f8             	mov    %rdi,%rax
  422d5a:	5b                   	pop    %rbx
  422d5b:	41 5c                	pop    %r12
  422d5d:	41 5d                	pop    %r13
  422d5f:	41 5e                	pop    %r14
  422d61:	41 5f                	pop    %r15
  422d63:	c3                   	retq   
  422d64:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  422d6b:	00 00 00 00 00 

0000000000422d70 <subFloat64Sigs>:
  422d70:	41 57                	push   %r15
  422d72:	41 56                	push   %r14
  422d74:	41 55                	push   %r13
  422d76:	41 54                	push   %r12
  422d78:	53                   	push   %rbx
  422d79:	49 89 fd             	mov    %rdi,%r13
  422d7c:	49 bc 00 00 00 00 00 	movabs $0x7ff8000000000000,%r12
  422d83:	00 f8 7f 
  422d86:	49 bb 00 00 00 00 00 	movabs $0x7ff0000000000000,%r11
  422d8d:	00 f0 7f 
  422d90:	49 be 00 00 00 00 00 	movabs $0x4000000000000000,%r14
  422d97:	00 00 40 
  422d9a:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  422da1:	48 d3 ef             	shr    %cl,%rdi
  422da4:	48 81 e7 ff 07 00 00 	and    $0x7ff,%rdi
  422dab:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  422db2:	49 89 f1             	mov    %rsi,%r9
  422db5:	49 d3 e9             	shr    %cl,%r9
  422db8:	49 81 e1 ff 07 00 00 	and    $0x7ff,%r9
  422dbf:	49 89 fa             	mov    %rdi,%r10
  422dc2:	4d 29 ca             	sub    %r9,%r10
  422dc5:	48 c7 c1 0a 00 00 00 	mov    $0xa,%rcx
  422dcc:	4d 89 ef             	mov    %r13,%r15
  422dcf:	49 d3 e7             	shl    %cl,%r15
  422dd2:	49 8d 86 00 fc ff ff 	lea    -0x400(%r14),%rax
  422dd9:	49 21 c7             	and    %rax,%r15
  422ddc:	48 c7 c1 0a 00 00 00 	mov    $0xa,%rcx
  422de3:	49 89 f0             	mov    %rsi,%r8
  422de6:	49 d3 e0             	shl    %cl,%r8
  422de9:	49 21 c0             	and    %rax,%r8
  422dec:	4d 85 d2             	test   %r10,%r10
  422def:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffff,%rax
  422df6:	ff 07 00 
  422df9:	7e 56                	jle    422e51 <subFloat64Sigs+0xe1>
  422dfb:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  422e02:	00 00 00 
  422e05:	48 89 fb             	mov    %rdi,%rbx
  422e08:	48 21 cb             	and    %rcx,%rbx
  422e0b:	48 81 fb ff 07 00 00 	cmp    $0x7ff,%rbx
  422e12:	75 69                	jne    422e7d <subFloat64Sigs+0x10d>
  422e14:	4d 85 ff             	test   %r15,%r15
  422e17:	0f 84 20 01 00 00    	je     422f3d <subFloat64Sigs+0x1cd>
  422e1d:	4c 89 ea             	mov    %r13,%rdx
  422e20:	4c 21 e2             	and    %r12,%rdx
  422e23:	48 31 c9             	xor    %rcx,%rcx
  422e26:	4c 39 da             	cmp    %r11,%rdx
  422e29:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  422e30:	00 00 00 
  422e33:	0f 85 ba 01 00 00    	jne    422ff3 <subFloat64Sigs+0x283>
  422e39:	49 85 c5             	test   %rax,%r13
  422e3c:	0f 84 a7 01 00 00    	je     422fe9 <subFloat64Sigs+0x279>
  422e42:	48 bb 01 00 00 00 00 	movabs $0x1,%rbx
  422e49:	00 00 00 
  422e4c:	e9 a2 01 00 00       	jmpq   422ff3 <subFloat64Sigs+0x283>
  422e51:	0f 88 8c 00 00 00    	js     422ee3 <subFloat64Sigs+0x173>
  422e57:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  422e5e:	00 00 00 
  422e61:	48 85 cf             	test   %rcx,%rdi
  422e64:	0f 85 db 00 00 00    	jne    422f45 <subFloat64Sigs+0x1d5>
  422e6a:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  422e71:	49 c7 c1 01 00 00 00 	mov    $0x1,%r9
  422e78:	e9 11 01 00 00       	jmpq   422f8e <subFloat64Sigs+0x21e>
  422e7d:	49 21 c9             	and    %rcx,%r9
  422e80:	75 0c                	jne    422e8e <subFloat64Sigs+0x11e>
  422e82:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  422e89:	00 00 00 
  422e8c:	eb 0a                	jmp    422e98 <subFloat64Sigs+0x128>
  422e8e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  422e95:	00 00 00 
  422e98:	4d 85 c9             	test   %r9,%r9
  422e9b:	74 03                	je     422ea0 <subFloat64Sigs+0x130>
  422e9d:	4d 09 f0             	or     %r14,%r8
  422ea0:	49 29 c2             	sub    %rax,%r10
  422ea3:	49 85 ca             	test   %rcx,%r10
  422ea6:	0f 84 79 01 00 00    	je     423025 <subFloat64Sigs+0x2b5>
  422eac:	49 83 fa 3f          	cmp    $0x3f,%r10
  422eb0:	0f 8f 0a 01 00 00    	jg     422fc0 <subFloat64Sigs+0x250>
  422eb6:	4c 21 d1             	and    %r10,%rcx
  422eb9:	4c 89 c0             	mov    %r8,%rax
  422ebc:	48 d3 e8             	shr    %cl,%rax
  422ebf:	49 f7 da             	neg    %r10
  422ec2:	4c 89 d1             	mov    %r10,%rcx
  422ec5:	49 d3 e0             	shl    %cl,%r8
  422ec8:	4d 85 c0             	test   %r8,%r8
  422ecb:	0f 84 3b 01 00 00    	je     42300c <subFloat64Sigs+0x29c>
  422ed1:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  422ed8:	00 00 00 
  422edb:	49 09 c0             	or     %rax,%r8
  422ede:	e9 42 01 00 00       	jmpq   423025 <subFloat64Sigs+0x2b5>
  422ee3:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  422eea:	00 00 00 
  422eed:	4c 89 c9             	mov    %r9,%rcx
  422ef0:	48 21 d9             	and    %rbx,%rcx
  422ef3:	48 81 f9 ff 07 00 00 	cmp    $0x7ff,%rcx
  422efa:	0f 85 d1 00 00 00    	jne    422fd1 <subFloat64Sigs+0x261>
  422f00:	4d 85 c0             	test   %r8,%r8
  422f03:	0f 84 15 02 00 00    	je     42311e <subFloat64Sigs+0x3ae>
  422f09:	4c 89 ea             	mov    %r13,%rdx
  422f0c:	4c 21 e2             	and    %r12,%rdx
  422f0f:	48 31 c9             	xor    %rcx,%rcx
  422f12:	4c 39 da             	cmp    %r11,%rdx
  422f15:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  422f1c:	00 00 00 
  422f1f:	0f 85 ab 02 00 00    	jne    4231d0 <subFloat64Sigs+0x460>
  422f25:	49 85 c5             	test   %rax,%r13
  422f28:	0f 84 98 02 00 00    	je     4231c6 <subFloat64Sigs+0x456>
  422f2e:	48 bb 01 00 00 00 00 	movabs $0x1,%rbx
  422f35:	00 00 00 
  422f38:	e9 93 02 00 00       	jmpq   4231d0 <subFloat64Sigs+0x460>
  422f3d:	4c 89 e8             	mov    %r13,%rax
  422f40:	e9 6a 05 00 00       	jmpq   4234af <subFloat64Sigs+0x73f>
  422f45:	48 21 f9             	and    %rdi,%rcx
  422f48:	48 81 f9 ff 07 00 00 	cmp    $0x7ff,%rcx
  422f4f:	75 3d                	jne    422f8e <subFloat64Sigs+0x21e>
  422f51:	4d 09 f8             	or     %r15,%r8
  422f54:	0f 84 11 02 00 00    	je     42316b <subFloat64Sigs+0x3fb>
  422f5a:	4c 89 ea             	mov    %r13,%rdx
  422f5d:	4c 21 e2             	and    %r12,%rdx
  422f60:	48 31 c9             	xor    %rcx,%rcx
  422f63:	4c 39 da             	cmp    %r11,%rdx
  422f66:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  422f6d:	00 00 00 
  422f70:	0f 85 22 04 00 00    	jne    423398 <subFloat64Sigs+0x628>
  422f76:	49 85 c5             	test   %rax,%r13
  422f79:	0f 84 0f 04 00 00    	je     42338e <subFloat64Sigs+0x61e>
  422f7f:	48 bb 01 00 00 00 00 	movabs $0x1,%rbx
  422f86:	00 00 00 
  422f89:	e9 0a 04 00 00       	jmpq   423398 <subFloat64Sigs+0x628>
  422f8e:	4d 39 f8             	cmp    %r15,%r8
  422f91:	0f 82 91 00 00 00    	jb     423028 <subFloat64Sigs+0x2b8>
  422f97:	4d 39 c7             	cmp    %r8,%r15
  422f9a:	0f 82 70 02 00 00    	jb     423210 <subFloat64Sigs+0x4a0>
  422fa0:	0f b6 05 39 97 20 00 	movzbl 0x209739(%rip),%eax        # 62c6e0 <float_rounding_mode>
  422fa7:	48 83 f8 01          	cmp    $0x1,%rax
  422fab:	0f 85 db 01 00 00    	jne    42318c <subFloat64Sigs+0x41c>
  422fb1:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  422fb8:	00 00 00 
  422fbb:	e9 d6 01 00 00       	jmpq   423196 <subFloat64Sigs+0x426>
  422fc0:	4d 85 c0             	test   %r8,%r8
  422fc3:	74 56                	je     42301b <subFloat64Sigs+0x2ab>
  422fc5:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  422fcc:	00 00 00 
  422fcf:	eb 54                	jmp    423025 <subFloat64Sigs+0x2b5>
  422fd1:	48 21 df             	and    %rbx,%rdi
  422fd4:	0f 85 ec 00 00 00    	jne    4230c6 <subFloat64Sigs+0x356>
  422fda:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  422fe1:	00 00 00 
  422fe4:	e9 e7 00 00 00       	jmpq   4230d0 <subFloat64Sigs+0x360>
  422fe9:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  422ff0:	00 00 00 
  422ff3:	49 21 f4             	and    %rsi,%r12
  422ff6:	4d 39 dc             	cmp    %r11,%r12
  422ff9:	75 45                	jne    423040 <subFloat64Sigs+0x2d0>
  422ffb:	48 85 c6             	test   %rax,%rsi
  422ffe:	74 36                	je     423036 <subFloat64Sigs+0x2c6>
  423000:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  423007:	00 00 00 
  42300a:	eb 34                	jmp    423040 <subFloat64Sigs+0x2d0>
  42300c:	49 b8 00 00 00 00 00 	movabs $0x0,%r8
  423013:	00 00 00 
  423016:	49 09 c0             	or     %rax,%r8
  423019:	eb 0a                	jmp    423025 <subFloat64Sigs+0x2b5>
  42301b:	49 b8 00 00 00 00 00 	movabs $0x0,%r8
  423022:	00 00 00 
  423025:	4d 09 f7             	or     %r14,%r15
  423028:	4d 29 c7             	sub    %r8,%r15
  42302b:	49 89 f9             	mov    %rdi,%r9
  42302e:	4d 89 f8             	mov    %r15,%r8
  423031:	e9 e1 01 00 00       	jmpq   423217 <subFloat64Sigs+0x4a7>
  423036:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  42303d:	00 00 00 
  423040:	48 ff c0             	inc    %rax
  423043:	48 89 da             	mov    %rbx,%rdx
  423046:	48 09 ca             	or     %rcx,%rdx
  423049:	48 83 fa 01          	cmp    $0x1,%rdx
  42304d:	75 12                	jne    423061 <subFloat64Sigs+0x2f1>
  42304f:	48 0f be 15 8a 96 20 	movsbq 0x20968a(%rip),%rdx        # 62c6e1 <float_exception_flags>
  423056:	00 
  423057:	48 83 ca 01          	or     $0x1,%rdx
  42305b:	88 15 80 96 20 00    	mov    %dl,0x209680(%rip)        # 62c6e1 <float_exception_flags>
  423061:	4c 89 ea             	mov    %r13,%rdx
  423064:	48 09 c2             	or     %rax,%rdx
  423067:	48 09 f0             	or     %rsi,%rax
  42306a:	48 85 db             	test   %rbx,%rbx
  42306d:	74 2a                	je     423099 <subFloat64Sigs+0x329>
  42306f:	48 85 c9             	test   %rcx,%rcx
  423072:	0f 85 d5 00 00 00    	jne    42314d <subFloat64Sigs+0x3dd>
  423078:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
  42307f:	ff ff 7f 
  423082:	48 21 ce             	and    %rcx,%rsi
  423085:	49 21 cb             	and    %rcx,%r11
  423088:	4c 39 de             	cmp    %r11,%rsi
  42308b:	0f 87 1e 04 00 00    	ja     4234af <subFloat64Sigs+0x73f>
  423091:	48 89 d0             	mov    %rdx,%rax
  423094:	e9 16 04 00 00       	jmpq   4234af <subFloat64Sigs+0x73f>
  423099:	48 bb ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rbx
  4230a0:	ff ff 7f 
  4230a3:	49 21 dd             	and    %rbx,%r13
  4230a6:	49 21 db             	and    %rbx,%r11
  4230a9:	4d 39 dd             	cmp    %r11,%r13
  4230ac:	0f 86 fd 03 00 00    	jbe    4234af <subFloat64Sigs+0x73f>
  4230b2:	48 21 de             	and    %rbx,%rsi
  4230b5:	4c 39 de             	cmp    %r11,%rsi
  4230b8:	77 7c                	ja     423136 <subFloat64Sigs+0x3c6>
  4230ba:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  4230c1:	00 00 00 
  4230c4:	eb 7a                	jmp    423140 <subFloat64Sigs+0x3d0>
  4230c6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4230cd:	00 00 00 
  4230d0:	48 85 ff             	test   %rdi,%rdi
  4230d3:	74 03                	je     4230d8 <subFloat64Sigs+0x368>
  4230d5:	4d 09 f7             	or     %r14,%r15
  4230d8:	49 01 c2             	add    %rax,%r10
  4230db:	49 85 da             	test   %rbx,%r10
  4230de:	0f 84 29 01 00 00    	je     42320d <subFloat64Sigs+0x49d>
  4230e4:	4c 89 d1             	mov    %r10,%rcx
  4230e7:	48 f7 d9             	neg    %rcx
  4230ea:	48 83 f9 3f          	cmp    $0x3f,%rcx
  4230ee:	0f 8f b1 00 00 00    	jg     4231a5 <subFloat64Sigs+0x435>
  4230f4:	48 21 d9             	and    %rbx,%rcx
  4230f7:	4c 89 f8             	mov    %r15,%rax
  4230fa:	48 d3 e8             	shr    %cl,%rax
  4230fd:	4c 89 d1             	mov    %r10,%rcx
  423100:	49 d3 e7             	shl    %cl,%r15
  423103:	4d 85 ff             	test   %r15,%r15
  423106:	0f 84 e8 00 00 00    	je     4231f4 <subFloat64Sigs+0x484>
  42310c:	49 bf 01 00 00 00 00 	movabs $0x1,%r15
  423113:	00 00 00 
  423116:	49 09 c7             	or     %rax,%r15
  423119:	e9 ef 00 00 00       	jmpq   42320d <subFloat64Sigs+0x49d>
  42311e:	48 f7 d2             	not    %rdx
  423121:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  423128:	48 d3 e2             	shl    %cl,%rdx
  42312b:	4c 09 da             	or     %r11,%rdx
  42312e:	48 89 d0             	mov    %rdx,%rax
  423131:	e9 79 03 00 00       	jmpq   4234af <subFloat64Sigs+0x73f>
  423136:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  42313d:	00 00 00 
  423140:	48 09 f1             	or     %rsi,%rcx
  423143:	74 08                	je     42314d <subFloat64Sigs+0x3dd>
  423145:	48 89 d0             	mov    %rdx,%rax
  423148:	e9 62 03 00 00       	jmpq   4234af <subFloat64Sigs+0x73f>
  42314d:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
  423151:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  423155:	48 39 f1             	cmp    %rsi,%rcx
  423158:	0f 82 51 03 00 00    	jb     4234af <subFloat64Sigs+0x73f>
  42315e:	48 39 ce             	cmp    %rcx,%rsi
  423161:	73 53                	jae    4231b6 <subFloat64Sigs+0x446>
  423163:	48 89 d0             	mov    %rdx,%rax
  423166:	e9 44 03 00 00       	jmpq   4234af <subFloat64Sigs+0x73f>
  42316b:	48 0f be 05 6e 95 20 	movsbq 0x20956e(%rip),%rax        # 62c6e1 <float_exception_flags>
  423172:	00 
  423173:	48 83 c8 01          	or     $0x1,%rax
  423177:	88 05 64 95 20 00    	mov    %al,0x209564(%rip)        # 62c6e1 <float_exception_flags>
  42317d:	48 b8 00 00 00 00 00 	movabs $0xfff8000000000000,%rax
  423184:	00 f8 ff 
  423187:	e9 23 03 00 00       	jmpq   4234af <subFloat64Sigs+0x73f>
  42318c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  423193:	00 00 00 
  423196:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  42319d:	48 d3 e0             	shl    %cl,%rax
  4231a0:	e9 0a 03 00 00       	jmpq   4234af <subFloat64Sigs+0x73f>
  4231a5:	4d 85 ff             	test   %r15,%r15
  4231a8:	74 59                	je     423203 <subFloat64Sigs+0x493>
  4231aa:	49 bf 01 00 00 00 00 	movabs $0x1,%r15
  4231b1:	00 00 00 
  4231b4:	eb 57                	jmp    42320d <subFloat64Sigs+0x49d>
  4231b6:	48 39 c2             	cmp    %rax,%rdx
  4231b9:	72 03                	jb     4231be <subFloat64Sigs+0x44e>
  4231bb:	48 89 c2             	mov    %rax,%rdx
  4231be:	48 89 d0             	mov    %rdx,%rax
  4231c1:	e9 e9 02 00 00       	jmpq   4234af <subFloat64Sigs+0x73f>
  4231c6:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  4231cd:	00 00 00 
  4231d0:	49 21 f4             	and    %rsi,%r12
  4231d3:	4d 39 dc             	cmp    %r11,%r12
  4231d6:	0f 85 25 01 00 00    	jne    423301 <subFloat64Sigs+0x591>
  4231dc:	48 85 c6             	test   %rax,%rsi
  4231df:	0f 84 12 01 00 00    	je     4232f7 <subFloat64Sigs+0x587>
  4231e5:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  4231ec:	00 00 00 
  4231ef:	e9 0d 01 00 00       	jmpq   423301 <subFloat64Sigs+0x591>
  4231f4:	49 bf 00 00 00 00 00 	movabs $0x0,%r15
  4231fb:	00 00 00 
  4231fe:	49 09 c7             	or     %rax,%r15
  423201:	eb 0a                	jmp    42320d <subFloat64Sigs+0x49d>
  423203:	49 bf 00 00 00 00 00 	movabs $0x0,%r15
  42320a:	00 00 00 
  42320d:	4d 09 f0             	or     %r14,%r8
  423210:	4d 29 f8             	sub    %r15,%r8
  423213:	48 83 f2 01          	xor    $0x1,%rdx
  423217:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  42321e:	4c 89 c0             	mov    %r8,%rax
  423221:	48 d3 e8             	shr    %cl,%rax
  423224:	48 85 c0             	test   %rax,%rax
  423227:	4c 89 c6             	mov    %r8,%rsi
  42322a:	74 03                	je     42322f <subFloat64Sigs+0x4bf>
  42322c:	48 89 c6             	mov    %rax,%rsi
  42322f:	48 bf ff ff ff ff 00 	movabs $0xffffffff,%rdi
  423236:	00 00 00 
  423239:	48 89 f3             	mov    %rsi,%rbx
  42323c:	48 21 fb             	and    %rdi,%rbx
  42323f:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  423246:	4d 19 d2             	sbb    %r10,%r10
  423249:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  423250:	48 89 f0             	mov    %rsi,%rax
  423253:	48 d3 e0             	shl    %cl,%rax
  423256:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  42325d:	72 03                	jb     423262 <subFloat64Sigs+0x4f2>
  42325f:	48 89 f0             	mov    %rsi,%rax
  423262:	49 ff c9             	dec    %r9
  423265:	48 21 c7             	and    %rax,%rdi
  423268:	49 83 e2 10          	and    $0x10,%r10
  42326c:	48 81 ff ff ff ff 00 	cmp    $0xffffff,%rdi
  423273:	77 0e                	ja     423283 <subFloat64Sigs+0x513>
  423275:	49 83 ca 08          	or     $0x8,%r10
  423279:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  423280:	48 d3 e0             	shl    %cl,%rax
  423283:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  42328a:	4c 89 c6             	mov    %r8,%rsi
  42328d:	48 d3 ee             	shr    %cl,%rsi
  423290:	48 bf 00 00 00 ff 00 	movabs $0xff000000,%rdi
  423297:	00 00 00 
  42329a:	48 21 c7             	and    %rax,%rdi
  42329d:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  4232a4:	48 d3 ef             	shr    %cl,%rdi
  4232a7:	48 0f be 8f f0 8e 42 	movsbq 0x428ef0(%rdi),%rcx
  4232ae:	00 
  4232af:	48 83 fe 01          	cmp    $0x1,%rsi
  4232b3:	48 19 c0             	sbb    %rax,%rax
  4232b6:	48 f7 d0             	not    %rax
  4232b9:	48 83 c8 1f          	or     $0x1f,%rax
  4232bd:	4c 01 d0             	add    %r10,%rax
  4232c0:	48 01 c8             	add    %rcx,%rax
  4232c3:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  4232ca:	48 d3 e0             	shl    %cl,%rax
  4232cd:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  4232d4:	48 d3 f8             	sar    %cl,%rax
  4232d7:	49 29 c1             	sub    %rax,%r9
  4232da:	48 89 c1             	mov    %rax,%rcx
  4232dd:	49 d3 e0             	shl    %cl,%r8
  4232e0:	48 89 d7             	mov    %rdx,%rdi
  4232e3:	4c 89 ce             	mov    %r9,%rsi
  4232e6:	4c 89 c2             	mov    %r8,%rdx
  4232e9:	5b                   	pop    %rbx
  4232ea:	41 5c                	pop    %r12
  4232ec:	41 5d                	pop    %r13
  4232ee:	41 5e                	pop    %r14
  4232f0:	41 5f                	pop    %r15
  4232f2:	e9 c9 07 00 00       	jmpq   423ac0 <roundAndPackFloat64>
  4232f7:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  4232fe:	00 00 00 
  423301:	48 ff c0             	inc    %rax
  423304:	48 89 da             	mov    %rbx,%rdx
  423307:	48 09 ca             	or     %rcx,%rdx
  42330a:	48 83 fa 01          	cmp    $0x1,%rdx
  42330e:	75 12                	jne    423322 <subFloat64Sigs+0x5b2>
  423310:	48 0f be 15 c9 93 20 	movsbq 0x2093c9(%rip),%rdx        # 62c6e1 <float_exception_flags>
  423317:	00 
  423318:	48 83 ca 01          	or     $0x1,%rdx
  42331c:	88 15 bf 93 20 00    	mov    %dl,0x2093bf(%rip)        # 62c6e1 <float_exception_flags>
  423322:	4c 89 ea             	mov    %r13,%rdx
  423325:	48 09 c2             	or     %rax,%rdx
  423328:	48 09 f0             	or     %rsi,%rax
  42332b:	48 85 db             	test   %rbx,%rbx
  42332e:	74 2a                	je     42335a <subFloat64Sigs+0x5ea>
  423330:	48 85 c9             	test   %rcx,%rcx
  423333:	0f 85 1c 01 00 00    	jne    423455 <subFloat64Sigs+0x6e5>
  423339:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
  423340:	ff ff 7f 
  423343:	48 21 ce             	and    %rcx,%rsi
  423346:	49 21 cb             	and    %rcx,%r11
  423349:	4c 39 de             	cmp    %r11,%rsi
  42334c:	0f 87 5d 01 00 00    	ja     4234af <subFloat64Sigs+0x73f>
  423352:	48 89 d0             	mov    %rdx,%rax
  423355:	e9 55 01 00 00       	jmpq   4234af <subFloat64Sigs+0x73f>
  42335a:	48 bb ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rbx
  423361:	ff ff 7f 
  423364:	49 21 dd             	and    %rbx,%r13
  423367:	49 21 db             	and    %rbx,%r11
  42336a:	4d 39 dd             	cmp    %r11,%r13
  42336d:	0f 86 3c 01 00 00    	jbe    4234af <subFloat64Sigs+0x73f>
  423373:	48 21 de             	and    %rbx,%rsi
  423376:	4c 39 de             	cmp    %r11,%rsi
  423379:	0f 87 c2 00 00 00    	ja     423441 <subFloat64Sigs+0x6d1>
  42337f:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  423386:	00 00 00 
  423389:	e9 bd 00 00 00       	jmpq   42344b <subFloat64Sigs+0x6db>
  42338e:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  423395:	00 00 00 
  423398:	49 21 f4             	and    %rsi,%r12
  42339b:	4d 39 dc             	cmp    %r11,%r12
  42339e:	75 1b                	jne    4233bb <subFloat64Sigs+0x64b>
  4233a0:	48 85 c6             	test   %rax,%rsi
  4233a3:	74 0c                	je     4233b1 <subFloat64Sigs+0x641>
  4233a5:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  4233ac:	00 00 00 
  4233af:	eb 0a                	jmp    4233bb <subFloat64Sigs+0x64b>
  4233b1:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  4233b8:	00 00 00 
  4233bb:	48 ff c0             	inc    %rax
  4233be:	48 89 da             	mov    %rbx,%rdx
  4233c1:	48 09 ca             	or     %rcx,%rdx
  4233c4:	48 83 fa 01          	cmp    $0x1,%rdx
  4233c8:	75 12                	jne    4233dc <subFloat64Sigs+0x66c>
  4233ca:	48 0f be 15 0f 93 20 	movsbq 0x20930f(%rip),%rdx        # 62c6e1 <float_exception_flags>
  4233d1:	00 
  4233d2:	48 83 ca 01          	or     $0x1,%rdx
  4233d6:	88 15 05 93 20 00    	mov    %dl,0x209305(%rip)        # 62c6e1 <float_exception_flags>
  4233dc:	4c 89 ea             	mov    %r13,%rdx
  4233df:	48 09 c2             	or     %rax,%rdx
  4233e2:	48 09 f0             	or     %rsi,%rax
  4233e5:	48 85 db             	test   %rbx,%rbx
  4233e8:	74 2a                	je     423414 <subFloat64Sigs+0x6a4>
  4233ea:	48 85 c9             	test   %rcx,%rcx
  4233ed:	0f 85 8d 00 00 00    	jne    423480 <subFloat64Sigs+0x710>
  4233f3:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
  4233fa:	ff ff 7f 
  4233fd:	48 21 ce             	and    %rcx,%rsi
  423400:	49 21 cb             	and    %rcx,%r11
  423403:	4c 39 de             	cmp    %r11,%rsi
  423406:	0f 87 a3 00 00 00    	ja     4234af <subFloat64Sigs+0x73f>
  42340c:	48 89 d0             	mov    %rdx,%rax
  42340f:	e9 9b 00 00 00       	jmpq   4234af <subFloat64Sigs+0x73f>
  423414:	48 bb ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rbx
  42341b:	ff ff 7f 
  42341e:	49 21 dd             	and    %rbx,%r13
  423421:	49 21 db             	and    %rbx,%r11
  423424:	4d 39 dd             	cmp    %r11,%r13
  423427:	0f 86 82 00 00 00    	jbe    4234af <subFloat64Sigs+0x73f>
  42342d:	48 21 de             	and    %rbx,%rsi
  423430:	4c 39 de             	cmp    %r11,%rsi
  423433:	77 37                	ja     42346c <subFloat64Sigs+0x6fc>
  423435:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  42343c:	00 00 00 
  42343f:	eb 35                	jmp    423476 <subFloat64Sigs+0x706>
  423441:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  423448:	00 00 00 
  42344b:	48 09 f1             	or     %rsi,%rcx
  42344e:	74 05                	je     423455 <subFloat64Sigs+0x6e5>
  423450:	48 89 d0             	mov    %rdx,%rax
  423453:	eb 5a                	jmp    4234af <subFloat64Sigs+0x73f>
  423455:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
  423459:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  42345d:	48 39 f1             	cmp    %rsi,%rcx
  423460:	72 4d                	jb     4234af <subFloat64Sigs+0x73f>
  423462:	48 39 ce             	cmp    %rcx,%rsi
  423465:	73 30                	jae    423497 <subFloat64Sigs+0x727>
  423467:	48 89 d0             	mov    %rdx,%rax
  42346a:	eb 43                	jmp    4234af <subFloat64Sigs+0x73f>
  42346c:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  423473:	00 00 00 
  423476:	48 09 f1             	or     %rsi,%rcx
  423479:	74 05                	je     423480 <subFloat64Sigs+0x710>
  42347b:	48 89 d0             	mov    %rdx,%rax
  42347e:	eb 2f                	jmp    4234af <subFloat64Sigs+0x73f>
  423480:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
  423484:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  423488:	48 39 f1             	cmp    %rsi,%rcx
  42348b:	72 22                	jb     4234af <subFloat64Sigs+0x73f>
  42348d:	48 39 ce             	cmp    %rcx,%rsi
  423490:	73 12                	jae    4234a4 <subFloat64Sigs+0x734>
  423492:	48 89 d0             	mov    %rdx,%rax
  423495:	eb 18                	jmp    4234af <subFloat64Sigs+0x73f>
  423497:	48 39 c2             	cmp    %rax,%rdx
  42349a:	72 03                	jb     42349f <subFloat64Sigs+0x72f>
  42349c:	48 89 c2             	mov    %rax,%rdx
  42349f:	48 89 d0             	mov    %rdx,%rax
  4234a2:	eb 0b                	jmp    4234af <subFloat64Sigs+0x73f>
  4234a4:	48 39 c2             	cmp    %rax,%rdx
  4234a7:	72 03                	jb     4234ac <subFloat64Sigs+0x73c>
  4234a9:	48 89 c2             	mov    %rax,%rdx
  4234ac:	48 89 d0             	mov    %rdx,%rax
  4234af:	5b                   	pop    %rbx
  4234b0:	41 5c                	pop    %r12
  4234b2:	41 5d                	pop    %r13
  4234b4:	41 5e                	pop    %r14
  4234b6:	41 5f                	pop    %r15
  4234b8:	c3                   	retq   
  4234b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004234c0 <float64_sub>:
  4234c0:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4234c7:	48 89 fa             	mov    %rdi,%rdx
  4234ca:	48 d3 ea             	shr    %cl,%rdx
  4234cd:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4234d4:	48 89 f0             	mov    %rsi,%rax
  4234d7:	48 d3 e8             	shr    %cl,%rax
  4234da:	48 39 c2             	cmp    %rax,%rdx
  4234dd:	75 05                	jne    4234e4 <float64_sub+0x24>
  4234df:	e9 8c f8 ff ff       	jmpq   422d70 <subFloat64Sigs>
  4234e4:	e9 27 f2 ff ff       	jmpq   422710 <addFloat64Sigs>
  4234e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004234f0 <float64_mul>:
  4234f0:	41 57                	push   %r15
  4234f2:	41 56                	push   %r14
  4234f4:	53                   	push   %rbx
  4234f5:	48 89 fa             	mov    %rdi,%rdx
  4234f8:	49 bf 00 00 00 00 00 	movabs $0x7ff8000000000000,%r15
  4234ff:	00 f8 7f 
  423502:	49 ba 00 00 00 00 00 	movabs $0x7ff0000000000000,%r10
  423509:	00 f0 7f 
  42350c:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffff,%rax
  423513:	ff 07 00 
  423516:	49 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%r8
  42351d:	ff 0f 00 
  423520:	49 89 d1             	mov    %rdx,%r9
  423523:	4d 21 c1             	and    %r8,%r9
  423526:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  42352d:	48 89 d3             	mov    %rdx,%rbx
  423530:	48 d3 eb             	shr    %cl,%rbx
  423533:	48 81 e3 ff 07 00 00 	and    $0x7ff,%rbx
  42353a:	49 21 f0             	and    %rsi,%r8
  42353d:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  423544:	49 89 f3             	mov    %rsi,%r11
  423547:	49 d3 eb             	shr    %cl,%r11
  42354a:	49 81 e3 ff 07 00 00 	and    $0x7ff,%r11
  423551:	48 89 f7             	mov    %rsi,%rdi
  423554:	48 31 d7             	xor    %rdx,%rdi
  423557:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  42355e:	48 d3 ef             	shr    %cl,%rdi
  423561:	48 81 fb ff 07 00 00 	cmp    $0x7ff,%rbx
  423568:	75 5c                	jne    4235c6 <float64_mul+0xd6>
  42356a:	4d 85 c9             	test   %r9,%r9
  42356d:	75 23                	jne    423592 <float64_mul+0xa2>
  42356f:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  423576:	00 00 00 
  423579:	49 21 cb             	and    %rcx,%r11
  42357c:	49 81 fb ff 07 00 00 	cmp    $0x7ff,%r11
  423583:	0f 85 8c 03 00 00    	jne    423915 <float64_mul+0x425>
  423589:	4d 85 c0             	test   %r8,%r8
  42358c:	0f 84 83 03 00 00    	je     423915 <float64_mul+0x425>
  423592:	48 89 d7             	mov    %rdx,%rdi
  423595:	4c 21 ff             	and    %r15,%rdi
  423598:	48 31 c9             	xor    %rcx,%rcx
  42359b:	4c 39 d7             	cmp    %r10,%rdi
  42359e:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  4235a5:	00 00 00 
  4235a8:	0f 85 d2 02 00 00    	jne    423880 <float64_mul+0x390>
  4235ae:	48 85 c2             	test   %rax,%rdx
  4235b1:	0f 84 bf 02 00 00    	je     423876 <float64_mul+0x386>
  4235b7:	48 bb 01 00 00 00 00 	movabs $0x1,%rbx
  4235be:	00 00 00 
  4235c1:	e9 ba 02 00 00       	jmpq   423880 <float64_mul+0x390>
  4235c6:	49 be ff ff ff ff 00 	movabs $0xffffffff,%r14
  4235cd:	00 00 00 
  4235d0:	4c 89 d9             	mov    %r11,%rcx
  4235d3:	4c 21 f1             	and    %r14,%rcx
  4235d6:	48 81 f9 ff 07 00 00 	cmp    $0x7ff,%rcx
  4235dd:	75 3d                	jne    42361c <float64_mul+0x12c>
  4235df:	4d 85 c0             	test   %r8,%r8
  4235e2:	0f 84 34 03 00 00    	je     42391c <float64_mul+0x42c>
  4235e8:	48 89 d7             	mov    %rdx,%rdi
  4235eb:	4c 21 ff             	and    %r15,%rdi
  4235ee:	48 31 c9             	xor    %rcx,%rcx
  4235f1:	4c 39 d7             	cmp    %r10,%rdi
  4235f4:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  4235fb:	00 00 00 
  4235fe:	0f 85 ed 03 00 00    	jne    4239f1 <float64_mul+0x501>
  423604:	48 85 c2             	test   %rax,%rdx
  423607:	0f 84 da 03 00 00    	je     4239e7 <float64_mul+0x4f7>
  42360d:	48 bb 01 00 00 00 00 	movabs $0x1,%rbx
  423614:	00 00 00 
  423617:	e9 d5 03 00 00       	jmpq   4239f1 <float64_mul+0x501>
  42361c:	49 ba 00 00 00 00 01 	movabs $0x100000000,%r10
  423623:	00 00 00 
  423626:	4c 85 f3             	test   %r14,%rbx
  423629:	0f 85 c4 00 00 00    	jne    4236f3 <float64_mul+0x203>
  42362f:	4d 85 c9             	test   %r9,%r9
  423632:	0f 84 62 03 00 00    	je     42399a <float64_mul+0x4aa>
  423638:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  42363f:	4c 89 c8             	mov    %r9,%rax
  423642:	48 d3 e8             	shr    %cl,%rax
  423645:	4d 39 d1             	cmp    %r10,%r9
  423648:	72 03                	jb     42364d <float64_mul+0x15d>
  42364a:	48 89 c2             	mov    %rax,%rdx
  42364d:	48 89 d3             	mov    %rdx,%rbx
  423650:	4c 21 f3             	and    %r14,%rbx
  423653:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  42365a:	48 19 c0             	sbb    %rax,%rax
  42365d:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  423664:	49 89 d7             	mov    %rdx,%r15
  423667:	49 d3 e7             	shl    %cl,%r15
  42366a:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  423671:	72 03                	jb     423676 <float64_mul+0x186>
  423673:	49 89 d7             	mov    %rdx,%r15
  423676:	4c 89 f9             	mov    %r15,%rcx
  423679:	4c 21 f1             	and    %r14,%rcx
  42367c:	48 83 e0 10          	and    $0x10,%rax
  423680:	48 81 f9 ff ff ff 00 	cmp    $0xffffff,%rcx
  423687:	77 0e                	ja     423697 <float64_mul+0x1a7>
  423689:	48 83 c8 08          	or     $0x8,%rax
  42368d:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  423694:	49 d3 e7             	shl    %cl,%r15
  423697:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
  42369e:	00 00 00 
  4236a1:	4c 21 fa             	and    %r15,%rdx
  4236a4:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  4236ab:	48 d3 ea             	shr    %cl,%rdx
  4236ae:	48 0f be 8a f0 8e 42 	movsbq 0x428ef0(%rdx),%rcx
  4236b5:	00 
  4236b6:	4d 39 d1             	cmp    %r10,%r9
  4236b9:	48 c7 c2 15 00 00 00 	mov    $0x15,%rdx
  4236c0:	72 07                	jb     4236c9 <float64_mul+0x1d9>
  4236c2:	48 c7 c2 f5 ff ff ff 	mov    $0xfffffffffffffff5,%rdx
  4236c9:	48 01 d0             	add    %rdx,%rax
  4236cc:	48 01 c8             	add    %rcx,%rax
  4236cf:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  4236d6:	48 d3 e0             	shl    %cl,%rax
  4236d9:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  4236e0:	48 d3 f8             	sar    %cl,%rax
  4236e3:	48 89 c1             	mov    %rax,%rcx
  4236e6:	49 d3 e1             	shl    %cl,%r9
  4236e9:	48 c7 c3 01 00 00 00 	mov    $0x1,%rbx
  4236f0:	48 29 c3             	sub    %rax,%rbx
  4236f3:	4d 85 f3             	test   %r14,%r11
  4236f6:	0f 85 c1 00 00 00    	jne    4237bd <float64_mul+0x2cd>
  4236fc:	4d 85 c0             	test   %r8,%r8
  4236ff:	0f 84 95 02 00 00    	je     42399a <float64_mul+0x4aa>
  423705:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  42370c:	4c 89 c0             	mov    %r8,%rax
  42370f:	48 d3 e8             	shr    %cl,%rax
  423712:	4d 39 d0             	cmp    %r10,%r8
  423715:	72 03                	jb     42371a <float64_mul+0x22a>
  423717:	48 89 c6             	mov    %rax,%rsi
  42371a:	48 89 f2             	mov    %rsi,%rdx
  42371d:	4c 21 f2             	and    %r14,%rdx
  423720:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
  423727:	48 19 c0             	sbb    %rax,%rax
  42372a:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  423731:	49 89 f3             	mov    %rsi,%r11
  423734:	49 d3 e3             	shl    %cl,%r11
  423737:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
  42373e:	72 03                	jb     423743 <float64_mul+0x253>
  423740:	49 89 f3             	mov    %rsi,%r11
  423743:	4d 21 de             	and    %r11,%r14
  423746:	48 83 e0 10          	and    $0x10,%rax
  42374a:	49 81 fe ff ff ff 00 	cmp    $0xffffff,%r14
  423751:	77 0e                	ja     423761 <float64_mul+0x271>
  423753:	48 83 c8 08          	or     $0x8,%rax
  423757:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  42375e:	49 d3 e3             	shl    %cl,%r11
  423761:	48 ba 00 00 00 ff 00 	movabs $0xff000000,%rdx
  423768:	00 00 00 
  42376b:	4c 21 da             	and    %r11,%rdx
  42376e:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  423775:	48 d3 ea             	shr    %cl,%rdx
  423778:	48 0f be 8a f0 8e 42 	movsbq 0x428ef0(%rdx),%rcx
  42377f:	00 
  423780:	4d 39 d0             	cmp    %r10,%r8
  423783:	48 c7 c2 15 00 00 00 	mov    $0x15,%rdx
  42378a:	72 07                	jb     423793 <float64_mul+0x2a3>
  42378c:	48 c7 c2 f5 ff ff ff 	mov    $0xfffffffffffffff5,%rdx
  423793:	48 01 d0             	add    %rdx,%rax
  423796:	48 01 c8             	add    %rcx,%rax
  423799:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  4237a0:	48 d3 e0             	shl    %cl,%rax
  4237a3:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  4237aa:	48 d3 f8             	sar    %cl,%rax
  4237ad:	48 89 c1             	mov    %rax,%rcx
  4237b0:	49 d3 e0             	shl    %cl,%r8
  4237b3:	49 c7 c3 01 00 00 00 	mov    $0x1,%r11
  4237ba:	49 29 c3             	sub    %rax,%r11
  4237bd:	49 01 db             	add    %rbx,%r11
  4237c0:	48 c7 c1 16 00 00 00 	mov    $0x16,%rcx
  4237c7:	4c 89 c8             	mov    %r9,%rax
  4237ca:	48 d3 e8             	shr    %cl,%rax
  4237cd:	48 ba ff ff ff bf 00 	movabs $0xbfffffff,%rdx
  4237d4:	00 00 00 
  4237d7:	48 21 c2             	and    %rax,%rdx
  4237da:	48 81 ca 00 00 00 40 	or     $0x40000000,%rdx
  4237e1:	48 c7 c1 15 00 00 00 	mov    $0x15,%rcx
  4237e8:	4c 89 c6             	mov    %r8,%rsi
  4237eb:	48 d3 ee             	shr    %cl,%rsi
  4237ee:	48 81 e6 ff ff ff 7f 	and    $0x7fffffff,%rsi
  4237f5:	48 b8 00 00 00 80 00 	movabs $0x80000000,%rax
  4237fc:	00 00 00 
  4237ff:	48 09 f0             	or     %rsi,%rax
  423802:	49 81 e1 ff ff 3f 00 	and    $0x3fffff,%r9
  423809:	49 c1 e1 0a          	shl    $0xa,%r9
  42380d:	49 81 e0 ff ff 1f 00 	and    $0x1fffff,%r8
  423814:	49 c1 e0 0b          	shl    $0xb,%r8
  423818:	4c 89 c6             	mov    %r8,%rsi
  42381b:	49 0f af f1          	imul   %r9,%rsi
  42381f:	4c 0f af c8          	imul   %rax,%r9
  423823:	4c 0f af c2          	imul   %rdx,%r8
  423827:	48 0f af c2          	imul   %rdx,%rax
  42382b:	4d 01 c8             	add    %r9,%r8
  42382e:	48 19 d2             	sbb    %rdx,%rdx
  423831:	4c 21 d2             	and    %r10,%rdx
  423834:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  42383b:	4c 89 c3             	mov    %r8,%rbx
  42383e:	48 d3 eb             	shr    %cl,%rbx
  423841:	48 09 d3             	or     %rdx,%rbx
  423844:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  42384b:	49 d3 e0             	shl    %cl,%r8
  42384e:	49 01 f0             	add    %rsi,%r8
  423851:	48 19 c9             	sbb    %rcx,%rcx
  423854:	48 83 e1 01          	and    $0x1,%rcx
  423858:	48 01 c1             	add    %rax,%rcx
  42385b:	48 01 d9             	add    %rbx,%rcx
  42385e:	4d 85 c0             	test   %r8,%r8
  423861:	0f 84 cf 00 00 00    	je     423936 <float64_mul+0x446>
  423867:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  42386e:	00 00 00 
  423871:	e9 ca 00 00 00       	jmpq   423940 <float64_mul+0x450>
  423876:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  42387d:	00 00 00 
  423880:	49 21 f7             	and    %rsi,%r15
  423883:	4d 39 d7             	cmp    %r10,%r15
  423886:	75 1b                	jne    4238a3 <float64_mul+0x3b3>
  423888:	48 85 c6             	test   %rax,%rsi
  42388b:	74 0c                	je     423899 <float64_mul+0x3a9>
  42388d:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  423894:	00 00 00 
  423897:	eb 0a                	jmp    4238a3 <float64_mul+0x3b3>
  423899:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  4238a0:	00 00 00 
  4238a3:	48 ff c0             	inc    %rax
  4238a6:	48 89 df             	mov    %rbx,%rdi
  4238a9:	48 09 cf             	or     %rcx,%rdi
  4238ac:	48 83 ff 01          	cmp    $0x1,%rdi
  4238b0:	75 13                	jne    4238c5 <float64_mul+0x3d5>
  4238b2:	48 0f be 3d 27 8e 20 	movsbq 0x208e27(%rip),%rdi        # 62c6e1 <float_exception_flags>
  4238b9:	00 
  4238ba:	48 83 cf 01          	or     $0x1,%rdi
  4238be:	40 88 3d 1c 8e 20 00 	mov    %dil,0x208e1c(%rip)        # 62c6e1 <float_exception_flags>
  4238c5:	48 89 d7             	mov    %rdx,%rdi
  4238c8:	48 09 c7             	or     %rax,%rdi
  4238cb:	48 09 f0             	or     %rsi,%rax
  4238ce:	48 85 db             	test   %rbx,%rbx
  4238d1:	74 0e                	je     4238e1 <float64_mul+0x3f1>
  4238d3:	48 85 c9             	test   %rcx,%rcx
  4238d6:	0f 85 e0 00 00 00    	jne    4239bc <float64_mul+0x4cc>
  4238dc:	e9 68 01 00 00       	jmpq   423a49 <float64_mul+0x559>
  4238e1:	48 bb ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rbx
  4238e8:	ff ff 7f 
  4238eb:	48 21 da             	and    %rbx,%rdx
  4238ee:	49 21 da             	and    %rbx,%r10
  4238f1:	4c 39 d2             	cmp    %r10,%rdx
  4238f4:	0f 86 bb 01 00 00    	jbe    423ab5 <float64_mul+0x5c5>
  4238fa:	48 21 de             	and    %rbx,%rsi
  4238fd:	4c 39 d6             	cmp    %r10,%rsi
  423900:	0f 87 a3 00 00 00    	ja     4239a9 <float64_mul+0x4b9>
  423906:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  42390d:	00 00 00 
  423910:	e9 9e 00 00 00       	jmpq   4239b3 <float64_mul+0x4c3>
  423915:	4d 09 c3             	or     %r8,%r11
  423918:	75 0a                	jne    423924 <float64_mul+0x434>
  42391a:	eb 5d                	jmp    423979 <float64_mul+0x489>
  42391c:	4c 21 f3             	and    %r14,%rbx
  42391f:	4c 09 cb             	or     %r9,%rbx
  423922:	74 55                	je     423979 <float64_mul+0x489>
  423924:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  42392b:	48 d3 e7             	shl    %cl,%rdi
  42392e:	4c 09 d7             	or     %r10,%rdi
  423931:	e9 7c 01 00 00       	jmpq   423ab2 <float64_mul+0x5c2>
  423936:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  42393d:	00 00 00 
  423940:	48 09 c1             	or     %rax,%rcx
  423943:	48 8d 14 09          	lea    (%rcx,%rcx,1),%rdx
  423947:	48 85 d2             	test   %rdx,%rdx
  42394a:	79 03                	jns    42394f <float64_mul+0x45f>
  42394c:	48 89 ca             	mov    %rcx,%rdx
  42394f:	79 0c                	jns    42395d <float64_mul+0x46d>
  423951:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  423958:	00 00 00 
  42395b:	eb 0a                	jmp    423967 <float64_mul+0x477>
  42395d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  423964:	00 00 00 
  423967:	4a 8d b4 18 00 fc ff 	lea    -0x400(%rax,%r11,1),%rsi
  42396e:	ff 
  42396f:	5b                   	pop    %rbx
  423970:	41 5e                	pop    %r14
  423972:	41 5f                	pop    %r15
  423974:	e9 47 01 00 00       	jmpq   423ac0 <roundAndPackFloat64>
  423979:	48 0f be 05 60 8d 20 	movsbq 0x208d60(%rip),%rax        # 62c6e1 <float_exception_flags>
  423980:	00 
  423981:	48 83 c8 01          	or     $0x1,%rax
  423985:	88 05 56 8d 20 00    	mov    %al,0x208d56(%rip)        # 62c6e1 <float_exception_flags>
  42398b:	48 b8 00 00 00 00 00 	movabs $0xfff8000000000000,%rax
  423992:	00 f8 ff 
  423995:	e9 1b 01 00 00       	jmpq   423ab5 <float64_mul+0x5c5>
  42399a:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4239a1:	48 d3 e7             	shl    %cl,%rdi
  4239a4:	e9 09 01 00 00       	jmpq   423ab2 <float64_mul+0x5c2>
  4239a9:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  4239b0:	00 00 00 
  4239b3:	48 09 d1             	or     %rdx,%rcx
  4239b6:	0f 85 f6 00 00 00    	jne    423ab2 <float64_mul+0x5c2>
  4239bc:	48 8d 0c 3f          	lea    (%rdi,%rdi,1),%rcx
  4239c0:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
  4239c4:	48 39 d1             	cmp    %rdx,%rcx
  4239c7:	0f 82 e8 00 00 00    	jb     423ab5 <float64_mul+0x5c5>
  4239cd:	48 39 ca             	cmp    %rcx,%rdx
  4239d0:	0f 82 dc 00 00 00    	jb     423ab2 <float64_mul+0x5c2>
  4239d6:	48 39 c7             	cmp    %rax,%rdi
  4239d9:	0f 82 d3 00 00 00    	jb     423ab2 <float64_mul+0x5c2>
  4239df:	48 89 c7             	mov    %rax,%rdi
  4239e2:	e9 cb 00 00 00       	jmpq   423ab2 <float64_mul+0x5c2>
  4239e7:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  4239ee:	00 00 00 
  4239f1:	49 21 f7             	and    %rsi,%r15
  4239f4:	4d 39 d7             	cmp    %r10,%r15
  4239f7:	75 1b                	jne    423a14 <float64_mul+0x524>
  4239f9:	48 85 c6             	test   %rax,%rsi
  4239fc:	74 0c                	je     423a0a <float64_mul+0x51a>
  4239fe:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  423a05:	00 00 00 
  423a08:	eb 0a                	jmp    423a14 <float64_mul+0x524>
  423a0a:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  423a11:	00 00 00 
  423a14:	48 ff c0             	inc    %rax
  423a17:	48 89 df             	mov    %rbx,%rdi
  423a1a:	48 09 cf             	or     %rcx,%rdi
  423a1d:	48 83 ff 01          	cmp    $0x1,%rdi
  423a21:	75 13                	jne    423a36 <float64_mul+0x546>
  423a23:	48 0f be 3d b6 8c 20 	movsbq 0x208cb6(%rip),%rdi        # 62c6e1 <float_exception_flags>
  423a2a:	00 
  423a2b:	48 83 cf 01          	or     $0x1,%rdi
  423a2f:	40 88 3d ab 8c 20 00 	mov    %dil,0x208cab(%rip)        # 62c6e1 <float_exception_flags>
  423a36:	48 89 d7             	mov    %rdx,%rdi
  423a39:	48 09 c7             	or     %rax,%rdi
  423a3c:	48 09 f0             	or     %rsi,%rax
  423a3f:	48 85 db             	test   %rbx,%rbx
  423a42:	74 1c                	je     423a60 <float64_mul+0x570>
  423a44:	48 85 c9             	test   %rcx,%rcx
  423a47:	75 4f                	jne    423a98 <float64_mul+0x5a8>
  423a49:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
  423a50:	ff ff 7f 
  423a53:	48 21 ce             	and    %rcx,%rsi
  423a56:	49 21 ca             	and    %rcx,%r10
  423a59:	4c 39 d6             	cmp    %r10,%rsi
  423a5c:	76 54                	jbe    423ab2 <float64_mul+0x5c2>
  423a5e:	eb 55                	jmp    423ab5 <float64_mul+0x5c5>
  423a60:	48 bb ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rbx
  423a67:	ff ff 7f 
  423a6a:	48 21 da             	and    %rbx,%rdx
  423a6d:	49 21 da             	and    %rbx,%r10
  423a70:	4c 39 d2             	cmp    %r10,%rdx
  423a73:	76 40                	jbe    423ab5 <float64_mul+0x5c5>
  423a75:	48 21 de             	and    %rbx,%rsi
  423a78:	4c 39 d6             	cmp    %r10,%rsi
  423a7b:	77 0c                	ja     423a89 <float64_mul+0x599>
  423a7d:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  423a84:	00 00 00 
  423a87:	eb 0a                	jmp    423a93 <float64_mul+0x5a3>
  423a89:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  423a90:	00 00 00 
  423a93:	48 09 d1             	or     %rdx,%rcx
  423a96:	75 1a                	jne    423ab2 <float64_mul+0x5c2>
  423a98:	48 8d 0c 3f          	lea    (%rdi,%rdi,1),%rcx
  423a9c:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
  423aa0:	48 39 d1             	cmp    %rdx,%rcx
  423aa3:	72 10                	jb     423ab5 <float64_mul+0x5c5>
  423aa5:	48 39 ca             	cmp    %rcx,%rdx
  423aa8:	72 08                	jb     423ab2 <float64_mul+0x5c2>
  423aaa:	48 39 c7             	cmp    %rax,%rdi
  423aad:	72 03                	jb     423ab2 <float64_mul+0x5c2>
  423aaf:	48 89 c7             	mov    %rax,%rdi
  423ab2:	48 89 f8             	mov    %rdi,%rax
  423ab5:	5b                   	pop    %rbx
  423ab6:	41 5e                	pop    %r14
  423ab8:	41 5f                	pop    %r15
  423aba:	c3                   	retq   
  423abb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000423ac0 <roundAndPackFloat64>:
  423ac0:	41 56                	push   %r14
  423ac2:	53                   	push   %rbx
  423ac3:	44 0f b6 0d 15 8c 20 	movzbl 0x208c15(%rip),%r9d        # 62c6e0 <float_rounding_mode>
  423aca:	00 
  423acb:	4d 85 c9             	test   %r9,%r9
  423ace:	49 c7 c2 00 02 00 00 	mov    $0x200,%r10
  423ad5:	74 2a                	je     423b01 <roundAndPackFloat64+0x41>
  423ad7:	4d 31 d2             	xor    %r10,%r10
  423ada:	49 83 f9 03          	cmp    $0x3,%r9
  423ade:	74 21                	je     423b01 <roundAndPackFloat64+0x41>
  423ae0:	4d 31 d2             	xor    %r10,%r10
  423ae3:	48 f7 c7 ff 00 00 00 	test   $0xff,%rdi
  423aea:	74 08                	je     423af4 <roundAndPackFloat64+0x34>
  423aec:	49 83 f9 02          	cmp    $0x2,%r9
  423af0:	75 08                	jne    423afa <roundAndPackFloat64+0x3a>
  423af2:	eb 0d                	jmp    423b01 <roundAndPackFloat64+0x41>
  423af4:	49 83 f9 01          	cmp    $0x1,%r9
  423af8:	74 07                	je     423b01 <roundAndPackFloat64+0x41>
  423afa:	49 c7 c2 ff 03 00 00 	mov    $0x3ff,%r10
  423b01:	48 89 d0             	mov    %rdx,%rax
  423b04:	48 25 ff 03 00 00    	and    $0x3ff,%rax
  423b0a:	48 89 f1             	mov    %rsi,%rcx
  423b0d:	48 81 e1 ff ff 00 00 	and    $0xffff,%rcx
  423b14:	48 81 f9 fd 07 00 00 	cmp    $0x7fd,%rcx
  423b1b:	0f 82 c8 01 00 00    	jb     423ce9 <roundAndPackFloat64+0x229>
  423b21:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  423b28:	48 89 f3             	mov    %rsi,%rbx
  423b2b:	48 d3 e3             	shl    %cl,%rbx
  423b2e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  423b35:	48 d3 fb             	sar    %cl,%rbx
  423b38:	48 81 fb fd 07 00 00 	cmp    $0x7fd,%rbx
  423b3f:	7f 2c                	jg     423b6d <roundAndPackFloat64+0xad>
  423b41:	49 be ff ff ff ff 00 	movabs $0xffffffff,%r14
  423b48:	00 00 00 
  423b4b:	48 89 f1             	mov    %rsi,%rcx
  423b4e:	4c 21 f1             	and    %r14,%rcx
  423b51:	48 81 f9 fd 07 00 00 	cmp    $0x7fd,%rcx
  423b58:	75 6f                	jne    423bc9 <roundAndPackFloat64+0x109>
  423b5a:	4d 21 d6             	and    %r10,%r14
  423b5d:	49 01 d6             	add    %rdx,%r14
  423b60:	48 c7 c6 fd 07 00 00 	mov    $0x7fd,%rsi
  423b67:	0f 89 7c 01 00 00    	jns    423ce9 <roundAndPackFloat64+0x229>
  423b6d:	48 0f be 05 6c 8b 20 	movsbq 0x208b6c(%rip),%rax        # 62c6e1 <float_exception_flags>
  423b74:	00 
  423b75:	48 83 c8 28          	or     $0x28,%rax
  423b79:	88 05 62 8b 20 00    	mov    %al,0x208b62(%rip)        # 62c6e1 <float_exception_flags>
  423b7f:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  423b86:	48 d3 e7             	shl    %cl,%rdi
  423b89:	48 ba 00 00 00 00 00 	movabs $0x7ff0000000000000,%rdx
  423b90:	00 f0 7f 
  423b93:	48 09 fa             	or     %rdi,%rdx
  423b96:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  423b9d:	00 00 00 
  423ba0:	49 85 c2             	test   %rax,%r10
  423ba3:	75 12                	jne    423bb7 <roundAndPackFloat64+0xf7>
  423ba5:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  423bac:	00 00 00 
  423baf:	48 29 c2             	sub    %rax,%rdx
  423bb2:	e9 bb 01 00 00       	jmpq   423d72 <roundAndPackFloat64+0x2b2>
  423bb7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  423bbe:	00 00 00 
  423bc1:	48 29 c2             	sub    %rax,%rdx
  423bc4:	e9 a9 01 00 00       	jmpq   423d72 <roundAndPackFloat64+0x2b2>
  423bc9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  423bd0:	48 89 f3             	mov    %rsi,%rbx
  423bd3:	48 d3 e3             	shl    %cl,%rbx
  423bd6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  423bdd:	48 d3 fb             	sar    %cl,%rbx
  423be0:	48 85 db             	test   %rbx,%rbx
  423be3:	0f 89 00 01 00 00    	jns    423ce9 <roundAndPackFloat64+0x229>
  423be9:	0f b6 05 f2 8a 20 00 	movzbl 0x208af2(%rip),%eax        # 62c6e2 <float_detect_tininess>
  423bf0:	48 83 f8 01          	cmp    $0x1,%rax
  423bf4:	49 c7 c3 01 00 00 00 	mov    $0x1,%r11
  423bfb:	74 3e                	je     423c3b <roundAndPackFloat64+0x17b>
  423bfd:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  423c04:	48 89 f0             	mov    %rsi,%rax
  423c07:	48 d3 e0             	shl    %cl,%rax
  423c0a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  423c11:	48 d3 f8             	sar    %cl,%rax
  423c14:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  423c18:	7c 21                	jl     423c3b <roundAndPackFloat64+0x17b>
  423c1a:	4c 89 d0             	mov    %r10,%rax
  423c1d:	4c 21 f0             	and    %r14,%rax
  423c20:	48 01 d0             	add    %rdx,%rax
  423c23:	78 0c                	js     423c31 <roundAndPackFloat64+0x171>
  423c25:	49 bb 01 00 00 00 00 	movabs $0x1,%r11
  423c2c:	00 00 00 
  423c2f:	eb 0a                	jmp    423c3b <roundAndPackFloat64+0x17b>
  423c31:	49 bb 00 00 00 00 00 	movabs $0x0,%r11
  423c38:	00 00 00 
  423c3b:	49 89 f0             	mov    %rsi,%r8
  423c3e:	49 f7 d8             	neg    %r8
  423c41:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  423c48:	4c 89 c0             	mov    %r8,%rax
  423c4b:	48 d3 e0             	shl    %cl,%rax
  423c4e:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  423c55:	48 d3 f8             	sar    %cl,%rax
  423c58:	48 83 f8 3f          	cmp    $0x3f,%rax
  423c5c:	7f 26                	jg     423c84 <roundAndPackFloat64+0x1c4>
  423c5e:	4d 21 f0             	and    %r14,%r8
  423c61:	48 89 d0             	mov    %rdx,%rax
  423c64:	4c 89 c1             	mov    %r8,%rcx
  423c67:	48 d3 e8             	shr    %cl,%rax
  423c6a:	48 89 f1             	mov    %rsi,%rcx
  423c6d:	48 d3 e2             	shl    %cl,%rdx
  423c70:	48 85 d2             	test   %rdx,%rdx
  423c73:	74 20                	je     423c95 <roundAndPackFloat64+0x1d5>
  423c75:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  423c7c:	00 00 00 
  423c7f:	48 09 c2             	or     %rax,%rdx
  423c82:	eb 2a                	jmp    423cae <roundAndPackFloat64+0x1ee>
  423c84:	48 85 d2             	test   %rdx,%rdx
  423c87:	74 1b                	je     423ca4 <roundAndPackFloat64+0x1e4>
  423c89:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  423c90:	00 00 00 
  423c93:	eb 19                	jmp    423cae <roundAndPackFloat64+0x1ee>
  423c95:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  423c9c:	00 00 00 
  423c9f:	48 09 c2             	or     %rax,%rdx
  423ca2:	eb 0a                	jmp    423cae <roundAndPackFloat64+0x1ee>
  423ca4:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  423cab:	00 00 00 
  423cae:	48 89 d0             	mov    %rdx,%rax
  423cb1:	48 25 ff 03 00 00    	and    $0x3ff,%rax
  423cb7:	74 0c                	je     423cc5 <roundAndPackFloat64+0x205>
  423cb9:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  423cc0:	00 00 00 
  423cc3:	eb 0a                	jmp    423ccf <roundAndPackFloat64+0x20f>
  423cc5:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  423ccc:	00 00 00 
  423ccf:	48 31 f6             	xor    %rsi,%rsi
  423cd2:	49 85 cb             	test   %rcx,%r11
  423cd5:	74 12                	je     423ce9 <roundAndPackFloat64+0x229>
  423cd7:	48 0f be 0d 02 8a 20 	movsbq 0x208a02(%rip),%rcx        # 62c6e1 <float_exception_flags>
  423cde:	00 
  423cdf:	48 83 c9 10          	or     $0x10,%rcx
  423ce3:	88 0d f8 89 20 00    	mov    %cl,0x2089f8(%rip)        # 62c6e1 <float_exception_flags>
  423ce9:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  423cf0:	00 00 00 
  423cf3:	4c 85 c0             	test   %r8,%rax
  423cf6:	74 12                	je     423d0a <roundAndPackFloat64+0x24a>
  423cf8:	48 0f be 0d e1 89 20 	movsbq 0x2089e1(%rip),%rcx        # 62c6e1 <float_exception_flags>
  423cff:	00 
  423d00:	48 83 c9 20          	or     $0x20,%rcx
  423d04:	88 0d d7 89 20 00    	mov    %cl,0x2089d7(%rip)        # 62c6e1 <float_exception_flags>
  423d0a:	4d 85 c9             	test   %r9,%r9
  423d0d:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  423d14:	00 00 00 
  423d17:	49 bb 01 00 00 00 00 	movabs $0x1,%r11
  423d1e:	00 00 00 
  423d21:	49 89 d9             	mov    %rbx,%r9
  423d24:	75 03                	jne    423d29 <roundAndPackFloat64+0x269>
  423d26:	4d 89 d9             	mov    %r11,%r9
  423d29:	4d 21 c2             	and    %r8,%r10
  423d2c:	4c 01 d2             	add    %r10,%rdx
  423d2f:	48 c7 c1 0a 00 00 00 	mov    $0xa,%rcx
  423d36:	48 d3 ea             	shr    %cl,%rdx
  423d39:	4c 21 c0             	and    %r8,%rax
  423d3c:	48 3d 00 02 00 00    	cmp    $0x200,%rax
  423d42:	75 03                	jne    423d47 <roundAndPackFloat64+0x287>
  423d44:	4c 89 db             	mov    %r11,%rbx
  423d47:	4c 21 cb             	and    %r9,%rbx
  423d4a:	48 f7 d3             	not    %rbx
  423d4d:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  423d54:	48 d3 e7             	shl    %cl,%rdi
  423d57:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  423d5e:	48 d3 e6             	shl    %cl,%rsi
  423d61:	48 31 c0             	xor    %rax,%rax
  423d64:	48 21 da             	and    %rbx,%rdx
  423d67:	74 03                	je     423d6c <roundAndPackFloat64+0x2ac>
  423d69:	48 89 f0             	mov    %rsi,%rax
  423d6c:	48 09 fa             	or     %rdi,%rdx
  423d6f:	48 01 c2             	add    %rax,%rdx
  423d72:	48 89 d0             	mov    %rdx,%rax
  423d75:	5b                   	pop    %rbx
  423d76:	41 5e                	pop    %r14
  423d78:	c3                   	retq   
  423d79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000423d80 <float64_div>:
  423d80:	41 57                	push   %r15
  423d82:	41 56                	push   %r14
  423d84:	41 55                	push   %r13
  423d86:	41 54                	push   %r12
  423d88:	53                   	push   %rbx
  423d89:	49 89 f6             	mov    %rsi,%r14
  423d8c:	49 89 f9             	mov    %rdi,%r9
  423d8f:	49 bc 00 00 00 00 00 	movabs $0x7ff8000000000000,%r12
  423d96:	00 f8 7f 
  423d99:	49 ba 00 00 00 00 00 	movabs $0x7ff0000000000000,%r10
  423da0:	00 f0 7f 
  423da3:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffff,%rax
  423daa:	ff 07 00 
  423dad:	49 bf ff ff ff ff ff 	movabs $0xfffffffffffff,%r15
  423db4:	ff 0f 00 
  423db7:	4d 89 cd             	mov    %r9,%r13
  423dba:	4d 21 fd             	and    %r15,%r13
  423dbd:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  423dc4:	4c 89 ce             	mov    %r9,%rsi
  423dc7:	48 d3 ee             	shr    %cl,%rsi
  423dca:	48 81 e6 ff 07 00 00 	and    $0x7ff,%rsi
  423dd1:	4d 21 f7             	and    %r14,%r15
  423dd4:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  423ddb:	4c 89 f2             	mov    %r14,%rdx
  423dde:	48 d3 ea             	shr    %cl,%rdx
  423de1:	48 81 e2 ff 07 00 00 	and    $0x7ff,%rdx
  423de8:	4c 89 f7             	mov    %r14,%rdi
  423deb:	4c 31 cf             	xor    %r9,%rdi
  423dee:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  423df5:	48 d3 ef             	shr    %cl,%rdi
  423df8:	48 81 fe ff 07 00 00 	cmp    $0x7ff,%rsi
  423dff:	75 3d                	jne    423e3e <float64_div+0xbe>
  423e01:	4d 85 ed             	test   %r13,%r13
  423e04:	0f 84 79 01 00 00    	je     423f83 <float64_div+0x203>
  423e0a:	4c 89 ca             	mov    %r9,%rdx
  423e0d:	4c 21 e2             	and    %r12,%rdx
  423e10:	48 31 c9             	xor    %rcx,%rcx
  423e13:	4c 39 d2             	cmp    %r10,%rdx
  423e16:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  423e1d:	00 00 00 
  423e20:	0f 85 93 02 00 00    	jne    4240b9 <float64_div+0x339>
  423e26:	49 85 c1             	test   %rax,%r9
  423e29:	0f 84 80 02 00 00    	je     4240af <float64_div+0x32f>
  423e2f:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  423e36:	00 00 00 
  423e39:	e9 7b 02 00 00       	jmpq   4240b9 <float64_div+0x339>
  423e3e:	49 b8 00 00 00 00 01 	movabs $0x100000000,%r8
  423e45:	00 00 00 
  423e48:	49 bb ff ff ff ff 00 	movabs $0xffffffff,%r11
  423e4f:	00 00 00 
  423e52:	4c 85 da             	test   %r11,%rdx
  423e55:	0f 85 cd 00 00 00    	jne    423f28 <float64_div+0x1a8>
  423e5b:	4d 85 ff             	test   %r15,%r15
  423e5e:	0f 84 f3 01 00 00    	je     424057 <float64_div+0x2d7>
  423e64:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  423e6b:	4c 89 f8             	mov    %r15,%rax
  423e6e:	48 d3 e8             	shr    %cl,%rax
  423e71:	4d 39 c7             	cmp    %r8,%r15
  423e74:	72 03                	jb     423e79 <float64_div+0xf9>
  423e76:	49 89 c6             	mov    %rax,%r14
  423e79:	49 ba ff ff ff ff 00 	movabs $0xffffffff,%r10
  423e80:	00 00 00 
  423e83:	4c 89 f3             	mov    %r14,%rbx
  423e86:	4c 21 d3             	and    %r10,%rbx
  423e89:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  423e90:	48 19 c0             	sbb    %rax,%rax
  423e93:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  423e9a:	4c 89 f2             	mov    %r14,%rdx
  423e9d:	48 d3 e2             	shl    %cl,%rdx
  423ea0:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  423ea7:	72 03                	jb     423eac <float64_div+0x12c>
  423ea9:	4c 89 f2             	mov    %r14,%rdx
  423eac:	49 21 d2             	and    %rdx,%r10
  423eaf:	48 83 e0 10          	and    $0x10,%rax
  423eb3:	49 81 fa ff ff ff 00 	cmp    $0xffffff,%r10
  423eba:	77 0e                	ja     423eca <float64_div+0x14a>
  423ebc:	48 83 c8 08          	or     $0x8,%rax
  423ec0:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  423ec7:	48 d3 e2             	shl    %cl,%rdx
  423eca:	48 bb 00 00 00 ff 00 	movabs $0xff000000,%rbx
  423ed1:	00 00 00 
  423ed4:	48 21 d3             	and    %rdx,%rbx
  423ed7:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  423ede:	48 d3 eb             	shr    %cl,%rbx
  423ee1:	48 0f be 8b f0 8e 42 	movsbq 0x428ef0(%rbx),%rcx
  423ee8:	00 
  423ee9:	4d 39 c7             	cmp    %r8,%r15
  423eec:	48 c7 c2 15 00 00 00 	mov    $0x15,%rdx
  423ef3:	72 07                	jb     423efc <float64_div+0x17c>
  423ef5:	48 c7 c2 f5 ff ff ff 	mov    $0xfffffffffffffff5,%rdx
  423efc:	48 01 d0             	add    %rdx,%rax
  423eff:	48 01 c8             	add    %rcx,%rax
  423f02:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  423f09:	48 d3 e0             	shl    %cl,%rax
  423f0c:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  423f13:	48 d3 f8             	sar    %cl,%rax
  423f16:	48 89 c1             	mov    %rax,%rcx
  423f19:	49 d3 e7             	shl    %cl,%r15
  423f1c:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  423f23:	48 29 c2             	sub    %rax,%rdx
  423f26:	eb 4c                	jmp    423f74 <float64_div+0x1f4>
  423f28:	48 89 d1             	mov    %rdx,%rcx
  423f2b:	4c 21 d9             	and    %r11,%rcx
  423f2e:	48 81 f9 ff 07 00 00 	cmp    $0x7ff,%rcx
  423f35:	75 3d                	jne    423f74 <float64_div+0x1f4>
  423f37:	4d 85 ff             	test   %r15,%r15
  423f3a:	0f 84 5d 01 00 00    	je     42409d <float64_div+0x31d>
  423f40:	4c 89 ca             	mov    %r9,%rdx
  423f43:	4c 21 e2             	and    %r12,%rdx
  423f46:	48 31 c9             	xor    %rcx,%rcx
  423f49:	4c 39 d2             	cmp    %r10,%rdx
  423f4c:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  423f53:	00 00 00 
  423f56:	0f 85 0c 05 00 00    	jne    424468 <float64_div+0x6e8>
  423f5c:	49 85 c1             	test   %rax,%r9
  423f5f:	0f 84 f9 04 00 00    	je     42445e <float64_div+0x6de>
  423f65:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  423f6c:	00 00 00 
  423f6f:	e9 f4 04 00 00       	jmpq   424468 <float64_div+0x6e8>
  423f74:	4c 85 de             	test   %r11,%rsi
  423f77:	74 61                	je     423fda <float64_div+0x25a>
  423f79:	4c 89 5c 24 f8       	mov    %r11,-0x8(%rsp)
  423f7e:	e9 96 02 00 00       	jmpq   424219 <float64_div+0x499>
  423f83:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  423f8a:	00 00 00 
  423f8d:	48 21 ca             	and    %rcx,%rdx
  423f90:	48 81 fa ff 07 00 00 	cmp    $0x7ff,%rdx
  423f97:	0f 85 f1 00 00 00    	jne    42408e <float64_div+0x30e>
  423f9d:	4d 85 ff             	test   %r15,%r15
  423fa0:	0f 84 f1 01 00 00    	je     424197 <float64_div+0x417>
  423fa6:	4c 89 ca             	mov    %r9,%rdx
  423fa9:	4c 21 e2             	and    %r12,%rdx
  423fac:	48 31 c9             	xor    %rcx,%rcx
  423faf:	4c 39 d2             	cmp    %r10,%rdx
  423fb2:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  423fb9:	00 00 00 
  423fbc:	0f 85 60 05 00 00    	jne    424522 <float64_div+0x7a2>
  423fc2:	49 85 c1             	test   %rax,%r9
  423fc5:	0f 84 4d 05 00 00    	je     424518 <float64_div+0x798>
  423fcb:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  423fd2:	00 00 00 
  423fd5:	e9 48 05 00 00       	jmpq   424522 <float64_div+0x7a2>
  423fda:	4d 85 ed             	test   %r13,%r13
  423fdd:	0f 84 ba 00 00 00    	je     42409d <float64_div+0x31d>
  423fe3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  423fea:	4c 89 e8             	mov    %r13,%rax
  423fed:	48 d3 e8             	shr    %cl,%rax
  423ff0:	4d 39 c5             	cmp    %r8,%r13
  423ff3:	72 03                	jb     423ff8 <float64_div+0x278>
  423ff5:	49 89 c1             	mov    %rax,%r9
  423ff8:	49 ba ff ff ff ff 00 	movabs $0xffffffff,%r10
  423fff:	00 00 00 
  424002:	4c 89 cb             	mov    %r9,%rbx
  424005:	4c 21 d3             	and    %r10,%rbx
  424008:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  42400f:	48 19 c0             	sbb    %rax,%rax
  424012:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  424019:	4c 89 ce             	mov    %r9,%rsi
  42401c:	48 d3 e6             	shl    %cl,%rsi
  42401f:	48 81 fb 00 00 01 00 	cmp    $0x10000,%rbx
  424026:	72 03                	jb     42402b <float64_div+0x2ab>
  424028:	4c 89 ce             	mov    %r9,%rsi
  42402b:	49 21 f2             	and    %rsi,%r10
  42402e:	48 83 e0 10          	and    $0x10,%rax
  424032:	49 81 fa ff ff ff 00 	cmp    $0xffffff,%r10
  424039:	0f 87 79 01 00 00    	ja     4241b8 <float64_div+0x438>
  42403f:	4c 89 5c 24 f8       	mov    %r11,-0x8(%rsp)
  424044:	48 83 c8 08          	or     $0x8,%rax
  424048:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  42404f:	48 d3 e6             	shl    %cl,%rsi
  424052:	e9 66 01 00 00       	jmpq   4241bd <float64_div+0x43d>
  424057:	48 0f be 05 82 86 20 	movsbq 0x208682(%rip),%rax        # 62c6e1 <float_exception_flags>
  42405e:	00 
  42405f:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  424066:	00 00 00 
  424069:	48 21 ce             	and    %rcx,%rsi
  42406c:	4c 09 ee             	or     %r13,%rsi
  42406f:	0f 84 2a 01 00 00    	je     42419f <float64_div+0x41f>
  424075:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  42407c:	48 d3 e7             	shl    %cl,%rdi
  42407f:	48 83 c8 04          	or     $0x4,%rax
  424083:	4c 09 d7             	or     %r10,%rdi
  424086:	88 05 55 86 20 00    	mov    %al,0x208655(%rip)        # 62c6e1 <float_exception_flags>
  42408c:	eb 19                	jmp    4240a7 <float64_div+0x327>
  42408e:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  424095:	48 d3 e7             	shl    %cl,%rdi
  424098:	4c 09 d7             	or     %r10,%rdi
  42409b:	eb 0a                	jmp    4240a7 <float64_div+0x327>
  42409d:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4240a4:	48 d3 e7             	shl    %cl,%rdi
  4240a7:	48 89 f8             	mov    %rdi,%rax
  4240aa:	e9 8a 05 00 00       	jmpq   424639 <float64_div+0x8b9>
  4240af:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  4240b6:	00 00 00 
  4240b9:	4d 21 f4             	and    %r14,%r12
  4240bc:	4d 39 d4             	cmp    %r10,%r12
  4240bf:	75 1b                	jne    4240dc <float64_div+0x35c>
  4240c1:	49 85 c6             	test   %rax,%r14
  4240c4:	74 0c                	je     4240d2 <float64_div+0x352>
  4240c6:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  4240cd:	00 00 00 
  4240d0:	eb 0a                	jmp    4240dc <float64_div+0x35c>
  4240d2:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  4240d9:	00 00 00 
  4240dc:	48 ff c0             	inc    %rax
  4240df:	48 89 f2             	mov    %rsi,%rdx
  4240e2:	48 09 ca             	or     %rcx,%rdx
  4240e5:	48 83 fa 01          	cmp    $0x1,%rdx
  4240e9:	75 12                	jne    4240fd <float64_div+0x37d>
  4240eb:	48 0f be 15 ee 85 20 	movsbq 0x2085ee(%rip),%rdx        # 62c6e1 <float_exception_flags>
  4240f2:	00 
  4240f3:	48 83 ca 01          	or     $0x1,%rdx
  4240f7:	88 15 e4 85 20 00    	mov    %dl,0x2085e4(%rip)        # 62c6e1 <float_exception_flags>
  4240fd:	4c 89 ca             	mov    %r9,%rdx
  424100:	48 09 c2             	or     %rax,%rdx
  424103:	4c 09 f0             	or     %r14,%rax
  424106:	48 85 f6             	test   %rsi,%rsi
  424109:	74 26                	je     424131 <float64_div+0x3b1>
  42410b:	48 85 c9             	test   %rcx,%rcx
  42410e:	75 65                	jne    424175 <float64_div+0x3f5>
  424110:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
  424117:	ff ff 7f 
  42411a:	49 21 ce             	and    %rcx,%r14
  42411d:	49 21 ca             	and    %rcx,%r10
  424120:	4d 39 d6             	cmp    %r10,%r14
  424123:	0f 87 10 05 00 00    	ja     424639 <float64_div+0x8b9>
  424129:	48 89 d0             	mov    %rdx,%rax
  42412c:	e9 08 05 00 00       	jmpq   424639 <float64_div+0x8b9>
  424131:	48 be ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rsi
  424138:	ff ff 7f 
  42413b:	49 21 f1             	and    %rsi,%r9
  42413e:	49 21 f2             	and    %rsi,%r10
  424141:	4d 39 d1             	cmp    %r10,%r9
  424144:	0f 86 ef 04 00 00    	jbe    424639 <float64_div+0x8b9>
  42414a:	49 21 f6             	and    %rsi,%r14
  42414d:	4d 39 d6             	cmp    %r10,%r14
  424150:	77 0c                	ja     42415e <float64_div+0x3de>
  424152:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  424159:	00 00 00 
  42415c:	eb 0a                	jmp    424168 <float64_div+0x3e8>
  42415e:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  424165:	00 00 00 
  424168:	48 09 f1             	or     %rsi,%rcx
  42416b:	74 08                	je     424175 <float64_div+0x3f5>
  42416d:	48 89 d0             	mov    %rdx,%rax
  424170:	e9 c4 04 00 00       	jmpq   424639 <float64_div+0x8b9>
  424175:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
  424179:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  42417d:	48 39 f1             	cmp    %rsi,%rcx
  424180:	0f 82 b3 04 00 00    	jb     424639 <float64_div+0x8b9>
  424186:	48 39 ce             	cmp    %rcx,%rsi
  424189:	0f 83 bf 02 00 00    	jae    42444e <float64_div+0x6ce>
  42418f:	48 89 d0             	mov    %rdx,%rax
  424192:	e9 a2 04 00 00       	jmpq   424639 <float64_div+0x8b9>
  424197:	48 0f be 05 42 85 20 	movsbq 0x208542(%rip),%rax        # 62c6e1 <float_exception_flags>
  42419e:	00 
  42419f:	48 83 c8 01          	or     $0x1,%rax
  4241a3:	88 05 38 85 20 00    	mov    %al,0x208538(%rip)        # 62c6e1 <float_exception_flags>
  4241a9:	48 b8 00 00 00 00 00 	movabs $0xfff8000000000000,%rax
  4241b0:	00 f8 ff 
  4241b3:	e9 81 04 00 00       	jmpq   424639 <float64_div+0x8b9>
  4241b8:	4c 89 5c 24 f8       	mov    %r11,-0x8(%rsp)
  4241bd:	48 bb 00 00 00 ff 00 	movabs $0xff000000,%rbx
  4241c4:	00 00 00 
  4241c7:	48 21 f3             	and    %rsi,%rbx
  4241ca:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  4241d1:	48 d3 eb             	shr    %cl,%rbx
  4241d4:	48 0f be 8b f0 8e 42 	movsbq 0x428ef0(%rbx),%rcx
  4241db:	00 
  4241dc:	4d 39 c5             	cmp    %r8,%r13
  4241df:	48 c7 c6 15 00 00 00 	mov    $0x15,%rsi
  4241e6:	72 07                	jb     4241ef <float64_div+0x46f>
  4241e8:	48 c7 c6 f5 ff ff ff 	mov    $0xfffffffffffffff5,%rsi
  4241ef:	48 01 f0             	add    %rsi,%rax
  4241f2:	48 01 c8             	add    %rcx,%rax
  4241f5:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  4241fc:	48 d3 e0             	shl    %cl,%rax
  4241ff:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  424206:	48 d3 f8             	sar    %cl,%rax
  424209:	48 89 c1             	mov    %rax,%rcx
  42420c:	49 d3 e5             	shl    %cl,%r13
  42420f:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
  424216:	48 29 c6             	sub    %rax,%rsi
  424219:	48 29 d6             	sub    %rdx,%rsi
  42421c:	48 c7 c1 0a 00 00 00 	mov    $0xa,%rcx
  424223:	49 d3 e5             	shl    %cl,%r13
  424226:	49 b9 00 00 00 00 00 	movabs $0x4000000000000000,%r9
  42422d:	00 00 40 
  424230:	4d 09 e9             	or     %r13,%r9
  424233:	48 c7 c1 0b 00 00 00 	mov    $0xb,%rcx
  42423a:	4d 89 fb             	mov    %r15,%r11
  42423d:	49 d3 e3             	shl    %cl,%r11
  424240:	49 be 00 00 00 00 00 	movabs $0x8000000000000000,%r14
  424247:	00 00 80 
  42424a:	4d 09 de             	or     %r11,%r14
  42424d:	4b 8d 04 09          	lea    (%r9,%r9,1),%rax
  424251:	49 39 c6             	cmp    %rax,%r14
  424254:	76 09                	jbe    42425f <float64_div+0x4df>
  424256:	48 81 c6 fd 03 00 00 	add    $0x3fd,%rsi
  42425d:	eb 11                	jmp    424270 <float64_div+0x4f0>
  42425f:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  424266:	49 d3 e9             	shr    %cl,%r9
  424269:	48 81 c6 fe 03 00 00 	add    $0x3fe,%rsi
  424270:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  424277:	4d 39 ce             	cmp    %r9,%r14
  42427a:	0f 86 c0 01 00 00    	jbe    424440 <float64_div+0x6c0>
  424280:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424287:	4d 89 f4             	mov    %r14,%r12
  42428a:	49 d3 ec             	shr    %cl,%r12
  42428d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424294:	4d 89 e5             	mov    %r12,%r13
  424297:	49 d3 e5             	shl    %cl,%r13
  42429a:	4d 39 cd             	cmp    %r9,%r13
  42429d:	76 18                	jbe    4242b7 <float64_div+0x537>
  42429f:	48 31 d2             	xor    %rdx,%rdx
  4242a2:	4c 89 c8             	mov    %r9,%rax
  4242a5:	49 f7 f4             	div    %r12
  4242a8:	49 89 c2             	mov    %rax,%r10
  4242ab:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4242b2:	49 d3 e2             	shl    %cl,%r10
  4242b5:	eb 0a                	jmp    4242c1 <float64_div+0x541>
  4242b7:	49 ba 00 00 00 00 ff 	movabs $0xffffffff00000000,%r10
  4242be:	ff ff ff 
  4242c1:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4242c8:	4c 89 d3             	mov    %r10,%rbx
  4242cb:	48 d3 eb             	shr    %cl,%rbx
  4242ce:	48 b8 00 f8 ff ff 00 	movabs $0xfffff800,%rax
  4242d5:	00 00 00 
  4242d8:	49 21 c3             	and    %rax,%r11
  4242db:	48 89 d8             	mov    %rbx,%rax
  4242de:	49 0f af c3          	imul   %r11,%rax
  4242e2:	49 0f af dc          	imul   %r12,%rbx
  4242e6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4242ed:	49 89 c0             	mov    %rax,%r8
  4242f0:	49 d3 e8             	shr    %cl,%r8
  4242f3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4242fa:	48 d3 e0             	shl    %cl,%rax
  4242fd:	48 f7 d8             	neg    %rax
  424300:	48 19 c9             	sbb    %rcx,%rcx
  424303:	4c 89 ca             	mov    %r9,%rdx
  424306:	48 29 da             	sub    %rbx,%rdx
  424309:	4c 29 c2             	sub    %r8,%rdx
  42430c:	48 01 ca             	add    %rcx,%rdx
  42430f:	79 34                	jns    424345 <float64_div+0x5c5>
  424311:	48 c7 c1 2b 00 00 00 	mov    $0x2b,%rcx
  424318:	49 d3 e7             	shl    %cl,%r15
  42431b:	48 b9 00 00 00 00 ff 	movabs $0xffffffff00000000,%rcx
  424322:	ff ff ff 
  424325:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  42432c:	00 00 00 00 
  424330:	49 01 ca             	add    %rcx,%r10
  424333:	4c 01 f8             	add    %r15,%rax
  424336:	48 19 db             	sbb    %rbx,%rbx
  424339:	48 83 e3 01          	and    $0x1,%rbx
  42433d:	4c 01 e2             	add    %r12,%rdx
  424340:	48 01 da             	add    %rbx,%rdx
  424343:	78 eb                	js     424330 <float64_div+0x5b0>
  424345:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  42434c:	48 d3 e2             	shl    %cl,%rdx
  42434f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424356:	48 d3 e8             	shr    %cl,%rax
  424359:	48 09 d0             	or     %rdx,%rax
  42435c:	49 39 c5             	cmp    %rax,%r13
  42435f:	76 0b                	jbe    42436c <float64_div+0x5ec>
  424361:	48 31 d2             	xor    %rdx,%rdx
  424364:	49 f7 f4             	div    %r12
  424367:	48 89 44 24 f8       	mov    %rax,-0x8(%rsp)
  42436c:	48 8b 54 24 f8       	mov    -0x8(%rsp),%rdx
  424371:	4c 09 d2             	or     %r10,%rdx
  424374:	48 89 d0             	mov    %rdx,%rax
  424377:	48 25 ff 01 00 00    	and    $0x1ff,%rax
  42437d:	48 83 f8 02          	cmp    $0x2,%rax
  424381:	0f 87 b9 00 00 00    	ja     424440 <float64_div+0x6c0>
  424387:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  42438e:	49 89 d2             	mov    %rdx,%r10
  424391:	49 d3 ea             	shr    %cl,%r10
  424394:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  42439b:	00 00 00 
  42439e:	48 21 d0             	and    %rdx,%rax
  4243a1:	49 89 c0             	mov    %rax,%r8
  4243a4:	4d 0f af c3          	imul   %r11,%r8
  4243a8:	4d 0f af da          	imul   %r10,%r11
  4243ac:	49 0f af c4          	imul   %r12,%rax
  4243b0:	4d 0f af d4          	imul   %r12,%r10
  4243b4:	4c 01 d8             	add    %r11,%rax
  4243b7:	48 19 db             	sbb    %rbx,%rbx
  4243ba:	48 b9 00 00 00 00 01 	movabs $0x100000000,%rcx
  4243c1:	00 00 00 
  4243c4:	48 21 cb             	and    %rcx,%rbx
  4243c7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4243ce:	49 89 c3             	mov    %rax,%r11
  4243d1:	49 d3 eb             	shr    %cl,%r11
  4243d4:	49 09 db             	or     %rbx,%r11
  4243d7:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4243de:	48 d3 e0             	shl    %cl,%rax
  4243e1:	4c 01 c0             	add    %r8,%rax
  4243e4:	48 19 db             	sbb    %rbx,%rbx
  4243e7:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4243ee:	48 d3 e3             	shl    %cl,%rbx
  4243f1:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4243f8:	48 d3 fb             	sar    %cl,%rbx
  4243fb:	48 f7 d8             	neg    %rax
  4243fe:	48 19 c9             	sbb    %rcx,%rcx
  424401:	4d 29 d1             	sub    %r10,%r9
  424404:	49 01 d9             	add    %rbx,%r9
  424407:	4d 29 d9             	sub    %r11,%r9
  42440a:	eb 11                	jmp    42441d <float64_div+0x69d>
  42440c:	0f 1f 40 00          	nopl   0x0(%rax)
  424410:	48 ff ca             	dec    %rdx
  424413:	4c 01 f0             	add    %r14,%rax
  424416:	48 19 c9             	sbb    %rcx,%rcx
  424419:	48 83 e1 01          	and    $0x1,%rcx
  42441d:	49 01 c9             	add    %rcx,%r9
  424420:	78 ee                	js     424410 <float64_div+0x690>
  424422:	48 85 c0             	test   %rax,%rax
  424425:	74 0c                	je     424433 <float64_div+0x6b3>
  424427:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  42442e:	00 00 00 
  424431:	eb 0a                	jmp    42443d <float64_div+0x6bd>
  424433:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  42443a:	00 00 00 
  42443d:	48 09 c2             	or     %rax,%rdx
  424440:	5b                   	pop    %rbx
  424441:	41 5c                	pop    %r12
  424443:	41 5d                	pop    %r13
  424445:	41 5e                	pop    %r14
  424447:	41 5f                	pop    %r15
  424449:	e9 72 f6 ff ff       	jmpq   423ac0 <roundAndPackFloat64>
  42444e:	48 39 c2             	cmp    %rax,%rdx
  424451:	72 03                	jb     424456 <float64_div+0x6d6>
  424453:	48 89 c2             	mov    %rax,%rdx
  424456:	48 89 d0             	mov    %rdx,%rax
  424459:	e9 db 01 00 00       	jmpq   424639 <float64_div+0x8b9>
  42445e:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  424465:	00 00 00 
  424468:	4d 21 f4             	and    %r14,%r12
  42446b:	4d 39 d4             	cmp    %r10,%r12
  42446e:	75 1b                	jne    42448b <float64_div+0x70b>
  424470:	49 85 c6             	test   %rax,%r14
  424473:	74 0c                	je     424481 <float64_div+0x701>
  424475:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  42447c:	00 00 00 
  42447f:	eb 0a                	jmp    42448b <float64_div+0x70b>
  424481:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  424488:	00 00 00 
  42448b:	48 ff c0             	inc    %rax
  42448e:	48 89 f2             	mov    %rsi,%rdx
  424491:	48 09 ca             	or     %rcx,%rdx
  424494:	48 83 fa 01          	cmp    $0x1,%rdx
  424498:	75 12                	jne    4244ac <float64_div+0x72c>
  42449a:	48 0f be 15 3f 82 20 	movsbq 0x20823f(%rip),%rdx        # 62c6e1 <float_exception_flags>
  4244a1:	00 
  4244a2:	48 83 ca 01          	or     $0x1,%rdx
  4244a6:	88 15 35 82 20 00    	mov    %dl,0x208235(%rip)        # 62c6e1 <float_exception_flags>
  4244ac:	4c 89 ca             	mov    %r9,%rdx
  4244af:	48 09 c2             	or     %rax,%rdx
  4244b2:	4c 09 f0             	or     %r14,%rax
  4244b5:	48 85 f6             	test   %rsi,%rsi
  4244b8:	74 2a                	je     4244e4 <float64_div+0x764>
  4244ba:	48 85 c9             	test   %rcx,%rcx
  4244bd:	0f 85 1c 01 00 00    	jne    4245df <float64_div+0x85f>
  4244c3:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
  4244ca:	ff ff 7f 
  4244cd:	49 21 ce             	and    %rcx,%r14
  4244d0:	49 21 ca             	and    %rcx,%r10
  4244d3:	4d 39 d6             	cmp    %r10,%r14
  4244d6:	0f 87 5d 01 00 00    	ja     424639 <float64_div+0x8b9>
  4244dc:	48 89 d0             	mov    %rdx,%rax
  4244df:	e9 55 01 00 00       	jmpq   424639 <float64_div+0x8b9>
  4244e4:	48 be ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rsi
  4244eb:	ff ff 7f 
  4244ee:	49 21 f1             	and    %rsi,%r9
  4244f1:	49 21 f2             	and    %rsi,%r10
  4244f4:	4d 39 d1             	cmp    %r10,%r9
  4244f7:	0f 86 3c 01 00 00    	jbe    424639 <float64_div+0x8b9>
  4244fd:	49 21 f6             	and    %rsi,%r14
  424500:	4d 39 d6             	cmp    %r10,%r14
  424503:	0f 87 c2 00 00 00    	ja     4245cb <float64_div+0x84b>
  424509:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  424510:	00 00 00 
  424513:	e9 bd 00 00 00       	jmpq   4245d5 <float64_div+0x855>
  424518:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  42451f:	00 00 00 
  424522:	4d 21 f4             	and    %r14,%r12
  424525:	4d 39 d4             	cmp    %r10,%r12
  424528:	75 1b                	jne    424545 <float64_div+0x7c5>
  42452a:	49 85 c6             	test   %rax,%r14
  42452d:	74 0c                	je     42453b <float64_div+0x7bb>
  42452f:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  424536:	00 00 00 
  424539:	eb 0a                	jmp    424545 <float64_div+0x7c5>
  42453b:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  424542:	00 00 00 
  424545:	48 ff c0             	inc    %rax
  424548:	48 89 f2             	mov    %rsi,%rdx
  42454b:	48 09 ca             	or     %rcx,%rdx
  42454e:	48 83 fa 01          	cmp    $0x1,%rdx
  424552:	75 12                	jne    424566 <float64_div+0x7e6>
  424554:	48 0f be 15 85 81 20 	movsbq 0x208185(%rip),%rdx        # 62c6e1 <float_exception_flags>
  42455b:	00 
  42455c:	48 83 ca 01          	or     $0x1,%rdx
  424560:	88 15 7b 81 20 00    	mov    %dl,0x20817b(%rip)        # 62c6e1 <float_exception_flags>
  424566:	4c 89 ca             	mov    %r9,%rdx
  424569:	48 09 c2             	or     %rax,%rdx
  42456c:	4c 09 f0             	or     %r14,%rax
  42456f:	48 85 f6             	test   %rsi,%rsi
  424572:	74 2a                	je     42459e <float64_div+0x81e>
  424574:	48 85 c9             	test   %rcx,%rcx
  424577:	0f 85 8d 00 00 00    	jne    42460a <float64_div+0x88a>
  42457d:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
  424584:	ff ff 7f 
  424587:	49 21 ce             	and    %rcx,%r14
  42458a:	49 21 ca             	and    %rcx,%r10
  42458d:	4d 39 d6             	cmp    %r10,%r14
  424590:	0f 87 a3 00 00 00    	ja     424639 <float64_div+0x8b9>
  424596:	48 89 d0             	mov    %rdx,%rax
  424599:	e9 9b 00 00 00       	jmpq   424639 <float64_div+0x8b9>
  42459e:	48 be ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rsi
  4245a5:	ff ff 7f 
  4245a8:	49 21 f1             	and    %rsi,%r9
  4245ab:	49 21 f2             	and    %rsi,%r10
  4245ae:	4d 39 d1             	cmp    %r10,%r9
  4245b1:	0f 86 82 00 00 00    	jbe    424639 <float64_div+0x8b9>
  4245b7:	49 21 f6             	and    %rsi,%r14
  4245ba:	4d 39 d6             	cmp    %r10,%r14
  4245bd:	77 37                	ja     4245f6 <float64_div+0x876>
  4245bf:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  4245c6:	00 00 00 
  4245c9:	eb 35                	jmp    424600 <float64_div+0x880>
  4245cb:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  4245d2:	00 00 00 
  4245d5:	48 09 f1             	or     %rsi,%rcx
  4245d8:	74 05                	je     4245df <float64_div+0x85f>
  4245da:	48 89 d0             	mov    %rdx,%rax
  4245dd:	eb 5a                	jmp    424639 <float64_div+0x8b9>
  4245df:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
  4245e3:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  4245e7:	48 39 f1             	cmp    %rsi,%rcx
  4245ea:	72 4d                	jb     424639 <float64_div+0x8b9>
  4245ec:	48 39 ce             	cmp    %rcx,%rsi
  4245ef:	73 30                	jae    424621 <float64_div+0x8a1>
  4245f1:	48 89 d0             	mov    %rdx,%rax
  4245f4:	eb 43                	jmp    424639 <float64_div+0x8b9>
  4245f6:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  4245fd:	00 00 00 
  424600:	48 09 f1             	or     %rsi,%rcx
  424603:	74 05                	je     42460a <float64_div+0x88a>
  424605:	48 89 d0             	mov    %rdx,%rax
  424608:	eb 2f                	jmp    424639 <float64_div+0x8b9>
  42460a:	48 8d 0c 12          	lea    (%rdx,%rdx,1),%rcx
  42460e:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  424612:	48 39 f1             	cmp    %rsi,%rcx
  424615:	72 22                	jb     424639 <float64_div+0x8b9>
  424617:	48 39 ce             	cmp    %rcx,%rsi
  42461a:	73 12                	jae    42462e <float64_div+0x8ae>
  42461c:	48 89 d0             	mov    %rdx,%rax
  42461f:	eb 18                	jmp    424639 <float64_div+0x8b9>
  424621:	48 39 c2             	cmp    %rax,%rdx
  424624:	72 03                	jb     424629 <float64_div+0x8a9>
  424626:	48 89 c2             	mov    %rax,%rdx
  424629:	48 89 d0             	mov    %rdx,%rax
  42462c:	eb 0b                	jmp    424639 <float64_div+0x8b9>
  42462e:	48 39 c2             	cmp    %rax,%rdx
  424631:	72 03                	jb     424636 <float64_div+0x8b6>
  424633:	48 89 c2             	mov    %rax,%rdx
  424636:	48 89 d0             	mov    %rdx,%rax
  424639:	5b                   	pop    %rbx
  42463a:	41 5c                	pop    %r12
  42463c:	41 5d                	pop    %r13
  42463e:	41 5e                	pop    %r14
  424640:	41 5f                	pop    %r15
  424642:	c3                   	retq   
  424643:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  42464a:	84 00 00 00 00 00 

0000000000424650 <float64_rem>:
  424650:	41 57                	push   %r15
  424652:	41 56                	push   %r14
  424654:	41 55                	push   %r13
  424656:	41 54                	push   %r12
  424658:	53                   	push   %rbx
  424659:	48 b8 00 00 00 00 00 	movabs $0x7ff8000000000000,%rax
  424660:	00 f8 7f 
  424663:	49 b9 00 00 00 00 00 	movabs $0x7ff0000000000000,%r9
  42466a:	00 f0 7f 
  42466d:	49 be ff ff ff ff ff 	movabs $0x7ffffffffffff,%r14
  424674:	ff 07 00 
  424677:	49 bc ff ff ff ff ff 	movabs $0xfffffffffffff,%r12
  42467e:	ff 0f 00 
  424681:	49 89 f8             	mov    %rdi,%r8
  424684:	4d 21 e0             	and    %r12,%r8
  424687:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  42468e:	48 89 fa             	mov    %rdi,%rdx
  424691:	48 d3 ea             	shr    %cl,%rdx
  424694:	48 81 e2 ff 07 00 00 	and    $0x7ff,%rdx
  42469b:	49 21 f4             	and    %rsi,%r12
  42469e:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  4246a5:	48 89 f3             	mov    %rsi,%rbx
  4246a8:	48 d3 eb             	shr    %cl,%rbx
  4246ab:	48 81 e3 ff 07 00 00 	and    $0x7ff,%rbx
  4246b2:	48 81 fa ff 07 00 00 	cmp    $0x7ff,%rdx
  4246b9:	75 5c                	jne    424717 <float64_rem+0xc7>
  4246bb:	4d 85 c0             	test   %r8,%r8
  4246be:	75 23                	jne    4246e3 <float64_rem+0x93>
  4246c0:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  4246c7:	00 00 00 
  4246ca:	48 21 cb             	and    %rcx,%rbx
  4246cd:	48 81 fb ff 07 00 00 	cmp    $0x7ff,%rbx
  4246d4:	0f 85 82 02 00 00    	jne    42495c <float64_rem+0x30c>
  4246da:	4d 85 e4             	test   %r12,%r12
  4246dd:	0f 84 79 02 00 00    	je     42495c <float64_rem+0x30c>
  4246e3:	48 89 fb             	mov    %rdi,%rbx
  4246e6:	48 21 c3             	and    %rax,%rbx
  4246e9:	48 31 c9             	xor    %rcx,%rcx
  4246ec:	4c 39 cb             	cmp    %r9,%rbx
  4246ef:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  4246f6:	00 00 00 
  4246f9:	0f 85 88 02 00 00    	jne    424987 <float64_rem+0x337>
  4246ff:	4c 85 f7             	test   %r14,%rdi
  424702:	0f 84 75 02 00 00    	je     42497d <float64_rem+0x32d>
  424708:	48 bb 01 00 00 00 00 	movabs $0x1,%rbx
  42470f:	00 00 00 
  424712:	e9 70 02 00 00       	jmpq   424987 <float64_rem+0x337>
  424717:	49 ba 00 00 00 00 01 	movabs $0x100000000,%r10
  42471e:	00 00 00 
  424721:	49 bb ff ff ff ff 00 	movabs $0xffffffff,%r11
  424728:	00 00 00 
  42472b:	4c 85 db             	test   %r11,%rbx
  42472e:	0f 85 cb 00 00 00    	jne    4247ff <float64_rem+0x1af>
  424734:	4d 85 e4             	test   %r12,%r12
  424737:	0f 84 1f 02 00 00    	je     42495c <float64_rem+0x30c>
  42473d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424744:	4c 89 e0             	mov    %r12,%rax
  424747:	48 d3 e8             	shr    %cl,%rax
  42474a:	4d 39 d4             	cmp    %r10,%r12
  42474d:	72 03                	jb     424752 <float64_rem+0x102>
  42474f:	48 89 c6             	mov    %rax,%rsi
  424752:	49 b9 ff ff ff ff 00 	movabs $0xffffffff,%r9
  424759:	00 00 00 
  42475c:	48 89 f0             	mov    %rsi,%rax
  42475f:	4c 21 c8             	and    %r9,%rax
  424762:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
  424768:	4d 19 f6             	sbb    %r14,%r14
  42476b:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  424772:	48 89 f3             	mov    %rsi,%rbx
  424775:	48 d3 e3             	shl    %cl,%rbx
  424778:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
  42477e:	72 03                	jb     424783 <float64_rem+0x133>
  424780:	48 89 f3             	mov    %rsi,%rbx
  424783:	49 21 d9             	and    %rbx,%r9
  424786:	49 83 e6 10          	and    $0x10,%r14
  42478a:	49 81 f9 ff ff ff 00 	cmp    $0xffffff,%r9
  424791:	77 0e                	ja     4247a1 <float64_rem+0x151>
  424793:	49 83 ce 08          	or     $0x8,%r14
  424797:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  42479e:	48 d3 e3             	shl    %cl,%rbx
  4247a1:	48 b8 00 00 00 ff 00 	movabs $0xff000000,%rax
  4247a8:	00 00 00 
  4247ab:	48 21 d8             	and    %rbx,%rax
  4247ae:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  4247b5:	48 d3 e8             	shr    %cl,%rax
  4247b8:	48 0f be 80 f0 8e 42 	movsbq 0x428ef0(%rax),%rax
  4247bf:	00 
  4247c0:	4d 39 d4             	cmp    %r10,%r12
  4247c3:	48 c7 c1 15 00 00 00 	mov    $0x15,%rcx
  4247ca:	72 07                	jb     4247d3 <float64_rem+0x183>
  4247cc:	48 c7 c1 f5 ff ff ff 	mov    $0xfffffffffffffff5,%rcx
  4247d3:	49 01 ce             	add    %rcx,%r14
  4247d6:	49 01 c6             	add    %rax,%r14
  4247d9:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  4247e0:	49 d3 e6             	shl    %cl,%r14
  4247e3:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  4247ea:	49 d3 fe             	sar    %cl,%r14
  4247ed:	4c 89 f1             	mov    %r14,%rcx
  4247f0:	49 d3 e4             	shl    %cl,%r12
  4247f3:	48 c7 c3 01 00 00 00 	mov    $0x1,%rbx
  4247fa:	4c 29 f3             	sub    %r14,%rbx
  4247fd:	eb 4c                	jmp    42484b <float64_rem+0x1fb>
  4247ff:	48 89 d9             	mov    %rbx,%rcx
  424802:	4c 21 d9             	and    %r11,%rcx
  424805:	48 81 f9 ff 07 00 00 	cmp    $0x7ff,%rcx
  42480c:	75 3d                	jne    42484b <float64_rem+0x1fb>
  42480e:	4d 85 e4             	test   %r12,%r12
  424811:	0f 84 72 08 00 00    	je     425089 <float64_rem+0xa39>
  424817:	48 89 fb             	mov    %rdi,%rbx
  42481a:	48 21 c3             	and    %rax,%rbx
  42481d:	48 31 c9             	xor    %rcx,%rcx
  424820:	4c 39 cb             	cmp    %r9,%rbx
  424823:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  42482a:	00 00 00 
  42482d:	0f 85 79 07 00 00    	jne    424fac <float64_rem+0x95c>
  424833:	4c 85 f7             	test   %r14,%rdi
  424836:	0f 84 66 07 00 00    	je     424fa2 <float64_rem+0x952>
  42483c:	48 bb 01 00 00 00 00 	movabs $0x1,%rbx
  424843:	00 00 00 
  424846:	e9 61 07 00 00       	jmpq   424fac <float64_rem+0x95c>
  42484b:	4c 85 da             	test   %r11,%rdx
  42484e:	0f 85 ce 00 00 00    	jne    424922 <float64_rem+0x2d2>
  424854:	4d 85 c0             	test   %r8,%r8
  424857:	0f 84 2c 08 00 00    	je     425089 <float64_rem+0xa39>
  42485d:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424864:	4c 89 c0             	mov    %r8,%rax
  424867:	48 d3 e8             	shr    %cl,%rax
  42486a:	4d 39 d0             	cmp    %r10,%r8
  42486d:	49 89 f9             	mov    %rdi,%r9
  424870:	72 03                	jb     424875 <float64_rem+0x225>
  424872:	49 89 c1             	mov    %rax,%r9
  424875:	49 be ff ff ff ff 00 	movabs $0xffffffff,%r14
  42487c:	00 00 00 
  42487f:	4c 89 ce             	mov    %r9,%rsi
  424882:	4c 21 f6             	and    %r14,%rsi
  424885:	48 81 fe 00 00 01 00 	cmp    $0x10000,%rsi
  42488c:	48 19 c0             	sbb    %rax,%rax
  42488f:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  424896:	4c 89 ca             	mov    %r9,%rdx
  424899:	48 d3 e2             	shl    %cl,%rdx
  42489c:	48 81 fe 00 00 01 00 	cmp    $0x10000,%rsi
  4248a3:	72 03                	jb     4248a8 <float64_rem+0x258>
  4248a5:	4c 89 ca             	mov    %r9,%rdx
  4248a8:	49 21 d6             	and    %rdx,%r14
  4248ab:	48 83 e0 10          	and    $0x10,%rax
  4248af:	49 81 fe ff ff ff 00 	cmp    $0xffffff,%r14
  4248b6:	77 0e                	ja     4248c6 <float64_rem+0x276>
  4248b8:	48 83 c8 08          	or     $0x8,%rax
  4248bc:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4248c3:	48 d3 e2             	shl    %cl,%rdx
  4248c6:	48 be 00 00 00 ff 00 	movabs $0xff000000,%rsi
  4248cd:	00 00 00 
  4248d0:	48 21 d6             	and    %rdx,%rsi
  4248d3:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  4248da:	48 d3 ee             	shr    %cl,%rsi
  4248dd:	48 0f be 8e f0 8e 42 	movsbq 0x428ef0(%rsi),%rcx
  4248e4:	00 
  4248e5:	4d 39 d0             	cmp    %r10,%r8
  4248e8:	48 c7 c2 15 00 00 00 	mov    $0x15,%rdx
  4248ef:	72 07                	jb     4248f8 <float64_rem+0x2a8>
  4248f1:	48 c7 c2 f5 ff ff ff 	mov    $0xfffffffffffffff5,%rdx
  4248f8:	48 01 d0             	add    %rdx,%rax
  4248fb:	48 01 c8             	add    %rcx,%rax
  4248fe:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  424905:	48 d3 e0             	shl    %cl,%rax
  424908:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  42490f:	48 d3 f8             	sar    %cl,%rax
  424912:	48 89 c1             	mov    %rax,%rcx
  424915:	49 d3 e0             	shl    %cl,%r8
  424918:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
  42491f:	48 29 c2             	sub    %rax,%rdx
  424922:	49 be 00 00 00 00 00 	movabs $0x8000000000000000,%r14
  424929:	00 00 80 
  42492c:	48 c7 c1 0b 00 00 00 	mov    $0xb,%rcx
  424933:	49 d3 e0             	shl    %cl,%r8
  424936:	4d 09 f0             	or     %r14,%r8
  424939:	48 c7 c1 0b 00 00 00 	mov    $0xb,%rcx
  424940:	4c 89 e6             	mov    %r12,%rsi
  424943:	48 d3 e6             	shl    %cl,%rsi
  424946:	49 89 d1             	mov    %rdx,%r9
  424949:	49 29 d9             	sub    %rbx,%r9
  42494c:	0f 88 e8 00 00 00    	js     424a3a <float64_rem+0x3ea>
  424952:	48 89 7c 24 d8       	mov    %rdi,-0x28(%rsp)
  424957:	e9 0e 01 00 00       	jmpq   424a6a <float64_rem+0x41a>
  42495c:	48 0f be 05 7d 7d 20 	movsbq 0x207d7d(%rip),%rax        # 62c6e1 <float_exception_flags>
  424963:	00 
  424964:	48 83 c8 01          	or     $0x1,%rax
  424968:	88 05 73 7d 20 00    	mov    %al,0x207d73(%rip)        # 62c6e1 <float_exception_flags>
  42496e:	48 bf 00 00 00 00 00 	movabs $0xfff8000000000000,%rdi
  424975:	00 f8 ff 
  424978:	e9 0c 07 00 00       	jmpq   425089 <float64_rem+0xa39>
  42497d:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  424984:	00 00 00 
  424987:	48 21 f0             	and    %rsi,%rax
  42498a:	4c 39 c8             	cmp    %r9,%rax
  42498d:	75 1b                	jne    4249aa <float64_rem+0x35a>
  42498f:	4c 85 f6             	test   %r14,%rsi
  424992:	74 0c                	je     4249a0 <float64_rem+0x350>
  424994:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  42499b:	00 00 00 
  42499e:	eb 0a                	jmp    4249aa <float64_rem+0x35a>
  4249a0:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  4249a7:	00 00 00 
  4249aa:	49 ff c6             	inc    %r14
  4249ad:	48 89 d8             	mov    %rbx,%rax
  4249b0:	48 09 c8             	or     %rcx,%rax
  4249b3:	48 83 f8 01          	cmp    $0x1,%rax
  4249b7:	75 12                	jne    4249cb <float64_rem+0x37b>
  4249b9:	48 0f be 05 20 7d 20 	movsbq 0x207d20(%rip),%rax        # 62c6e1 <float_exception_flags>
  4249c0:	00 
  4249c1:	48 83 c8 01          	or     $0x1,%rax
  4249c5:	88 05 16 7d 20 00    	mov    %al,0x207d16(%rip)        # 62c6e1 <float_exception_flags>
  4249cb:	48 89 f8             	mov    %rdi,%rax
  4249ce:	4c 09 f0             	or     %r14,%rax
  4249d1:	49 09 f6             	or     %rsi,%r14
  4249d4:	48 85 db             	test   %rbx,%rbx
  4249d7:	74 29                	je     424a02 <float64_rem+0x3b2>
  4249d9:	48 85 c9             	test   %rcx,%rcx
  4249dc:	0f 85 8e 05 00 00    	jne    424f70 <float64_rem+0x920>
  4249e2:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
  4249e9:	ff ff 7f 
  4249ec:	48 21 ce             	and    %rcx,%rsi
  4249ef:	49 21 c9             	and    %rcx,%r9
  4249f2:	4c 39 ce             	cmp    %r9,%rsi
  4249f5:	77 03                	ja     4249fa <float64_rem+0x3aa>
  4249f7:	49 89 c6             	mov    %rax,%r14
  4249fa:	4c 89 f7             	mov    %r14,%rdi
  4249fd:	e9 87 06 00 00       	jmpq   425089 <float64_rem+0xa39>
  424a02:	48 bb ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rbx
  424a09:	ff ff 7f 
  424a0c:	48 21 df             	and    %rbx,%rdi
  424a0f:	49 21 d9             	and    %rbx,%r9
  424a12:	4c 39 cf             	cmp    %r9,%rdi
  424a15:	76 1b                	jbe    424a32 <float64_rem+0x3e2>
  424a17:	48 21 de             	and    %rbx,%rsi
  424a1a:	4c 39 ce             	cmp    %r9,%rsi
  424a1d:	0f 87 36 05 00 00    	ja     424f59 <float64_rem+0x909>
  424a23:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  424a2a:	00 00 00 
  424a2d:	e9 31 05 00 00       	jmpq   424f63 <float64_rem+0x913>
  424a32:	4c 89 f7             	mov    %r14,%rdi
  424a35:	e9 4f 06 00 00       	jmpq   425089 <float64_rem+0xa39>
  424a3a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424a41:	4c 89 c8             	mov    %r9,%rax
  424a44:	48 d3 e0             	shl    %cl,%rax
  424a47:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424a4e:	48 d3 f8             	sar    %cl,%rax
  424a51:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  424a55:	0f 8c 2e 06 00 00    	jl     425089 <float64_rem+0xa39>
  424a5b:	48 89 7c 24 d8       	mov    %rdi,-0x28(%rsp)
  424a60:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  424a67:	49 d3 e8             	shr    %cl,%r8
  424a6a:	49 09 f6             	or     %rsi,%r14
  424a6d:	4d 39 f0             	cmp    %r14,%r8
  424a70:	49 bf 00 00 00 00 ff 	movabs $0xffffffff00000000,%r15
  424a77:	ff ff ff 
  424a7a:	48 89 d7             	mov    %rdx,%rdi
  424a7d:	72 0c                	jb     424a8b <float64_rem+0x43b>
  424a7f:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  424a86:	00 00 00 
  424a89:	eb 0a                	jmp    424a95 <float64_rem+0x445>
  424a8b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  424a92:	00 00 00 
  424a95:	48 89 74 24 e0       	mov    %rsi,-0x20(%rsp)
  424a9a:	4c 89 64 24 e8       	mov    %r12,-0x18(%rsp)
  424a9f:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
  424aa4:	4c 89 f1             	mov    %r14,%rcx
  424aa7:	73 03                	jae    424aac <float64_rem+0x45c>
  424aa9:	48 31 c9             	xor    %rcx,%rcx
  424aac:	49 29 c8             	sub    %rcx,%r8
  424aaf:	49 83 c1 c0          	add    $0xffffffffffffffc0,%r9
  424ab3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424aba:	4c 89 ca             	mov    %r9,%rdx
  424abd:	48 d3 e2             	shl    %cl,%rdx
  424ac0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424ac7:	48 d3 fa             	sar    %cl,%rdx
  424aca:	48 85 d2             	test   %rdx,%rdx
  424acd:	0f 8e d1 01 00 00    	jle    424ca4 <float64_rem+0x654>
  424ad3:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424ada:	4d 89 f5             	mov    %r14,%r13
  424add:	49 d3 ed             	shr    %cl,%r13
  424ae0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424ae7:	4d 89 ec             	mov    %r13,%r12
  424aea:	49 d3 e4             	shl    %cl,%r12
  424aed:	48 c7 c1 2b 00 00 00 	mov    $0x2b,%rcx
  424af4:	4c 8b 54 24 e8       	mov    -0x18(%rsp),%r10
  424af9:	49 d3 e2             	shl    %cl,%r10
  424afc:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  424b03:	4c 89 f6             	mov    %r14,%rsi
  424b06:	48 d3 ee             	shr    %cl,%rsi
  424b09:	48 8b 44 24 f0       	mov    -0x10(%rsp),%rax
  424b0e:	48 f7 d8             	neg    %rax
  424b11:	48 8d 44 07 bf       	lea    -0x41(%rdi,%rax,1),%rax
  424b16:	48 89 44 24 c8       	mov    %rax,-0x38(%rsp)
  424b1b:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
  424b22:	00 00 00 
  424b25:	48 89 c3             	mov    %rax,%rbx
  424b28:	48 21 cb             	and    %rcx,%rbx
  424b2b:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  424b32:	48 89 d8             	mov    %rbx,%rax
  424b35:	48 d3 e8             	shr    %cl,%rax
  424b38:	48 b9 09 21 84 10 42 	movabs $0x8421084210842109,%rcx
  424b3f:	08 21 84 
  424b42:	48 f7 e1             	mul    %rcx
  424b45:	48 c7 c1 04 00 00 00 	mov    $0x4,%rcx
  424b4c:	48 d3 ea             	shr    %cl,%rdx
  424b4f:	48 b8 00 f8 ff ff 00 	movabs $0xfffff800,%rax
  424b56:	00 00 00 
  424b59:	48 23 44 24 e0       	and    -0x20(%rsp),%rax
  424b5e:	48 89 44 24 f8       	mov    %rax,-0x8(%rsp)
  424b63:	48 f7 de             	neg    %rsi
  424b66:	48 83 c7 82          	add    $0xffffffffffffff82,%rdi
  424b6a:	48 89 7c 24 d0       	mov    %rdi,-0x30(%rsp)
  424b6f:	48 6b c2 3e          	imul   $0x3e,%rdx,%rax
  424b73:	48 29 c3             	sub    %rax,%rbx
  424b76:	48 89 df             	mov    %rbx,%rdi
  424b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  424b80:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  424b87:	4d 39 c6             	cmp    %r8,%r14
  424b8a:	0f 86 b7 00 00 00    	jbe    424c47 <float64_rem+0x5f7>
  424b90:	4d 39 c4             	cmp    %r8,%r12
  424b93:	49 bb 00 00 00 00 ff 	movabs $0xffffffff00000000,%r11
  424b9a:	ff ff ff 
  424b9d:	76 16                	jbe    424bb5 <float64_rem+0x565>
  424b9f:	48 31 d2             	xor    %rdx,%rdx
  424ba2:	4c 89 c0             	mov    %r8,%rax
  424ba5:	49 f7 f5             	div    %r13
  424ba8:	49 89 c3             	mov    %rax,%r11
  424bab:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424bb2:	49 d3 e3             	shl    %cl,%r11
  424bb5:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424bbc:	4c 89 d8             	mov    %r11,%rax
  424bbf:	48 d3 e8             	shr    %cl,%rax
  424bc2:	48 89 c3             	mov    %rax,%rbx
  424bc5:	48 0f af 5c 24 f8    	imul   -0x8(%rsp),%rbx
  424bcb:	49 0f af c5          	imul   %r13,%rax
  424bcf:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424bd6:	48 89 da             	mov    %rbx,%rdx
  424bd9:	48 d3 ea             	shr    %cl,%rdx
  424bdc:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424be3:	48 d3 e3             	shl    %cl,%rbx
  424be6:	48 f7 db             	neg    %rbx
  424be9:	48 19 c9             	sbb    %rcx,%rcx
  424bec:	49 29 c0             	sub    %rax,%r8
  424bef:	49 29 d0             	sub    %rdx,%r8
  424bf2:	49 01 c8             	add    %rcx,%r8
  424bf5:	79 1e                	jns    424c15 <float64_rem+0x5c5>
  424bf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  424bfe:	00 00 
  424c00:	4d 01 fb             	add    %r15,%r11
  424c03:	4c 01 d3             	add    %r10,%rbx
  424c06:	48 19 c0             	sbb    %rax,%rax
  424c09:	48 83 e0 01          	and    $0x1,%rax
  424c0d:	4d 01 e8             	add    %r13,%r8
  424c10:	49 01 c0             	add    %rax,%r8
  424c13:	78 eb                	js     424c00 <float64_rem+0x5b0>
  424c15:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424c1c:	49 d3 e0             	shl    %cl,%r8
  424c1f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424c26:	48 d3 eb             	shr    %cl,%rbx
  424c29:	4c 09 c3             	or     %r8,%rbx
  424c2c:	49 39 dc             	cmp    %rbx,%r12
  424c2f:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  424c36:	00 00 00 
  424c39:	76 09                	jbe    424c44 <float64_rem+0x5f4>
  424c3b:	48 31 d2             	xor    %rdx,%rdx
  424c3e:	48 89 d8             	mov    %rbx,%rax
  424c41:	49 f7 f5             	div    %r13
  424c44:	4c 09 d8             	or     %r11,%rax
  424c47:	48 83 f8 02          	cmp    $0x2,%rax
  424c4b:	77 13                	ja     424c60 <float64_rem+0x610>
  424c4d:	48 31 c0             	xor    %rax,%rax
  424c50:	eb 12                	jmp    424c64 <float64_rem+0x614>
  424c52:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  424c59:	1f 84 00 00 00 00 00 
  424c60:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
  424c64:	49 89 c0             	mov    %rax,%r8
  424c67:	4c 0f af c6          	imul   %rsi,%r8
  424c6b:	49 83 c1 c2          	add    $0xffffffffffffffc2,%r9
  424c6f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424c76:	4c 89 ca             	mov    %r9,%rdx
  424c79:	48 d3 e2             	shl    %cl,%rdx
  424c7c:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424c83:	48 d3 fa             	sar    %cl,%rdx
  424c86:	48 85 d2             	test   %rdx,%rdx
  424c89:	0f 8f f1 fe ff ff    	jg     424b80 <float64_rem+0x530>
  424c8f:	48 8b 4c 24 d0       	mov    -0x30(%rsp),%rcx
  424c94:	48 2b 4c 24 f0       	sub    -0x10(%rsp),%rcx
  424c99:	48 2b 7c 24 c8       	sub    -0x38(%rsp),%rdi
  424c9e:	48 01 cf             	add    %rcx,%rdi
  424ca1:	49 89 f9             	mov    %rdi,%r9
  424ca4:	49 8d 51 40          	lea    0x40(%r9),%rdx
  424ca8:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424caf:	48 d3 e2             	shl    %cl,%rdx
  424cb2:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424cb9:	48 d3 fa             	sar    %cl,%rdx
  424cbc:	48 85 d2             	test   %rdx,%rdx
  424cbf:	49 bc ff ff ff ff 00 	movabs $0xffffffff,%r12
  424cc6:	00 00 00 
  424cc9:	48 8b 7c 24 e8       	mov    -0x18(%rsp),%rdi
  424cce:	48 8b 5c 24 e0       	mov    -0x20(%rsp),%rbx
  424cd3:	0f 8e f2 00 00 00    	jle    424dcb <float64_rem+0x77b>
  424cd9:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  424ce0:	4d 39 c6             	cmp    %r8,%r14
  424ce3:	0f 86 d7 00 00 00    	jbe    424dc0 <float64_rem+0x770>
  424ce9:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424cf0:	4c 89 f6             	mov    %r14,%rsi
  424cf3:	48 d3 ee             	shr    %cl,%rsi
  424cf6:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424cfd:	49 89 f2             	mov    %rsi,%r10
  424d00:	49 d3 e2             	shl    %cl,%r10
  424d03:	4d 39 c2             	cmp    %r8,%r10
  424d06:	4d 89 fb             	mov    %r15,%r11
  424d09:	76 16                	jbe    424d21 <float64_rem+0x6d1>
  424d0b:	48 31 d2             	xor    %rdx,%rdx
  424d0e:	4c 89 c0             	mov    %r8,%rax
  424d11:	48 f7 f6             	div    %rsi
  424d14:	49 89 c3             	mov    %rax,%r11
  424d17:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424d1e:	49 d3 e3             	shl    %cl,%r11
  424d21:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424d28:	4c 89 da             	mov    %r11,%rdx
  424d2b:	48 d3 ea             	shr    %cl,%rdx
  424d2e:	48 b8 00 f8 ff ff 00 	movabs $0xfffff800,%rax
  424d35:	00 00 00 
  424d38:	48 21 c3             	and    %rax,%rbx
  424d3b:	48 0f af da          	imul   %rdx,%rbx
  424d3f:	48 0f af d6          	imul   %rsi,%rdx
  424d43:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424d4a:	49 89 dd             	mov    %rbx,%r13
  424d4d:	49 d3 ed             	shr    %cl,%r13
  424d50:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424d57:	48 d3 e3             	shl    %cl,%rbx
  424d5a:	48 f7 db             	neg    %rbx
  424d5d:	48 19 c9             	sbb    %rcx,%rcx
  424d60:	4c 89 c0             	mov    %r8,%rax
  424d63:	48 29 d0             	sub    %rdx,%rax
  424d66:	4c 29 e8             	sub    %r13,%rax
  424d69:	48 01 c8             	add    %rcx,%rax
  424d6c:	79 27                	jns    424d95 <float64_rem+0x745>
  424d6e:	48 c7 c1 2b 00 00 00 	mov    $0x2b,%rcx
  424d75:	48 d3 e7             	shl    %cl,%rdi
  424d78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  424d7f:	00 
  424d80:	4d 01 fb             	add    %r15,%r11
  424d83:	48 01 fb             	add    %rdi,%rbx
  424d86:	48 19 c9             	sbb    %rcx,%rcx
  424d89:	48 83 e1 01          	and    $0x1,%rcx
  424d8d:	48 01 f0             	add    %rsi,%rax
  424d90:	48 01 c8             	add    %rcx,%rax
  424d93:	78 eb                	js     424d80 <float64_rem+0x730>
  424d95:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424d9c:	48 d3 e0             	shl    %cl,%rax
  424d9f:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424da6:	48 d3 eb             	shr    %cl,%rbx
  424da9:	48 09 c3             	or     %rax,%rbx
  424dac:	49 39 da             	cmp    %rbx,%r10
  424daf:	4c 89 e0             	mov    %r12,%rax
  424db2:	76 09                	jbe    424dbd <float64_rem+0x76d>
  424db4:	48 31 d2             	xor    %rdx,%rdx
  424db7:	48 89 d8             	mov    %rbx,%rax
  424dba:	48 f7 f6             	div    %rsi
  424dbd:	4c 09 d8             	or     %r11,%rax
  424dc0:	48 83 f8 02          	cmp    $0x2,%rax
  424dc4:	77 2a                	ja     424df0 <float64_rem+0x7a0>
  424dc6:	48 31 c0             	xor    %rax,%rax
  424dc9:	eb 29                	jmp    424df4 <float64_rem+0x7a4>
  424dcb:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  424dd2:	49 d3 e8             	shr    %cl,%r8
  424dd5:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  424ddc:	49 d3 ee             	shr    %cl,%r14
  424ddf:	4c 8b 54 24 d8       	mov    -0x28(%rsp),%r10
  424de4:	49 bb 00 00 00 00 01 	movabs $0x100000000,%r11
  424deb:	00 00 00 
  424dee:	eb 47                	jmp    424e37 <float64_rem+0x7e7>
  424df0:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
  424df4:	4c 8b 54 24 d8       	mov    -0x28(%rsp),%r10
  424df9:	49 bb 00 00 00 00 01 	movabs $0x100000000,%r11
  424e00:	00 00 00 
  424e03:	4c 89 c9             	mov    %r9,%rcx
  424e06:	48 f7 d9             	neg    %rcx
  424e09:	4c 21 e1             	and    %r12,%rcx
  424e0c:	48 d3 e8             	shr    %cl,%rax
  424e0f:	48 c7 c1 02 00 00 00 	mov    $0x2,%rcx
  424e16:	49 d3 ee             	shr    %cl,%r14
  424e19:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  424e20:	49 d3 e8             	shr    %cl,%r8
  424e23:	49 83 c1 3f          	add    $0x3f,%r9
  424e27:	4c 89 c9             	mov    %r9,%rcx
  424e2a:	49 d3 e0             	shl    %cl,%r8
  424e2d:	48 89 c1             	mov    %rax,%rcx
  424e30:	49 0f af ce          	imul   %r14,%rcx
  424e34:	49 29 c8             	sub    %rcx,%r8
  424e37:	4b 8d 0c 00          	lea    (%r8,%r8,1),%rcx
  424e3b:	48 f7 d9             	neg    %rcx
  424e3e:	4b 8d 14 36          	lea    (%r14,%r14,1),%rdx
  424e42:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  424e49:	1f 84 00 00 00 00 00 
  424e50:	48 ff c0             	inc    %rax
  424e53:	48 01 d1             	add    %rdx,%rcx
  424e56:	4d 29 f0             	sub    %r14,%r8
  424e59:	79 f5                	jns    424e50 <float64_rem+0x800>
  424e5b:	49 39 ce             	cmp    %rcx,%r14
  424e5e:	78 0b                	js     424e6b <float64_rem+0x81b>
  424e60:	49 39 ce             	cmp    %rcx,%r14
  424e63:	75 09                	jne    424e6e <float64_rem+0x81e>
  424e65:	48 83 e0 01          	and    $0x1,%rax
  424e69:	74 03                	je     424e6e <float64_rem+0x81e>
  424e6b:	4d 01 f0             	add    %r14,%r8
  424e6e:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  424e75:	4c 89 c0             	mov    %r8,%rax
  424e78:	48 d3 f8             	sar    %cl,%rax
  424e7b:	49 8d 14 00          	lea    (%r8,%rax,1),%rdx
  424e7f:	48 31 c2             	xor    %rax,%rdx
  424e82:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  424e89:	48 89 d0             	mov    %rdx,%rax
  424e8c:	48 d3 e8             	shr    %cl,%rax
  424e8f:	4c 39 da             	cmp    %r11,%rdx
  424e92:	48 89 d6             	mov    %rdx,%rsi
  424e95:	72 03                	jb     424e9a <float64_rem+0x84a>
  424e97:	48 89 c6             	mov    %rax,%rsi
  424e9a:	48 89 f7             	mov    %rsi,%rdi
  424e9d:	4c 21 e7             	and    %r12,%rdi
  424ea0:	48 81 ff 00 00 01 00 	cmp    $0x10000,%rdi
  424ea7:	48 19 c0             	sbb    %rax,%rax
  424eaa:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  424eb1:	48 89 f3             	mov    %rsi,%rbx
  424eb4:	48 d3 e3             	shl    %cl,%rbx
  424eb7:	48 81 ff 00 00 01 00 	cmp    $0x10000,%rdi
  424ebe:	72 03                	jb     424ec3 <float64_rem+0x873>
  424ec0:	48 89 f3             	mov    %rsi,%rbx
  424ec3:	4d 31 d0             	xor    %r10,%r8
  424ec6:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  424ecd:	49 d3 e8             	shr    %cl,%r8
  424ed0:	49 21 dc             	and    %rbx,%r12
  424ed3:	48 83 e0 10          	and    $0x10,%rax
  424ed7:	49 81 fc ff ff ff 00 	cmp    $0xffffff,%r12
  424ede:	77 0e                	ja     424eee <float64_rem+0x89e>
  424ee0:	48 83 c8 08          	or     $0x8,%rax
  424ee4:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  424eeb:	48 d3 e3             	shl    %cl,%rbx
  424eee:	48 8b 74 24 f0       	mov    -0x10(%rsp),%rsi
  424ef3:	48 bf 00 00 00 ff 00 	movabs $0xff000000,%rdi
  424efa:	00 00 00 
  424efd:	48 21 df             	and    %rbx,%rdi
  424f00:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  424f07:	48 d3 ef             	shr    %cl,%rdi
  424f0a:	48 0f be 8f f0 8e 42 	movsbq 0x428ef0(%rdi),%rcx
  424f11:	00 
  424f12:	4c 39 da             	cmp    %r11,%rdx
  424f15:	48 c7 c7 1f 00 00 00 	mov    $0x1f,%rdi
  424f1c:	72 07                	jb     424f25 <float64_rem+0x8d5>
  424f1e:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
  424f25:	48 01 f8             	add    %rdi,%rax
  424f28:	48 01 c8             	add    %rcx,%rax
  424f2b:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  424f32:	48 d3 e0             	shl    %cl,%rax
  424f35:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  424f3c:	48 d3 f8             	sar    %cl,%rax
  424f3f:	48 29 c6             	sub    %rax,%rsi
  424f42:	48 89 c1             	mov    %rax,%rcx
  424f45:	48 d3 e2             	shl    %cl,%rdx
  424f48:	4c 89 c7             	mov    %r8,%rdi
  424f4b:	5b                   	pop    %rbx
  424f4c:	41 5c                	pop    %r12
  424f4e:	41 5d                	pop    %r13
  424f50:	41 5e                	pop    %r14
  424f52:	41 5f                	pop    %r15
  424f54:	e9 67 eb ff ff       	jmpq   423ac0 <roundAndPackFloat64>
  424f59:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  424f60:	00 00 00 
  424f63:	48 09 f1             	or     %rsi,%rcx
  424f66:	74 08                	je     424f70 <float64_rem+0x920>
  424f68:	48 89 c7             	mov    %rax,%rdi
  424f6b:	e9 19 01 00 00       	jmpq   425089 <float64_rem+0xa39>
  424f70:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  424f74:	4b 8d 0c 36          	lea    (%r14,%r14,1),%rcx
  424f78:	48 39 ce             	cmp    %rcx,%rsi
  424f7b:	73 08                	jae    424f85 <float64_rem+0x935>
  424f7d:	4c 89 f7             	mov    %r14,%rdi
  424f80:	e9 04 01 00 00       	jmpq   425089 <float64_rem+0xa39>
  424f85:	48 39 f1             	cmp    %rsi,%rcx
  424f88:	73 08                	jae    424f92 <float64_rem+0x942>
  424f8a:	48 89 c7             	mov    %rax,%rdi
  424f8d:	e9 f7 00 00 00       	jmpq   425089 <float64_rem+0xa39>
  424f92:	4c 39 f0             	cmp    %r14,%rax
  424f95:	72 03                	jb     424f9a <float64_rem+0x94a>
  424f97:	4c 89 f0             	mov    %r14,%rax
  424f9a:	48 89 c7             	mov    %rax,%rdi
  424f9d:	e9 e7 00 00 00       	jmpq   425089 <float64_rem+0xa39>
  424fa2:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  424fa9:	00 00 00 
  424fac:	48 21 f0             	and    %rsi,%rax
  424faf:	4c 39 c8             	cmp    %r9,%rax
  424fb2:	75 1b                	jne    424fcf <float64_rem+0x97f>
  424fb4:	4c 85 f6             	test   %r14,%rsi
  424fb7:	74 0c                	je     424fc5 <float64_rem+0x975>
  424fb9:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  424fc0:	00 00 00 
  424fc3:	eb 0a                	jmp    424fcf <float64_rem+0x97f>
  424fc5:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  424fcc:	00 00 00 
  424fcf:	49 ff c6             	inc    %r14
  424fd2:	48 89 d8             	mov    %rbx,%rax
  424fd5:	48 09 c8             	or     %rcx,%rax
  424fd8:	48 83 f8 01          	cmp    $0x1,%rax
  424fdc:	75 12                	jne    424ff0 <float64_rem+0x9a0>
  424fde:	48 0f be 05 fb 76 20 	movsbq 0x2076fb(%rip),%rax        # 62c6e1 <float_exception_flags>
  424fe5:	00 
  424fe6:	48 83 c8 01          	or     $0x1,%rax
  424fea:	88 05 f1 76 20 00    	mov    %al,0x2076f1(%rip)        # 62c6e1 <float_exception_flags>
  424ff0:	48 89 f8             	mov    %rdi,%rax
  424ff3:	4c 09 f0             	or     %r14,%rax
  424ff6:	49 09 f6             	or     %rsi,%r14
  424ff9:	48 85 db             	test   %rbx,%rbx
  424ffc:	74 22                	je     425020 <float64_rem+0x9d0>
  424ffe:	48 85 c9             	test   %rcx,%rcx
  425001:	75 5f                	jne    425062 <float64_rem+0xa12>
  425003:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
  42500a:	ff ff 7f 
  42500d:	48 21 ce             	and    %rcx,%rsi
  425010:	49 21 c9             	and    %rcx,%r9
  425013:	4c 39 ce             	cmp    %r9,%rsi
  425016:	77 03                	ja     42501b <float64_rem+0x9cb>
  425018:	49 89 c6             	mov    %rax,%r14
  42501b:	4c 89 f7             	mov    %r14,%rdi
  42501e:	eb 69                	jmp    425089 <float64_rem+0xa39>
  425020:	48 bb ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rbx
  425027:	ff ff 7f 
  42502a:	48 21 df             	and    %rbx,%rdi
  42502d:	49 21 d9             	and    %rbx,%r9
  425030:	4c 39 cf             	cmp    %r9,%rdi
  425033:	76 14                	jbe    425049 <float64_rem+0x9f9>
  425035:	48 21 de             	and    %rbx,%rsi
  425038:	4c 39 ce             	cmp    %r9,%rsi
  42503b:	77 11                	ja     42504e <float64_rem+0x9fe>
  42503d:	48 be 01 00 00 00 00 	movabs $0x1,%rsi
  425044:	00 00 00 
  425047:	eb 0f                	jmp    425058 <float64_rem+0xa08>
  425049:	4c 89 f7             	mov    %r14,%rdi
  42504c:	eb 3b                	jmp    425089 <float64_rem+0xa39>
  42504e:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
  425055:	00 00 00 
  425058:	48 09 f1             	or     %rsi,%rcx
  42505b:	74 05                	je     425062 <float64_rem+0xa12>
  42505d:	48 89 c7             	mov    %rax,%rdi
  425060:	eb 27                	jmp    425089 <float64_rem+0xa39>
  425062:	48 8d 34 00          	lea    (%rax,%rax,1),%rsi
  425066:	4b 8d 0c 36          	lea    (%r14,%r14,1),%rcx
  42506a:	48 39 ce             	cmp    %rcx,%rsi
  42506d:	73 05                	jae    425074 <float64_rem+0xa24>
  42506f:	4c 89 f7             	mov    %r14,%rdi
  425072:	eb 15                	jmp    425089 <float64_rem+0xa39>
  425074:	48 39 f1             	cmp    %rsi,%rcx
  425077:	73 05                	jae    42507e <float64_rem+0xa2e>
  425079:	48 89 c7             	mov    %rax,%rdi
  42507c:	eb 0b                	jmp    425089 <float64_rem+0xa39>
  42507e:	4c 39 f0             	cmp    %r14,%rax
  425081:	72 03                	jb     425086 <float64_rem+0xa36>
  425083:	4c 89 f0             	mov    %r14,%rax
  425086:	48 89 c7             	mov    %rax,%rdi
  425089:	48 89 f8             	mov    %rdi,%rax
  42508c:	5b                   	pop    %rbx
  42508d:	41 5c                	pop    %r12
  42508f:	41 5d                	pop    %r13
  425091:	41 5e                	pop    %r14
  425093:	41 5f                	pop    %r15
  425095:	c3                   	retq   
  425096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  42509d:	00 00 00 

00000000004250a0 <float64_sqrt>:
  4250a0:	41 56                	push   %r14
  4250a2:	53                   	push   %rbx
  4250a3:	49 b9 ff ff ff ff ff 	movabs $0xfffffffffffff,%r9
  4250aa:	ff 0f 00 
  4250ad:	48 89 fa             	mov    %rdi,%rdx
  4250b0:	4c 21 ca             	and    %r9,%rdx
  4250b3:	48 c7 c1 34 00 00 00 	mov    $0x34,%rcx
  4250ba:	49 89 fb             	mov    %rdi,%r11
  4250bd:	49 d3 eb             	shr    %cl,%r11
  4250c0:	49 81 e3 ff 07 00 00 	and    $0x7ff,%r11
  4250c7:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4250ce:	48 89 f8             	mov    %rdi,%rax
  4250d1:	48 d3 e8             	shr    %cl,%rax
  4250d4:	49 81 fb ff 07 00 00 	cmp    $0x7ff,%r11
  4250db:	75 4a                	jne    425127 <float64_sqrt+0x87>
  4250dd:	48 85 d2             	test   %rdx,%rdx
  4250e0:	74 5c                	je     42513e <float64_sqrt+0x9e>
  4250e2:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffff,%rax
  4250e9:	ff 07 00 
  4250ec:	48 ba 00 00 00 00 00 	movabs $0x7ff8000000000000,%rdx
  4250f3:	00 f8 7f 
  4250f6:	48 21 fa             	and    %rdi,%rdx
  4250f9:	48 31 c9             	xor    %rcx,%rcx
  4250fc:	48 be 00 00 00 00 00 	movabs $0x7ff0000000000000,%rsi
  425103:	00 f0 7f 
  425106:	48 39 f2             	cmp    %rsi,%rdx
  425109:	0f 85 06 02 00 00    	jne    425315 <float64_sqrt+0x275>
  42510f:	48 85 c7             	test   %rax,%rdi
  425112:	0f 84 f3 01 00 00    	je     42530b <float64_sqrt+0x26b>
  425118:	48 b9 01 00 00 00 00 	movabs $0x1,%rcx
  42511f:	00 00 00 
  425122:	e9 ee 01 00 00       	jmpq   425315 <float64_sqrt+0x275>
  425127:	48 85 c0             	test   %rax,%rax
  42512a:	74 3f                	je     42516b <float64_sqrt+0xcb>
  42512c:	48 b8 ff ff ff ff 00 	movabs $0xffffffff,%rax
  425133:	00 00 00 
  425136:	49 21 c3             	and    %rax,%r11
  425139:	49 09 d3             	or     %rdx,%r11
  42513c:	eb 03                	jmp    425141 <float64_sqrt+0xa1>
  42513e:	48 85 c0             	test   %rax,%rax
  425141:	48 89 f8             	mov    %rdi,%rax
  425144:	0f 84 eb 01 00 00    	je     425335 <float64_sqrt+0x295>
  42514a:	48 0f be 05 8f 75 20 	movsbq 0x20758f(%rip),%rax        # 62c6e1 <float_exception_flags>
  425151:	00 
  425152:	48 83 c8 01          	or     $0x1,%rax
  425156:	88 05 85 75 20 00    	mov    %al,0x207585(%rip)        # 62c6e1 <float_exception_flags>
  42515c:	48 b8 00 00 00 00 00 	movabs $0xfff8000000000000,%rax
  425163:	00 f8 ff 
  425166:	e9 ca 01 00 00       	jmpq   425335 <float64_sqrt+0x295>
  42516b:	49 ba ff ff ff ff 00 	movabs $0xffffffff,%r10
  425172:	00 00 00 
  425175:	4d 85 d3             	test   %r10,%r11
  425178:	0f 85 db 00 00 00    	jne    425259 <float64_sqrt+0x1b9>
  42517e:	48 31 c0             	xor    %rax,%rax
  425181:	48 85 d2             	test   %rdx,%rdx
  425184:	0f 84 ab 01 00 00    	je     425335 <float64_sqrt+0x295>
  42518a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  425191:	48 89 d0             	mov    %rdx,%rax
  425194:	48 d3 e8             	shr    %cl,%rax
  425197:	48 85 c0             	test   %rax,%rax
  42519a:	74 03                	je     42519f <float64_sqrt+0xff>
  42519c:	48 89 c7             	mov    %rax,%rdi
  42519f:	48 bb ff ff ff ff 00 	movabs $0xffffffff,%rbx
  4251a6:	00 00 00 
  4251a9:	48 89 fe             	mov    %rdi,%rsi
  4251ac:	48 21 de             	and    %rbx,%rsi
  4251af:	48 81 fe 00 00 01 00 	cmp    $0x10000,%rsi
  4251b6:	48 19 c0             	sbb    %rax,%rax
  4251b9:	48 c7 c1 10 00 00 00 	mov    $0x10,%rcx
  4251c0:	49 89 f8             	mov    %rdi,%r8
  4251c3:	49 d3 e0             	shl    %cl,%r8
  4251c6:	48 81 fe 00 00 01 00 	cmp    $0x10000,%rsi
  4251cd:	72 03                	jb     4251d2 <float64_sqrt+0x132>
  4251cf:	49 89 f8             	mov    %rdi,%r8
  4251d2:	4c 21 c3             	and    %r8,%rbx
  4251d5:	48 83 e0 10          	and    $0x10,%rax
  4251d9:	48 81 fb ff ff ff 00 	cmp    $0xffffff,%rbx
  4251e0:	77 0e                	ja     4251f0 <float64_sqrt+0x150>
  4251e2:	48 83 c8 08          	or     $0x8,%rax
  4251e6:	48 c7 c1 08 00 00 00 	mov    $0x8,%rcx
  4251ed:	49 d3 e0             	shl    %cl,%r8
  4251f0:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4251f7:	48 89 d6             	mov    %rdx,%rsi
  4251fa:	48 d3 ee             	shr    %cl,%rsi
  4251fd:	48 bf 00 00 00 ff 00 	movabs $0xff000000,%rdi
  425204:	00 00 00 
  425207:	4c 21 c7             	and    %r8,%rdi
  42520a:	48 c7 c1 18 00 00 00 	mov    $0x18,%rcx
  425211:	48 d3 ef             	shr    %cl,%rdi
  425214:	48 0f be 8f f0 8e 42 	movsbq 0x428ef0(%rdi),%rcx
  42521b:	00 
  42521c:	48 85 f6             	test   %rsi,%rsi
  42521f:	48 c7 c6 15 00 00 00 	mov    $0x15,%rsi
  425226:	74 07                	je     42522f <float64_sqrt+0x18f>
  425228:	48 c7 c6 f5 ff ff ff 	mov    $0xfffffffffffffff5,%rsi
  42522f:	48 01 f0             	add    %rsi,%rax
  425232:	48 01 c8             	add    %rcx,%rax
  425235:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  42523c:	48 d3 e0             	shl    %cl,%rax
  42523f:	48 c7 c1 38 00 00 00 	mov    $0x38,%rcx
  425246:	48 d3 f8             	sar    %cl,%rax
  425249:	48 89 c1             	mov    %rax,%rcx
  42524c:	48 d3 e2             	shl    %cl,%rdx
  42524f:	49 c7 c3 01 00 00 00 	mov    $0x1,%r11
  425256:	49 29 c3             	sub    %rax,%r11
  425259:	49 8d b3 01 fc ff ff 	lea    -0x3ff(%r11),%rsi
  425260:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  425267:	48 d3 fe             	sar    %cl,%rsi
  42526a:	48 81 c6 fe 03 00 00 	add    $0x3fe,%rsi
  425271:	49 ff c1             	inc    %r9
  425274:	49 09 d1             	or     %rdx,%r9
  425277:	48 c7 c1 15 00 00 00 	mov    $0x15,%rcx
  42527e:	4d 89 c8             	mov    %r9,%r8
  425281:	49 d3 e8             	shr    %cl,%r8
  425284:	48 c7 c1 30 00 00 00 	mov    $0x30,%rcx
  42528b:	48 d3 ea             	shr    %cl,%rdx
  42528e:	48 83 e2 0f          	and    $0xf,%rdx
  425292:	48 c7 c1 26 00 00 00 	mov    $0x26,%rcx
  425299:	4c 89 cb             	mov    %r9,%rbx
  42529c:	48 d3 eb             	shr    %cl,%rbx
  42529f:	48 81 e3 ff 7f 00 00 	and    $0x7fff,%rbx
  4252a6:	49 83 e3 01          	and    $0x1,%r11
  4252aa:	0f 84 89 00 00 00    	je     425339 <float64_sqrt+0x299>
  4252b0:	4d 21 d0             	and    %r10,%r8
  4252b3:	48 81 e2 ff 00 00 00 	and    $0xff,%rdx
  4252ba:	0f b6 84 12 b0 8e 42 	movzbl 0x428eb0(%rdx,%rdx,1),%eax
  4252c1:	00 
  4252c2:	48 81 c3 00 40 00 00 	add    $0x4000,%rbx
  4252c9:	48 29 c3             	sub    %rax,%rbx
  4252cc:	48 89 d9             	mov    %rbx,%rcx
  4252cf:	4c 21 d1             	and    %r10,%rcx
  4252d2:	48 31 d2             	xor    %rdx,%rdx
  4252d5:	4c 89 c0             	mov    %r8,%rax
  4252d8:	48 f7 f1             	div    %rcx
  4252db:	48 c7 c1 0e 00 00 00 	mov    $0xe,%rcx
  4252e2:	48 d3 e0             	shl    %cl,%rax
  4252e5:	48 c7 c1 0f 00 00 00 	mov    $0xf,%rcx
  4252ec:	48 d3 e3             	shl    %cl,%rbx
  4252ef:	48 01 c3             	add    %rax,%rbx
  4252f2:	48 c7 c1 16 00 00 00 	mov    $0x16,%rcx
  4252f9:	4d 89 c8             	mov    %r9,%r8
  4252fc:	49 d3 e8             	shr    %cl,%r8
  4252ff:	49 81 e0 ff ff ff 7f 	and    $0x7fffffff,%r8
  425306:	e9 9b 00 00 00       	jmpq   4253a6 <float64_sqrt+0x306>
  42530b:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  425312:	00 00 00 
  425315:	48 ff c0             	inc    %rax
  425318:	48 09 c7             	or     %rax,%rdi
  42531b:	48 85 c9             	test   %rcx,%rcx
  42531e:	74 12                	je     425332 <float64_sqrt+0x292>
  425320:	48 0f be 05 b9 73 20 	movsbq 0x2073b9(%rip),%rax        # 62c6e1 <float_exception_flags>
  425327:	00 
  425328:	48 83 c8 01          	or     $0x1,%rax
  42532c:	88 05 af 73 20 00    	mov    %al,0x2073af(%rip)        # 62c6e1 <float_exception_flags>
  425332:	48 89 f8             	mov    %rdi,%rax
  425335:	5b                   	pop    %rbx
  425336:	41 5e                	pop    %r14
  425338:	c3                   	retq   
  425339:	48 bf ff ff ff ff 00 	movabs $0xffffffff,%rdi
  425340:	00 00 00 
  425343:	4d 89 c6             	mov    %r8,%r14
  425346:	48 81 e2 ff 00 00 00 	and    $0xff,%rdx
  42534d:	0f b6 84 12 d0 8e 42 	movzbl 0x428ed0(%rdx,%rdx,1),%eax
  425354:	00 
  425355:	49 21 fe             	and    %rdi,%r14
  425358:	48 81 cb 00 80 00 00 	or     $0x8000,%rbx
  42535f:	48 29 c3             	sub    %rax,%rbx
  425362:	48 89 d9             	mov    %rbx,%rcx
  425365:	48 21 f9             	and    %rdi,%rcx
  425368:	48 31 d2             	xor    %rdx,%rdx
  42536b:	4c 89 f0             	mov    %r14,%rax
  42536e:	48 f7 f1             	div    %rcx
  425371:	48 01 d8             	add    %rbx,%rax
  425374:	48 21 c7             	and    %rax,%rdi
  425377:	48 c7 c1 0f 00 00 00 	mov    $0xf,%rcx
  42537e:	48 d3 e0             	shl    %cl,%rax
  425381:	48 81 ff ff ff 01 00 	cmp    $0x1ffff,%rdi
  425388:	48 c7 c3 00 80 ff ff 	mov    $0xffffffffffff8000,%rbx
  42538f:	77 03                	ja     425394 <float64_sqrt+0x2f4>
  425391:	48 89 c3             	mov    %rax,%rbx
  425394:	48 b8 00 80 ff ff 00 	movabs $0xffff8000,%rax
  42539b:	00 00 00 
  42539e:	48 21 d8             	and    %rbx,%rax
  4253a1:	4c 39 f0             	cmp    %r14,%rax
  4253a4:	76 39                	jbe    4253df <float64_sqrt+0x33f>
  4253a6:	48 c7 c1 1f 00 00 00 	mov    $0x1f,%rcx
  4253ad:	49 d3 e0             	shl    %cl,%r8
  4253b0:	48 b8 00 00 00 80 ff 	movabs $0x7fffffff80000000,%rax
  4253b7:	ff ff 7f 
  4253ba:	4c 21 c0             	and    %r8,%rax
  4253bd:	49 b8 ff ff ff ff 00 	movabs $0xffffffff,%r8
  4253c4:	00 00 00 
  4253c7:	49 21 d8             	and    %rbx,%r8
  4253ca:	48 31 d2             	xor    %rdx,%rdx
  4253cd:	49 f7 f0             	div    %r8
  4253d0:	48 c7 c1 01 00 00 00 	mov    $0x1,%rcx
  4253d7:	49 d3 e8             	shr    %cl,%r8
  4253da:	49 01 c0             	add    %rax,%r8
  4253dd:	eb 14                	jmp    4253f3 <float64_sqrt+0x353>
  4253df:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4253e6:	49 d3 e0             	shl    %cl,%r8
  4253e9:	48 c7 c1 21 00 00 00 	mov    $0x21,%rcx
  4253f0:	49 d3 f8             	sar    %cl,%r8
  4253f3:	4d 21 d0             	and    %r10,%r8
  4253f6:	48 c7 c1 09 00 00 00 	mov    $0x9,%rcx
  4253fd:	4c 29 d9             	sub    %r11,%rcx
  425400:	49 d3 e1             	shl    %cl,%r9
  425403:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  42540a:	4d 89 c3             	mov    %r8,%r11
  42540d:	49 d3 e3             	shl    %cl,%r11
  425410:	4d 39 cb             	cmp    %r9,%r11
  425413:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  42541a:	76 5a                	jbe    425476 <float64_sqrt+0x3d6>
  42541c:	48 31 d2             	xor    %rdx,%rdx
  42541f:	4c 89 c8             	mov    %r9,%rax
  425422:	49 f7 f0             	div    %r8
  425425:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  42542c:	48 89 c3             	mov    %rax,%rbx
  42542f:	48 d3 e3             	shl    %cl,%rbx
  425432:	4c 21 d0             	and    %r10,%rax
  425435:	49 0f af c0          	imul   %r8,%rax
  425439:	4c 89 cf             	mov    %r9,%rdi
  42543c:	48 29 c7             	sub    %rax,%rdi
  42543f:	79 17                	jns    425458 <float64_sqrt+0x3b8>
  425441:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
  425448:	ff ff ff 
  42544b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  425450:	48 01 c3             	add    %rax,%rbx
  425453:	4c 01 c7             	add    %r8,%rdi
  425456:	78 f8                	js     425450 <float64_sqrt+0x3b0>
  425458:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  42545f:	48 d3 e7             	shl    %cl,%rdi
  425462:	49 39 fb             	cmp    %rdi,%r11
  425465:	4c 89 d0             	mov    %r10,%rax
  425468:	76 09                	jbe    425473 <float64_sqrt+0x3d3>
  42546a:	48 31 d2             	xor    %rdx,%rdx
  42546d:	48 89 f8             	mov    %rdi,%rax
  425470:	49 f7 f0             	div    %r8
  425473:	48 09 d8             	or     %rbx,%rax
  425476:	48 c7 c1 1e 00 00 00 	mov    $0x1e,%rcx
  42547d:	4c 89 c2             	mov    %r8,%rdx
  425480:	48 d3 e2             	shl    %cl,%rdx
  425483:	48 01 c2             	add    %rax,%rdx
  425486:	48 89 d1             	mov    %rdx,%rcx
  425489:	48 81 e1 fe 01 00 00 	and    $0x1fe,%rcx
  425490:	48 83 f9 05          	cmp    $0x5,%rcx
  425494:	0f 87 dd 00 00 00    	ja     425577 <float64_sqrt+0x4d7>
  42549a:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4254a1:	49 89 d3             	mov    %rdx,%r11
  4254a4:	49 d3 eb             	shr    %cl,%r11
  4254a7:	49 21 d2             	and    %rdx,%r10
  4254aa:	4c 89 df             	mov    %r11,%rdi
  4254ad:	49 0f af fa          	imul   %r10,%rdi
  4254b1:	4d 0f af d2          	imul   %r10,%r10
  4254b5:	4d 0f af db          	imul   %r11,%r11
  4254b9:	48 01 ff             	add    %rdi,%rdi
  4254bc:	48 19 c9             	sbb    %rcx,%rcx
  4254bf:	48 bb 00 00 00 00 01 	movabs $0x100000000,%rbx
  4254c6:	00 00 00 
  4254c9:	48 21 cb             	and    %rcx,%rbx
  4254cc:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4254d3:	49 89 fe             	mov    %rdi,%r14
  4254d6:	49 d3 ee             	shr    %cl,%r14
  4254d9:	49 09 de             	or     %rbx,%r14
  4254dc:	48 c7 c1 20 00 00 00 	mov    $0x20,%rcx
  4254e3:	48 d3 e7             	shl    %cl,%rdi
  4254e6:	4c 01 d7             	add    %r10,%rdi
  4254e9:	48 19 db             	sbb    %rbx,%rbx
  4254ec:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4254f3:	48 d3 e3             	shl    %cl,%rbx
  4254f6:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4254fd:	48 d3 fb             	sar    %cl,%rbx
  425500:	48 f7 df             	neg    %rdi
  425503:	48 19 c9             	sbb    %rcx,%rcx
  425506:	4d 29 d9             	sub    %r11,%r9
  425509:	49 01 d9             	add    %rbx,%r9
  42550c:	4d 29 f1             	sub    %r14,%r9
  42550f:	49 01 c9             	add    %rcx,%r9
  425512:	78 05                	js     425519 <float64_sqrt+0x479>
  425514:	4c 89 cb             	mov    %r9,%rbx
  425517:	eb 40                	jmp    425559 <float64_sqrt+0x4b9>
  425519:	48 c7 c1 1e 00 00 00 	mov    $0x1e,%rcx
  425520:	49 d3 e0             	shl    %cl,%r8
  425523:	4c 01 c0             	add    %r8,%rax
  425526:	48 8d 44 00 ff       	lea    -0x1(%rax,%rax,1),%rax
  42552b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  425530:	48 ff ca             	dec    %rdx
  425533:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  42553a:	48 89 d3             	mov    %rdx,%rbx
  42553d:	48 d3 eb             	shr    %cl,%rbx
  425540:	48 01 c7             	add    %rax,%rdi
  425543:	48 19 c9             	sbb    %rcx,%rcx
  425546:	48 83 e1 01          	and    $0x1,%rcx
  42554a:	4c 01 cb             	add    %r9,%rbx
  42554d:	48 83 c0 fe          	add    $0xfffffffffffffffe,%rax
  425551:	48 01 cb             	add    %rcx,%rbx
  425554:	49 89 d9             	mov    %rbx,%r9
  425557:	78 d7                	js     425530 <float64_sqrt+0x490>
  425559:	48 09 df             	or     %rbx,%rdi
  42555c:	74 0c                	je     42556a <float64_sqrt+0x4ca>
  42555e:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  425565:	00 00 00 
  425568:	eb 0a                	jmp    425574 <float64_sqrt+0x4d4>
  42556a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  425571:	00 00 00 
  425574:	48 09 c2             	or     %rax,%rdx
  425577:	48 31 ff             	xor    %rdi,%rdi
  42557a:	5b                   	pop    %rbx
  42557b:	41 5e                	pop    %r14
  42557d:	e9 3e e5 ff ff       	jmpq   423ac0 <roundAndPackFloat64>
  425582:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  425589:	1f 84 00 00 00 00 00 

0000000000425590 <float64_eq>:
  425590:	48 b9 00 00 00 00 00 	movabs $0x7ff0000000000000,%rcx
  425597:	00 f0 7f 
  42559a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
  4255a1:	ff 0f 00 
  4255a4:	48 89 fa             	mov    %rdi,%rdx
  4255a7:	48 21 ca             	and    %rcx,%rdx
  4255aa:	48 39 ca             	cmp    %rcx,%rdx
  4255ad:	75 08                	jne    4255b7 <float64_eq+0x27>
  4255af:	48 89 fa             	mov    %rdi,%rdx
  4255b2:	48 21 c2             	and    %rax,%rdx
  4255b5:	75 10                	jne    4255c7 <float64_eq+0x37>
  4255b7:	48 89 f2             	mov    %rsi,%rdx
  4255ba:	48 21 ca             	and    %rcx,%rdx
  4255bd:	48 39 ca             	cmp    %rcx,%rdx
  4255c0:	75 4f                	jne    425611 <float64_eq+0x81>
  4255c2:	48 21 f0             	and    %rsi,%rax
  4255c5:	74 4a                	je     425611 <float64_eq+0x81>
  4255c7:	48 ba 00 00 00 00 00 	movabs $0x7ff8000000000000,%rdx
  4255ce:	00 f8 7f 
  4255d1:	49 b8 ff ff ff ff ff 	movabs $0x7ffffffffffff,%r8
  4255d8:	ff 07 00 
  4255db:	48 89 f8             	mov    %rdi,%rax
  4255de:	48 21 d0             	and    %rdx,%rax
  4255e1:	48 39 c8             	cmp    %rcx,%rax
  4255e4:	75 05                	jne    4255eb <float64_eq+0x5b>
  4255e6:	4c 21 c7             	and    %r8,%rdi
  4255e9:	75 10                	jne    4255fb <float64_eq+0x6b>
  4255eb:	48 21 f2             	and    %rsi,%rdx
  4255ee:	48 31 c0             	xor    %rax,%rax
  4255f1:	48 39 ca             	cmp    %rcx,%rdx
  4255f4:	75 43                	jne    425639 <float64_eq+0xa9>
  4255f6:	4c 21 c6             	and    %r8,%rsi
  4255f9:	74 3e                	je     425639 <float64_eq+0xa9>
  4255fb:	48 0f be 05 de 70 20 	movsbq 0x2070de(%rip),%rax        # 62c6e1 <float_exception_flags>
  425602:	00 
  425603:	48 83 c8 01          	or     $0x1,%rax
  425607:	88 05 d4 70 20 00    	mov    %al,0x2070d4(%rip)        # 62c6e1 <float_exception_flags>
  42560d:	48 31 c0             	xor    %rax,%rax
  425610:	c3                   	retq   
  425611:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  425618:	48 39 f7             	cmp    %rsi,%rdi
  42561b:	74 1c                	je     425639 <float64_eq+0xa9>
  42561d:	48 09 fe             	or     %rdi,%rsi
  425620:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  425627:	ff ff 7f 
  42562a:	48 85 c6             	test   %rax,%rsi
  42562d:	75 0b                	jne    42563a <float64_eq+0xaa>
  42562f:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  425636:	00 00 00 
  425639:	c3                   	retq   
  42563a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  425641:	00 00 00 
  425644:	c3                   	retq   
  425645:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  42564c:	00 00 00 00 

0000000000425650 <float64_le>:
  425650:	48 b9 00 00 00 00 00 	movabs $0x7ff0000000000000,%rcx
  425657:	00 f0 7f 
  42565a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
  425661:	ff 0f 00 
  425664:	48 89 fa             	mov    %rdi,%rdx
  425667:	48 21 ca             	and    %rcx,%rdx
  42566a:	48 39 ca             	cmp    %rcx,%rdx
  42566d:	75 08                	jne    425677 <float64_le+0x27>
  42566f:	48 89 fa             	mov    %rdi,%rdx
  425672:	48 21 c2             	and    %rax,%rdx
  425675:	75 10                	jne    425687 <float64_le+0x37>
  425677:	48 89 f2             	mov    %rsi,%rdx
  42567a:	48 21 ca             	and    %rcx,%rdx
  42567d:	48 39 ca             	cmp    %rcx,%rdx
  425680:	75 1b                	jne    42569d <float64_le+0x4d>
  425682:	48 21 f0             	and    %rsi,%rax
  425685:	74 16                	je     42569d <float64_le+0x4d>
  425687:	48 0f be 05 52 70 20 	movsbq 0x207052(%rip),%rax        # 62c6e1 <float_exception_flags>
  42568e:	00 
  42568f:	48 83 c8 01          	or     $0x1,%rax
  425693:	88 05 48 70 20 00    	mov    %al,0x207048(%rip)        # 62c6e1 <float_exception_flags>
  425699:	48 31 c0             	xor    %rax,%rax
  42569c:	c3                   	retq   
  42569d:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4256a4:	48 89 fa             	mov    %rdi,%rdx
  4256a7:	48 d3 ea             	shr    %cl,%rdx
  4256aa:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4256b1:	48 89 f0             	mov    %rsi,%rax
  4256b4:	48 d3 e8             	shr    %cl,%rax
  4256b7:	48 39 c2             	cmp    %rax,%rdx
  4256ba:	75 23                	jne    4256df <float64_le+0x8f>
  4256bc:	48 39 f7             	cmp    %rsi,%rdi
  4256bf:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4256c6:	74 3f                	je     425707 <float64_le+0xb7>
  4256c8:	48 19 c0             	sbb    %rax,%rax
  4256cb:	48 83 e0 01          	and    $0x1,%rax
  4256cf:	48 39 c2             	cmp    %rax,%rdx
  4256d2:	75 29                	jne    4256fd <float64_le+0xad>
  4256d4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4256db:	00 00 00 
  4256de:	c3                   	retq   
  4256df:	48 85 d2             	test   %rdx,%rdx
  4256e2:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  4256e9:	75 1c                	jne    425707 <float64_le+0xb7>
  4256eb:	48 09 fe             	or     %rdi,%rsi
  4256ee:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  4256f5:	ff ff 7f 
  4256f8:	48 85 c6             	test   %rax,%rsi
  4256fb:	75 0b                	jne    425708 <float64_le+0xb8>
  4256fd:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  425704:	00 00 00 
  425707:	c3                   	retq   
  425708:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  42570f:	00 00 00 
  425712:	c3                   	retq   
  425713:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  42571a:	84 00 00 00 00 00 

0000000000425720 <float64_lt>:
  425720:	48 b9 00 00 00 00 00 	movabs $0x7ff0000000000000,%rcx
  425727:	00 f0 7f 
  42572a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
  425731:	ff 0f 00 
  425734:	48 89 fa             	mov    %rdi,%rdx
  425737:	48 21 ca             	and    %rcx,%rdx
  42573a:	48 39 ca             	cmp    %rcx,%rdx
  42573d:	75 08                	jne    425747 <float64_lt+0x27>
  42573f:	48 89 fa             	mov    %rdi,%rdx
  425742:	48 21 c2             	and    %rax,%rdx
  425745:	75 10                	jne    425757 <float64_lt+0x37>
  425747:	48 89 f2             	mov    %rsi,%rdx
  42574a:	48 21 ca             	and    %rcx,%rdx
  42574d:	48 39 ca             	cmp    %rcx,%rdx
  425750:	75 1b                	jne    42576d <float64_lt+0x4d>
  425752:	48 21 f0             	and    %rsi,%rax
  425755:	74 16                	je     42576d <float64_lt+0x4d>
  425757:	48 0f be 05 82 6f 20 	movsbq 0x206f82(%rip),%rax        # 62c6e1 <float_exception_flags>
  42575e:	00 
  42575f:	48 83 c8 01          	or     $0x1,%rax
  425763:	88 05 78 6f 20 00    	mov    %al,0x206f78(%rip)        # 62c6e1 <float_exception_flags>
  425769:	48 31 c0             	xor    %rax,%rax
  42576c:	c3                   	retq   
  42576d:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  425774:	48 89 fa             	mov    %rdi,%rdx
  425777:	48 d3 ea             	shr    %cl,%rdx
  42577a:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  425781:	48 89 f0             	mov    %rsi,%rax
  425784:	48 d3 e8             	shr    %cl,%rax
  425787:	48 39 c2             	cmp    %rax,%rdx
  42578a:	75 1f                	jne    4257ab <float64_lt+0x8b>
  42578c:	48 31 c0             	xor    %rax,%rax
  42578f:	48 39 f7             	cmp    %rsi,%rdi
  425792:	74 3b                	je     4257cf <float64_lt+0xaf>
  425794:	48 19 c0             	sbb    %rax,%rax
  425797:	48 83 e0 01          	and    $0x1,%rax
  42579b:	48 39 c2             	cmp    %rax,%rdx
  42579e:	75 25                	jne    4257c5 <float64_lt+0xa5>
  4257a0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4257a7:	00 00 00 
  4257aa:	c3                   	retq   
  4257ab:	48 31 c0             	xor    %rax,%rax
  4257ae:	48 85 d2             	test   %rdx,%rdx
  4257b1:	74 1c                	je     4257cf <float64_lt+0xaf>
  4257b3:	48 09 fe             	or     %rdi,%rsi
  4257b6:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  4257bd:	ff ff 7f 
  4257c0:	48 85 c6             	test   %rax,%rsi
  4257c3:	74 0b                	je     4257d0 <float64_lt+0xb0>
  4257c5:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  4257cc:	00 00 00 
  4257cf:	c3                   	retq   
  4257d0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  4257d7:	00 00 00 
  4257da:	c3                   	retq   
  4257db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004257e0 <float64_eq_signaling>:
  4257e0:	48 b9 00 00 00 00 00 	movabs $0x7ff0000000000000,%rcx
  4257e7:	00 f0 7f 
  4257ea:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
  4257f1:	ff 0f 00 
  4257f4:	48 89 fa             	mov    %rdi,%rdx
  4257f7:	48 21 ca             	and    %rcx,%rdx
  4257fa:	48 39 ca             	cmp    %rcx,%rdx
  4257fd:	75 08                	jne    425807 <float64_eq_signaling+0x27>
  4257ff:	48 89 fa             	mov    %rdi,%rdx
  425802:	48 21 c2             	and    %rax,%rdx
  425805:	75 10                	jne    425817 <float64_eq_signaling+0x37>
  425807:	48 89 f2             	mov    %rsi,%rdx
  42580a:	48 21 ca             	and    %rcx,%rdx
  42580d:	48 39 ca             	cmp    %rcx,%rdx
  425810:	75 1b                	jne    42582d <float64_eq_signaling+0x4d>
  425812:	48 21 f0             	and    %rsi,%rax
  425815:	74 16                	je     42582d <float64_eq_signaling+0x4d>
  425817:	48 0f be 05 c2 6e 20 	movsbq 0x206ec2(%rip),%rax        # 62c6e1 <float_exception_flags>
  42581e:	00 
  42581f:	48 83 c8 01          	or     $0x1,%rax
  425823:	88 05 b8 6e 20 00    	mov    %al,0x206eb8(%rip)        # 62c6e1 <float_exception_flags>
  425829:	48 31 c0             	xor    %rax,%rax
  42582c:	c3                   	retq   
  42582d:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  425834:	48 39 f7             	cmp    %rsi,%rdi
  425837:	74 1c                	je     425855 <float64_eq_signaling+0x75>
  425839:	48 09 fe             	or     %rdi,%rsi
  42583c:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  425843:	ff ff 7f 
  425846:	48 85 c6             	test   %rax,%rsi
  425849:	75 0b                	jne    425856 <float64_eq_signaling+0x76>
  42584b:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  425852:	00 00 00 
  425855:	c3                   	retq   
  425856:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  42585d:	00 00 00 
  425860:	c3                   	retq   
  425861:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  425868:	0f 1f 84 00 00 00 00 
  42586f:	00 

0000000000425870 <float64_le_quiet>:
  425870:	48 b9 00 00 00 00 00 	movabs $0x7ff0000000000000,%rcx
  425877:	00 f0 7f 
  42587a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
  425881:	ff 0f 00 
  425884:	48 89 fa             	mov    %rdi,%rdx
  425887:	48 21 ca             	and    %rcx,%rdx
  42588a:	48 39 ca             	cmp    %rcx,%rdx
  42588d:	75 08                	jne    425897 <float64_le_quiet+0x27>
  42588f:	48 89 fa             	mov    %rdi,%rdx
  425892:	48 21 c2             	and    %rax,%rdx
  425895:	75 10                	jne    4258a7 <float64_le_quiet+0x37>
  425897:	48 89 f2             	mov    %rsi,%rdx
  42589a:	48 21 ca             	and    %rcx,%rdx
  42589d:	48 39 ca             	cmp    %rcx,%rdx
  4258a0:	75 57                	jne    4258f9 <float64_le_quiet+0x89>
  4258a2:	48 21 f0             	and    %rsi,%rax
  4258a5:	74 52                	je     4258f9 <float64_le_quiet+0x89>
  4258a7:	48 ba 00 00 00 00 00 	movabs $0x7ff8000000000000,%rdx
  4258ae:	00 f8 7f 
  4258b1:	49 b8 ff ff ff ff ff 	movabs $0x7ffffffffffff,%r8
  4258b8:	ff 07 00 
  4258bb:	48 89 f8             	mov    %rdi,%rax
  4258be:	48 21 d0             	and    %rdx,%rax
  4258c1:	48 39 c8             	cmp    %rcx,%rax
  4258c4:	75 05                	jne    4258cb <float64_le_quiet+0x5b>
  4258c6:	4c 21 c7             	and    %r8,%rdi
  4258c9:	75 18                	jne    4258e3 <float64_le_quiet+0x73>
  4258cb:	48 21 f2             	and    %rsi,%rdx
  4258ce:	48 31 c0             	xor    %rax,%rax
  4258d1:	48 39 ca             	cmp    %rcx,%rdx
  4258d4:	0f 85 89 00 00 00    	jne    425963 <float64_le_quiet+0xf3>
  4258da:	4c 21 c6             	and    %r8,%rsi
  4258dd:	0f 84 80 00 00 00    	je     425963 <float64_le_quiet+0xf3>
  4258e3:	48 0f be 05 f6 6d 20 	movsbq 0x206df6(%rip),%rax        # 62c6e1 <float_exception_flags>
  4258ea:	00 
  4258eb:	48 83 c8 01          	or     $0x1,%rax
  4258ef:	88 05 ec 6d 20 00    	mov    %al,0x206dec(%rip)        # 62c6e1 <float_exception_flags>
  4258f5:	48 31 c0             	xor    %rax,%rax
  4258f8:	c3                   	retq   
  4258f9:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  425900:	48 89 fa             	mov    %rdi,%rdx
  425903:	48 d3 ea             	shr    %cl,%rdx
  425906:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  42590d:	48 89 f0             	mov    %rsi,%rax
  425910:	48 d3 e8             	shr    %cl,%rax
  425913:	48 39 c2             	cmp    %rax,%rdx
  425916:	75 23                	jne    42593b <float64_le_quiet+0xcb>
  425918:	48 39 f7             	cmp    %rsi,%rdi
  42591b:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  425922:	74 3f                	je     425963 <float64_le_quiet+0xf3>
  425924:	48 19 c0             	sbb    %rax,%rax
  425927:	48 83 e0 01          	and    $0x1,%rax
  42592b:	48 39 c2             	cmp    %rax,%rdx
  42592e:	75 29                	jne    425959 <float64_le_quiet+0xe9>
  425930:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  425937:	00 00 00 
  42593a:	c3                   	retq   
  42593b:	48 85 d2             	test   %rdx,%rdx
  42593e:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  425945:	75 1c                	jne    425963 <float64_le_quiet+0xf3>
  425947:	48 09 fe             	or     %rdi,%rsi
  42594a:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  425951:	ff ff 7f 
  425954:	48 85 c6             	test   %rax,%rsi
  425957:	75 0b                	jne    425964 <float64_le_quiet+0xf4>
  425959:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  425960:	00 00 00 
  425963:	c3                   	retq   
  425964:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  42596b:	00 00 00 
  42596e:	c3                   	retq   
  42596f:	90                   	nop

0000000000425970 <float64_lt_quiet>:
  425970:	48 b9 00 00 00 00 00 	movabs $0x7ff0000000000000,%rcx
  425977:	00 f0 7f 
  42597a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
  425981:	ff 0f 00 
  425984:	48 89 fa             	mov    %rdi,%rdx
  425987:	48 21 ca             	and    %rcx,%rdx
  42598a:	48 39 ca             	cmp    %rcx,%rdx
  42598d:	75 08                	jne    425997 <float64_lt_quiet+0x27>
  42598f:	48 89 fa             	mov    %rdi,%rdx
  425992:	48 21 c2             	and    %rax,%rdx
  425995:	75 10                	jne    4259a7 <float64_lt_quiet+0x37>
  425997:	48 89 f2             	mov    %rsi,%rdx
  42599a:	48 21 ca             	and    %rcx,%rdx
  42599d:	48 39 ca             	cmp    %rcx,%rdx
  4259a0:	75 4f                	jne    4259f1 <float64_lt_quiet+0x81>
  4259a2:	48 21 f0             	and    %rsi,%rax
  4259a5:	74 4a                	je     4259f1 <float64_lt_quiet+0x81>
  4259a7:	48 ba 00 00 00 00 00 	movabs $0x7ff8000000000000,%rdx
  4259ae:	00 f8 7f 
  4259b1:	49 b8 ff ff ff ff ff 	movabs $0x7ffffffffffff,%r8
  4259b8:	ff 07 00 
  4259bb:	48 89 f8             	mov    %rdi,%rax
  4259be:	48 21 d0             	and    %rdx,%rax
  4259c1:	48 39 c8             	cmp    %rcx,%rax
  4259c4:	75 05                	jne    4259cb <float64_lt_quiet+0x5b>
  4259c6:	4c 21 c7             	and    %r8,%rdi
  4259c9:	75 10                	jne    4259db <float64_lt_quiet+0x6b>
  4259cb:	48 21 f2             	and    %rsi,%rdx
  4259ce:	48 31 c0             	xor    %rax,%rax
  4259d1:	48 39 ca             	cmp    %rcx,%rdx
  4259d4:	75 7d                	jne    425a53 <float64_lt_quiet+0xe3>
  4259d6:	4c 21 c6             	and    %r8,%rsi
  4259d9:	74 78                	je     425a53 <float64_lt_quiet+0xe3>
  4259db:	48 0f be 05 fe 6c 20 	movsbq 0x206cfe(%rip),%rax        # 62c6e1 <float_exception_flags>
  4259e2:	00 
  4259e3:	48 83 c8 01          	or     $0x1,%rax
  4259e7:	88 05 f4 6c 20 00    	mov    %al,0x206cf4(%rip)        # 62c6e1 <float_exception_flags>
  4259ed:	48 31 c0             	xor    %rax,%rax
  4259f0:	c3                   	retq   
  4259f1:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  4259f8:	48 89 fa             	mov    %rdi,%rdx
  4259fb:	48 d3 ea             	shr    %cl,%rdx
  4259fe:	48 c7 c1 3f 00 00 00 	mov    $0x3f,%rcx
  425a05:	48 89 f0             	mov    %rsi,%rax
  425a08:	48 d3 e8             	shr    %cl,%rax
  425a0b:	48 39 c2             	cmp    %rax,%rdx
  425a0e:	75 1f                	jne    425a2f <float64_lt_quiet+0xbf>
  425a10:	48 31 c0             	xor    %rax,%rax
  425a13:	48 39 f7             	cmp    %rsi,%rdi
  425a16:	74 3b                	je     425a53 <float64_lt_quiet+0xe3>
  425a18:	48 19 c0             	sbb    %rax,%rax
  425a1b:	48 83 e0 01          	and    $0x1,%rax
  425a1f:	48 39 c2             	cmp    %rax,%rdx
  425a22:	75 25                	jne    425a49 <float64_lt_quiet+0xd9>
  425a24:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  425a2b:	00 00 00 
  425a2e:	c3                   	retq   
  425a2f:	48 31 c0             	xor    %rax,%rax
  425a32:	48 85 d2             	test   %rdx,%rdx
  425a35:	74 1c                	je     425a53 <float64_lt_quiet+0xe3>
  425a37:	48 09 fe             	or     %rdi,%rsi
  425a3a:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
  425a41:	ff ff 7f 
  425a44:	48 85 c6             	test   %rax,%rsi
  425a47:	74 0b                	je     425a54 <float64_lt_quiet+0xe4>
  425a49:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  425a50:	00 00 00 
  425a53:	c3                   	retq   
  425a54:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  425a5b:	00 00 00 
  425a5e:	c3                   	retq   
